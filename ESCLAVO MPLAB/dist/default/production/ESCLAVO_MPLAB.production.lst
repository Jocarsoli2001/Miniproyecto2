

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Mar 07 14:50:38 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0014                     _SSPCON	set	20
   366  000B                     _INTCONbits	set	11
   367  0007                     _PORTC	set	7
   368  0008                     _PORTD	set	8
   369  0006                     _PORTB	set	6
   370  0005                     _PORTA	set	5
   371  0008                     _PORTDbits	set	8
   372  0007                     _PORTCbits	set	7
   373  0013                     _SSPBUF	set	19
   374  0014                     _SSPCONbits	set	20
   375  000C                     _PIR1bits	set	12
   376  0063                     _SSPIF	set	99
   377  00A4                     _CKP	set	164
   378  008F                     _OSCCONbits	set	143
   379  0091                     _SSPCON2bits	set	145
   380  008C                     _PIE1bits	set	140
   381  0093                     _SSPADD	set	147
   382  0094                     _SSPSTAT	set	148
   383  0091                     _SSPCON2	set	145
   384  0085                     _TRISAbits	set	133
   385  0087                     _TRISCbits	set	135
   386  0087                     _TRISC	set	135
   387  0088                     _TRISD	set	136
   388  0086                     _TRISB	set	134
   389  0085                     _TRISA	set	133
   390  0094                     _SSPSTATbits	set	148
   391  04A1                     _UA	set	1185
   392  0189                     _ANSELH	set	393
   393  0188                     _ANSEL	set	392
   394                           
   395                           	psect	cinit
   396  000F                     start_initialization:	
   397                           ; #config settings
   398                           
   399  000F                     __initialization:
   400                           
   401                           ; Clear objects allocated to COMMON
   402  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   403                           
   404                           ; Clear objects allocated to BANK0
   405  0010  1283               	bcf	3,5	;RP0=0, select bank0
   406  0011  1303               	bcf	3,6	;RP1=0, select bank0
   407  0012  01B1               	clrf	__pbssBANK0& (0+127)
   408  0013  01B2               	clrf	(__pbssBANK0+1)& (0+127)
   409  0014                     end_of_initialization:	
   410                           ;End of C runtime variable initialization code
   411                           
   412  0014                     __end_of__initialization:
   413  0014  0183               	clrf	3
   414  0015  120A  118A  2997   	ljmp	_main	;jump to C main() function
   415                           
   416                           	psect	bssCOMMON
   417  007A                     __pbssCOMMON:
   418  007A                     _Dato_recibido:
   419  007A                     	ds	1
   420                           
   421                           	psect	bssBANK0
   422  0031                     __pbssBANK0:
   423  0031                     _sema_estado:
   424  0031                     	ds	1
   425  0032                     _semaforo:
   426  0032                     	ds	1
   427                           
   428                           	psect	cstackCOMMON
   429  0070                     __pcstackCOMMON:
   430  0070                     ?_setup:
   431  0070                     ?_initOsc:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_isr:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ??_isr:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_main:	
   441                           ; 1 bytes @ 0x0
   442                           
   443                           
   444                           ; 1 bytes @ 0x0
   445  0070                     	ds	3
   446  0073                     ??_initOsc:
   447  0073                     ??___lldiv:	
   448                           ; 1 bytes @ 0x3
   449                           
   450  0073                     initOsc@Valor:	
   451                           ; 1 bytes @ 0x3
   452                           
   453                           
   454                           ; 1 bytes @ 0x3
   455  0073                     	ds	1
   456  0074                     ___lldiv@quotient:
   457                           
   458                           ; 4 bytes @ 0x4
   459  0074                     	ds	4
   460  0078                     ___lldiv@counter:
   461                           
   462                           ; 1 bytes @ 0x8
   463  0078                     	ds	1
   464  0079                     InitMSSP@Modo:
   465                           
   466                           ; 1 bytes @ 0x9
   467  0079                     	ds	1
   468  007A                     ??_setup:
   469                           
   470                           	psect	cstackBANK0
   471  0020                     __pcstackBANK0:	
   472                           ; 1 bytes @ 0xA
   473                           
   474  0020                     ?___lldiv:
   475  0020                     ___lldiv@divisor:	
   476                           ; 4 bytes @ 0x0
   477                           
   478                           
   479                           ; 4 bytes @ 0x0
   480  0020                     	ds	4
   481  0024                     ___lldiv@dividend:
   482                           
   483                           ; 4 bytes @ 0x4
   484  0024                     	ds	4
   485  0028                     ?_InitMSSP:
   486  0028                     InitMSSP@Dato:	
   487                           ; 1 bytes @ 0x8
   488                           
   489                           
   490                           ; 4 bytes @ 0x8
   491  0028                     	ds	4
   492  002C                     ??_InitMSSP:
   493                           
   494                           ; 1 bytes @ 0xC
   495  002C                     	ds	4
   496  0030                     ??_main:
   497                           
   498                           ; 1 bytes @ 0x10
   499  0030                     	ds	1
   500                           
   501                           	psect	maintext
   502  0197                     __pmaintext:	
   503 ;;
   504 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   505 ;;
   506 ;; *************** function _main *****************
   507 ;; Defined at:
   508 ;;		line 102 in file "Periferico I2C.c"
   509 ;; Parameters:    Size  Location     Type
   510 ;;		None
   511 ;; Auto vars:     Size  Location     Type
   512 ;;		None
   513 ;; Return value:  Size  Location     Type
   514 ;;                  1    wreg      void 
   515 ;; Registers used:
   516 ;;		wreg, status,2, status,0, pclath, cstack
   517 ;; Tracked objects:
   518 ;;		On entry : B00/0
   519 ;;		On exit  : 0/0
   520 ;;		Unchanged: 0/0
   521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   522 ;;      Params:         0       0       0       0       0
   523 ;;      Locals:         0       0       0       0       0
   524 ;;      Temps:          0       1       0       0       0
   525 ;;      Totals:         0       1       0       0       0
   526 ;;Total ram usage:        1 bytes
   527 ;; Hardware stack levels required when called: 4
   528 ;; This function calls:
   529 ;;		_setup
   530 ;; This function is called by:
   531 ;;		Startup code after reset
   532 ;; This function uses a non-reentrant model
   533 ;;
   534                           
   535                           
   536                           ;psect for function _main
   537  0197                     _main:
   538  0197                     l1203:	
   539                           ;incstack = 0
   540                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   541                           
   542                           
   543                           ;Periferico I2C.c: 103:     setup();
   544  0197  120A  118A  21F9  120A  118A  	fcall	_setup
   545  019C                     l1205:
   546                           
   547                           ;Periferico I2C.c: 105:         if(semaforo == 1){
   548  019C  1283               	bcf	3,5	;RP0=0, select bank0
   549  019D  1303               	bcf	3,6	;RP1=0, select bank0
   550  019E  0332               	decf	_semaforo,w
   551  019F  1D03               	btfss	3,2
   552  01A0  29A2               	goto	u831
   553  01A1  29A3               	goto	u830
   554  01A2                     u831:
   555  01A2  29A9               	goto	l1209
   556  01A3                     u830:
   557  01A3                     l1207:
   558                           
   559                           ;Periferico I2C.c: 106:             PORTCbits.RC7 = 1;
   560  01A3  1787               	bsf	7,7	;volatile
   561                           
   562                           ;Periferico I2C.c: 107:             PORTDbits.RD4 = 0;
   563  01A4  1208               	bcf	8,4	;volatile
   564                           
   565                           ;Periferico I2C.c: 108:             PORTDbits.RD5 = 0;
   566  01A5  1288               	bcf	8,5	;volatile
   567                           
   568                           ;Periferico I2C.c: 109:             sema_estado = 1;
   569  01A6  01B1               	clrf	_sema_estado
   570  01A7  0AB1               	incf	_sema_estado,f
   571                           
   572                           ;Periferico I2C.c: 110:         }
   573  01A8  299C               	goto	l1205
   574  01A9                     l1209:
   575  01A9  3002               	movlw	2
   576  01AA  0632               	xorwf	_semaforo,w
   577  01AB  1D03               	btfss	3,2
   578  01AC  29AE               	goto	u841
   579  01AD  29AF               	goto	u840
   580  01AE                     u841:
   581  01AE  29B7               	goto	l1215
   582  01AF                     u840:
   583  01AF                     l1211:
   584                           
   585                           ;Periferico I2C.c: 112:             PORTDbits.RD4 = 1;
   586  01AF  1608               	bsf	8,4	;volatile
   587                           
   588                           ;Periferico I2C.c: 113:             PORTCbits.RC7 = 0;
   589  01B0  1387               	bcf	7,7	;volatile
   590                           
   591                           ;Periferico I2C.c: 114:             PORTDbits.RD5 = 0;
   592  01B1  1288               	bcf	8,5	;volatile
   593  01B2                     l1213:
   594                           
   595                           ;Periferico I2C.c: 115:             sema_estado = 2;
   596  01B2  3002               	movlw	2
   597  01B3  00B0               	movwf	??_main
   598  01B4  0830               	movf	??_main,w
   599  01B5  00B1               	movwf	_sema_estado
   600                           
   601                           ;Periferico I2C.c: 116:         }
   602  01B6  299C               	goto	l1205
   603  01B7                     l1215:
   604  01B7  3003               	movlw	3
   605  01B8  0632               	xorwf	_semaforo,w
   606  01B9  1D03               	btfss	3,2
   607  01BA  29BC               	goto	u851
   608  01BB  29BD               	goto	u850
   609  01BC                     u851:
   610  01BC  29C5               	goto	l71
   611  01BD                     u850:
   612  01BD                     l1217:
   613                           
   614                           ;Periferico I2C.c: 118:             PORTDbits.RD4 = 0;
   615  01BD  1208               	bcf	8,4	;volatile
   616                           
   617                           ;Periferico I2C.c: 119:             PORTCbits.RC7 = 0;
   618  01BE  1387               	bcf	7,7	;volatile
   619                           
   620                           ;Periferico I2C.c: 120:             PORTDbits.RD5 = 1;
   621  01BF  1688               	bsf	8,5	;volatile
   622  01C0                     l1219:
   623                           
   624                           ;Periferico I2C.c: 121:             sema_estado = 3;
   625  01C0  3003               	movlw	3
   626  01C1  00B0               	movwf	??_main
   627  01C2  0830               	movf	??_main,w
   628  01C3  00B1               	movwf	_sema_estado
   629  01C4  299C               	goto	l1205
   630  01C5                     l71:
   631  01C5  299C               	goto	l1205
   632  01C6  120A  118A  280C   	ljmp	start
   633  01C9                     __end_of_main:
   634                           
   635                           	psect	text1
   636  01F9                     __ptext1:	
   637 ;; *************** function _setup *****************
   638 ;; Defined at:
   639 ;;		line 127 in file "Periferico I2C.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, status,2, status,0, pclath, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   653 ;;      Params:         0       0       0       0       0
   654 ;;      Locals:         0       0       0       0       0
   655 ;;      Temps:          0       0       0       0       0
   656 ;;      Totals:         0       0       0       0       0
   657 ;;Total ram usage:        0 bytes
   658 ;; Hardware stack levels used: 1
   659 ;; Hardware stack levels required when called: 3
   660 ;; This function calls:
   661 ;;		_InitMSSP
   662 ;;		_initOsc
   663 ;; This function is called by:
   664 ;;		_main
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           
   669                           ;psect for function _setup
   670  01F9                     _setup:
   671  01F9                     l1197:	
   672                           ;incstack = 0
   673                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   674                           
   675                           
   676                           ;Periferico I2C.c: 130:     ANSEL = 0;
   677  01F9  1683               	bsf	3,5	;RP0=1, select bank3
   678  01FA  1703               	bsf	3,6	;RP1=1, select bank3
   679  01FB  0188               	clrf	8	;volatile
   680                           
   681                           ;Periferico I2C.c: 131:     ANSELH = 0;
   682  01FC  0189               	clrf	9	;volatile
   683                           
   684                           ;Periferico I2C.c: 133:     TRISA = 0;
   685  01FD  1683               	bsf	3,5	;RP0=1, select bank1
   686  01FE  1303               	bcf	3,6	;RP1=0, select bank1
   687  01FF  0185               	clrf	5	;volatile
   688                           
   689                           ;Periferico I2C.c: 134:     TRISB = 0;
   690  0200  0186               	clrf	6	;volatile
   691                           
   692                           ;Periferico I2C.c: 135:     TRISD = 0;
   693  0201  0188               	clrf	8	;volatile
   694                           
   695                           ;Periferico I2C.c: 136:     TRISC = 0;
   696  0202  0187               	clrf	7	;volatile
   697                           
   698                           ;Periferico I2C.c: 138:     PORTA = 0;
   699  0203  1283               	bcf	3,5	;RP0=0, select bank0
   700  0204  1303               	bcf	3,6	;RP1=0, select bank0
   701  0205  0185               	clrf	5	;volatile
   702                           
   703                           ;Periferico I2C.c: 139:     PORTB = 0;
   704  0206  0186               	clrf	6	;volatile
   705                           
   706                           ;Periferico I2C.c: 140:     PORTD = 0;
   707  0207  0188               	clrf	8	;volatile
   708                           
   709                           ;Periferico I2C.c: 141:     PORTC = 0;
   710  0208  0187               	clrf	7	;volatile
   711  0209                     l1199:
   712                           
   713                           ;Periferico I2C.c: 144:     initOsc(4);
   714  0209  3004               	movlw	4
   715  020A  120A  118A  21C9  120A  118A  	fcall	_initOsc
   716  020F                     l1201:
   717                           
   718                           ;Periferico I2C.c: 148:     InitMSSP(I2C_SLAVE_7BIT, 0x50);
   719  020F  3000               	movlw	0
   720  0210  1283               	bcf	3,5	;RP0=0, select bank0
   721  0211  1303               	bcf	3,6	;RP1=0, select bank0
   722  0212  00AB               	movwf	InitMSSP@Dato+3
   723  0213  3000               	movlw	0
   724  0214  00AA               	movwf	InitMSSP@Dato+2
   725  0215  3000               	movlw	0
   726  0216  00A9               	movwf	InitMSSP@Dato+1
   727  0217  3050               	movlw	80
   728  0218  00A8               	movwf	InitMSSP@Dato
   729  0219  3006               	movlw	6
   730  021A  120A  118A  2018  120A  118A  	fcall	_InitMSSP
   731  021F                     l80:
   732  021F  0008               	return
   733  0220                     __end_of_setup:
   734                           
   735                           	psect	text2
   736  01C9                     __ptext2:	
   737 ;; *************** function _initOsc *****************
   738 ;; Defined at:
   739 ;;		line 12 in file "Oscilador.c"
   740 ;; Parameters:    Size  Location     Type
   741 ;;  Valor           1    wreg     unsigned char 
   742 ;; Auto vars:     Size  Location     Type
   743 ;;  Valor           1    3[COMMON] unsigned char 
   744 ;; Return value:  Size  Location     Type
   745 ;;                  1    wreg      void 
   746 ;; Registers used:
   747 ;;		wreg, status,2, status,0
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   753 ;;      Params:         0       0       0       0       0
   754 ;;      Locals:         1       0       0       0       0
   755 ;;      Temps:          0       0       0       0       0
   756 ;;      Totals:         1       0       0       0       0
   757 ;;Total ram usage:        1 bytes
   758 ;; Hardware stack levels used: 1
   759 ;; Hardware stack levels required when called: 1
   760 ;; This function calls:
   761 ;;		Nothing
   762 ;; This function is called by:
   763 ;;		_setup
   764 ;; This function uses a non-reentrant model
   765 ;;
   766                           
   767                           
   768                           ;psect for function _initOsc
   769  01C9                     _initOsc:
   770                           
   771                           ;incstack = 0
   772                           ; Regs used in _initOsc: [wreg+status,2+status,0]
   773                           ;initOsc@Valor stored from wreg
   774  01C9  00F3               	movwf	initOsc@Valor
   775  01CA                     l1001:
   776                           
   777                           ;Oscilador.c: 14:     if(Valor == 8){
   778  01CA  3008               	movlw	8
   779  01CB  0673               	xorwf	initOsc@Valor,w
   780  01CC  1D03               	btfss	3,2
   781  01CD  29CF               	goto	u441
   782  01CE  29D0               	goto	u440
   783  01CF                     u441:
   784  01CF  29D5               	goto	l1005
   785  01D0                     u440:
   786  01D0                     l1003:
   787                           
   788                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
   789  01D0  1683               	bsf	3,5	;RP0=1, select bank1
   790  01D1  1303               	bcf	3,6	;RP1=0, select bank1
   791  01D2  160F               	bsf	15,4	;volatile
   792                           
   793                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
   794  01D3  168F               	bsf	15,5	;volatile
   795                           
   796                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
   797  01D4  170F               	bsf	15,6	;volatile
   798  01D5                     l1005:
   799                           
   800                           ;Oscilador.c: 19:     if(Valor == 4){
   801  01D5  3004               	movlw	4
   802  01D6  0673               	xorwf	initOsc@Valor,w
   803  01D7  1D03               	btfss	3,2
   804  01D8  29DA               	goto	u451
   805  01D9  29DB               	goto	u450
   806  01DA                     u451:
   807  01DA  29E0               	goto	l1009
   808  01DB                     u450:
   809  01DB                     l1007:
   810                           
   811                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
   812  01DB  1683               	bsf	3,5	;RP0=1, select bank1
   813  01DC  1303               	bcf	3,6	;RP1=0, select bank1
   814  01DD  120F               	bcf	15,4	;volatile
   815                           
   816                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
   817  01DE  168F               	bsf	15,5	;volatile
   818                           
   819                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
   820  01DF  170F               	bsf	15,6	;volatile
   821  01E0                     l1009:
   822                           
   823                           ;Oscilador.c: 24:     if(Valor == 2){
   824  01E0  3002               	movlw	2
   825  01E1  0673               	xorwf	initOsc@Valor,w
   826  01E2  1D03               	btfss	3,2
   827  01E3  29E5               	goto	u461
   828  01E4  29E6               	goto	u460
   829  01E5                     u461:
   830  01E5  29EB               	goto	l1013
   831  01E6                     u460:
   832  01E6                     l1011:
   833                           
   834                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
   835  01E6  1683               	bsf	3,5	;RP0=1, select bank1
   836  01E7  1303               	bcf	3,6	;RP1=0, select bank1
   837  01E8  160F               	bsf	15,4	;volatile
   838                           
   839                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
   840  01E9  128F               	bcf	15,5	;volatile
   841                           
   842                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
   843  01EA  170F               	bsf	15,6	;volatile
   844  01EB                     l1013:
   845                           
   846                           ;Oscilador.c: 29:     if(Valor == 1){
   847  01EB  0373               	decf	initOsc@Valor,w
   848  01EC  1D03               	btfss	3,2
   849  01ED  29EF               	goto	u471
   850  01EE  29F0               	goto	u470
   851  01EF                     u471:
   852  01EF  29F5               	goto	l172
   853  01F0                     u470:
   854  01F0                     l1015:
   855                           
   856                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
   857  01F0  1683               	bsf	3,5	;RP0=1, select bank1
   858  01F1  1303               	bcf	3,6	;RP1=0, select bank1
   859  01F2  120F               	bcf	15,4	;volatile
   860                           
   861                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
   862  01F3  128F               	bcf	15,5	;volatile
   863                           
   864                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
   865  01F4  170F               	bsf	15,6	;volatile
   866  01F5                     l172:	
   867                           ;Oscilador.c: 33:     }
   868                           
   869                           
   870                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
   871  01F5  1683               	bsf	3,5	;RP0=1, select bank1
   872  01F6  1303               	bcf	3,6	;RP1=0, select bank1
   873  01F7  140F               	bsf	15,0	;volatile
   874  01F8                     l173:
   875  01F8  0008               	return
   876  01F9                     __end_of_initOsc:
   877                           
   878                           	psect	text3
   879  0018                     __ptext3:	
   880 ;; *************** function _InitMSSP *****************
   881 ;; Defined at:
   882 ;;		line 5 in file "I2C.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;  Modo            1    wreg     enum E1292
   885 ;;  Dato            4    8[BANK0 ] unsigned long 
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  Modo            1    9[COMMON] enum E1292
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		wreg, status,2, status,0, pclath, cstack
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   897 ;;      Params:         0       4       0       0       0
   898 ;;      Locals:         1       0       0       0       0
   899 ;;      Temps:          0       4       0       0       0
   900 ;;      Totals:         1       8       0       0       0
   901 ;;Total ram usage:        9 bytes
   902 ;; Hardware stack levels used: 1
   903 ;; Hardware stack levels required when called: 2
   904 ;; This function calls:
   905 ;;		___lldiv
   906 ;; This function is called by:
   907 ;;		_setup
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           
   912                           ;psect for function _InitMSSP
   913  0018                     _InitMSSP:
   914                           
   915                           ;incstack = 0
   916                           ; Regs used in _InitMSSP: [wreg+status,2+status,0+pclath+cstack]
   917                           ;InitMSSP@Modo stored from wreg
   918  0018  00F9               	movwf	InitMSSP@Modo
   919  0019                     l1149:
   920                           
   921                           ;I2C.c: 9:     SSPCONbits.SSPEN = 0;
   922  0019  1283               	bcf	3,5	;RP0=0, select bank0
   923  001A  1303               	bcf	3,6	;RP1=0, select bank0
   924  001B  1294               	bcf	20,5	;volatile
   925  001C                     l1151:
   926                           
   927                           ;I2C.c: 10:     _delay((unsigned long)((10)*(8000000/4000.0)));
   928  001C  301A               	movlw	26
   929  001D  1283               	bcf	3,5	;RP0=0, select bank0
   930  001E  1303               	bcf	3,6	;RP1=0, select bank0
   931  001F  00AD               	movwf	??_InitMSSP+1
   932  0020  30F7               	movlw	247
   933  0021  00AC               	movwf	??_InitMSSP
   934  0022                     u867:
   935  0022  0BAC               	decfsz	??_InitMSSP,f
   936  0023  2822               	goto	u867
   937  0024  0BAD               	decfsz	??_InitMSSP+1,f
   938  0025  2822               	goto	u867
   939  0026  2827               	nop2
   940  0027                     l1153:
   941                           
   942                           ;I2C.c: 11:     SSPCONbits.SSPEN = 1;
   943  0027  1283               	bcf	3,5	;RP0=0, select bank0
   944  0028  1303               	bcf	3,6	;RP1=0, select bank0
   945  0029  1694               	bsf	20,5	;volatile
   946                           
   947                           ;I2C.c: 14:     if (Modo < 0b00000110){
   948  002A  3006               	movlw	6
   949  002B  0279               	subwf	InitMSSP@Modo,w
   950  002C  1803               	skipnc
   951  002D  282F               	goto	u751
   952  002E  2830               	goto	u750
   953  002F                     u751:
   954  002F  284B               	goto	l1165
   955  0030                     u750:
   956  0030                     l1155:
   957                           
   958                           ;I2C.c: 17:         TRISCbits.TRISC5 = 0;
   959  0030  1683               	bsf	3,5	;RP0=1, select bank1
   960  0031  1303               	bcf	3,6	;RP1=0, select bank1
   961  0032  1287               	bcf	7,5	;volatile
   962                           
   963                           ;I2C.c: 18:         TRISCbits.TRISC4 = 1;
   964  0033  1607               	bsf	7,4	;volatile
   965  0034                     l1157:
   966                           
   967                           ;I2C.c: 20:         if (Modo < 0b00000100){
   968  0034  3004               	movlw	4
   969  0035  0279               	subwf	InitMSSP@Modo,w
   970  0036  1803               	skipnc
   971  0037  2839               	goto	u761
   972  0038  283A               	goto	u760
   973  0039                     u761:
   974  0039  283C               	goto	l132
   975  003A                     u760:
   976  003A                     l1159:
   977                           
   978                           ;I2C.c: 21:             TRISCbits.TRISC3 = 0;
   979  003A  1187               	bcf	7,3	;volatile
   980                           
   981                           ;I2C.c: 22:         }
   982  003B  283D               	goto	l1161
   983  003C                     l132:	
   984                           ;I2C.c: 23:         else {
   985                           
   986                           
   987                           ;I2C.c: 24:             TRISCbits.TRISC3 = 1;
   988  003C  1587               	bsf	7,3	;volatile
   989  003D                     l1161:
   990                           
   991                           ;I2C.c: 27:         if (Modo == 0b00000100){ TRISAbits.TRISA5 = 1;}
   992  003D  3004               	movlw	4
   993  003E  0679               	xorwf	InitMSSP@Modo,w
   994  003F  1D03               	btfss	3,2
   995  0040  2842               	goto	u771
   996  0041  2843               	goto	u770
   997  0042                     u771:
   998  0042  2844               	goto	l134
   999  0043                     u770:
  1000  0043                     l1163:
  1001  0043  1685               	bsf	5,5	;volatile
  1002  0044                     l134:
  1003                           
  1004                           ;I2C.c: 31:         SSPCONbits.CKP = 0;
  1005  0044  1283               	bcf	3,5	;RP0=0, select bank0
  1006  0045  1303               	bcf	3,6	;RP1=0, select bank0
  1007  0046  1214               	bcf	20,4	;volatile
  1008                           
  1009                           ;I2C.c: 36:         SSPSTATbits.SMP = 1;
  1010  0047  1683               	bsf	3,5	;RP0=1, select bank1
  1011  0048  1303               	bcf	3,6	;RP1=0, select bank1
  1012  0049  1794               	bsf	20,7	;volatile
  1013                           
  1014                           ;I2C.c: 38:     }
  1015  004A  28B9               	goto	l1193
  1016  004B                     l1165:
  1017  004B  3006               	movlw	6
  1018  004C  0279               	subwf	InitMSSP@Modo,w
  1019  004D  1C03               	skipc
  1020  004E  2850               	goto	u781
  1021  004F  2851               	goto	u780
  1022  0050                     u781:
  1023  0050  28B9               	goto	l1193
  1024  0051                     u780:
  1025  0051                     l1167:
  1026                           
  1027                           ;I2C.c: 42:         TRISCbits.TRISC3 = 1;
  1028  0051  1683               	bsf	3,5	;RP0=1, select bank1
  1029  0052  1303               	bcf	3,6	;RP1=0, select bank1
  1030  0053  1587               	bsf	7,3	;volatile
  1031                           
  1032                           ;I2C.c: 43:         TRISCbits.TRISC4 = 1;
  1033  0054  1607               	bsf	7,4	;volatile
  1034                           
  1035                           ;I2C.c: 44:         SSPCONbits.SSPEN = 1;
  1036  0055  1283               	bcf	3,5	;RP0=0, select bank0
  1037  0056  1303               	bcf	3,6	;RP1=0, select bank0
  1038  0057  1694               	bsf	20,5	;volatile
  1039                           
  1040                           ;I2C.c: 45:         SSPSTATbits.SMP = 1;
  1041  0058  1683               	bsf	3,5	;RP0=1, select bank1
  1042  0059  1303               	bcf	3,6	;RP1=0, select bank1
  1043  005A  1794               	bsf	20,7	;volatile
  1044  005B                     l1169:
  1045                           
  1046                           ;I2C.c: 46:         if (Modo == 0b00000111 || Modo == 0b00001111){
  1047  005B  3007               	movlw	7
  1048  005C  0679               	xorwf	InitMSSP@Modo,w
  1049  005D  1903               	btfsc	3,2
  1050  005E  2860               	goto	u791
  1051  005F  2861               	goto	u790
  1052  0060                     u791:
  1053  0060  2867               	goto	l139
  1054  0061                     u790:
  1055  0061                     l1171:
  1056  0061  300F               	movlw	15
  1057  0062  0679               	xorwf	InitMSSP@Modo,w
  1058  0063  1D03               	btfss	3,2
  1059  0064  2866               	goto	u801
  1060  0065  2867               	goto	u800
  1061  0066                     u801:
  1062  0066  2868               	goto	l1173
  1063  0067                     u800:
  1064  0067                     l139:
  1065                           
  1066                           ;I2C.c: 47:             UA = 0;
  1067  0067  1094               	bcf	20,1	;volatile
  1068  0068                     l1173:
  1069                           
  1070                           ;I2C.c: 50:         if (Modo == 0b00001000){
  1071  0068  3008               	movlw	8
  1072  0069  0679               	xorwf	InitMSSP@Modo,w
  1073  006A  1D03               	btfss	3,2
  1074  006B  286D               	goto	u811
  1075  006C  286E               	goto	u810
  1076  006D                     u811:
  1077  006D  28A6               	goto	l140
  1078  006E                     u810:
  1079  006E                     l1175:
  1080                           
  1081                           ;I2C.c: 51:             CKP = 0;
  1082  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1083  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1084  0070  1214               	bcf	20,4	;volatile
  1085  0071                     l1177:
  1086                           
  1087                           ;I2C.c: 52:             SSPCON2 = 0;
  1088  0071  1683               	bsf	3,5	;RP0=1, select bank1
  1089  0072  1303               	bcf	3,6	;RP1=0, select bank1
  1090  0073  0191               	clrf	17	;volatile
  1091                           
  1092                           ;I2C.c: 53:             SSPSTAT = 0;
  1093  0074  0194               	clrf	20	;volatile
  1094  0075                     l1179:
  1095                           
  1096                           ;I2C.c: 54:             SSPADD = (8000000/(Dato*4))-1;
  1097  0075  1283               	bcf	3,5	;RP0=0, select bank0
  1098  0076  1303               	bcf	3,6	;RP1=0, select bank0
  1099  0077  0828               	movf	InitMSSP@Dato,w
  1100  0078  00AC               	movwf	??_InitMSSP
  1101  0079  0829               	movf	InitMSSP@Dato+1,w
  1102  007A  00AD               	movwf	??_InitMSSP+1
  1103  007B  082A               	movf	InitMSSP@Dato+2,w
  1104  007C  00AE               	movwf	??_InitMSSP+2
  1105  007D  082B               	movf	InitMSSP@Dato+3,w
  1106  007E  00AF               	movwf	??_InitMSSP+3
  1107  007F  3002               	movlw	2
  1108  0080                     u825:
  1109  0080  1003               	clrc
  1110  0081  0DAC               	rlf	??_InitMSSP,f
  1111  0082  0DAD               	rlf	??_InitMSSP+1,f
  1112  0083  0DAE               	rlf	??_InitMSSP+2,f
  1113  0084  0DAF               	rlf	??_InitMSSP+3,f
  1114  0085                     u820:
  1115  0085  3EFF               	addlw	-1
  1116  0086  1D03               	skipz
  1117  0087  2880               	goto	u825
  1118  0088  082F               	movf	??_InitMSSP+3,w
  1119  0089  00A3               	movwf	___lldiv@divisor+3
  1120  008A  082E               	movf	??_InitMSSP+2,w
  1121  008B  00A2               	movwf	___lldiv@divisor+2
  1122  008C  082D               	movf	??_InitMSSP+1,w
  1123  008D  00A1               	movwf	___lldiv@divisor+1
  1124  008E  082C               	movf	??_InitMSSP,w
  1125  008F  00A0               	movwf	___lldiv@divisor
  1126  0090  3000               	movlw	0
  1127  0091  00A7               	movwf	___lldiv@dividend+3
  1128  0092  307A               	movlw	122
  1129  0093  00A6               	movwf	___lldiv@dividend+2
  1130  0094  3012               	movlw	18
  1131  0095  00A5               	movwf	___lldiv@dividend+1
  1132  0096  3000               	movlw	0
  1133  0097  00A4               	movwf	___lldiv@dividend
  1134  0098  120A  118A  212F  120A  118A  	fcall	___lldiv
  1135  009D  1283               	bcf	3,5	;RP0=0, select bank0
  1136  009E  1303               	bcf	3,6	;RP1=0, select bank0
  1137  009F  0820               	movf	?___lldiv,w
  1138  00A0  3EFF               	addlw	255
  1139  00A1  1683               	bsf	3,5	;RP0=1, select bank1
  1140  00A2  1303               	bcf	3,6	;RP1=0, select bank1
  1141  00A3  0093               	movwf	19	;volatile
  1142  00A4                     l1181:
  1143                           
  1144                           ;I2C.c: 55:             PIE1bits.SSPIE = 0;
  1145  00A4  118C               	bcf	12,3	;volatile
  1146                           
  1147                           ;I2C.c: 56:         }
  1148  00A5  28B9               	goto	l1193
  1149  00A6                     l140:	
  1150                           ;I2C.c: 57:         else {
  1151                           
  1152                           
  1153                           ;I2C.c: 58:             CKP = 1;
  1154  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  1155  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  1156  00A8  1614               	bsf	20,4	;volatile
  1157                           
  1158                           ;I2C.c: 59:             SSPCON2bits.GCEN = 0;
  1159  00A9  1683               	bsf	3,5	;RP0=1, select bank1
  1160  00AA  1303               	bcf	3,6	;RP1=0, select bank1
  1161  00AB  1391               	bcf	17,7	;volatile
  1162                           
  1163                           ;I2C.c: 60:             SSPCON2bits.SEN = 1;
  1164  00AC  1411               	bsf	17,0	;volatile
  1165  00AD                     l1183:
  1166                           
  1167                           ;I2C.c: 61:             SSPADD = Dato;
  1168  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1169  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1170  00AF  0828               	movf	InitMSSP@Dato,w
  1171  00B0  1683               	bsf	3,5	;RP0=1, select bank1
  1172  00B1  1303               	bcf	3,6	;RP1=0, select bank1
  1173  00B2  0093               	movwf	19	;volatile
  1174  00B3                     l1185:
  1175                           
  1176                           ;I2C.c: 62:             INTCONbits.GIE = 1;
  1177  00B3  178B               	bsf	11,7	;volatile
  1178  00B4                     l1187:
  1179                           
  1180                           ;I2C.c: 63:             INTCONbits.PEIE = 1;
  1181  00B4  170B               	bsf	11,6	;volatile
  1182  00B5                     l1189:
  1183                           
  1184                           ;I2C.c: 64:             PIE1bits.SSPIE = 1;
  1185  00B5  158C               	bsf	12,3	;volatile
  1186  00B6                     l1191:
  1187                           
  1188                           ;I2C.c: 65:             SSPIF = 0;
  1189  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1190  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1191  00B8  118C               	bcf	12,3	;volatile
  1192  00B9                     l1193:
  1193                           
  1194                           ;I2C.c: 72:     SSPCON = SSPCON | Modo;
  1195  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1196  00BA  0814               	movf	20,w	;volatile
  1197  00BB  0479               	iorwf	InitMSSP@Modo,w	;volatile
  1198  00BC  0094               	movwf	20	;volatile
  1199  00BD                     l1195:
  1200                           
  1201                           ;I2C.c: 77:     SSPSTATbits.CKE = 0;
  1202  00BD  1683               	bsf	3,5	;RP0=1, select bank1
  1203  00BE  1303               	bcf	3,6	;RP1=0, select bank1
  1204  00BF  1314               	bcf	20,6	;volatile
  1205  00C0                     l142:
  1206  00C0  0008               	return
  1207  00C1                     __end_of_InitMSSP:
  1208                           
  1209                           	psect	text4
  1210  012F                     __ptext4:	
  1211 ;; *************** function ___lldiv *****************
  1212 ;; Defined at:
  1213 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  divisor         4    0[BANK0 ] unsigned long 
  1216 ;;  dividend        4    4[BANK0 ] unsigned long 
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;  quotient        4    4[COMMON] unsigned long 
  1219 ;;  counter         1    8[COMMON] unsigned char 
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  4    0[BANK0 ] unsigned long 
  1222 ;; Registers used:
  1223 ;;		wreg, status,2, status,0
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1229 ;;      Params:         0       8       0       0       0
  1230 ;;      Locals:         5       0       0       0       0
  1231 ;;      Temps:          1       0       0       0       0
  1232 ;;      Totals:         6       8       0       0       0
  1233 ;;Total ram usage:       14 bytes
  1234 ;; Hardware stack levels used: 1
  1235 ;; Hardware stack levels required when called: 1
  1236 ;; This function calls:
  1237 ;;		Nothing
  1238 ;; This function is called by:
  1239 ;;		_InitMSSP
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           
  1244                           ;psect for function ___lldiv
  1245  012F                     ___lldiv:
  1246  012F                     l1125:	
  1247                           ;incstack = 0
  1248                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1249                           
  1250  012F  3000               	movlw	0
  1251  0130  00F7               	movwf	___lldiv@quotient+3
  1252  0131  3000               	movlw	0
  1253  0132  00F6               	movwf	___lldiv@quotient+2
  1254  0133  3000               	movlw	0
  1255  0134  00F5               	movwf	___lldiv@quotient+1
  1256  0135  3000               	movlw	0
  1257  0136  00F4               	movwf	___lldiv@quotient
  1258  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1259  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1260  0139  0823               	movf	___lldiv@divisor+3,w
  1261  013A  0422               	iorwf	___lldiv@divisor+2,w
  1262  013B  0421               	iorwf	___lldiv@divisor+1,w
  1263  013C  0420               	iorwf	___lldiv@divisor,w
  1264  013D  1903               	skipnz
  1265  013E  2940               	goto	u681
  1266  013F  2941               	goto	u680
  1267  0140                     u681:
  1268  0140  298E               	goto	l1145
  1269  0141                     u680:
  1270  0141                     l1127:
  1271  0141  01F8               	clrf	___lldiv@counter
  1272  0142  0AF8               	incf	___lldiv@counter,f
  1273  0143  2951               	goto	l1131
  1274  0144                     l1129:
  1275  0144  3001               	movlw	1
  1276  0145  00F3               	movwf	??___lldiv
  1277  0146                     u695:
  1278  0146  1003               	clrc
  1279  0147  0DA0               	rlf	___lldiv@divisor,f
  1280  0148  0DA1               	rlf	___lldiv@divisor+1,f
  1281  0149  0DA2               	rlf	___lldiv@divisor+2,f
  1282  014A  0DA3               	rlf	___lldiv@divisor+3,f
  1283  014B  0BF3               	decfsz	??___lldiv,f
  1284  014C  2946               	goto	u695
  1285  014D  3001               	movlw	1
  1286  014E  00F3               	movwf	??___lldiv
  1287  014F  0873               	movf	??___lldiv,w
  1288  0150  07F8               	addwf	___lldiv@counter,f
  1289  0151                     l1131:
  1290  0151  1FA3               	btfss	___lldiv@divisor+3,7
  1291  0152  2954               	goto	u701
  1292  0153  2955               	goto	u700
  1293  0154                     u701:
  1294  0154  2944               	goto	l1129
  1295  0155                     u700:
  1296  0155                     l1133:
  1297  0155  3001               	movlw	1
  1298  0156  00F3               	movwf	??___lldiv
  1299  0157                     u715:
  1300  0157  1003               	clrc
  1301  0158  0DF4               	rlf	___lldiv@quotient,f
  1302  0159  0DF5               	rlf	___lldiv@quotient+1,f
  1303  015A  0DF6               	rlf	___lldiv@quotient+2,f
  1304  015B  0DF7               	rlf	___lldiv@quotient+3,f
  1305  015C  0BF3               	decfsz	??___lldiv,f
  1306  015D  2957               	goto	u715
  1307  015E                     l1135:
  1308  015E  0823               	movf	___lldiv@divisor+3,w
  1309  015F  0227               	subwf	___lldiv@dividend+3,w
  1310  0160  1D03               	skipz
  1311  0161  296C               	goto	u725
  1312  0162  0822               	movf	___lldiv@divisor+2,w
  1313  0163  0226               	subwf	___lldiv@dividend+2,w
  1314  0164  1D03               	skipz
  1315  0165  296C               	goto	u725
  1316  0166  0821               	movf	___lldiv@divisor+1,w
  1317  0167  0225               	subwf	___lldiv@dividend+1,w
  1318  0168  1D03               	skipz
  1319  0169  296C               	goto	u725
  1320  016A  0820               	movf	___lldiv@divisor,w
  1321  016B  0224               	subwf	___lldiv@dividend,w
  1322  016C                     u725:
  1323  016C  1C03               	skipc
  1324  016D  296F               	goto	u721
  1325  016E  2970               	goto	u720
  1326  016F                     u721:
  1327  016F  297F               	goto	l1141
  1328  0170                     u720:
  1329  0170                     l1137:
  1330  0170  0820               	movf	___lldiv@divisor,w
  1331  0171  02A4               	subwf	___lldiv@dividend,f
  1332  0172  0821               	movf	___lldiv@divisor+1,w
  1333  0173  1C03               	skipc
  1334  0174  0F21               	incfsz	___lldiv@divisor+1,w
  1335  0175  02A5               	subwf	___lldiv@dividend+1,f
  1336  0176  0822               	movf	___lldiv@divisor+2,w
  1337  0177  1C03               	skipc
  1338  0178  0F22               	incfsz	___lldiv@divisor+2,w
  1339  0179  02A6               	subwf	___lldiv@dividend+2,f
  1340  017A  0823               	movf	___lldiv@divisor+3,w
  1341  017B  1C03               	skipc
  1342  017C  0F23               	incfsz	___lldiv@divisor+3,w
  1343  017D  02A7               	subwf	___lldiv@dividend+3,f
  1344  017E                     l1139:
  1345  017E  1474               	bsf	___lldiv@quotient,0
  1346  017F                     l1141:
  1347  017F  3001               	movlw	1
  1348  0180                     u735:
  1349  0180  1003               	clrc
  1350  0181  0CA3               	rrf	___lldiv@divisor+3,f
  1351  0182  0CA2               	rrf	___lldiv@divisor+2,f
  1352  0183  0CA1               	rrf	___lldiv@divisor+1,f
  1353  0184  0CA0               	rrf	___lldiv@divisor,f
  1354  0185  3EFF               	addlw	-1
  1355  0186  1D03               	skipz
  1356  0187  2980               	goto	u735
  1357  0188                     l1143:
  1358  0188  3001               	movlw	1
  1359  0189  02F8               	subwf	___lldiv@counter,f
  1360  018A  1D03               	btfss	3,2
  1361  018B  298D               	goto	u741
  1362  018C  298E               	goto	u740
  1363  018D                     u741:
  1364  018D  2955               	goto	l1133
  1365  018E                     u740:
  1366  018E                     l1145:
  1367  018E  0877               	movf	___lldiv@quotient+3,w
  1368  018F  00A3               	movwf	?___lldiv+3
  1369  0190  0876               	movf	___lldiv@quotient+2,w
  1370  0191  00A2               	movwf	?___lldiv+2
  1371  0192  0875               	movf	___lldiv@quotient+1,w
  1372  0193  00A1               	movwf	?___lldiv+1
  1373  0194  0874               	movf	___lldiv@quotient,w
  1374  0195  00A0               	movwf	?___lldiv
  1375  0196                     l295:
  1376  0196  0008               	return
  1377  0197                     __end_of___lldiv:
  1378                           
  1379                           	psect	text5
  1380  00C1                     __ptext5:	
  1381 ;; *************** function _isr *****************
  1382 ;; Defined at:
  1383 ;;		line 62 in file "Periferico I2C.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;		None
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;		None
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1    wreg      void 
  1390 ;; Registers used:
  1391 ;;		wreg
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1397 ;;      Params:         0       0       0       0       0
  1398 ;;      Locals:         0       0       0       0       0
  1399 ;;      Temps:          3       0       0       0       0
  1400 ;;      Totals:         3       0       0       0       0
  1401 ;;Total ram usage:        3 bytes
  1402 ;; Hardware stack levels used: 1
  1403 ;; This function calls:
  1404 ;;		Nothing
  1405 ;; This function is called by:
  1406 ;;		Interrupt level 1
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           
  1411                           ;psect for function _isr
  1412  00C1                     _isr:
  1413  00C1                     i1l1071:
  1414                           
  1415                           ;Periferico I2C.c: 63:     if(PIR1bits.SSPIF == 1){
  1416  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1417  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1418  00C3  1D8C               	btfss	12,3	;volatile
  1419  00C4  28C6               	goto	u56_21
  1420  00C5  28C7               	goto	u56_20
  1421  00C6                     u56_21:
  1422  00C6  2928               	goto	i1l64
  1423  00C7                     u56_20:
  1424  00C7                     i1l1073:
  1425                           
  1426                           ;Periferico I2C.c: 64:         SSPCONbits.CKP = 0;
  1427  00C7  1214               	bcf	20,4	;volatile
  1428                           
  1429                           ;Periferico I2C.c: 67:         if((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  1430  00C8  1B14               	btfsc	20,6	;volatile
  1431  00C9  28CB               	goto	u57_21
  1432  00CA  28CC               	goto	u57_20
  1433  00CB                     u57_21:
  1434  00CB  28D0               	goto	i1l1077
  1435  00CC                     u57_20:
  1436  00CC                     i1l1075:
  1437  00CC  1F94               	btfss	20,7	;volatile
  1438  00CD  28CF               	goto	u58_21
  1439  00CE  28D0               	goto	u58_20
  1440  00CF                     u58_21:
  1441  00CF  28D7               	goto	i1l1085
  1442  00D0                     u58_20:
  1443  00D0                     i1l1077:
  1444                           
  1445                           ;Periferico I2C.c: 68:             Dato_recibido = SSPBUF;
  1446  00D0  0813               	movf	19,w	;volatile
  1447  00D1  00F0               	movwf	??_isr
  1448  00D2  0870               	movf	??_isr,w
  1449  00D3  00FA               	movwf	_Dato_recibido
  1450  00D4                     i1l1079:
  1451                           
  1452                           ;Periferico I2C.c: 69:             SSPCONbits.SSPOV = 0;
  1453  00D4  1314               	bcf	20,6	;volatile
  1454  00D5                     i1l1081:
  1455                           
  1456                           ;Periferico I2C.c: 70:             SSPCONbits.WCOL = 0;
  1457  00D5  1394               	bcf	20,7	;volatile
  1458  00D6                     i1l1083:
  1459                           
  1460                           ;Periferico I2C.c: 71:             SSPCONbits.CKP = 1;
  1461  00D6  1614               	bsf	20,4	;volatile
  1462  00D7                     i1l1085:
  1463                           
  1464                           ;Periferico I2C.c: 75:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  1465  00D7  1683               	bsf	3,5	;RP0=1, select bank1
  1466  00D8  1303               	bcf	3,6	;RP1=0, select bank1
  1467  00D9  1A94               	btfsc	20,5	;volatile
  1468  00DA  28DC               	goto	u59_21
  1469  00DB  28DD               	goto	u59_20
  1470  00DC                     u59_21:
  1471  00DC  2904               	goto	i1l55
  1472  00DD                     u59_20:
  1473  00DD                     i1l1087:
  1474  00DD  1914               	btfsc	20,2	;volatile
  1475  00DE  28E0               	goto	u60_21
  1476  00DF  28E1               	goto	u60_20
  1477  00E0                     u60_21:
  1478  00E0  2904               	goto	i1l55
  1479  00E1                     u60_20:
  1480  00E1                     i1l1089:
  1481                           
  1482                           ;Periferico I2C.c: 76:             _delay((unsigned long)((7)*(8000000/4000000.0)));
  1483  00E1  3004               	movlw	4
  1484  00E2  00F0               	movwf	??_isr
  1485  00E3                     u87_27:
  1486  00E3  0BF0               	decfsz	??_isr,f
  1487  00E4  28E3               	goto	u87_27
  1488  00E5  0000               	nop
  1489                           
  1490                           ;Periferico I2C.c: 77:             Dato_recibido = SSPBUF;
  1491  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1492  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  1493  00E8  0813               	movf	19,w	;volatile
  1494  00E9  00F0               	movwf	??_isr
  1495  00EA  0870               	movf	??_isr,w
  1496  00EB  00FA               	movwf	_Dato_recibido
  1497  00EC                     i1l1091:
  1498                           
  1499                           ;Periferico I2C.c: 78:             _delay((unsigned long)((2)*(8000000/4000000.0)));
  1500  00EC  28ED               	nop2	;2 cycle nop
  1501  00ED  28EE               	nop2	;2 cycle nop
  1502  00EE                     i1l1093:
  1503                           
  1504                           ;Periferico I2C.c: 79:             PIR1bits.SSPIF = 0;
  1505  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1506  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1507  00F0  118C               	bcf	12,3	;volatile
  1508  00F1                     i1l1095:
  1509                           
  1510                           ;Periferico I2C.c: 80:             SSPCONbits.CKP = 1;
  1511  00F1  1614               	bsf	20,4	;volatile
  1512  00F2                     i1l56:	
  1513                           ;Periferico I2C.c: 81:             while(!SSPSTATbits.BF);
  1514                           
  1515  00F2  1683               	bsf	3,5	;RP0=1, select bank1
  1516  00F3  1303               	bcf	3,6	;RP1=0, select bank1
  1517  00F4  1C14               	btfss	20,0	;volatile
  1518  00F5  28F7               	goto	u61_21
  1519  00F6  28F8               	goto	u61_20
  1520  00F7                     u61_21:
  1521  00F7  28F2               	goto	i1l56
  1522  00F8                     u61_20:
  1523  00F8                     i1l1097:
  1524                           
  1525                           ;Periferico I2C.c: 82:             semaforo = SSPBUF;
  1526  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1527  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1528  00FA  0813               	movf	19,w	;volatile
  1529  00FB  00F0               	movwf	??_isr
  1530  00FC  0870               	movf	??_isr,w
  1531  00FD  00B2               	movwf	_semaforo
  1532                           
  1533                           ;Periferico I2C.c: 83:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1534  00FE  30A6               	movlw	166
  1535  00FF  00F0               	movwf	??_isr
  1536  0100                     u88_27:
  1537  0100  0BF0               	decfsz	??_isr,f
  1538  0101  2900               	goto	u88_27
  1539  0102  0000               	nop
  1540                           
  1541                           ;Periferico I2C.c: 84:         }
  1542  0103  2925               	goto	i1l59
  1543  0104                     i1l55:	
  1544                           ;Periferico I2C.c: 87:         else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1545                           
  1546  0104  1A94               	btfsc	20,5	;volatile
  1547  0105  2907               	goto	u62_21
  1548  0106  2908               	goto	u62_20
  1549  0107                     u62_21:
  1550  0107  2925               	goto	i1l59
  1551  0108                     u62_20:
  1552  0108                     i1l1099:
  1553  0108  1D14               	btfss	20,2	;volatile
  1554  0109  290B               	goto	u63_21
  1555  010A  290C               	goto	u63_20
  1556  010B                     u63_21:
  1557  010B  2925               	goto	i1l59
  1558  010C                     u63_20:
  1559  010C                     i1l1101:
  1560                           
  1561                           ;Periferico I2C.c: 88:             Dato_recibido = SSPBUF;
  1562  010C  1283               	bcf	3,5	;RP0=0, select bank0
  1563  010D  1303               	bcf	3,6	;RP1=0, select bank0
  1564  010E  0813               	movf	19,w	;volatile
  1565  010F  00F0               	movwf	??_isr
  1566  0110  0870               	movf	??_isr,w
  1567  0111  00FA               	movwf	_Dato_recibido
  1568  0112                     i1l1103:
  1569                           
  1570                           ;Periferico I2C.c: 89:             SSPSTATbits.BF = 0;
  1571  0112  1683               	bsf	3,5	;RP0=1, select bank1
  1572  0113  1303               	bcf	3,6	;RP1=0, select bank1
  1573  0114  1014               	bcf	20,0	;volatile
  1574                           
  1575                           ;Periferico I2C.c: 90:             SSPBUF = sema_estado;
  1576  0115  1283               	bcf	3,5	;RP0=0, select bank0
  1577  0116  1303               	bcf	3,6	;RP1=0, select bank0
  1578  0117  0831               	movf	_sema_estado,w
  1579  0118  0093               	movwf	19	;volatile
  1580  0119                     i1l1105:
  1581                           
  1582                           ;Periferico I2C.c: 91:             SSPCONbits.CKP = 1;
  1583  0119  1614               	bsf	20,4	;volatile
  1584                           
  1585                           ;Periferico I2C.c: 92:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1586  011A  30A6               	movlw	166
  1587  011B  00F0               	movwf	??_isr
  1588  011C                     u89_27:
  1589  011C  0BF0               	decfsz	??_isr,f
  1590  011D  291C               	goto	u89_27
  1591  011E  0000               	nop
  1592  011F                     i1l61:	
  1593                           ;Periferico I2C.c: 93:             while(SSPSTATbits.BF);
  1594                           
  1595  011F  1683               	bsf	3,5	;RP0=1, select bank1
  1596  0120  1303               	bcf	3,6	;RP1=0, select bank1
  1597  0121  1814               	btfsc	20,0	;volatile
  1598  0122  2924               	goto	u64_21
  1599  0123  2925               	goto	u64_20
  1600  0124                     u64_21:
  1601  0124  291F               	goto	i1l61
  1602  0125                     u64_20:
  1603  0125                     i1l59:
  1604                           
  1605                           ;Periferico I2C.c: 95:         PIR1bits.SSPIF = 0;
  1606  0125  1283               	bcf	3,5	;RP0=0, select bank0
  1607  0126  1303               	bcf	3,6	;RP1=0, select bank0
  1608  0127  118C               	bcf	12,3	;volatile
  1609  0128                     i1l64:
  1610  0128  0872               	movf	??_isr+2,w
  1611  0129  008A               	movwf	10
  1612  012A  0E71               	swapf	??_isr+1,w
  1613  012B  0083               	movwf	3
  1614  012C  0EFE               	swapf	btemp,f
  1615  012D  0E7E               	swapf	btemp,w
  1616  012E  0009               	retfie
  1617  012F                     __end_of_isr:
  1618  007E                     btemp	set	126	;btemp
  1619  007E                     wtemp0	set	126
  1620                           
  1621                           	psect	intentry
  1622  0004                     __pintentry:	
  1623                           ;incstack = 0
  1624                           ; Regs used in _isr: [wreg]
  1625                           
  1626  0004                     interrupt_function:
  1627  007E                     saved_w	set	btemp
  1628  0004  00FE               	movwf	btemp
  1629  0005  0E03               	swapf	3,w
  1630  0006  00F1               	movwf	??_isr+1
  1631  0007  080A               	movf	10,w
  1632  0008  00F2               	movwf	??_isr+2
  1633  0009  120A  118A  28C1   	ljmp	_isr
  1634                           
  1635                           	psect	config
  1636                           
  1637                           ;Config register CONFIG1 @ 0x2007
  1638                           ;	Oscillator Selection bits
  1639                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1640                           ;	Watchdog Timer Enable bit
  1641                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1642                           ;	Power-up Timer Enable bit
  1643                           ;	PWRTE = OFF, PWRT disabled
  1644                           ;	RE3/MCLR pin function select bit
  1645                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1646                           ;	Code Protection bit
  1647                           ;	CP = OFF, Program memory code protection is disabled
  1648                           ;	Data Code Protection bit
  1649                           ;	CPD = OFF, Data memory code protection is disabled
  1650                           ;	Brown Out Reset Selection bits
  1651                           ;	BOREN = OFF, BOR disabled
  1652                           ;	Internal External Switchover bit
  1653                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1654                           ;	Fail-Safe Clock Monitor Enabled bit
  1655                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1656                           ;	Low Voltage Programming Enable bit
  1657                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1658                           ;	In-Circuit Debugger Mode bit
  1659                           ;	DEBUG = 0x1, unprogrammed default
  1660  2007                     	org	8199
  1661  2007  20D4               	dw	8404
  1662                           
  1663                           ;Config register CONFIG2 @ 0x2008
  1664                           ;	Brown-out Reset Selection bit
  1665                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1666                           ;	Flash Program Memory Self Write Enable bits
  1667                           ;	WRT = OFF, Write protection off
  1668  2008                     	org	8200
  1669  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     17      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_InitMSSP
    _InitMSSP->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _setup->_InitMSSP
    _InitMSSP->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     909
                                             16 BANK0      1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     909
                           _InitMSSP
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      88
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _InitMSSP                                             9     5      4     821
                                              9 COMMON     1     1      0
                                              8 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _InitMSSP
       ___lldiv
     _initOsc

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     11      13       5       23.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1E      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Mar 07 14:50:38 2022

            _SSPSTATbits 0094                       l71 01C5                       l80 021F  
                     _UA 04A1                      l140 00A6                      l132 003C  
                    l142 00C0                      l134 0044                      l139 0067  
                    l172 01F5                      l173 01F8                      l295 0196  
                    _CKP 00A4                      u440 01D0                      u441 01CF  
                    u450 01DB                      u451 01DA                      u700 0155  
                    u460 01E6                      u701 0154                      u461 01E5  
                    u470 01F0                      u471 01EF                      u720 0170  
                    u800 0067                      u721 016F                      u801 0066  
                    u810 006E                      u715 0157                      u811 006D  
                    u740 018E                      u820 0085                      u741 018D  
                    u725 016C                      u750 0030                      u830 01A3  
                    u735 0180                      u751 002F                      u831 01A2  
                    u680 0141                      u760 003A                      u840 01AF  
                    u681 0140                      u825 0080                      u761 0039  
                    u841 01AE                      u770 0043                      u850 01BD  
                    u771 0042                      u851 01BC                      u780 0051  
                    u781 0050                      u790 0061                      u695 0146  
                    u791 0060                      u867 0022                      _isr 00C1  
                   l1001 01CA                     l1011 01E6                     l1003 01D0  
                   l1013 01EB                     l1005 01D5                     l1015 01F0  
                   l1007 01DB                     l1009 01E0                     l1201 020F  
                   l1131 0151                     l1211 01AF                     l1203 0197  
                   l1141 017F                     l1133 0155                     l1125 012F  
                   l1213 01B2                     l1205 019C                     l1143 0188  
                   l1135 015E                     l1127 0141                     l1151 001C  
                   l1215 01B7                     l1207 01A3                     l1137 0170  
                   l1129 0144                     l1145 018E                     l1161 003D  
                   l1153 0027                     l1217 01BD                     l1209 01A9  
                   l1139 017E                     l1171 0061                     l1163 0043  
                   l1155 0030                     l1219 01C0                     l1181 00A4  
                   l1173 0068                     l1157 0034                     l1165 004B  
                   l1149 0019                     l1191 00B6                     l1183 00AD  
                   l1175 006E                     l1167 0051                     l1159 003A  
                   l1185 00B3                     l1177 0071                     l1169 005B  
                   l1193 00B9                     l1195 00BD                     l1187 00B4  
                   l1179 0075                     l1189 00B5                     l1197 01F9  
                   l1199 0209                     ?_isr 0070                     i1l61 011F  
                   i1l55 0104                     i1l56 00F2                     i1l64 0128  
                   i1l59 0125                     _main 0197                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_main 0070  
                  _ANSEL 0188          __end_of___lldiv 0197                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  u60_20 00E1                    u60_21 00E0                    u61_20 00F8  
                  u61_21 00F7                    u62_20 0108                    u62_21 0107  
                  u63_20 010C                    u63_21 010B                    u64_20 0125  
                  u56_20 00C7                    u64_21 0124                    u56_21 00C6  
                  u57_20 00CC                    u57_21 00CB                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  u58_20 00D0                    _SSPIF 0063                    u58_21 00CF  
                  u59_20 00DD                    u59_21 00DC                    u87_27 00E3  
                  u88_27 0100                    u89_27 011C             InitMSSP@Dato 0028  
           InitMSSP@Modo 0079          __end_of_initOsc 01F9                    _setup 01F9  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 01C9         __end_of_InitMSSP 00C1  
                 ??_main 0030                   ?_setup 0070                   _ANSELH 0189  
                 i1l1101 010C                   i1l1103 0112                   i1l1105 0119  
                 i1l1071 00C1                   i1l1081 00D5                   i1l1073 00C7  
                 i1l1091 00EC                   i1l1083 00D6                   i1l1075 00CC  
                 i1l1093 00EE                   i1l1085 00D7                   i1l1077 00D0  
                 i1l1095 00F1                   i1l1087 00DD                   i1l1079 00D4  
                 i1l1097 00F8                   i1l1089 00E1                   i1l1099 0108  
                 _SSPADD 0093                   _SSPBUF 0013                   _SSPCON 0014  
              ??___lldiv 0073                ??_initOsc 0073                   saved_w 007E  
__end_of__initialization 0014           __pcstackCOMMON 0070            __end_of_setup 0220  
                ??_setup 007A               __pbssBANK0 0031                ?_InitMSSP 0028  
             __pmaintext 0197               __pintentry 0004             initOsc@Valor 0073  
                _SSPCON2 0091                  _SSPSTAT 0094               ??_InitMSSP 002C  
                ___lldiv 012F                  __ptext1 01F9                  __ptext2 01C9  
                __ptext3 0018                  __ptext4 012F                  __ptext5 00C1  
                _initOsc 01C9             __size_of_isr 006E     end_of_initialization 0014  
        ___lldiv@divisor 0020          ___lldiv@counter 0078                _PORTCbits 0007  
              _PORTDbits 0008                _TRISAbits 0085                _TRISCbits 0087  
          _Dato_recibido 007A      start_initialization 000F              __end_of_isr 012F  
      __size_of_InitMSSP 00A9              __pbssCOMMON 007A                ___latbits 0002  
          __pcstackBANK0 0020                 ?___lldiv 0020                 ?_initOsc 0070  
         __size_of_setup 0027        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C                 _InitMSSP 0018         __size_of___lldiv 0068  
       __size_of_initOsc 0030            __size_of_main 0032                 _semaforo 0032  
             _INTCONbits 000B              _sema_estado 0031                 intlevel1 0000  
       ___lldiv@dividend 0024               _OSCCONbits 008F         ___lldiv@quotient 0074  
            _SSPCON2bits 0091               _SSPCONbits 0014  
