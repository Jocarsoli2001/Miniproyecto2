

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Mar 07 12:35:20 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 12/02/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F887 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0088                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  008F                     	;# 
   120  0090                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0097                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  0105                     	;# 
   139  0107                     	;# 
   140  0108                     	;# 
   141  0109                     	;# 
   142  010C                     	;# 
   143  010C                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  0185                     	;# 
   148  0187                     	;# 
   149  0188                     	;# 
   150  0189                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001B                     	;# 
   184  001C                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  0081                     	;# 
   189  0085                     	;# 
   190  0086                     	;# 
   191  0087                     	;# 
   192  0088                     	;# 
   193  0089                     	;# 
   194  008C                     	;# 
   195  008D                     	;# 
   196  008E                     	;# 
   197  008F                     	;# 
   198  0090                     	;# 
   199  0091                     	;# 
   200  0092                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0094                     	;# 
   205  0095                     	;# 
   206  0096                     	;# 
   207  0097                     	;# 
   208  0098                     	;# 
   209  0099                     	;# 
   210  009A                     	;# 
   211  009B                     	;# 
   212  009C                     	;# 
   213  009D                     	;# 
   214  009E                     	;# 
   215  009F                     	;# 
   216  0105                     	;# 
   217  0107                     	;# 
   218  0108                     	;# 
   219  0109                     	;# 
   220  010C                     	;# 
   221  010C                     	;# 
   222  010D                     	;# 
   223  010E                     	;# 
   224  010F                     	;# 
   225  0185                     	;# 
   226  0187                     	;# 
   227  0188                     	;# 
   228  0189                     	;# 
   229  018C                     	;# 
   230  018D                     	;# 
   231  0000                     	;# 
   232  0001                     	;# 
   233  0002                     	;# 
   234  0003                     	;# 
   235  0004                     	;# 
   236  0005                     	;# 
   237  0006                     	;# 
   238  0007                     	;# 
   239  0008                     	;# 
   240  0009                     	;# 
   241  000A                     	;# 
   242  000B                     	;# 
   243  000C                     	;# 
   244  000D                     	;# 
   245  000E                     	;# 
   246  000E                     	;# 
   247  000F                     	;# 
   248  0010                     	;# 
   249  0011                     	;# 
   250  0012                     	;# 
   251  0013                     	;# 
   252  0014                     	;# 
   253  0015                     	;# 
   254  0015                     	;# 
   255  0016                     	;# 
   256  0017                     	;# 
   257  0018                     	;# 
   258  0019                     	;# 
   259  001A                     	;# 
   260  001B                     	;# 
   261  001B                     	;# 
   262  001C                     	;# 
   263  001D                     	;# 
   264  001E                     	;# 
   265  001F                     	;# 
   266  0081                     	;# 
   267  0085                     	;# 
   268  0086                     	;# 
   269  0087                     	;# 
   270  0088                     	;# 
   271  0089                     	;# 
   272  008C                     	;# 
   273  008D                     	;# 
   274  008E                     	;# 
   275  008F                     	;# 
   276  0090                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0094                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  009F                     	;# 
   294  0105                     	;# 
   295  0107                     	;# 
   296  0108                     	;# 
   297  0109                     	;# 
   298  010C                     	;# 
   299  010C                     	;# 
   300  010D                     	;# 
   301  010E                     	;# 
   302  010F                     	;# 
   303  0185                     	;# 
   304  0187                     	;# 
   305  0188                     	;# 
   306  0189                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309  0000                     	;# 
   310  0001                     	;# 
   311  0002                     	;# 
   312  0003                     	;# 
   313  0004                     	;# 
   314  0005                     	;# 
   315  0006                     	;# 
   316  0007                     	;# 
   317  0008                     	;# 
   318  0009                     	;# 
   319  000A                     	;# 
   320  000B                     	;# 
   321  000C                     	;# 
   322  000D                     	;# 
   323  000E                     	;# 
   324  000E                     	;# 
   325  000F                     	;# 
   326  0010                     	;# 
   327  0011                     	;# 
   328  0012                     	;# 
   329  0013                     	;# 
   330  0014                     	;# 
   331  0015                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0017                     	;# 
   335  0018                     	;# 
   336  0019                     	;# 
   337  001A                     	;# 
   338  001B                     	;# 
   339  001B                     	;# 
   340  001C                     	;# 
   341  001D                     	;# 
   342  001E                     	;# 
   343  001F                     	;# 
   344  0081                     	;# 
   345  0085                     	;# 
   346  0086                     	;# 
   347  0087                     	;# 
   348  0088                     	;# 
   349  0089                     	;# 
   350  008C                     	;# 
   351  008D                     	;# 
   352  008E                     	;# 
   353  008F                     	;# 
   354  0090                     	;# 
   355  0091                     	;# 
   356  0092                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0093                     	;# 
   360  0094                     	;# 
   361  0095                     	;# 
   362  0096                     	;# 
   363  0097                     	;# 
   364  0098                     	;# 
   365  0099                     	;# 
   366  009A                     	;# 
   367  009B                     	;# 
   368  009C                     	;# 
   369  009D                     	;# 
   370  009E                     	;# 
   371  009F                     	;# 
   372  0105                     	;# 
   373  0107                     	;# 
   374  0108                     	;# 
   375  0109                     	;# 
   376  010C                     	;# 
   377  010C                     	;# 
   378  010D                     	;# 
   379  010E                     	;# 
   380  010F                     	;# 
   381  0185                     	;# 
   382  0187                     	;# 
   383  0188                     	;# 
   384  0189                     	;# 
   385  018C                     	;# 
   386  018D                     	;# 
   387  0000                     	;# 
   388  0001                     	;# 
   389  0002                     	;# 
   390  0003                     	;# 
   391  0004                     	;# 
   392  0005                     	;# 
   393  0006                     	;# 
   394  0007                     	;# 
   395  0008                     	;# 
   396  0009                     	;# 
   397  000A                     	;# 
   398  000B                     	;# 
   399  000C                     	;# 
   400  000D                     	;# 
   401  000E                     	;# 
   402  000E                     	;# 
   403  000F                     	;# 
   404  0010                     	;# 
   405  0011                     	;# 
   406  0012                     	;# 
   407  0013                     	;# 
   408  0014                     	;# 
   409  0015                     	;# 
   410  0015                     	;# 
   411  0016                     	;# 
   412  0017                     	;# 
   413  0018                     	;# 
   414  0019                     	;# 
   415  001A                     	;# 
   416  001B                     	;# 
   417  001B                     	;# 
   418  001C                     	;# 
   419  001D                     	;# 
   420  001E                     	;# 
   421  001F                     	;# 
   422  0081                     	;# 
   423  0085                     	;# 
   424  0086                     	;# 
   425  0087                     	;# 
   426  0088                     	;# 
   427  0089                     	;# 
   428  008C                     	;# 
   429  008D                     	;# 
   430  008E                     	;# 
   431  008F                     	;# 
   432  0090                     	;# 
   433  0091                     	;# 
   434  0092                     	;# 
   435  0093                     	;# 
   436  0093                     	;# 
   437  0093                     	;# 
   438  0094                     	;# 
   439  0095                     	;# 
   440  0096                     	;# 
   441  0097                     	;# 
   442  0098                     	;# 
   443  0099                     	;# 
   444  009A                     	;# 
   445  009B                     	;# 
   446  009C                     	;# 
   447  009D                     	;# 
   448  009E                     	;# 
   449  009F                     	;# 
   450  0105                     	;# 
   451  0107                     	;# 
   452  0108                     	;# 
   453  0109                     	;# 
   454  010C                     	;# 
   455  010C                     	;# 
   456  010D                     	;# 
   457  010E                     	;# 
   458  010F                     	;# 
   459  0185                     	;# 
   460  0187                     	;# 
   461  0188                     	;# 
   462  0189                     	;# 
   463  018C                     	;# 
   464  018D                     	;# 
   465  0000                     	;# 
   466  0001                     	;# 
   467  0002                     	;# 
   468  0003                     	;# 
   469  0004                     	;# 
   470  0005                     	;# 
   471  0006                     	;# 
   472  0007                     	;# 
   473  0008                     	;# 
   474  0009                     	;# 
   475  000A                     	;# 
   476  000B                     	;# 
   477  000C                     	;# 
   478  000D                     	;# 
   479  000E                     	;# 
   480  000E                     	;# 
   481  000F                     	;# 
   482  0010                     	;# 
   483  0011                     	;# 
   484  0012                     	;# 
   485  0013                     	;# 
   486  0014                     	;# 
   487  0015                     	;# 
   488  0015                     	;# 
   489  0016                     	;# 
   490  0017                     	;# 
   491  0018                     	;# 
   492  0019                     	;# 
   493  001A                     	;# 
   494  001B                     	;# 
   495  001B                     	;# 
   496  001C                     	;# 
   497  001D                     	;# 
   498  001E                     	;# 
   499  001F                     	;# 
   500  0081                     	;# 
   501  0085                     	;# 
   502  0086                     	;# 
   503  0087                     	;# 
   504  0088                     	;# 
   505  0089                     	;# 
   506  008C                     	;# 
   507  008D                     	;# 
   508  008E                     	;# 
   509  008F                     	;# 
   510  0090                     	;# 
   511  0091                     	;# 
   512  0092                     	;# 
   513  0093                     	;# 
   514  0093                     	;# 
   515  0093                     	;# 
   516  0094                     	;# 
   517  0095                     	;# 
   518  0096                     	;# 
   519  0097                     	;# 
   520  0098                     	;# 
   521  0099                     	;# 
   522  009A                     	;# 
   523  009B                     	;# 
   524  009C                     	;# 
   525  009D                     	;# 
   526  009E                     	;# 
   527  009F                     	;# 
   528  0105                     	;# 
   529  0107                     	;# 
   530  0108                     	;# 
   531  0109                     	;# 
   532  010C                     	;# 
   533  010C                     	;# 
   534  010D                     	;# 
   535  010E                     	;# 
   536  010F                     	;# 
   537  0185                     	;# 
   538  0187                     	;# 
   539  0188                     	;# 
   540  0189                     	;# 
   541  018C                     	;# 
   542  018D                     	;# 
   543  0000                     	;# 
   544  0001                     	;# 
   545  0002                     	;# 
   546  0003                     	;# 
   547  0004                     	;# 
   548  0005                     	;# 
   549  0006                     	;# 
   550  0007                     	;# 
   551  0008                     	;# 
   552  0009                     	;# 
   553  000A                     	;# 
   554  000B                     	;# 
   555  000C                     	;# 
   556  000D                     	;# 
   557  000E                     	;# 
   558  000E                     	;# 
   559  000F                     	;# 
   560  0010                     	;# 
   561  0011                     	;# 
   562  0012                     	;# 
   563  0013                     	;# 
   564  0014                     	;# 
   565  0015                     	;# 
   566  0015                     	;# 
   567  0016                     	;# 
   568  0017                     	;# 
   569  0018                     	;# 
   570  0019                     	;# 
   571  001A                     	;# 
   572  001B                     	;# 
   573  001B                     	;# 
   574  001C                     	;# 
   575  001D                     	;# 
   576  001E                     	;# 
   577  001F                     	;# 
   578  0081                     	;# 
   579  0085                     	;# 
   580  0086                     	;# 
   581  0087                     	;# 
   582  0088                     	;# 
   583  0089                     	;# 
   584  008C                     	;# 
   585  008D                     	;# 
   586  008E                     	;# 
   587  008F                     	;# 
   588  0090                     	;# 
   589  0091                     	;# 
   590  0092                     	;# 
   591  0093                     	;# 
   592  0093                     	;# 
   593  0093                     	;# 
   594  0094                     	;# 
   595  0095                     	;# 
   596  0096                     	;# 
   597  0097                     	;# 
   598  0098                     	;# 
   599  0099                     	;# 
   600  009A                     	;# 
   601  009B                     	;# 
   602  009C                     	;# 
   603  009D                     	;# 
   604  009E                     	;# 
   605  009F                     	;# 
   606  0105                     	;# 
   607  0107                     	;# 
   608  0108                     	;# 
   609  0109                     	;# 
   610  010C                     	;# 
   611  010C                     	;# 
   612  010D                     	;# 
   613  010E                     	;# 
   614  010F                     	;# 
   615  0185                     	;# 
   616  0187                     	;# 
   617  0188                     	;# 
   618  0189                     	;# 
   619  018C                     	;# 
   620  018D                     	;# 
   621  0000                     	;# 
   622  0001                     	;# 
   623  0002                     	;# 
   624  0003                     	;# 
   625  0004                     	;# 
   626  0005                     	;# 
   627  0006                     	;# 
   628  0007                     	;# 
   629  0008                     	;# 
   630  0009                     	;# 
   631  000A                     	;# 
   632  000B                     	;# 
   633  000C                     	;# 
   634  000D                     	;# 
   635  000E                     	;# 
   636  000E                     	;# 
   637  000F                     	;# 
   638  0010                     	;# 
   639  0011                     	;# 
   640  0012                     	;# 
   641  0013                     	;# 
   642  0014                     	;# 
   643  0015                     	;# 
   644  0015                     	;# 
   645  0016                     	;# 
   646  0017                     	;# 
   647  0018                     	;# 
   648  0019                     	;# 
   649  001A                     	;# 
   650  001B                     	;# 
   651  001B                     	;# 
   652  001C                     	;# 
   653  001D                     	;# 
   654  001E                     	;# 
   655  001F                     	;# 
   656  0081                     	;# 
   657  0085                     	;# 
   658  0086                     	;# 
   659  0087                     	;# 
   660  0088                     	;# 
   661  0089                     	;# 
   662  008C                     	;# 
   663  008D                     	;# 
   664  008E                     	;# 
   665  008F                     	;# 
   666  0090                     	;# 
   667  0091                     	;# 
   668  0092                     	;# 
   669  0093                     	;# 
   670  0093                     	;# 
   671  0093                     	;# 
   672  0094                     	;# 
   673  0095                     	;# 
   674  0096                     	;# 
   675  0097                     	;# 
   676  0098                     	;# 
   677  0099                     	;# 
   678  009A                     	;# 
   679  009B                     	;# 
   680  009C                     	;# 
   681  009D                     	;# 
   682  009E                     	;# 
   683  009F                     	;# 
   684  0105                     	;# 
   685  0107                     	;# 
   686  0108                     	;# 
   687  0109                     	;# 
   688  010C                     	;# 
   689  010C                     	;# 
   690  010D                     	;# 
   691  010E                     	;# 
   692  010F                     	;# 
   693  0185                     	;# 
   694  0187                     	;# 
   695  0188                     	;# 
   696  0189                     	;# 
   697  018C                     	;# 
   698  018D                     	;# 
   699                           
   700                           	psect	idataBANK0
   701  0FE1                     __pidataBANK0:
   702                           
   703                           ;initializer for _bandera
   704  0FE1  3401               	retlw	1
   705  0FE2  3400               	retlw	0
   706  0019                     _TXREG	set	25
   707  0018                     _RCSTAbits	set	24
   708  0006                     _PORTBbits	set	6
   709  0008                     _PORTDbits	set	8
   710  0013                     _SSPBUF	set	19
   711  0014                     _SSPCON	set	20
   712  000B                     _INTCONbits	set	11
   713  0014                     _SSPCONbits	set	20
   714  0008                     _PORTD	set	8
   715  0006                     _PORTB	set	6
   716  0005                     _PORTA	set	5
   717  001A                     _RCREG	set	26
   718  000C                     _PIR1bits	set	12
   719  005E                     _PEIE	set	94
   720  005F                     _GIE	set	95
   721  0064                     _TXIF	set	100
   722  0063                     _SSPIF	set	99
   723  00A4                     _CKP	set	164
   724  009A                     _SPBRGH	set	154
   725  0099                     _SPBRG	set	153
   726  0098                     _TXSTAbits	set	152
   727  008F                     _OSCCONbits	set	143
   728  0091                     _SSPCON2bits	set	145
   729  008C                     _PIE1bits	set	140
   730  0093                     _SSPADD	set	147
   731  0094                     _SSPSTAT	set	148
   732  0091                     _SSPCON2	set	145
   733  0094                     _SSPSTATbits	set	148
   734  0085                     _TRISAbits	set	133
   735  0087                     _TRISCbits	set	135
   736  0088                     _TRISD	set	136
   737  0086                     _TRISB	set	134
   738  0085                     _TRISA	set	133
   739  0463                     _SSPIE	set	1123
   740  043C                     _TRISC4	set	1084
   741  043B                     _TRISC3	set	1083
   742  04A1                     _UA	set	1185
   743  0187                     _BAUDCTLbits	set	391
   744  0189                     _ANSELH	set	393
   745  0188                     _ANSEL	set	392
   746                           
   747                           	psect	strings
   748  0700                     __pstrings:
   749  0700                     stringtab:
   750  0700                     __stringtab:
   751  0700                     stringcode:	
   752                           ;	String table - string pointers are 1 byte each
   753                           
   754  0700                     stringdir:
   755  0700  3007               	movlw	high stringdir
   756  0701  008A               	movwf	10
   757  0702  0804               	movf	4,w
   758  0703  0A84               	incf	4,f
   759  0704  0782               	addwf	2,f
   760  0705                     __stringbase:
   761  0705  3400               	retlw	0
   762  0706                     __end_of__stringtab:
   763  0706                     STR_1:
   764  0706  3458               	retlw	88	;'X'
   765  0707  343A               	retlw	58	;':'
   766  0708  3420               	retlw	32	;' '
   767  0709  3420               	retlw	32	;' '
   768  070A  3420               	retlw	32	;' '
   769  070B  3420               	retlw	32	;' '
   770  070C  3459               	retlw	89	;'Y'
   771  070D  343A               	retlw	58	;':'
   772  070E  3420               	retlw	32	;' '
   773  070F  3420               	retlw	32	;' '
   774  0710  3420               	retlw	32	;' '
   775  0711  3420               	retlw	32	;' '
   776  0712  3420               	retlw	32	;' '
   777  0713  3453               	retlw	83	;'S'
   778  0714  343A               	retlw	58	;':'
   779  0715  3400               	retlw	0
   780  0716                     STR_2:
   781  0716  344D               	retlw	77	;'M'
   782  0717  3469               	retlw	105	;'i'
   783  0718  346E               	retlw	110	;'n'
   784  0719  3469               	retlw	105	;'i'
   785  071A  3470               	retlw	112	;'p'
   786  071B  3472               	retlw	114	;'r'
   787  071C  346F               	retlw	111	;'o'
   788  071D  3479               	retlw	121	;'y'
   789  071E  3465               	retlw	101	;'e'
   790  071F  3463               	retlw	99	;'c'
   791  0720  3474               	retlw	116	;'t'
   792  0721  346F               	retlw	111	;'o'
   793  0722  3420               	retlw	32	;' '
   794  0723  3432               	retlw	50	;'2'
   795  0724  3400               	retlw	0
   796  0725                     STR_3:
   797  0725  344A               	retlw	74	;'J'
   798  0726  346F               	retlw	111	;'o'
   799  0727  3473               	retlw	115	;'s'
   800  0728  3465               	retlw	101	;'e'
   801  0729  3420               	retlw	32	;' '
   802  072A  3453               	retlw	83	;'S'
   803  072B  3461               	retlw	97	;'a'
   804  072C  346E               	retlw	110	;'n'
   805  072D  3474               	retlw	116	;'t'
   806  072E  3469               	retlw	105	;'i'
   807  072F  347A               	retlw	122	;'z'
   808  0730  346F               	retlw	111	;'o'
   809  0731  3400               	retlw	0
   810                           
   811                           	psect	cinit
   812  000F                     start_initialization:	
   813                           ; #config settings
   814                           
   815  000F                     __initialization:
   816                           
   817                           ; Initialize objects allocated to BANK0
   818  000F  120A  158A  27E1  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   819  0014  00D1               	movwf	__pdataBANK0& (0+127)
   820  0015  120A  158A  27E2  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   821  001A  00D2               	movwf	(__pdataBANK0+1)& (0+127)
   822                           
   823                           ; Clear objects allocated to BANK0
   824  001B  1383               	bcf	3,7	;select IRP bank0
   825  001C  3020               	movlw	low __pbssBANK0
   826  001D  0084               	movwf	4
   827  001E  3039               	movlw	low (__pbssBANK0+25)
   828  001F  120A  158A  27E3  120A  118A  	fcall	clear_ram0
   829                           
   830                           ; Clear objects allocated to COMMON
   831  0024  01F8               	clrf	__pbssCOMMON& (0+127)
   832  0025  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   833  0026  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   834  0027                     end_of_initialization:	
   835                           ;End of C runtime variable initialization code
   836                           
   837  0027                     __end_of__initialization:
   838  0027  0183               	clrf	3
   839  0028  120A  118A  282B   	ljmp	_main	;jump to C main() function
   840                           
   841                           	psect	bssCOMMON
   842  0078                     __pbssCOMMON:
   843  0078                     _Gx1:
   844  0078                     	ds	1
   845  0079                     _Giro_digy:
   846  0079                     	ds	1
   847  007A                     _Giro_digx:
   848  007A                     	ds	1
   849                           
   850                           	psect	bssBANK0
   851  0020                     __pbssBANK0:
   852  0020                     _estado_sem:
   853  0020                     	ds	1
   854  0021                     _dato:
   855  0021                     	ds	1
   856  0022                     _cen_z:
   857  0022                     	ds	1
   858  0023                     _dec_z:
   859  0023                     	ds	1
   860  0024                     _uni_z:
   861  0024                     	ds	1
   862  0025                     _Giro_digz:
   863  0025                     	ds	1
   864  0026                     _cen_y:
   865  0026                     	ds	1
   866  0027                     _dec_y:
   867  0027                     	ds	1
   868  0028                     _uni_y:
   869  0028                     	ds	1
   870  0029                     _cen_x:
   871  0029                     	ds	1
   872  002A                     _dec_x:
   873  002A                     	ds	1
   874  002B                     _uni_x:
   875  002B                     	ds	1
   876  002C                     _Gz2:
   877  002C                     	ds	1
   878  002D                     _Gz1:
   879  002D                     	ds	1
   880  002E                     _Gy2:
   881  002E                     	ds	1
   882  002F                     _Gy1:
   883  002F                     	ds	1
   884  0030                     _Gx2:
   885  0030                     	ds	1
   886  0031                     _T2:
   887  0031                     	ds	1
   888  0032                     _T1:
   889  0032                     	ds	1
   890  0033                     _Az2:
   891  0033                     	ds	1
   892  0034                     _Az1:
   893  0034                     	ds	1
   894  0035                     _Ay2:
   895  0035                     	ds	1
   896  0036                     _Ay1:
   897  0036                     	ds	1
   898  0037                     _Ax2:
   899  0037                     	ds	1
   900  0038                     _Ax1:
   901  0038                     	ds	1
   902                           
   903                           	psect	dataBANK0
   904  0051                     __pdataBANK0:
   905  0051                     _bandera:
   906  0051                     	ds	2
   907                           
   908                           	psect	clrtext
   909  0FE3                     clear_ram0:	
   910                           ;	Called with FSR containing the base address, and
   911                           ;	W with the last address+1
   912                           
   913  0FE3  0064               	clrwdt	;clear the watchdog before getting into this loop
   914  0FE4                     clrloop0:
   915  0FE4  0180               	clrf	0	;clear RAM location pointed to by FSR
   916  0FE5  0A84               	incf	4,f	;increment pointer
   917  0FE6  0604               	xorwf	4,w	;XOR with final address
   918  0FE7  1903               	btfsc	3,2	;have we reached the end yet?
   919  0FE8  3400               	retlw	0	;all done for this memory range, return
   920  0FE9  0604               	xorwf	4,w	;XOR again to restore value
   921  0FEA  2FE4               	goto	clrloop0	;do the next byte
   922                           
   923                           	psect	cstackCOMMON
   924  0070                     __pcstackCOMMON:
   925  0070                     ?_setup:
   926  0070                     ?_I2C_Master_Start:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0070                     ?_I2CMasterWrite:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0070                     ?_I2CMasterRead:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  0070                     ?_I2CMasterStop:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  0070                     ?_tabla_numASCII:	
   939                           ; 1 bytes @ 0x0
   940                           
   941  0070                     ?_Escribir_stringLCD:	
   942                           ; 1 bytes @ 0x0
   943                           
   944  0070                     ?_Escribir_caracterLCD:	
   945                           ; 1 bytes @ 0x0
   946                           
   947  0070                     ?_initOsc:	
   948                           ; 1 bytes @ 0x0
   949                           
   950  0070                     ?_InitMPU6050:	
   951                           ; 1 bytes @ 0x0
   952                           
   953  0070                     ?_Iniciar_LCD:	
   954                           ; 1 bytes @ 0x0
   955                           
   956  0070                     ?_Limpiar_pantallaLCD:	
   957                           ; 1 bytes @ 0x0
   958                           
   959  0070                     ?_isr:	
   960                           ; 1 bytes @ 0x0
   961                           
   962  0070                     ??_isr:	
   963                           ; 1 bytes @ 0x0
   964                           
   965  0070                     ?_main:	
   966                           ; 1 bytes @ 0x0
   967                           
   968  0070                     ?_I2CMasterCheck:	
   969                           ; 1 bytes @ 0x0
   970                           
   971  0070                     ?_prender_ELCD:	
   972                           ; 1 bytes @ 0x0
   973                           
   974  0070                     ?_Escribir_comandoLCD:	
   975                           ; 1 bytes @ 0x0
   976                           
   977                           
   978                           ; 1 bytes @ 0x0
   979  0070                     	ds	3
   980  0073                     ??_I2C_Master_Start:
   981  0073                     ??_I2CMasterWrite:	
   982                           ; 1 bytes @ 0x3
   983                           
   984  0073                     ??_I2CMasterRead:	
   985                           ; 1 bytes @ 0x3
   986                           
   987  0073                     ??_I2CMasterStop:	
   988                           ; 1 bytes @ 0x3
   989                           
   990  0073                     ??_tabla_numASCII:	
   991                           ; 1 bytes @ 0x3
   992                           
   993  0073                     ??_initOsc:	
   994                           ; 1 bytes @ 0x3
   995                           
   996  0073                     ?_Config_USART:	
   997                           ; 1 bytes @ 0x3
   998                           
   999  0073                     ??_I2CMasterCheck:	
  1000                           ; 1 bytes @ 0x3
  1001                           
  1002  0073                     ??_prender_ELCD:	
  1003                           ; 1 bytes @ 0x3
  1004                           
  1005  0073                     ??___lldiv:	
  1006                           ; 1 bytes @ 0x3
  1007                           
  1008  0073                     ?___awdiv:	
  1009                           ; 1 bytes @ 0x3
  1010                           
  1011  0073                     ?___awmod:	
  1012                           ; 2 bytes @ 0x3
  1013                           
  1014  0073                     I2C_Master_Start@Modo_Inicio:	
  1015                           ; 2 bytes @ 0x3
  1016                           
  1017  0073                     I2CMasterWrite@Datos:	
  1018                           ; 1 bytes @ 0x3
  1019                           
  1020  0073                     initOsc@Valor:	
  1021                           ; 1 bytes @ 0x3
  1022                           
  1023  0073                     Config_USART@baud_rate:	
  1024                           ; 1 bytes @ 0x3
  1025                           
  1026  0073                     ___awdiv@divisor:	
  1027                           ; 2 bytes @ 0x3
  1028                           
  1029  0073                     ___awmod@divisor:	
  1030                           ; 2 bytes @ 0x3
  1031                           
  1032                           
  1033                           ; 2 bytes @ 0x3
  1034  0073                     	ds	1
  1035  0074                     ??_InitMSSP:
  1036  0074                     ??_InitMPU6050:	
  1037                           ; 1 bytes @ 0x4
  1038                           
  1039  0074                     ??_Escribir_comandoLCD:	
  1040                           ; 1 bytes @ 0x4
  1041                           
  1042  0074                     I2CMasterRead@ACK:	
  1043                           ; 1 bytes @ 0x4
  1044                           
  1045  0074                     Escribir_comandoLCD@Comando:	
  1046                           ; 1 bytes @ 0x4
  1047                           
  1048                           
  1049                           ; 1 bytes @ 0x4
  1050  0074                     	ds	1
  1051  0075                     ?_set_cursor:
  1052  0075                     ??_Escribir_stringLCD:	
  1053                           ; 1 bytes @ 0x5
  1054                           
  1055  0075                     ??_Escribir_caracterLCD:	
  1056                           ; 1 bytes @ 0x5
  1057                           
  1058  0075                     ??_Iniciar_LCD:	
  1059                           ; 1 bytes @ 0x5
  1060                           
  1061  0075                     ??_Limpiar_pantallaLCD:	
  1062                           ; 1 bytes @ 0x5
  1063                           
  1064  0075                     tabla_numASCII@a:	
  1065                           ; 1 bytes @ 0x5
  1066                           
  1067  0075                     I2CMasterRead@Datos:	
  1068                           ; 1 bytes @ 0x5
  1069                           
  1070  0075                     Escribir_caracterLCD@a:	
  1071                           ; 1 bytes @ 0x5
  1072                           
  1073  0075                     set_cursor@posicion:	
  1074                           ; 1 bytes @ 0x5
  1075                           
  1076  0075                     Config_USART@Freq:	
  1077                           ; 1 bytes @ 0x5
  1078                           
  1079  0075                     ___awdiv@dividend:	
  1080                           ; 2 bytes @ 0x5
  1081                           
  1082  0075                     ___awmod@dividend:	
  1083                           ; 2 bytes @ 0x5
  1084                           
  1085                           
  1086                           ; 2 bytes @ 0x5
  1087  0075                     	ds	1
  1088  0076                     ??_set_cursor:
  1089  0076                     Escribir_stringLCD@i:	
  1090                           ; 1 bytes @ 0x6
  1091                           
  1092                           
  1093                           ; 1 bytes @ 0x6
  1094  0076                     	ds	1
  1095  0077                     ??_Config_USART:
  1096  0077                     ??___awdiv:	
  1097                           ; 1 bytes @ 0x7
  1098                           
  1099  0077                     ??___awmod:	
  1100                           ; 1 bytes @ 0x7
  1101                           
  1102  0077                     Escribir_stringLCD@d:	
  1103                           ; 1 bytes @ 0x7
  1104                           
  1105                           
  1106                           ; 1 bytes @ 0x7
  1107  0077                     	ds	1
  1108                           
  1109                           	psect	cstackBANK0
  1110  0039                     __pcstackBANK0:
  1111  0039                     ?___lldiv:
  1112  0039                     set_cursor@linea:	
  1113                           ; 4 bytes @ 0x0
  1114                           
  1115  0039                     ___awdiv@counter:	
  1116                           ; 1 bytes @ 0x0
  1117                           
  1118  0039                     ___awmod@counter:	
  1119                           ; 1 bytes @ 0x0
  1120                           
  1121  0039                     ___lldiv@divisor:	
  1122                           ; 1 bytes @ 0x0
  1123                           
  1124                           
  1125                           ; 4 bytes @ 0x0
  1126  0039                     	ds	1
  1127  003A                     ___awdiv@sign:
  1128  003A                     ___awmod@sign:	
  1129                           ; 1 bytes @ 0x1
  1130                           
  1131                           
  1132                           ; 1 bytes @ 0x1
  1133  003A                     	ds	1
  1134  003B                     ___awdiv@quotient:
  1135                           
  1136                           ; 2 bytes @ 0x2
  1137  003B                     	ds	2
  1138  003D                     ?_divisor_dec:
  1139  003D                     divisor_dec@b:	
  1140                           ; 1 bytes @ 0x4
  1141                           
  1142  003D                     ___lldiv@dividend:	
  1143                           ; 2 bytes @ 0x4
  1144                           
  1145                           
  1146                           ; 4 bytes @ 0x4
  1147  003D                     	ds	2
  1148  003F                     divisor_dec@dig1:
  1149                           
  1150                           ; 1 bytes @ 0x6
  1151  003F                     	ds	1
  1152  0040                     ??_divisor_dec:
  1153                           
  1154                           ; 1 bytes @ 0x7
  1155  0040                     	ds	1
  1156  0041                     ___lldiv@quotient:
  1157                           
  1158                           ; 4 bytes @ 0x8
  1159  0041                     	ds	1
  1160  0042                     divisor_dec@n:
  1161                           
  1162                           ; 2 bytes @ 0x9
  1163  0042                     	ds	3
  1164  0045                     ___lldiv@counter:
  1165                           
  1166                           ; 1 bytes @ 0xC
  1167  0045                     	ds	1
  1168  0046                     ?_InitMSSP:
  1169  0046                     InitMSSP@Dato:	
  1170                           ; 1 bytes @ 0xD
  1171                           
  1172                           
  1173                           ; 4 bytes @ 0xD
  1174  0046                     	ds	4
  1175  004A                     InitMSSP@Modo:
  1176                           
  1177                           ; 1 bytes @ 0x11
  1178  004A                     	ds	1
  1179  004B                     ??_setup:
  1180                           
  1181                           ; 1 bytes @ 0x12
  1182  004B                     	ds	3
  1183  004E                     ??_main:
  1184                           
  1185                           ; 1 bytes @ 0x15
  1186  004E                     	ds	3
  1187                           
  1188                           	psect	maintext
  1189  002B                     __pmaintext:	
  1190 ;;
  1191 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1192 ;;
  1193 ;; *************** function _main *****************
  1194 ;; Defined at:
  1195 ;;		line 111 in file "Maestro I2C.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;		None
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;		None
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : B00/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1209 ;;      Params:         0       0       0       0       0
  1210 ;;      Locals:         0       0       0       0       0
  1211 ;;      Temps:          0       3       0       0       0
  1212 ;;      Totals:         0       3       0       0       0
  1213 ;;Total ram usage:        3 bytes
  1214 ;; Hardware stack levels required when called: 5
  1215 ;; This function calls:
  1216 ;;		_Escribir_caracterLCD
  1217 ;;		_Escribir_stringLCD
  1218 ;;		_I2CMasterRead
  1219 ;;		_I2CMasterStop
  1220 ;;		_I2CMasterWrite
  1221 ;;		_I2C_Master_Start
  1222 ;;		_divisor_dec
  1223 ;;		_set_cursor
  1224 ;;		_setup
  1225 ;;		_tabla_numASCII
  1226 ;; This function is called by:
  1227 ;;		Startup code after reset
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           
  1232                           ;psect for function _main
  1233  002B                     _main:
  1234  002B                     l2565:	
  1235                           ;incstack = 0
  1236                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1237                           
  1238                           
  1239                           ;Maestro I2C.c: 112:     setup();
  1240  002B  120A  118A  23CE  120A  118A  	fcall	_setup
  1241  0030                     l2567:
  1242                           
  1243                           ;Maestro I2C.c: 118:         I2C_Master_Start(Standard);
  1244  0030  3001               	movlw	1
  1245  0031  120A  118A  27CA  120A  118A  	fcall	_I2C_Master_Start
  1246  0036                     l2569:
  1247                           
  1248                           ;Maestro I2C.c: 119:         I2CMasterWrite(0b11010010 +0);
  1249  0036  30D2               	movlw	210
  1250  0037  120A  118A  27F5  120A  118A  	fcall	_I2CMasterWrite
  1251  003C                     l2571:
  1252                           
  1253                           ;Maestro I2C.c: 120:         I2CMasterWrite(0x3B);
  1254  003C  303B               	movlw	59
  1255  003D  120A  118A  27F5  120A  118A  	fcall	_I2CMasterWrite
  1256  0042                     l2573:
  1257                           
  1258                           ;Maestro I2C.c: 122:         I2C_Master_Start(Repeated);
  1259  0042  3000               	movlw	0
  1260  0043  120A  118A  27CA  120A  118A  	fcall	_I2C_Master_Start
  1261  0048                     l2575:
  1262                           
  1263                           ;Maestro I2C.c: 123:         I2CMasterWrite(0b11010010 +1);
  1264  0048  30D3               	movlw	211
  1265  0049  120A  118A  27F5  120A  118A  	fcall	_I2CMasterWrite
  1266  004E                     l2577:
  1267                           
  1268                           ;Maestro I2C.c: 135:         Ax1 = I2CMasterRead(ACK); Ax2 = I2CMasterRead(ACK);
  1269  004E  3000               	movlw	0
  1270  004F  120A  118A  2762  120A  118A  	fcall	_I2CMasterRead
  1271  0054  1283               	bcf	3,5	;RP0=0, select bank0
  1272  0055  1303               	bcf	3,6	;RP1=0, select bank0
  1273  0056  00CE               	movwf	??_main
  1274  0057  084E               	movf	??_main,w
  1275  0058  00B8               	movwf	_Ax1
  1276  0059                     l2579:
  1277  0059  3000               	movlw	0
  1278  005A  120A  118A  2762  120A  118A  	fcall	_I2CMasterRead
  1279  005F  1283               	bcf	3,5	;RP0=0, select bank0
  1280  0060  1303               	bcf	3,6	;RP1=0, select bank0
  1281  0061  00CE               	movwf	??_main
  1282  0062  084E               	movf	??_main,w
  1283  0063  00B7               	movwf	_Ax2
  1284  0064                     l2581:
  1285                           
  1286                           ;Maestro I2C.c: 136:         Ay1 = I2CMasterRead(ACK); Ay2 = I2CMasterRead(ACK);
  1287  0064  3000               	movlw	0
  1288  0065  120A  118A  2762  120A  118A  	fcall	_I2CMasterRead
  1289  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1290  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1291  006C  00CE               	movwf	??_main
  1292  006D  084E               	movf	??_main,w
  1293  006E  00B6               	movwf	_Ay1
  1294  006F                     l2583:
  1295  006F  3000               	movlw	0
  1296  0070  120A  118A  2762  120A  118A  	fcall	_I2CMasterRead
  1297  0075  1283               	bcf	3,5	;RP0=0, select bank0
  1298  0076  1303               	bcf	3,6	;RP1=0, select bank0
  1299  0077  00CE               	movwf	??_main
  1300  0078  084E               	movf	??_main,w
  1301  0079  00B5               	movwf	_Ay2
  1302  007A                     l2585:
  1303                           
  1304                           ;Maestro I2C.c: 137:         Az1 = I2CMasterRead(ACK); Az2 = I2CMasterRead(ACK);
  1305  007A  3000               	movlw	0
  1306  007B  120A  118A  2762  120A  118A  	fcall	_I2CMasterRead
  1307  0080  1283               	bcf	3,5	;RP0=0, select bank0
  1308  0081  1303               	bcf	3,6	;RP1=0, select bank0
  1309  0082  00CE               	movwf	??_main
  1310  0083  084E               	movf	??_main,w
  1311  0084  00B4               	movwf	_Az1
  1312  0085                     l2587:
  1313  0085  3000               	movlw	0
  1314  0086  120A  118A  2762  120A  118A  	fcall	_I2CMasterRead
  1315  008B  1283               	bcf	3,5	;RP0=0, select bank0
  1316  008C  1303               	bcf	3,6	;RP1=0, select bank0
  1317  008D  00CE               	movwf	??_main
  1318  008E  084E               	movf	??_main,w
  1319  008F  00B3               	movwf	_Az2
  1320  0090                     l2589:
  1321                           
  1322                           ;Maestro I2C.c: 138:         T1 = I2CMasterRead(ACK); T2 = I2CMasterRead(ACK);
  1323  0090  3000               	movlw	0
  1324  0091  120A  118A  2762  120A  118A  	fcall	_I2CMasterRead
  1325  0096  1283               	bcf	3,5	;RP0=0, select bank0
  1326  0097  1303               	bcf	3,6	;RP1=0, select bank0
  1327  0098  00CE               	movwf	??_main
  1328  0099  084E               	movf	??_main,w
  1329  009A  00B2               	movwf	_T1
  1330  009B                     l2591:
  1331  009B  3000               	movlw	0
  1332  009C  120A  118A  2762  120A  118A  	fcall	_I2CMasterRead
  1333  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1334  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1335  00A3  00CE               	movwf	??_main
  1336  00A4  084E               	movf	??_main,w
  1337  00A5  00B1               	movwf	_T2
  1338  00A6                     l2593:
  1339                           
  1340                           ;Maestro I2C.c: 139:         Gx1 = I2CMasterRead(ACK); Gx2 = I2CMasterRead(ACK);
  1341  00A6  3000               	movlw	0
  1342  00A7  120A  118A  2762  120A  118A  	fcall	_I2CMasterRead
  1343  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  1344  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  1345  00AE  00CE               	movwf	??_main
  1346  00AF  084E               	movf	??_main,w
  1347  00B0  00F8               	movwf	_Gx1
  1348  00B1                     l2595:
  1349  00B1  3000               	movlw	0
  1350  00B2  120A  118A  2762  120A  118A  	fcall	_I2CMasterRead
  1351  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1352  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1353  00B9  00CE               	movwf	??_main
  1354  00BA  084E               	movf	??_main,w
  1355  00BB  00B0               	movwf	_Gx2
  1356  00BC                     l2597:
  1357                           
  1358                           ;Maestro I2C.c: 140:         Gy1 = I2CMasterRead(ACK); Gy2 = I2CMasterRead(ACK);
  1359  00BC  3000               	movlw	0
  1360  00BD  120A  118A  2762  120A  118A  	fcall	_I2CMasterRead
  1361  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1362  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1363  00C4  00CE               	movwf	??_main
  1364  00C5  084E               	movf	??_main,w
  1365  00C6  00AF               	movwf	_Gy1
  1366  00C7                     l2599:
  1367  00C7  3000               	movlw	0
  1368  00C8  120A  118A  2762  120A  118A  	fcall	_I2CMasterRead
  1369  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1370  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1371  00CF  00CE               	movwf	??_main
  1372  00D0  084E               	movf	??_main,w
  1373  00D1  00AE               	movwf	_Gy2
  1374  00D2                     l2601:
  1375                           
  1376                           ;Maestro I2C.c: 141:         Gz1 = I2CMasterRead(ACK); Gz2 = I2CMasterRead(NACK);
  1377  00D2  3000               	movlw	0
  1378  00D3  120A  118A  2762  120A  118A  	fcall	_I2CMasterRead
  1379  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1380  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1381  00DA  00CE               	movwf	??_main
  1382  00DB  084E               	movf	??_main,w
  1383  00DC  00AD               	movwf	_Gz1
  1384  00DD                     l2603:
  1385  00DD  3001               	movlw	1
  1386  00DE  120A  118A  2762  120A  118A  	fcall	_I2CMasterRead
  1387  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1388  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1389  00E5  00CE               	movwf	??_main
  1390  00E6  084E               	movf	??_main,w
  1391  00E7  00AC               	movwf	_Gz2
  1392  00E8                     l2605:
  1393                           
  1394                           ;Maestro I2C.c: 143:         I2CMasterStop();
  1395  00E8  120A  158A  27EB  120A  118A  	fcall	_I2CMasterStop
  1396  00ED                     l2607:
  1397                           
  1398                           ;Maestro I2C.c: 144:         _delay((unsigned long)((250)*(8000000/4000.0)));
  1399  00ED  3003               	movlw	3
  1400  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1401  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1402  00F0  00D0               	movwf	??_main+2
  1403  00F1  308A               	movlw	138
  1404  00F2  00CF               	movwf	??_main+1
  1405  00F3  3055               	movlw	85
  1406  00F4  00CE               	movwf	??_main
  1407  00F5                     u1867:
  1408  00F5  0BCE               	decfsz	??_main,f
  1409  00F6  28F5               	goto	u1867
  1410  00F7  0BCF               	decfsz	??_main+1,f
  1411  00F8  28F5               	goto	u1867
  1412  00F9  0BD0               	decfsz	??_main+2,f
  1413  00FA  28F5               	goto	u1867
  1414  00FB                     l2609:
  1415                           
  1416                           ;Maestro I2C.c: 157:         I2C_Master_Start(Standard);
  1417  00FB  3001               	movlw	1
  1418  00FC  120A  118A  27CA  120A  118A  	fcall	_I2C_Master_Start
  1419  0101                     l2611:
  1420                           
  1421                           ;Maestro I2C.c: 158:         I2CMasterWrite(0x50);
  1422  0101  3050               	movlw	80
  1423  0102  120A  118A  27F5  120A  118A  	fcall	_I2CMasterWrite
  1424  0107                     l2613:
  1425                           
  1426                           ;Maestro I2C.c: 159:         I2CMasterWrite(1);
  1427  0107  3001               	movlw	1
  1428  0108  120A  118A  27F5  120A  118A  	fcall	_I2CMasterWrite
  1429  010D                     l2615:
  1430                           
  1431                           ;Maestro I2C.c: 161:         estado_sem = I2CMasterRead(NACK);
  1432  010D  3001               	movlw	1
  1433  010E  120A  118A  2762  120A  118A  	fcall	_I2CMasterRead
  1434  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1435  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1436  0115  00CE               	movwf	??_main
  1437  0116  084E               	movf	??_main,w
  1438  0117  00A0               	movwf	_estado_sem
  1439  0118                     l2617:
  1440                           
  1441                           ;Maestro I2C.c: 163:         I2CMasterStop();
  1442  0118  120A  158A  27EB  120A  118A  	fcall	_I2CMasterStop
  1443  011D                     l2619:
  1444                           
  1445                           ;Maestro I2C.c: 164:         _delay((unsigned long)((250)*(8000000/4000.0)));
  1446  011D  3003               	movlw	3
  1447  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1448  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1449  0120  00D0               	movwf	??_main+2
  1450  0121  308A               	movlw	138
  1451  0122  00CF               	movwf	??_main+1
  1452  0123  3055               	movlw	85
  1453  0124  00CE               	movwf	??_main
  1454  0125                     u1877:
  1455  0125  0BCE               	decfsz	??_main,f
  1456  0126  2925               	goto	u1877
  1457  0127  0BCF               	decfsz	??_main+1,f
  1458  0128  2925               	goto	u1877
  1459  0129  0BD0               	decfsz	??_main+2,f
  1460  012A  2925               	goto	u1877
  1461  012B                     l2621:
  1462                           
  1463                           ;Maestro I2C.c: 171:         divisor_dec(Gx1,Giro_digx);
  1464  012B  0878               	movf	_Gx1,w
  1465  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1466  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1467  012E  00CE               	movwf	??_main
  1468  012F  01CF               	clrf	??_main+1
  1469  0130  084E               	movf	??_main,w
  1470  0131  00BD               	movwf	divisor_dec@b
  1471  0132  084F               	movf	??_main+1,w
  1472  0133  00BE               	movwf	divisor_dec@b+1
  1473  0134  307A               	movlw	(low (_Giro_digx| 0))& (0+255)
  1474  0135  00D0               	movwf	??_main+2
  1475  0136  0850               	movf	??_main+2,w
  1476  0137  00BF               	movwf	divisor_dec@dig1
  1477  0138  120A  118A  25D2  120A  118A  	fcall	_divisor_dec
  1478  013D                     l2623:
  1479                           
  1480                           ;Maestro I2C.c: 174:         uni_x = tabla_numASCII(Giro_digx[0]);
  1481  013D  087A               	movf	_Giro_digx,w
  1482  013E  120A  118A  26A5  120A  118A  	fcall	_tabla_numASCII
  1483  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1484  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1485  0145  00CE               	movwf	??_main
  1486  0146  084E               	movf	??_main,w
  1487  0147  00AB               	movwf	_uni_x
  1488  0148                     l2625:
  1489                           
  1490                           ;Maestro I2C.c: 175:         dec_x = tabla_numASCII(Giro_digx[1]);
  1491  0148  087B               	movf	_Giro_digx+1,w
  1492  0149  120A  118A  26A5  120A  118A  	fcall	_tabla_numASCII
  1493  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1494  014F  1303               	bcf	3,6	;RP1=0, select bank0
  1495  0150  00CE               	movwf	??_main
  1496  0151  084E               	movf	??_main,w
  1497  0152  00AA               	movwf	_dec_x
  1498  0153                     l2627:
  1499                           
  1500                           ;Maestro I2C.c: 176:         cen_x = tabla_numASCII(Giro_digx[2]);
  1501  0153  087C               	movf	_Giro_digx+2,w
  1502  0154  120A  118A  26A5  120A  118A  	fcall	_tabla_numASCII
  1503  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1504  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1505  015B  00CE               	movwf	??_main
  1506  015C  084E               	movf	??_main,w
  1507  015D  00A9               	movwf	_cen_x
  1508  015E                     l2629:
  1509                           
  1510                           ;Maestro I2C.c: 179:         set_cursor(1,0);
  1511  015E  01F5               	clrf	set_cursor@posicion
  1512  015F  3001               	movlw	1
  1513  0160  120A  118A  261F  120A  118A  	fcall	_set_cursor
  1514  0165                     l2631:
  1515                           
  1516                           ;Maestro I2C.c: 180:         Escribir_stringLCD("X:    Y:     S:");
  1517  0165  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1518  0166  120A  118A  278A  120A  118A  	fcall	_Escribir_stringLCD
  1519  016B                     l2633:
  1520                           
  1521                           ;Maestro I2C.c: 182:         set_cursor(2,0);
  1522  016B  01F5               	clrf	set_cursor@posicion
  1523  016C  3002               	movlw	2
  1524  016D  120A  118A  261F  120A  118A  	fcall	_set_cursor
  1525  0172                     l2635:
  1526                           
  1527                           ;Maestro I2C.c: 183:         Escribir_caracterLCD(cen_x);
  1528  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1529  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1530  0174  0829               	movf	_cen_x,w
  1531  0175  120A  158A  27F4  120A  118A  	fcall	_Escribir_caracterLCD
  1532  017A                     l2637:
  1533                           
  1534                           ;Maestro I2C.c: 184:         Escribir_caracterLCD(dec_x);
  1535  017A  1283               	bcf	3,5	;RP0=0, select bank0
  1536  017B  1303               	bcf	3,6	;RP1=0, select bank0
  1537  017C  082A               	movf	_dec_x,w
  1538  017D  120A  158A  27F4  120A  118A  	fcall	_Escribir_caracterLCD
  1539  0182                     l2639:
  1540                           
  1541                           ;Maestro I2C.c: 185:         Escribir_caracterLCD(uni_x);
  1542  0182  1283               	bcf	3,5	;RP0=0, select bank0
  1543  0183  1303               	bcf	3,6	;RP1=0, select bank0
  1544  0184  082B               	movf	_uni_x,w
  1545  0185  120A  158A  27F4  120A  118A  	fcall	_Escribir_caracterLCD
  1546  018A                     l2641:
  1547                           
  1548                           ;Maestro I2C.c: 188:         divisor_dec(Gy1,Giro_digy);
  1549  018A  1283               	bcf	3,5	;RP0=0, select bank0
  1550  018B  1303               	bcf	3,6	;RP1=0, select bank0
  1551  018C  082F               	movf	_Gy1,w
  1552  018D  00CE               	movwf	??_main
  1553  018E  01CF               	clrf	??_main+1
  1554  018F  084E               	movf	??_main,w
  1555  0190  00BD               	movwf	divisor_dec@b
  1556  0191  084F               	movf	??_main+1,w
  1557  0192  00BE               	movwf	divisor_dec@b+1
  1558  0193  3079               	movlw	(low (_Giro_digy| 0))& (0+255)
  1559  0194  00D0               	movwf	??_main+2
  1560  0195  0850               	movf	??_main+2,w
  1561  0196  00BF               	movwf	divisor_dec@dig1
  1562  0197  120A  118A  25D2  120A  118A  	fcall	_divisor_dec
  1563                           
  1564                           ;Maestro I2C.c: 191:         uni_y = tabla_numASCII(Giro_digy[0]);
  1565  019C  0879               	movf	_Giro_digy,w
  1566  019D  120A  118A  26A5  120A  118A  	fcall	_tabla_numASCII
  1567  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1568  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  1569  01A4  00CE               	movwf	??_main
  1570  01A5  084E               	movf	??_main,w
  1571  01A6  00A8               	movwf	_uni_y
  1572                           
  1573                           ;Maestro I2C.c: 192:         dec_y = tabla_numASCII(Giro_digy[1]);
  1574  01A7  087A               	movf	_Giro_digy+1,w
  1575  01A8  120A  118A  26A5  120A  118A  	fcall	_tabla_numASCII
  1576  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1577  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  1578  01AF  00CE               	movwf	??_main
  1579  01B0  084E               	movf	??_main,w
  1580  01B1  00A7               	movwf	_dec_y
  1581                           
  1582                           ;Maestro I2C.c: 193:         cen_y = tabla_numASCII(Giro_digy[2]);
  1583  01B2  087B               	movf	_Giro_digy+2,w
  1584  01B3  120A  118A  26A5  120A  118A  	fcall	_tabla_numASCII
  1585  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  1586  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  1587  01BA  00CE               	movwf	??_main
  1588  01BB  084E               	movf	??_main,w
  1589  01BC  00A6               	movwf	_cen_y
  1590  01BD                     l2643:
  1591                           
  1592                           ;Maestro I2C.c: 195:         set_cursor(2,6);
  1593  01BD  3006               	movlw	6
  1594  01BE  00CE               	movwf	??_main
  1595  01BF  084E               	movf	??_main,w
  1596  01C0  00F5               	movwf	set_cursor@posicion
  1597  01C1  3002               	movlw	2
  1598  01C2  120A  118A  261F  120A  118A  	fcall	_set_cursor
  1599  01C7                     l2645:
  1600                           
  1601                           ;Maestro I2C.c: 196:         Escribir_caracterLCD(cen_y);
  1602  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  1603  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  1604  01C9  0826               	movf	_cen_y,w
  1605  01CA  120A  158A  27F4  120A  118A  	fcall	_Escribir_caracterLCD
  1606  01CF                     l2647:
  1607                           
  1608                           ;Maestro I2C.c: 197:         Escribir_caracterLCD(dec_y);
  1609  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1610  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1611  01D1  0827               	movf	_dec_y,w
  1612  01D2  120A  158A  27F4  120A  118A  	fcall	_Escribir_caracterLCD
  1613  01D7                     l2649:
  1614                           
  1615                           ;Maestro I2C.c: 198:         Escribir_caracterLCD(uni_y);
  1616  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  1617  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  1618  01D9  0828               	movf	_uni_y,w
  1619  01DA  120A  158A  27F4  120A  118A  	fcall	_Escribir_caracterLCD
  1620  01DF  2830               	goto	l2567
  1621  01E0  120A  118A  280C   	ljmp	start
  1622  01E3                     __end_of_main:
  1623                           
  1624                           	psect	text1
  1625  06A5                     __ptext1:	
  1626 ;; *************** function _tabla_numASCII *****************
  1627 ;; Defined at:
  1628 ;;		line 260 in file "Maestro I2C.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;  a               1    wreg     unsigned char 
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;  a               1    5[COMMON] unsigned char 
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  1    wreg      unsigned char 
  1635 ;; Registers used:
  1636 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1642 ;;      Params:         0       0       0       0       0
  1643 ;;      Locals:         1       0       0       0       0
  1644 ;;      Temps:          2       0       0       0       0
  1645 ;;      Totals:         3       0       0       0       0
  1646 ;;Total ram usage:        3 bytes
  1647 ;; Hardware stack levels used: 1
  1648 ;; Hardware stack levels required when called: 1
  1649 ;; This function calls:
  1650 ;;		Nothing
  1651 ;; This function is called by:
  1652 ;;		_main
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           
  1657                           ;psect for function _tabla_numASCII
  1658  06A5                     _tabla_numASCII:
  1659                           
  1660                           ;incstack = 0
  1661                           ; Regs used in _tabla_numASCII: [wreg-fsr0h+status,2+status,0]
  1662                           ;tabla_numASCII@a stored from wreg
  1663  06A5  00F5               	movwf	tabla_numASCII@a
  1664  06A6                     l2123:
  1665                           
  1666                           ;Maestro I2C.c: 261:     switch(a){
  1667  06A6  2EBB               	goto	l2187
  1668  06A7                     l2125:
  1669                           
  1670                           ;Maestro I2C.c: 263:             return 48;
  1671  06A7  3030               	movlw	48
  1672  06A8  2EE3               	goto	l139
  1673  06A9                     l2131:
  1674                           
  1675                           ;Maestro I2C.c: 266:             return 49;
  1676  06A9  3031               	movlw	49
  1677  06AA  2EE3               	goto	l139
  1678  06AB                     l2137:
  1679                           
  1680                           ;Maestro I2C.c: 269:             return 50;
  1681  06AB  3032               	movlw	50
  1682  06AC  2EE3               	goto	l139
  1683  06AD                     l2143:
  1684                           
  1685                           ;Maestro I2C.c: 272:             return 51;
  1686  06AD  3033               	movlw	51
  1687  06AE  2EE3               	goto	l139
  1688  06AF                     l2149:
  1689                           
  1690                           ;Maestro I2C.c: 275:             return 52;
  1691  06AF  3034               	movlw	52
  1692  06B0  2EE3               	goto	l139
  1693  06B1                     l2155:
  1694                           
  1695                           ;Maestro I2C.c: 278:             return 53;
  1696  06B1  3035               	movlw	53
  1697  06B2  2EE3               	goto	l139
  1698  06B3                     l2161:
  1699                           
  1700                           ;Maestro I2C.c: 281:             return 54;
  1701  06B3  3036               	movlw	54
  1702  06B4  2EE3               	goto	l139
  1703  06B5                     l2167:
  1704                           
  1705                           ;Maestro I2C.c: 284:             return 55;
  1706  06B5  3037               	movlw	55
  1707  06B6  2EE3               	goto	l139
  1708  06B7                     l2173:
  1709                           
  1710                           ;Maestro I2C.c: 287:             return 56;
  1711  06B7  3038               	movlw	56
  1712  06B8  2EE3               	goto	l139
  1713  06B9                     l2179:
  1714                           
  1715                           ;Maestro I2C.c: 290:             return 57;
  1716  06B9  3039               	movlw	57
  1717  06BA  2EE3               	goto	l139
  1718  06BB                     l2187:
  1719  06BB  0875               	movf	tabla_numASCII@a,w
  1720  06BC  00F3               	movwf	??_tabla_numASCII
  1721  06BD  01F4               	clrf	??_tabla_numASCII+1
  1722                           
  1723                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1724                           ; Switch size 1, requested type "simple"
  1725                           ; Number of cases is 1, Range of values is 0 to 0
  1726                           ; switch strategies available:
  1727                           ; Name         Instructions Cycles
  1728                           ; simple_byte            4     3 (average)
  1729                           ; direct_byte           11     8 (fixed)
  1730                           ; jumptable            260     6 (fixed)
  1731                           ;	Chosen strategy is simple_byte
  1732  06BE  0874               	movf	??_tabla_numASCII+1,w
  1733  06BF  3A00               	xorlw	0	; case 0
  1734  06C0  1903               	skipnz
  1735  06C1  2EC3               	goto	l2683
  1736  06C2  2EE3               	goto	l139
  1737  06C3                     l2683:
  1738                           
  1739                           ; Switch size 1, requested type "simple"
  1740                           ; Number of cases is 10, Range of values is 0 to 9
  1741                           ; switch strategies available:
  1742                           ; Name         Instructions Cycles
  1743                           ; simple_byte           31    16 (average)
  1744                           ; direct_byte           38     8 (fixed)
  1745                           ; jumptable            260     6 (fixed)
  1746                           ;	Chosen strategy is simple_byte
  1747  06C3  0873               	movf	??_tabla_numASCII,w
  1748  06C4  3A00               	xorlw	0	; case 0
  1749  06C5  1903               	skipnz
  1750  06C6  2EA7               	goto	l2125
  1751  06C7  3A01               	xorlw	1	; case 1
  1752  06C8  1903               	skipnz
  1753  06C9  2EA9               	goto	l2131
  1754  06CA  3A03               	xorlw	3	; case 2
  1755  06CB  1903               	skipnz
  1756  06CC  2EAB               	goto	l2137
  1757  06CD  3A01               	xorlw	1	; case 3
  1758  06CE  1903               	skipnz
  1759  06CF  2EAD               	goto	l2143
  1760  06D0  3A07               	xorlw	7	; case 4
  1761  06D1  1903               	skipnz
  1762  06D2  2EAF               	goto	l2149
  1763  06D3  3A01               	xorlw	1	; case 5
  1764  06D4  1903               	skipnz
  1765  06D5  2EB1               	goto	l2155
  1766  06D6  3A03               	xorlw	3	; case 6
  1767  06D7  1903               	skipnz
  1768  06D8  2EB3               	goto	l2161
  1769  06D9  3A01               	xorlw	1	; case 7
  1770  06DA  1903               	skipnz
  1771  06DB  2EB5               	goto	l2167
  1772  06DC  3A0F               	xorlw	15	; case 8
  1773  06DD  1903               	skipnz
  1774  06DE  2EB7               	goto	l2173
  1775  06DF  3A01               	xorlw	1	; case 9
  1776  06E0  1903               	skipnz
  1777  06E1  2EB9               	goto	l2179
  1778  06E2  2EE3               	goto	l139
  1779  06E3                     l139:
  1780  06E3  0008               	return
  1781  06E4                     __end_of_tabla_numASCII:
  1782                           
  1783                           	psect	text2
  1784  03CE                     __ptext2:	
  1785 ;; *************** function _setup *****************
  1786 ;; Defined at:
  1787 ;;		line 212 in file "Maestro I2C.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;		None
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;		None
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1    wreg      void 
  1794 ;; Registers used:
  1795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1801 ;;      Params:         0       0       0       0       0
  1802 ;;      Locals:         0       0       0       0       0
  1803 ;;      Temps:          0       3       0       0       0
  1804 ;;      Totals:         0       3       0       0       0
  1805 ;;Total ram usage:        3 bytes
  1806 ;; Hardware stack levels used: 1
  1807 ;; Hardware stack levels required when called: 4
  1808 ;; This function calls:
  1809 ;;		_Config_USART
  1810 ;;		_Escribir_stringLCD
  1811 ;;		_Iniciar_LCD
  1812 ;;		_InitMPU6050
  1813 ;;		_InitMSSP
  1814 ;;		_Limpiar_pantallaLCD
  1815 ;;		_initOsc
  1816 ;;		_set_cursor
  1817 ;; This function is called by:
  1818 ;;		_main
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           
  1823                           ;psect for function _setup
  1824  03CE                     _setup:
  1825  03CE                     l2523:	
  1826                           ;incstack = 0
  1827                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1828                           
  1829                           
  1830                           ;Maestro I2C.c: 215:     ANSEL = 0;
  1831  03CE  1683               	bsf	3,5	;RP0=1, select bank3
  1832  03CF  1703               	bsf	3,6	;RP1=1, select bank3
  1833  03D0  0188               	clrf	8	;volatile
  1834                           
  1835                           ;Maestro I2C.c: 216:     ANSELH = 0;
  1836  03D1  0189               	clrf	9	;volatile
  1837                           
  1838                           ;Maestro I2C.c: 218:     TRISA = 0;
  1839  03D2  1683               	bsf	3,5	;RP0=1, select bank1
  1840  03D3  1303               	bcf	3,6	;RP1=0, select bank1
  1841  03D4  0185               	clrf	5	;volatile
  1842                           
  1843                           ;Maestro I2C.c: 219:     TRISB = 0;
  1844  03D5  0186               	clrf	6	;volatile
  1845                           
  1846                           ;Maestro I2C.c: 220:     TRISD = 0;
  1847  03D6  0188               	clrf	8	;volatile
  1848                           
  1849                           ;Maestro I2C.c: 222:     PORTA = 0;
  1850  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  1851  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  1852  03D9  0185               	clrf	5	;volatile
  1853                           
  1854                           ;Maestro I2C.c: 223:     PORTB = 0;
  1855  03DA  0186               	clrf	6	;volatile
  1856                           
  1857                           ;Maestro I2C.c: 224:     PORTD = 0;
  1858  03DB  0188               	clrf	8	;volatile
  1859  03DC                     l2525:
  1860                           
  1861                           ;Maestro I2C.c: 227:     initOsc(4);
  1862  03DC  3004               	movlw	4
  1863  03DD  120A  118A  2732  120A  118A  	fcall	_initOsc
  1864  03E2                     l2527:
  1865                           
  1866                           ;Maestro I2C.c: 231:     InitMSSP(I2C_MASTER_FOSC, 100000);
  1867  03E2  3000               	movlw	0
  1868  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  1869  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  1870  03E5  00C9               	movwf	InitMSSP@Dato+3
  1871  03E6  3001               	movlw	1
  1872  03E7  00C8               	movwf	InitMSSP@Dato+2
  1873  03E8  3086               	movlw	134
  1874  03E9  00C7               	movwf	InitMSSP@Dato+1
  1875  03EA  30A0               	movlw	160
  1876  03EB  00C6               	movwf	InitMSSP@Dato
  1877  03EC  3008               	movlw	8
  1878  03ED  120A  118A  21E3  120A  118A  	fcall	_InitMSSP
  1879  03F2                     l2529:
  1880                           
  1881                           ;Maestro I2C.c: 236:     InitMPU6050();
  1882  03F2  120A  118A  2344  120A  118A  	fcall	_InitMPU6050
  1883  03F7                     l2531:
  1884                           
  1885                           ;Maestro I2C.c: 239:     Iniciar_LCD();
  1886  03F7  120A  118A  2512  120A  118A  	fcall	_Iniciar_LCD
  1887  03FC                     l2533:
  1888                           
  1889                           ;Maestro I2C.c: 240:     Limpiar_pantallaLCD();
  1890  03FC  120A  118A  27B0  120A  118A  	fcall	_Limpiar_pantallaLCD
  1891  0401                     l2535:
  1892                           
  1893                           ;Maestro I2C.c: 241:     set_cursor(1,0);
  1894  0401  01F5               	clrf	set_cursor@posicion
  1895  0402  3001               	movlw	1
  1896  0403  120A  118A  261F  120A  118A  	fcall	_set_cursor
  1897  0408                     l2537:
  1898                           
  1899                           ;Maestro I2C.c: 242:     Escribir_stringLCD("Miniproyecto 2");
  1900  0408  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1901  0409  120A  118A  278A  120A  118A  	fcall	_Escribir_stringLCD
  1902  040E                     l2539:
  1903                           
  1904                           ;Maestro I2C.c: 243:     set_cursor(2,2);
  1905  040E  3002               	movlw	2
  1906  040F  1283               	bcf	3,5	;RP0=0, select bank0
  1907  0410  1303               	bcf	3,6	;RP1=0, select bank0
  1908  0411  00CB               	movwf	??_setup
  1909  0412  084B               	movf	??_setup,w
  1910  0413  00F5               	movwf	set_cursor@posicion
  1911  0414  3002               	movlw	2
  1912  0415  120A  118A  261F  120A  118A  	fcall	_set_cursor
  1913  041A                     l2541:
  1914                           
  1915                           ;Maestro I2C.c: 244:     Escribir_stringLCD("Jose Santizo");
  1916  041A  3020               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1917  041B  120A  118A  278A  120A  118A  	fcall	_Escribir_stringLCD
  1918  0420                     l2543:
  1919                           
  1920                           ;Maestro I2C.c: 245:     _delay((unsigned long)((5000)*(8000000/4000.0)));
  1921  0420  3033               	movlw	51
  1922  0421  1283               	bcf	3,5	;RP0=0, select bank0
  1923  0422  1303               	bcf	3,6	;RP1=0, select bank0
  1924  0423  00CD               	movwf	??_setup+2
  1925  0424  30BB               	movlw	187
  1926  0425  00CC               	movwf	??_setup+1
  1927  0426  30DF               	movlw	223
  1928  0427  00CB               	movwf	??_setup
  1929  0428                     u1887:
  1930  0428  0BCB               	decfsz	??_setup,f
  1931  0429  2C28               	goto	u1887
  1932  042A  0BCC               	decfsz	??_setup+1,f
  1933  042B  2C28               	goto	u1887
  1934  042C  0BCD               	decfsz	??_setup+2,f
  1935  042D  2C28               	goto	u1887
  1936  042E                     l2545:
  1937                           
  1938                           ;Maestro I2C.c: 246:     Limpiar_pantallaLCD();
  1939  042E  120A  118A  27B0  120A  118A  	fcall	_Limpiar_pantallaLCD
  1940  0433                     l2547:
  1941                           
  1942                           ;Maestro I2C.c: 249:     Config_USART(9600,4);
  1943  0433  3080               	movlw	128
  1944  0434  00F3               	movwf	Config_USART@baud_rate
  1945  0435  3025               	movlw	37
  1946  0436  00F4               	movwf	Config_USART@baud_rate+1
  1947  0437  3004               	movlw	4
  1948  0438  00F5               	movwf	Config_USART@Freq
  1949  0439  3000               	movlw	0
  1950  043A  00F6               	movwf	Config_USART@Freq+1
  1951  043B  120A  118A  2294  120A  118A  	fcall	_Config_USART
  1952  0440                     l129:
  1953  0440  0008               	return
  1954  0441                     __end_of_setup:
  1955                           
  1956                           	psect	text3
  1957  061F                     __ptext3:	
  1958 ;; *************** function _set_cursor *****************
  1959 ;; Defined at:
  1960 ;;		line 77 in file "LCD.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  linea           1    wreg     unsigned char 
  1963 ;;  posicion        1    5[COMMON] unsigned char 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  linea           1    0[BANK0 ] unsigned char 
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		wreg, status,2, status,0, pclath, cstack
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1975 ;;      Params:         1       0       0       0       0
  1976 ;;      Locals:         0       1       0       0       0
  1977 ;;      Temps:          2       0       0       0       0
  1978 ;;      Totals:         3       1       0       0       0
  1979 ;;Total ram usage:        4 bytes
  1980 ;; Hardware stack levels used: 1
  1981 ;; Hardware stack levels required when called: 3
  1982 ;; This function calls:
  1983 ;;		_Escribir_comandoLCD
  1984 ;; This function is called by:
  1985 ;;		_main
  1986 ;;		_setup
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           
  1991                           ;psect for function _set_cursor
  1992  061F                     _set_cursor:
  1993                           
  1994                           ;incstack = 0
  1995                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1996                           ;set_cursor@linea stored from wreg
  1997  061F  1283               	bcf	3,5	;RP0=0, select bank0
  1998  0620  1303               	bcf	3,6	;RP1=0, select bank0
  1999  0621  00B9               	movwf	set_cursor@linea
  2000  0622                     l2369:
  2001                           
  2002                           ;LCD.c: 78:     PORTDbits.RD3 = 0; PORTDbits.RD4 = 0;
  2003  0622  1188               	bcf	8,3	;volatile
  2004  0623  1208               	bcf	8,4	;volatile
  2005  0624                     l2371:
  2006                           
  2007                           ;LCD.c: 81:     if (linea == 1){ Escribir_comandoLCD(0b10000000);}
  2008  0624  0339               	decf	set_cursor@linea,w
  2009  0625  1D03               	btfss	3,2
  2010  0626  2E28               	goto	u1621
  2011  0627  2E29               	goto	u1620
  2012  0628                     u1621:
  2013  0628  2E30               	goto	l2375
  2014  0629                     u1620:
  2015  0629                     l2373:
  2016  0629  3080               	movlw	128
  2017  062A  120A  118A  2662  120A  118A  	fcall	_Escribir_comandoLCD
  2018  062F  2E3C               	goto	l2379
  2019  0630                     l2375:
  2020  0630  3002               	movlw	2
  2021  0631  0639               	xorwf	set_cursor@linea,w
  2022  0632  1D03               	btfss	3,2
  2023  0633  2E35               	goto	u1631
  2024  0634  2E36               	goto	u1630
  2025  0635                     u1631:
  2026  0635  2E3C               	goto	l2379
  2027  0636                     u1630:
  2028  0636                     l2377:
  2029  0636  30C0               	movlw	192
  2030  0637  120A  118A  2662  120A  118A  	fcall	_Escribir_comandoLCD
  2031  063C                     l2379:
  2032                           
  2033                           ;LCD.c: 84:     _delay((unsigned long)((40)*(8000000/4000.0)));
  2034  063C  3068               	movlw	104
  2035  063D  00F7               	movwf	??_set_cursor+1
  2036  063E  30E4               	movlw	228
  2037  063F  00F6               	movwf	??_set_cursor
  2038  0640                     u1897:
  2039  0640  0BF6               	decfsz	??_set_cursor,f
  2040  0641  2E40               	goto	u1897
  2041  0642  0BF7               	decfsz	??_set_cursor+1,f
  2042  0643  2E40               	goto	u1897
  2043  0644  0000               	nop
  2044  0645                     l2381:
  2045                           
  2046                           ;LCD.c: 86:     if (posicion != 0){
  2047  0645  0875               	movf	set_cursor@posicion,w
  2048  0646  1903               	btfsc	3,2
  2049  0647  2E49               	goto	u1641
  2050  0648  2E4A               	goto	u1640
  2051  0649                     u1641:
  2052  0649  2E61               	goto	l271
  2053  064A                     u1640:
  2054  064A  2E53               	goto	l2389
  2055  064B                     l2385:
  2056                           
  2057                           ;LCD.c: 88:             Escribir_comandoLCD(0b00010100);
  2058  064B  3014               	movlw	20
  2059  064C  120A  118A  2662  120A  118A  	fcall	_Escribir_comandoLCD
  2060  0651                     l2387:
  2061                           
  2062                           ;LCD.c: 89:             posicion--;
  2063  0651  3001               	movlw	1
  2064  0652  02F5               	subwf	set_cursor@posicion,f
  2065  0653                     l2389:
  2066                           
  2067                           ;LCD.c: 87:         while(posicion > 0){
  2068  0653  0875               	movf	set_cursor@posicion,w
  2069  0654  1D03               	btfss	3,2
  2070  0655  2E57               	goto	u1651
  2071  0656  2E58               	goto	u1650
  2072  0657                     u1651:
  2073  0657  2E4B               	goto	l2385
  2074  0658                     u1650:
  2075  0658                     l2391:
  2076                           
  2077                           ;LCD.c: 92:         _delay((unsigned long)((40)*(8000000/4000.0)));
  2078  0658  3068               	movlw	104
  2079  0659  00F7               	movwf	??_set_cursor+1
  2080  065A  30E4               	movlw	228
  2081  065B  00F6               	movwf	??_set_cursor
  2082  065C                     u1907:
  2083  065C  0BF6               	decfsz	??_set_cursor,f
  2084  065D  2E5C               	goto	u1907
  2085  065E  0BF7               	decfsz	??_set_cursor+1,f
  2086  065F  2E5C               	goto	u1907
  2087  0660  0000               	nop
  2088  0661                     l271:
  2089  0661  0008               	return
  2090  0662                     __end_of_set_cursor:
  2091                           
  2092                           	psect	text4
  2093  0732                     __ptext4:	
  2094 ;; *************** function _initOsc *****************
  2095 ;; Defined at:
  2096 ;;		line 12 in file "Oscilador.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;  Valor           1    wreg     unsigned char 
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;  Valor           1    3[COMMON] unsigned char 
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      void 
  2103 ;; Registers used:
  2104 ;;		wreg, status,2, status,0
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2110 ;;      Params:         0       0       0       0       0
  2111 ;;      Locals:         1       0       0       0       0
  2112 ;;      Temps:          0       0       0       0       0
  2113 ;;      Totals:         1       0       0       0       0
  2114 ;;Total ram usage:        1 bytes
  2115 ;; Hardware stack levels used: 1
  2116 ;; Hardware stack levels required when called: 1
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		_setup
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           
  2125                           ;psect for function _initOsc
  2126  0732                     _initOsc:
  2127                           
  2128                           ;incstack = 0
  2129                           ; Regs used in _initOsc: [wreg+status,2+status,0]
  2130                           ;initOsc@Valor stored from wreg
  2131  0732  00F3               	movwf	initOsc@Valor
  2132  0733                     l1775:
  2133                           
  2134                           ;Oscilador.c: 14:     if(Valor == 8){
  2135  0733  3008               	movlw	8
  2136  0734  0673               	xorwf	initOsc@Valor,w
  2137  0735  1D03               	btfss	3,2
  2138  0736  2F38               	goto	u1001
  2139  0737  2F39               	goto	u1000
  2140  0738                     u1001:
  2141  0738  2F3E               	goto	l1779
  2142  0739                     u1000:
  2143  0739                     l1777:
  2144                           
  2145                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
  2146  0739  1683               	bsf	3,5	;RP0=1, select bank1
  2147  073A  1303               	bcf	3,6	;RP1=0, select bank1
  2148  073B  160F               	bsf	15,4	;volatile
  2149                           
  2150                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
  2151  073C  168F               	bsf	15,5	;volatile
  2152                           
  2153                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
  2154  073D  170F               	bsf	15,6	;volatile
  2155  073E                     l1779:
  2156                           
  2157                           ;Oscilador.c: 19:     if(Valor == 4){
  2158  073E  3004               	movlw	4
  2159  073F  0673               	xorwf	initOsc@Valor,w
  2160  0740  1D03               	btfss	3,2
  2161  0741  2F43               	goto	u1011
  2162  0742  2F44               	goto	u1010
  2163  0743                     u1011:
  2164  0743  2F49               	goto	l1783
  2165  0744                     u1010:
  2166  0744                     l1781:
  2167                           
  2168                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
  2169  0744  1683               	bsf	3,5	;RP0=1, select bank1
  2170  0745  1303               	bcf	3,6	;RP1=0, select bank1
  2171  0746  120F               	bcf	15,4	;volatile
  2172                           
  2173                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
  2174  0747  168F               	bsf	15,5	;volatile
  2175                           
  2176                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
  2177  0748  170F               	bsf	15,6	;volatile
  2178  0749                     l1783:
  2179                           
  2180                           ;Oscilador.c: 24:     if(Valor == 2){
  2181  0749  3002               	movlw	2
  2182  074A  0673               	xorwf	initOsc@Valor,w
  2183  074B  1D03               	btfss	3,2
  2184  074C  2F4E               	goto	u1021
  2185  074D  2F4F               	goto	u1020
  2186  074E                     u1021:
  2187  074E  2F54               	goto	l1787
  2188  074F                     u1020:
  2189  074F                     l1785:
  2190                           
  2191                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
  2192  074F  1683               	bsf	3,5	;RP0=1, select bank1
  2193  0750  1303               	bcf	3,6	;RP1=0, select bank1
  2194  0751  160F               	bsf	15,4	;volatile
  2195                           
  2196                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
  2197  0752  128F               	bcf	15,5	;volatile
  2198                           
  2199                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
  2200  0753  170F               	bsf	15,6	;volatile
  2201  0754                     l1787:
  2202                           
  2203                           ;Oscilador.c: 29:     if(Valor == 1){
  2204  0754  0373               	decf	initOsc@Valor,w
  2205  0755  1D03               	btfss	3,2
  2206  0756  2F58               	goto	u1031
  2207  0757  2F59               	goto	u1030
  2208  0758                     u1031:
  2209  0758  2F5E               	goto	l279
  2210  0759                     u1030:
  2211  0759                     l1789:
  2212                           
  2213                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
  2214  0759  1683               	bsf	3,5	;RP0=1, select bank1
  2215  075A  1303               	bcf	3,6	;RP1=0, select bank1
  2216  075B  120F               	bcf	15,4	;volatile
  2217                           
  2218                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
  2219  075C  128F               	bcf	15,5	;volatile
  2220                           
  2221                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
  2222  075D  170F               	bsf	15,6	;volatile
  2223  075E                     l279:	
  2224                           ;Oscilador.c: 33:     }
  2225                           
  2226                           
  2227                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
  2228  075E  1683               	bsf	3,5	;RP0=1, select bank1
  2229  075F  1303               	bcf	3,6	;RP1=0, select bank1
  2230  0760  140F               	bsf	15,0	;volatile
  2231  0761                     l280:
  2232  0761  0008               	return
  2233  0762                     __end_of_initOsc:
  2234                           
  2235                           	psect	text5
  2236  07B0                     __ptext5:	
  2237 ;; *************** function _Limpiar_pantallaLCD *****************
  2238 ;; Defined at:
  2239 ;;		line 69 in file "LCD.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;		None
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;		None
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  1    wreg      void 
  2246 ;; Registers used:
  2247 ;;		wreg, status,2, status,0, pclath, cstack
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2253 ;;      Params:         0       0       0       0       0
  2254 ;;      Locals:         0       0       0       0       0
  2255 ;;      Temps:          2       0       0       0       0
  2256 ;;      Totals:         2       0       0       0       0
  2257 ;;Total ram usage:        2 bytes
  2258 ;; Hardware stack levels used: 1
  2259 ;; Hardware stack levels required when called: 3
  2260 ;; This function calls:
  2261 ;;		_Escribir_comandoLCD
  2262 ;; This function is called by:
  2263 ;;		_setup
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           
  2268                           ;psect for function _Limpiar_pantallaLCD
  2269  07B0                     _Limpiar_pantallaLCD:
  2270  07B0                     l2477:	
  2271                           ;incstack = 0
  2272                           ; Regs used in _Limpiar_pantallaLCD: [wreg+status,2+status,0+pclath+cstack]
  2273                           
  2274                           
  2275                           ;LCD.c: 70:     PORTDbits.RD3 = 0; PORTDbits.RD4 = 0;
  2276  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  2277  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  2278  07B2  1188               	bcf	8,3	;volatile
  2279  07B3  1208               	bcf	8,4	;volatile
  2280  07B4                     l2479:
  2281                           
  2282                           ;LCD.c: 72:     Escribir_comandoLCD(0b00000001);
  2283  07B4  3001               	movlw	1
  2284  07B5  120A  118A  2662  120A  118A  	fcall	_Escribir_comandoLCD
  2285  07BA                     l2481:
  2286                           
  2287                           ;LCD.c: 73:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2288  07BA  301A               	movlw	26
  2289  07BB  00F6               	movwf	??_Limpiar_pantallaLCD+1
  2290  07BC  30F8               	movlw	248
  2291  07BD  00F5               	movwf	??_Limpiar_pantallaLCD
  2292  07BE                     u1917:
  2293  07BE  0BF5               	decfsz	??_Limpiar_pantallaLCD,f
  2294  07BF  2FBE               	goto	u1917
  2295  07C0  0BF6               	decfsz	??_Limpiar_pantallaLCD+1,f
  2296  07C1  2FBE               	goto	u1917
  2297  07C2  0000               	nop
  2298  07C3                     l2483:
  2299                           
  2300                           ;LCD.c: 74:     Escribir_comandoLCD(0b00000010);
  2301  07C3  3002               	movlw	2
  2302  07C4  120A  118A  2662  120A  118A  	fcall	_Escribir_comandoLCD
  2303  07C9                     l261:
  2304  07C9  0008               	return
  2305  07CA                     __end_of_Limpiar_pantallaLCD:
  2306                           
  2307                           	psect	text6
  2308  01E3                     __ptext6:	
  2309 ;; *************** function _InitMSSP *****************
  2310 ;; Defined at:
  2311 ;;		line 5 in file "I2C.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;  Modo            1    wreg     enum E1292
  2314 ;;  Dato            4   13[BANK0 ] unsigned long 
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;  Modo            1   17[BANK0 ] enum E1292
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  1    wreg      void 
  2319 ;; Registers used:
  2320 ;;		wreg, status,2, status,0, pclath, cstack
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2326 ;;      Params:         0       4       0       0       0
  2327 ;;      Locals:         0       1       0       0       0
  2328 ;;      Temps:          4       0       0       0       0
  2329 ;;      Totals:         4       5       0       0       0
  2330 ;;Total ram usage:        9 bytes
  2331 ;; Hardware stack levels used: 1
  2332 ;; Hardware stack levels required when called: 2
  2333 ;; This function calls:
  2334 ;;		___lldiv
  2335 ;; This function is called by:
  2336 ;;		_setup
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340                           
  2341                           ;psect for function _InitMSSP
  2342  01E3                     _InitMSSP:
  2343                           
  2344                           ;incstack = 0
  2345                           ; Regs used in _InitMSSP: [wreg+status,2+status,0+pclath+cstack]
  2346                           ;InitMSSP@Modo stored from wreg
  2347  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  2348  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  2349  01E5  00CA               	movwf	InitMSSP@Modo
  2350  01E6                     l2403:
  2351                           
  2352                           ;I2C.c: 9:     SSPCONbits.SSPEN = 0;
  2353  01E6  1294               	bcf	20,5	;volatile
  2354  01E7                     l2405:
  2355                           
  2356                           ;I2C.c: 10:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2357  01E7  301A               	movlw	26
  2358  01E8  00F5               	movwf	??_InitMSSP+1
  2359  01E9  30F8               	movlw	248
  2360  01EA  00F4               	movwf	??_InitMSSP
  2361  01EB                     u1927:
  2362  01EB  0BF4               	decfsz	??_InitMSSP,f
  2363  01EC  29EB               	goto	u1927
  2364  01ED  0BF5               	decfsz	??_InitMSSP+1,f
  2365  01EE  29EB               	goto	u1927
  2366  01EF  0000               	nop
  2367  01F0                     l2407:
  2368                           
  2369                           ;I2C.c: 11:     SSPCONbits.SSPEN = 1;
  2370  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  2371  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  2372  01F2  1694               	bsf	20,5	;volatile
  2373                           
  2374                           ;I2C.c: 14:     if (Modo < 0b00000110){
  2375  01F3  3006               	movlw	6
  2376  01F4  024A               	subwf	InitMSSP@Modo,w
  2377  01F5  1803               	skipnc
  2378  01F6  29F8               	goto	u1671
  2379  01F7  29F9               	goto	u1670
  2380  01F8                     u1671:
  2381  01F8  2A1D               	goto	l2419
  2382  01F9                     u1670:
  2383  01F9                     l2409:
  2384                           
  2385                           ;I2C.c: 17:         TRISCbits.TRISC5 = 0;
  2386  01F9  1683               	bsf	3,5	;RP0=1, select bank1
  2387  01FA  1303               	bcf	3,6	;RP1=0, select bank1
  2388  01FB  1287               	bcf	7,5	;volatile
  2389                           
  2390                           ;I2C.c: 18:         TRISCbits.TRISC4 = 1;
  2391  01FC  1607               	bsf	7,4	;volatile
  2392  01FD                     l2411:
  2393                           
  2394                           ;I2C.c: 20:         if (Modo < 0b00000100){
  2395  01FD  3004               	movlw	4
  2396  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  2397  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  2398  0200  024A               	subwf	InitMSSP@Modo,w
  2399  0201  1803               	skipnc
  2400  0202  2A04               	goto	u1681
  2401  0203  2A05               	goto	u1680
  2402  0204                     u1681:
  2403  0204  2A09               	goto	l186
  2404  0205                     u1680:
  2405  0205                     l2413:
  2406                           
  2407                           ;I2C.c: 21:             TRISCbits.TRISC3 = 0;
  2408  0205  1683               	bsf	3,5	;RP0=1, select bank1
  2409  0206  1303               	bcf	3,6	;RP1=0, select bank1
  2410  0207  1187               	bcf	7,3	;volatile
  2411                           
  2412                           ;I2C.c: 22:         }
  2413  0208  2A0C               	goto	l2415
  2414  0209                     l186:	
  2415                           ;I2C.c: 23:         else {
  2416                           
  2417                           
  2418                           ;I2C.c: 24:             TRISCbits.TRISC3 = 1;
  2419  0209  1683               	bsf	3,5	;RP0=1, select bank1
  2420  020A  1303               	bcf	3,6	;RP1=0, select bank1
  2421  020B  1587               	bsf	7,3	;volatile
  2422  020C                     l2415:
  2423                           
  2424                           ;I2C.c: 27:         if (Modo == 0b00000100){ TRISAbits.TRISA5 = 1;}
  2425  020C  3004               	movlw	4
  2426  020D  1283               	bcf	3,5	;RP0=0, select bank0
  2427  020E  1303               	bcf	3,6	;RP1=0, select bank0
  2428  020F  064A               	xorwf	InitMSSP@Modo,w
  2429  0210  1D03               	btfss	3,2
  2430  0211  2A13               	goto	u1691
  2431  0212  2A14               	goto	u1690
  2432  0213                     u1691:
  2433  0213  2A17               	goto	l188
  2434  0214                     u1690:
  2435  0214                     l2417:
  2436  0214  1683               	bsf	3,5	;RP0=1, select bank1
  2437  0215  1303               	bcf	3,6	;RP1=0, select bank1
  2438  0216  1685               	bsf	5,5	;volatile
  2439  0217                     l188:
  2440                           
  2441                           ;I2C.c: 31:         SSPCONbits.CKP = 0;
  2442  0217  1283               	bcf	3,5	;RP0=0, select bank0
  2443  0218  1214               	bcf	20,4	;volatile
  2444                           
  2445                           ;I2C.c: 36:         SSPSTATbits.SMP = 1;
  2446  0219  1683               	bsf	3,5	;RP0=1, select bank1
  2447  021A  1303               	bcf	3,6	;RP1=0, select bank1
  2448  021B  1794               	bsf	20,7	;volatile
  2449                           
  2450                           ;I2C.c: 38:     }
  2451  021C  2A8C               	goto	l2447
  2452  021D                     l2419:
  2453  021D  3006               	movlw	6
  2454  021E  024A               	subwf	InitMSSP@Modo,w
  2455  021F  1C03               	skipc
  2456  0220  2A22               	goto	u1701
  2457  0221  2A23               	goto	u1700
  2458  0222                     u1701:
  2459  0222  2A8C               	goto	l2447
  2460  0223                     u1700:
  2461  0223                     l2421:
  2462                           
  2463                           ;I2C.c: 42:         TRISCbits.TRISC3 = 1;
  2464  0223  1683               	bsf	3,5	;RP0=1, select bank1
  2465  0224  1303               	bcf	3,6	;RP1=0, select bank1
  2466  0225  1587               	bsf	7,3	;volatile
  2467                           
  2468                           ;I2C.c: 43:         TRISCbits.TRISC4 = 1;
  2469  0226  1607               	bsf	7,4	;volatile
  2470                           
  2471                           ;I2C.c: 44:         SSPCONbits.SSPEN = 1;
  2472  0227  1283               	bcf	3,5	;RP0=0, select bank0
  2473  0228  1303               	bcf	3,6	;RP1=0, select bank0
  2474  0229  1694               	bsf	20,5	;volatile
  2475                           
  2476                           ;I2C.c: 45:         SSPSTATbits.SMP = 1;
  2477  022A  1683               	bsf	3,5	;RP0=1, select bank1
  2478  022B  1303               	bcf	3,6	;RP1=0, select bank1
  2479  022C  1794               	bsf	20,7	;volatile
  2480  022D                     l2423:
  2481                           
  2482                           ;I2C.c: 46:         if (Modo == 0b00000111 || Modo == 0b00001111){
  2483  022D  3007               	movlw	7
  2484  022E  1283               	bcf	3,5	;RP0=0, select bank0
  2485  022F  1303               	bcf	3,6	;RP1=0, select bank0
  2486  0230  064A               	xorwf	InitMSSP@Modo,w
  2487  0231  1903               	btfsc	3,2
  2488  0232  2A34               	goto	u1711
  2489  0233  2A35               	goto	u1710
  2490  0234                     u1711:
  2491  0234  2A3B               	goto	l193
  2492  0235                     u1710:
  2493  0235                     l2425:
  2494  0235  300F               	movlw	15
  2495  0236  064A               	xorwf	InitMSSP@Modo,w
  2496  0237  1D03               	btfss	3,2
  2497  0238  2A3A               	goto	u1721
  2498  0239  2A3B               	goto	u1720
  2499  023A                     u1721:
  2500  023A  2A3E               	goto	l2427
  2501  023B                     u1720:
  2502  023B                     l193:
  2503                           
  2504                           ;I2C.c: 47:             UA = 0;
  2505  023B  1683               	bsf	3,5	;RP0=1, select bank1
  2506  023C  1303               	bcf	3,6	;RP1=0, select bank1
  2507  023D  1094               	bcf	20,1	;volatile
  2508  023E                     l2427:
  2509                           
  2510                           ;I2C.c: 50:         if (Modo == 0b00001000){
  2511  023E  3008               	movlw	8
  2512  023F  1283               	bcf	3,5	;RP0=0, select bank0
  2513  0240  064A               	xorwf	InitMSSP@Modo,w
  2514  0241  1D03               	btfss	3,2
  2515  0242  2A44               	goto	u1731
  2516  0243  2A45               	goto	u1730
  2517  0244                     u1731:
  2518  0244  2A7B               	goto	l194
  2519  0245                     u1730:
  2520  0245                     l2429:
  2521                           
  2522                           ;I2C.c: 51:             CKP = 0;
  2523  0245  1214               	bcf	20,4	;volatile
  2524  0246                     l2431:
  2525                           
  2526                           ;I2C.c: 52:             SSPCON2 = 0;
  2527  0246  1683               	bsf	3,5	;RP0=1, select bank1
  2528  0247  1303               	bcf	3,6	;RP1=0, select bank1
  2529  0248  0191               	clrf	17	;volatile
  2530                           
  2531                           ;I2C.c: 53:             SSPSTAT = 0;
  2532  0249  0194               	clrf	20	;volatile
  2533  024A                     l2433:
  2534                           
  2535                           ;I2C.c: 54:             SSPADD = (8000000/(Dato*4))-1;
  2536  024A  1283               	bcf	3,5	;RP0=0, select bank0
  2537  024B  1303               	bcf	3,6	;RP1=0, select bank0
  2538  024C  0846               	movf	InitMSSP@Dato,w
  2539  024D  00F4               	movwf	??_InitMSSP
  2540  024E  0847               	movf	InitMSSP@Dato+1,w
  2541  024F  00F5               	movwf	??_InitMSSP+1
  2542  0250  0848               	movf	InitMSSP@Dato+2,w
  2543  0251  00F6               	movwf	??_InitMSSP+2
  2544  0252  0849               	movf	InitMSSP@Dato+3,w
  2545  0253  00F7               	movwf	??_InitMSSP+3
  2546  0254  3002               	movlw	2
  2547  0255                     u1745:
  2548  0255  1003               	clrc
  2549  0256  0DF4               	rlf	??_InitMSSP,f
  2550  0257  0DF5               	rlf	??_InitMSSP+1,f
  2551  0258  0DF6               	rlf	??_InitMSSP+2,f
  2552  0259  0DF7               	rlf	??_InitMSSP+3,f
  2553  025A                     u1740:
  2554  025A  3EFF               	addlw	-1
  2555  025B  1D03               	skipz
  2556  025C  2A55               	goto	u1745
  2557  025D  0877               	movf	??_InitMSSP+3,w
  2558  025E  00BC               	movwf	___lldiv@divisor+3
  2559  025F  0876               	movf	??_InitMSSP+2,w
  2560  0260  00BB               	movwf	___lldiv@divisor+2
  2561  0261  0875               	movf	??_InitMSSP+1,w
  2562  0262  00BA               	movwf	___lldiv@divisor+1
  2563  0263  0874               	movf	??_InitMSSP,w
  2564  0264  00B9               	movwf	___lldiv@divisor
  2565  0265  3000               	movlw	0
  2566  0266  00C0               	movwf	___lldiv@dividend+3
  2567  0267  307A               	movlw	122
  2568  0268  00BF               	movwf	___lldiv@dividend+2
  2569  0269  3012               	movlw	18
  2570  026A  00BE               	movwf	___lldiv@dividend+1
  2571  026B  3000               	movlw	0
  2572  026C  00BD               	movwf	___lldiv@dividend
  2573  026D  120A  118A  24AA  120A  118A  	fcall	___lldiv
  2574  0272  1283               	bcf	3,5	;RP0=0, select bank0
  2575  0273  1303               	bcf	3,6	;RP1=0, select bank0
  2576  0274  0839               	movf	?___lldiv,w
  2577  0275  3EFF               	addlw	255
  2578  0276  1683               	bsf	3,5	;RP0=1, select bank1
  2579  0277  1303               	bcf	3,6	;RP1=0, select bank1
  2580  0278  0093               	movwf	19	;volatile
  2581  0279                     l2435:
  2582                           
  2583                           ;I2C.c: 55:             PIE1bits.SSPIE = 0;
  2584  0279  118C               	bcf	12,3	;volatile
  2585                           
  2586                           ;I2C.c: 56:         }
  2587  027A  2A8C               	goto	l2447
  2588  027B                     l194:	
  2589                           ;I2C.c: 57:         else {
  2590                           
  2591                           
  2592                           ;I2C.c: 58:             CKP = 1;
  2593  027B  1614               	bsf	20,4	;volatile
  2594                           
  2595                           ;I2C.c: 59:             SSPCON2bits.GCEN = 0;
  2596  027C  1683               	bsf	3,5	;RP0=1, select bank1
  2597  027D  1303               	bcf	3,6	;RP1=0, select bank1
  2598  027E  1391               	bcf	17,7	;volatile
  2599                           
  2600                           ;I2C.c: 60:             SSPCON2bits.SEN = 1;
  2601  027F  1411               	bsf	17,0	;volatile
  2602  0280                     l2437:
  2603                           
  2604                           ;I2C.c: 61:             SSPADD = Dato;
  2605  0280  1283               	bcf	3,5	;RP0=0, select bank0
  2606  0281  1303               	bcf	3,6	;RP1=0, select bank0
  2607  0282  0846               	movf	InitMSSP@Dato,w
  2608  0283  1683               	bsf	3,5	;RP0=1, select bank1
  2609  0284  1303               	bcf	3,6	;RP1=0, select bank1
  2610  0285  0093               	movwf	19	;volatile
  2611  0286                     l2439:
  2612                           
  2613                           ;I2C.c: 62:             INTCONbits.GIE = 1;
  2614  0286  178B               	bsf	11,7	;volatile
  2615  0287                     l2441:
  2616                           
  2617                           ;I2C.c: 63:             INTCONbits.PEIE = 1;
  2618  0287  170B               	bsf	11,6	;volatile
  2619  0288                     l2443:
  2620                           
  2621                           ;I2C.c: 64:             PIE1bits.SSPIE = 1;
  2622  0288  158C               	bsf	12,3	;volatile
  2623  0289                     l2445:
  2624                           
  2625                           ;I2C.c: 65:             SSPIF = 0;
  2626  0289  1283               	bcf	3,5	;RP0=0, select bank0
  2627  028A  1303               	bcf	3,6	;RP1=0, select bank0
  2628  028B  118C               	bcf	12,3	;volatile
  2629  028C                     l2447:
  2630                           
  2631                           ;I2C.c: 72:     SSPCON = SSPCON | Modo;
  2632  028C  1283               	bcf	3,5	;RP0=0, select bank0
  2633  028D  0814               	movf	20,w	;volatile
  2634  028E  044A               	iorwf	InitMSSP@Modo,w	;volatile
  2635  028F  0094               	movwf	20	;volatile
  2636  0290                     l2449:
  2637                           
  2638                           ;I2C.c: 77:     SSPSTATbits.CKE = 0;
  2639  0290  1683               	bsf	3,5	;RP0=1, select bank1
  2640  0291  1303               	bcf	3,6	;RP1=0, select bank1
  2641  0292  1314               	bcf	20,6	;volatile
  2642  0293                     l196:
  2643  0293  0008               	return
  2644  0294                     __end_of_InitMSSP:
  2645                           
  2646                           	psect	text7
  2647  04AA                     __ptext7:	
  2648 ;; *************** function ___lldiv *****************
  2649 ;; Defined at:
  2650 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;  divisor         4    0[BANK0 ] unsigned long 
  2653 ;;  dividend        4    4[BANK0 ] unsigned long 
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;  quotient        4    8[BANK0 ] unsigned long 
  2656 ;;  counter         1   12[BANK0 ] unsigned char 
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  4    0[BANK0 ] unsigned long 
  2659 ;; Registers used:
  2660 ;;		wreg, status,2, status,0
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2666 ;;      Params:         0       8       0       0       0
  2667 ;;      Locals:         0       5       0       0       0
  2668 ;;      Temps:          1       0       0       0       0
  2669 ;;      Totals:         1      13       0       0       0
  2670 ;;Total ram usage:       14 bytes
  2671 ;; Hardware stack levels used: 1
  2672 ;; Hardware stack levels required when called: 1
  2673 ;; This function calls:
  2674 ;;		Nothing
  2675 ;; This function is called by:
  2676 ;;		_InitMSSP
  2677 ;;		_I2C_Master_Init
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           
  2682                           ;psect for function ___lldiv
  2683  04AA                     ___lldiv:
  2684  04AA                     l2345:	
  2685                           ;incstack = 0
  2686                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2687                           
  2688  04AA  3000               	movlw	0
  2689  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  2690  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  2691  04AD  00C4               	movwf	___lldiv@quotient+3
  2692  04AE  3000               	movlw	0
  2693  04AF  00C3               	movwf	___lldiv@quotient+2
  2694  04B0  3000               	movlw	0
  2695  04B1  00C2               	movwf	___lldiv@quotient+1
  2696  04B2  3000               	movlw	0
  2697  04B3  00C1               	movwf	___lldiv@quotient
  2698  04B4  083C               	movf	___lldiv@divisor+3,w
  2699  04B5  043B               	iorwf	___lldiv@divisor+2,w
  2700  04B6  043A               	iorwf	___lldiv@divisor+1,w
  2701  04B7  0439               	iorwf	___lldiv@divisor,w
  2702  04B8  1903               	skipnz
  2703  04B9  2CBB               	goto	u1551
  2704  04BA  2CBC               	goto	u1550
  2705  04BB                     u1551:
  2706  04BB  2D09               	goto	l2365
  2707  04BC                     u1550:
  2708  04BC                     l2347:
  2709  04BC  01C5               	clrf	___lldiv@counter
  2710  04BD  0AC5               	incf	___lldiv@counter,f
  2711  04BE  2CCC               	goto	l2351
  2712  04BF                     l2349:
  2713  04BF  3001               	movlw	1
  2714  04C0  00F3               	movwf	??___lldiv
  2715  04C1                     u1565:
  2716  04C1  1003               	clrc
  2717  04C2  0DB9               	rlf	___lldiv@divisor,f
  2718  04C3  0DBA               	rlf	___lldiv@divisor+1,f
  2719  04C4  0DBB               	rlf	___lldiv@divisor+2,f
  2720  04C5  0DBC               	rlf	___lldiv@divisor+3,f
  2721  04C6  0BF3               	decfsz	??___lldiv,f
  2722  04C7  2CC1               	goto	u1565
  2723  04C8  3001               	movlw	1
  2724  04C9  00F3               	movwf	??___lldiv
  2725  04CA  0873               	movf	??___lldiv,w
  2726  04CB  07C5               	addwf	___lldiv@counter,f
  2727  04CC                     l2351:
  2728  04CC  1FBC               	btfss	___lldiv@divisor+3,7
  2729  04CD  2CCF               	goto	u1571
  2730  04CE  2CD0               	goto	u1570
  2731  04CF                     u1571:
  2732  04CF  2CBF               	goto	l2349
  2733  04D0                     u1570:
  2734  04D0                     l2353:
  2735  04D0  3001               	movlw	1
  2736  04D1  00F3               	movwf	??___lldiv
  2737  04D2                     u1585:
  2738  04D2  1003               	clrc
  2739  04D3  0DC1               	rlf	___lldiv@quotient,f
  2740  04D4  0DC2               	rlf	___lldiv@quotient+1,f
  2741  04D5  0DC3               	rlf	___lldiv@quotient+2,f
  2742  04D6  0DC4               	rlf	___lldiv@quotient+3,f
  2743  04D7  0BF3               	decfsz	??___lldiv,f
  2744  04D8  2CD2               	goto	u1585
  2745  04D9                     l2355:
  2746  04D9  083C               	movf	___lldiv@divisor+3,w
  2747  04DA  0240               	subwf	___lldiv@dividend+3,w
  2748  04DB  1D03               	skipz
  2749  04DC  2CE7               	goto	u1595
  2750  04DD  083B               	movf	___lldiv@divisor+2,w
  2751  04DE  023F               	subwf	___lldiv@dividend+2,w
  2752  04DF  1D03               	skipz
  2753  04E0  2CE7               	goto	u1595
  2754  04E1  083A               	movf	___lldiv@divisor+1,w
  2755  04E2  023E               	subwf	___lldiv@dividend+1,w
  2756  04E3  1D03               	skipz
  2757  04E4  2CE7               	goto	u1595
  2758  04E5  0839               	movf	___lldiv@divisor,w
  2759  04E6  023D               	subwf	___lldiv@dividend,w
  2760  04E7                     u1595:
  2761  04E7  1C03               	skipc
  2762  04E8  2CEA               	goto	u1591
  2763  04E9  2CEB               	goto	u1590
  2764  04EA                     u1591:
  2765  04EA  2CFA               	goto	l2361
  2766  04EB                     u1590:
  2767  04EB                     l2357:
  2768  04EB  0839               	movf	___lldiv@divisor,w
  2769  04EC  02BD               	subwf	___lldiv@dividend,f
  2770  04ED  083A               	movf	___lldiv@divisor+1,w
  2771  04EE  1C03               	skipc
  2772  04EF  0F3A               	incfsz	___lldiv@divisor+1,w
  2773  04F0  02BE               	subwf	___lldiv@dividend+1,f
  2774  04F1  083B               	movf	___lldiv@divisor+2,w
  2775  04F2  1C03               	skipc
  2776  04F3  0F3B               	incfsz	___lldiv@divisor+2,w
  2777  04F4  02BF               	subwf	___lldiv@dividend+2,f
  2778  04F5  083C               	movf	___lldiv@divisor+3,w
  2779  04F6  1C03               	skipc
  2780  04F7  0F3C               	incfsz	___lldiv@divisor+3,w
  2781  04F8  02C0               	subwf	___lldiv@dividend+3,f
  2782  04F9                     l2359:
  2783  04F9  1441               	bsf	___lldiv@quotient,0
  2784  04FA                     l2361:
  2785  04FA  3001               	movlw	1
  2786  04FB                     u1605:
  2787  04FB  1003               	clrc
  2788  04FC  0CBC               	rrf	___lldiv@divisor+3,f
  2789  04FD  0CBB               	rrf	___lldiv@divisor+2,f
  2790  04FE  0CBA               	rrf	___lldiv@divisor+1,f
  2791  04FF  0CB9               	rrf	___lldiv@divisor,f
  2792  0500  3EFF               	addlw	-1
  2793  0501  1D03               	skipz
  2794  0502  2CFB               	goto	u1605
  2795  0503                     l2363:
  2796  0503  3001               	movlw	1
  2797  0504  02C5               	subwf	___lldiv@counter,f
  2798  0505  1D03               	btfss	3,2
  2799  0506  2D08               	goto	u1611
  2800  0507  2D09               	goto	u1610
  2801  0508                     u1611:
  2802  0508  2CD0               	goto	l2353
  2803  0509                     u1610:
  2804  0509                     l2365:
  2805  0509  0844               	movf	___lldiv@quotient+3,w
  2806  050A  00BC               	movwf	?___lldiv+3
  2807  050B  0843               	movf	___lldiv@quotient+2,w
  2808  050C  00BB               	movwf	?___lldiv+2
  2809  050D  0842               	movf	___lldiv@quotient+1,w
  2810  050E  00BA               	movwf	?___lldiv+1
  2811  050F  0841               	movf	___lldiv@quotient,w
  2812  0510  00B9               	movwf	?___lldiv
  2813  0511                     l499:
  2814  0511  0008               	return
  2815  0512                     __end_of___lldiv:
  2816                           
  2817                           	psect	text8
  2818  0344                     __ptext8:	
  2819 ;; *************** function _InitMPU6050 *****************
  2820 ;; Defined at:
  2821 ;;		line 13 in file "MPU.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;		None
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		wreg, status,2, status,0, pclath, cstack
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2835 ;;      Params:         0       0       0       0       0
  2836 ;;      Locals:         0       0       0       0       0
  2837 ;;      Temps:          3       0       0       0       0
  2838 ;;      Totals:         3       0       0       0       0
  2839 ;;Total ram usage:        3 bytes
  2840 ;; Hardware stack levels used: 1
  2841 ;; Hardware stack levels required when called: 3
  2842 ;; This function calls:
  2843 ;;		_I2CMasterStop
  2844 ;;		_I2CMasterWrite
  2845 ;;		_I2C_Master_Start
  2846 ;; This function is called by:
  2847 ;;		_setup
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851                           
  2852                           ;psect for function _InitMPU6050
  2853  0344                     _InitMPU6050:
  2854  0344                     l1839:	
  2855                           ;incstack = 0
  2856                           ; Regs used in _InitMPU6050: [wreg+status,2+status,0+pclath+cstack]
  2857                           
  2858                           
  2859                           ;MPU.c: 14:     _delay((unsigned long)((150)*(8000000/4000.0)));
  2860  0344  3002               	movlw	2
  2861  0345  00F6               	movwf	??_InitMPU6050+2
  2862  0346  3086               	movlw	134
  2863  0347  00F5               	movwf	??_InitMPU6050+1
  2864  0348  3099               	movlw	153
  2865  0349  00F4               	movwf	??_InitMPU6050
  2866  034A                     u1937:
  2867  034A  0BF4               	decfsz	??_InitMPU6050,f
  2868  034B  2B4A               	goto	u1937
  2869  034C  0BF5               	decfsz	??_InitMPU6050+1,f
  2870  034D  2B4A               	goto	u1937
  2871  034E  0BF6               	decfsz	??_InitMPU6050+2,f
  2872  034F  2B4A               	goto	u1937
  2873  0350                     l1841:
  2874                           
  2875                           ;MPU.c: 17:     I2C_Master_Start(Standard);
  2876  0350  3001               	movlw	1
  2877  0351  120A  118A  27CA  120A  118A  	fcall	_I2C_Master_Start
  2878  0356                     l1843:
  2879                           
  2880                           ;MPU.c: 18:     I2CMasterWrite(0b11010010 +0);
  2881  0356  30D2               	movlw	210
  2882  0357  120A  118A  27F5  120A  118A  	fcall	_I2CMasterWrite
  2883  035C                     l1845:
  2884                           
  2885                           ;MPU.c: 19:     I2CMasterWrite(0x6B);
  2886  035C  306B               	movlw	107
  2887  035D  120A  118A  27F5  120A  118A  	fcall	_I2CMasterWrite
  2888  0362                     l1847:
  2889                           
  2890                           ;MPU.c: 20:     I2CMasterWrite(0b00000001);
  2891  0362  3001               	movlw	1
  2892  0363  120A  118A  27F5  120A  118A  	fcall	_I2CMasterWrite
  2893  0368                     l1849:
  2894                           
  2895                           ;MPU.c: 24:     I2C_Master_Start(Repeated);
  2896  0368  3000               	movlw	0
  2897  0369  120A  118A  27CA  120A  118A  	fcall	_I2C_Master_Start
  2898  036E                     l1851:
  2899                           
  2900                           ;MPU.c: 25:     I2CMasterWrite(0b11010010 +0);
  2901  036E  30D2               	movlw	210
  2902  036F  120A  118A  27F5  120A  118A  	fcall	_I2CMasterWrite
  2903  0374                     l1853:
  2904                           
  2905                           ;MPU.c: 26:     I2CMasterWrite(0x1B);
  2906  0374  301B               	movlw	27
  2907  0375  120A  118A  27F5  120A  118A  	fcall	_I2CMasterWrite
  2908  037A                     l1855:
  2909                           
  2910                           ;MPU.c: 27:     I2CMasterWrite(0b00000000);
  2911  037A  3000               	movlw	0
  2912  037B  120A  118A  27F5  120A  118A  	fcall	_I2CMasterWrite
  2913  0380                     l1857:
  2914                           
  2915                           ;MPU.c: 31:     I2C_Master_Start(Repeated);
  2916  0380  3000               	movlw	0
  2917  0381  120A  118A  27CA  120A  118A  	fcall	_I2C_Master_Start
  2918  0386                     l1859:
  2919                           
  2920                           ;MPU.c: 32:     I2CMasterWrite(0b11010010 +0);
  2921  0386  30D2               	movlw	210
  2922  0387  120A  118A  27F5  120A  118A  	fcall	_I2CMasterWrite
  2923  038C                     l1861:
  2924                           
  2925                           ;MPU.c: 33:     I2CMasterWrite(0x1C);
  2926  038C  301C               	movlw	28
  2927  038D  120A  118A  27F5  120A  118A  	fcall	_I2CMasterWrite
  2928  0392                     l1863:
  2929                           
  2930                           ;MPU.c: 34:     I2CMasterWrite(0b00000000);
  2931  0392  3000               	movlw	0
  2932  0393  120A  118A  27F5  120A  118A  	fcall	_I2CMasterWrite
  2933  0398                     l1865:
  2934                           
  2935                           ;MPU.c: 37:     I2C_Master_Start(Repeated);
  2936  0398  3000               	movlw	0
  2937  0399  120A  118A  27CA  120A  118A  	fcall	_I2C_Master_Start
  2938  039E                     l1867:
  2939                           
  2940                           ;MPU.c: 38:     I2CMasterWrite(0b11010010 +0);
  2941  039E  30D2               	movlw	210
  2942  039F  120A  118A  27F5  120A  118A  	fcall	_I2CMasterWrite
  2943  03A4                     l1869:
  2944                           
  2945                           ;MPU.c: 39:     I2CMasterWrite(0x1A);
  2946  03A4  301A               	movlw	26
  2947  03A5  120A  118A  27F5  120A  118A  	fcall	_I2CMasterWrite
  2948  03AA                     l1871:
  2949                           
  2950                           ;MPU.c: 40:     I2CMasterWrite(0b00000000);
  2951  03AA  3000               	movlw	0
  2952  03AB  120A  118A  27F5  120A  118A  	fcall	_I2CMasterWrite
  2953  03B0                     l1873:
  2954                           
  2955                           ;MPU.c: 43:     I2C_Master_Start(Repeated);
  2956  03B0  3000               	movlw	0
  2957  03B1  120A  118A  27CA  120A  118A  	fcall	_I2C_Master_Start
  2958  03B6                     l1875:
  2959                           
  2960                           ;MPU.c: 44:     I2CMasterWrite(0b11010010 +0);
  2961  03B6  30D2               	movlw	210
  2962  03B7  120A  118A  27F5  120A  118A  	fcall	_I2CMasterWrite
  2963  03BC                     l1877:
  2964                           
  2965                           ;MPU.c: 45:     I2CMasterWrite(0x19);
  2966  03BC  3019               	movlw	25
  2967  03BD  120A  118A  27F5  120A  118A  	fcall	_I2CMasterWrite
  2968  03C2                     l1879:
  2969                           
  2970                           ;MPU.c: 46:     I2CMasterWrite(0b00000111);
  2971  03C2  3007               	movlw	7
  2972  03C3  120A  118A  27F5  120A  118A  	fcall	_I2CMasterWrite
  2973  03C8                     l1881:
  2974                           
  2975                           ;MPU.c: 48:     I2CMasterStop();
  2976  03C8  120A  158A  27EB  120A  118A  	fcall	_I2CMasterStop
  2977  03CD                     l322:
  2978  03CD  0008               	return
  2979  03CE                     __end_of_InitMPU6050:
  2980                           
  2981                           	psect	text9
  2982  07CA                     __ptext9:	
  2983 ;; *************** function _I2C_Master_Start *****************
  2984 ;; Defined at:
  2985 ;;		line 96 in file "I2C.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;  Modo_Inicio     1    wreg     enum E1305
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;  Modo_Inicio     1    3[COMMON] enum E1305
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  1    wreg      void 
  2992 ;; Registers used:
  2993 ;;		wreg, status,2, status,0, pclath, cstack
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2999 ;;      Params:         0       0       0       0       0
  3000 ;;      Locals:         1       0       0       0       0
  3001 ;;      Temps:          0       0       0       0       0
  3002 ;;      Totals:         1       0       0       0       0
  3003 ;;Total ram usage:        1 bytes
  3004 ;; Hardware stack levels used: 1
  3005 ;; Hardware stack levels required when called: 2
  3006 ;; This function calls:
  3007 ;;		_I2CMasterCheck
  3008 ;; This function is called by:
  3009 ;;		_main
  3010 ;;		_InitMPU6050
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           
  3015                           ;psect for function _I2C_Master_Start
  3016  07CA                     _I2C_Master_Start:
  3017                           
  3018                           ;incstack = 0
  3019                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3020                           ;I2C_Master_Start@Modo_Inicio stored from wreg
  3021  07CA  00F3               	movwf	I2C_Master_Start@Modo_Inicio
  3022  07CB                     l1679:
  3023                           
  3024                           ;I2C.c: 97:     I2CMasterCheck();
  3025  07CB  120A  118A  26F2  120A  118A  	fcall	_I2CMasterCheck
  3026  07D0                     l1681:
  3027                           
  3028                           ;I2C.c: 98:     if (Modo_Inicio == 1) SSPCON2bits.SEN = 1;
  3029  07D0  0373               	decf	I2C_Master_Start@Modo_Inicio,w
  3030  07D1  1D03               	btfss	3,2
  3031  07D2  2FD4               	goto	u781
  3032  07D3  2FD5               	goto	u780
  3033  07D4                     u781:
  3034  07D4  2FD8               	goto	l1685
  3035  07D5                     u780:
  3036  07D5                     l1683:
  3037  07D5  1683               	bsf	3,5	;RP0=1, select bank1
  3038  07D6  1303               	bcf	3,6	;RP1=0, select bank1
  3039  07D7  1411               	bsf	17,0	;volatile
  3040  07D8                     l1685:
  3041                           
  3042                           ;I2C.c: 99:     if (Modo_Inicio == 0) SSPCON2bits.RSEN = 1;
  3043  07D8  0873               	movf	I2C_Master_Start@Modo_Inicio,w
  3044  07D9  1D03               	btfss	3,2
  3045  07DA  2FDC               	goto	u791
  3046  07DB  2FDD               	goto	u790
  3047  07DC                     u791:
  3048  07DC  2FE0               	goto	l206
  3049  07DD                     u790:
  3050  07DD                     l1687:
  3051  07DD  1683               	bsf	3,5	;RP0=1, select bank1
  3052  07DE  1303               	bcf	3,6	;RP1=0, select bank1
  3053  07DF  1491               	bsf	17,1	;volatile
  3054  07E0                     l206:
  3055                           
  3056                           ;I2C.c: 100:     SSPIF = 0;
  3057  07E0  1283               	bcf	3,5	;RP0=0, select bank0
  3058  07E1  1303               	bcf	3,6	;RP1=0, select bank0
  3059  07E2  118C               	bcf	12,3	;volatile
  3060  07E3                     l207:
  3061  07E3  0008               	return
  3062  07E4                     __end_of_I2C_Master_Start:
  3063                           
  3064                           	psect	text10
  3065  07F5                     __ptext10:	
  3066 ;; *************** function _I2CMasterWrite *****************
  3067 ;; Defined at:
  3068 ;;		line 110 in file "I2C.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;  Datos           1    wreg     unsigned char 
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;  Datos           1    3[COMMON] unsigned char 
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      void 
  3075 ;; Registers used:
  3076 ;;		wreg, status,2, status,0, pclath, cstack
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3082 ;;      Params:         0       0       0       0       0
  3083 ;;      Locals:         1       0       0       0       0
  3084 ;;      Temps:          0       0       0       0       0
  3085 ;;      Totals:         1       0       0       0       0
  3086 ;;Total ram usage:        1 bytes
  3087 ;; Hardware stack levels used: 1
  3088 ;; Hardware stack levels required when called: 2
  3089 ;; This function calls:
  3090 ;;		_I2CMasterCheck
  3091 ;; This function is called by:
  3092 ;;		_main
  3093 ;;		_InitMPU6050
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           
  3098                           ;psect for function _I2CMasterWrite
  3099  07F5                     _I2CMasterWrite:
  3100                           
  3101                           ;incstack = 0
  3102                           ; Regs used in _I2CMasterWrite: [wreg+status,2+status,0+pclath+cstack]
  3103                           ;I2CMasterWrite@Datos stored from wreg
  3104  07F5  00F3               	movwf	I2CMasterWrite@Datos
  3105  07F6                     l1689:
  3106                           
  3107                           ;I2C.c: 111:     I2CMasterCheck();
  3108  07F6  120A  118A  26F2  120A  118A  	fcall	_I2CMasterCheck
  3109  07FB                     l1691:
  3110                           
  3111                           ;I2C.c: 112:     SSPBUF = Datos;
  3112  07FB  0873               	movf	I2CMasterWrite@Datos,w
  3113  07FC  1283               	bcf	3,5	;RP0=0, select bank0
  3114  07FD  1303               	bcf	3,6	;RP1=0, select bank0
  3115  07FE  0093               	movwf	19	;volatile
  3116  07FF                     l213:
  3117  07FF  0008               	return
  3118  0800                     __end_of_I2CMasterWrite:
  3119                           
  3120                           	psect	text11
  3121  0FEB                     __ptext11:	
  3122 ;; *************** function _I2CMasterStop *****************
  3123 ;; Defined at:
  3124 ;;		line 104 in file "I2C.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;		None
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;		None
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  1    wreg      void 
  3131 ;; Registers used:
  3132 ;;		wreg, status,2, status,0, pclath, cstack
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3138 ;;      Params:         0       0       0       0       0
  3139 ;;      Locals:         0       0       0       0       0
  3140 ;;      Temps:          0       0       0       0       0
  3141 ;;      Totals:         0       0       0       0       0
  3142 ;;Total ram usage:        0 bytes
  3143 ;; Hardware stack levels used: 1
  3144 ;; Hardware stack levels required when called: 2
  3145 ;; This function calls:
  3146 ;;		_I2CMasterCheck
  3147 ;; This function is called by:
  3148 ;;		_main
  3149 ;;		_InitMPU6050
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           
  3154                           ;psect for function _I2CMasterStop
  3155  0FEB                     _I2CMasterStop:
  3156  0FEB                     l1693:	
  3157                           ;incstack = 0
  3158                           ; Regs used in _I2CMasterStop: [wreg+status,2+status,0+pclath+cstack]
  3159                           
  3160                           
  3161                           ;I2C.c: 105:     I2CMasterCheck();
  3162  0FEB  120A  118A  26F2  120A  158A  	fcall	_I2CMasterCheck
  3163  0FF0                     l1695:
  3164                           
  3165                           ;I2C.c: 106:     SSPCON2bits.PEN = 1;
  3166  0FF0  1683               	bsf	3,5	;RP0=1, select bank1
  3167  0FF1  1303               	bcf	3,6	;RP1=0, select bank1
  3168  0FF2  1511               	bsf	17,2	;volatile
  3169  0FF3                     l210:
  3170  0FF3  0008               	return
  3171  0FF4                     __end_of_I2CMasterStop:
  3172                           
  3173                           	psect	text12
  3174  0512                     __ptext12:	
  3175 ;; *************** function _Iniciar_LCD *****************
  3176 ;; Defined at:
  3177 ;;		line 30 in file "LCD.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;		None
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;		None
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  1    wreg      void 
  3184 ;; Registers used:
  3185 ;;		wreg, status,2, status,0, pclath, cstack
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3191 ;;      Params:         0       0       0       0       0
  3192 ;;      Locals:         0       0       0       0       0
  3193 ;;      Temps:          2       0       0       0       0
  3194 ;;      Totals:         2       0       0       0       0
  3195 ;;Total ram usage:        2 bytes
  3196 ;; Hardware stack levels used: 1
  3197 ;; Hardware stack levels required when called: 3
  3198 ;; This function calls:
  3199 ;;		_Escribir_comandoLCD
  3200 ;; This function is called by:
  3201 ;;		_setup
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           
  3206                           ;psect for function _Iniciar_LCD
  3207  0512                     _Iniciar_LCD:
  3208  0512                     l2451:	
  3209                           ;incstack = 0
  3210                           ; Regs used in _Iniciar_LCD: [wreg+status,2+status,0+pclath+cstack]
  3211                           
  3212                           
  3213                           ;LCD.c: 31:     PORTDbits.RD3 = 0;
  3214  0512  1283               	bcf	3,5	;RP0=0, select bank0
  3215  0513  1303               	bcf	3,6	;RP1=0, select bank0
  3216  0514  1188               	bcf	8,3	;volatile
  3217                           
  3218                           ;LCD.c: 32:     PORTDbits.RD4 = 0;
  3219  0515  1208               	bcf	8,4	;volatile
  3220  0516                     l2453:
  3221                           
  3222                           ;LCD.c: 34:     _delay((unsigned long)((14)*(8000000/4000.0)));
  3223  0516  3025               	movlw	37
  3224  0517  00F6               	movwf	??_Iniciar_LCD+1
  3225  0518  305B               	movlw	91
  3226  0519  00F5               	movwf	??_Iniciar_LCD
  3227  051A                     u1947:
  3228  051A  0BF5               	decfsz	??_Iniciar_LCD,f
  3229  051B  2D1A               	goto	u1947
  3230  051C  0BF6               	decfsz	??_Iniciar_LCD+1,f
  3231  051D  2D1A               	goto	u1947
  3232  051E  2D1F               	nop2
  3233  051F                     l2455:
  3234                           
  3235                           ;LCD.c: 35:     Escribir_comandoLCD(0b00110000);
  3236  051F  3030               	movlw	48
  3237  0520  120A  118A  2662  120A  118A  	fcall	_Escribir_comandoLCD
  3238  0525                     l2457:
  3239                           
  3240                           ;LCD.c: 36:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3241  0525  300B               	movlw	11
  3242  0526  00F6               	movwf	??_Iniciar_LCD+1
  3243  0527  3062               	movlw	98
  3244  0528  00F5               	movwf	??_Iniciar_LCD
  3245  0529                     u1957:
  3246  0529  0BF5               	decfsz	??_Iniciar_LCD,f
  3247  052A  2D29               	goto	u1957
  3248  052B  0BF6               	decfsz	??_Iniciar_LCD+1,f
  3249  052C  2D29               	goto	u1957
  3250  052D  0000               	nop
  3251                           
  3252                           ;LCD.c: 37:     Escribir_comandoLCD(0b00110000);
  3253  052E  3030               	movlw	48
  3254  052F  120A  118A  2662  120A  118A  	fcall	_Escribir_comandoLCD
  3255  0534                     l2459:
  3256                           
  3257                           ;LCD.c: 38:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3258  0534  3042               	movlw	66
  3259  0535  00F5               	movwf	??_Iniciar_LCD
  3260  0536                     u1967:
  3261  0536  0BF5               	decfsz	??_Iniciar_LCD,f
  3262  0537  2D36               	goto	u1967
  3263  0538  0000               	nop
  3264  0539                     l2461:
  3265                           
  3266                           ;LCD.c: 39:     Escribir_comandoLCD(0b00110000);
  3267  0539  3030               	movlw	48
  3268  053A  120A  118A  2662  120A  118A  	fcall	_Escribir_comandoLCD
  3269                           
  3270                           ;LCD.c: 42:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3271  053F  3042               	movlw	66
  3272  0540  00F5               	movwf	??_Iniciar_LCD
  3273  0541                     u1977:
  3274  0541  0BF5               	decfsz	??_Iniciar_LCD,f
  3275  0542  2D41               	goto	u1977
  3276  0543  0000               	nop
  3277  0544                     l2463:
  3278                           
  3279                           ;LCD.c: 43:     Escribir_comandoLCD(0b00111000);
  3280  0544  3038               	movlw	56
  3281  0545  120A  118A  2662  120A  118A  	fcall	_Escribir_comandoLCD
  3282  054A                     l2465:
  3283                           
  3284                           ;LCD.c: 44:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3285  054A  3042               	movlw	66
  3286  054B  00F5               	movwf	??_Iniciar_LCD
  3287  054C                     u1987:
  3288  054C  0BF5               	decfsz	??_Iniciar_LCD,f
  3289  054D  2D4C               	goto	u1987
  3290  054E  0000               	nop
  3291                           
  3292                           ;LCD.c: 45:     Escribir_comandoLCD(0b00001000);
  3293  054F  3008               	movlw	8
  3294  0550  120A  118A  2662  120A  118A  	fcall	_Escribir_comandoLCD
  3295  0555                     l2467:
  3296                           
  3297                           ;LCD.c: 46:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3298  0555  3042               	movlw	66
  3299  0556  00F5               	movwf	??_Iniciar_LCD
  3300  0557                     u1997:
  3301  0557  0BF5               	decfsz	??_Iniciar_LCD,f
  3302  0558  2D57               	goto	u1997
  3303  0559  0000               	nop
  3304  055A                     l2469:
  3305                           
  3306                           ;LCD.c: 47:     Escribir_comandoLCD(0b00000001);
  3307  055A  3001               	movlw	1
  3308  055B  120A  118A  2662  120A  118A  	fcall	_Escribir_comandoLCD
  3309                           
  3310                           ;LCD.c: 48:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3311  0560  3042               	movlw	66
  3312  0561  00F5               	movwf	??_Iniciar_LCD
  3313  0562                     u2007:
  3314  0562  0BF5               	decfsz	??_Iniciar_LCD,f
  3315  0563  2D62               	goto	u2007
  3316  0564  0000               	nop
  3317  0565                     l2471:
  3318                           
  3319                           ;LCD.c: 49:     Escribir_comandoLCD(0b00000110);
  3320  0565  3006               	movlw	6
  3321  0566  120A  118A  2662  120A  118A  	fcall	_Escribir_comandoLCD
  3322  056B                     l2473:
  3323                           
  3324                           ;LCD.c: 50:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3325  056B  3042               	movlw	66
  3326  056C  00F5               	movwf	??_Iniciar_LCD
  3327  056D                     u2017:
  3328  056D  0BF5               	decfsz	??_Iniciar_LCD,f
  3329  056E  2D6D               	goto	u2017
  3330  056F  0000               	nop
  3331                           
  3332                           ;LCD.c: 51:     Escribir_comandoLCD(0b00001100);
  3333  0570  300C               	movlw	12
  3334  0571  120A  118A  2662  120A  118A  	fcall	_Escribir_comandoLCD
  3335  0576                     l249:
  3336  0576  0008               	return
  3337  0577                     __end_of_Iniciar_LCD:
  3338                           
  3339                           	psect	text13
  3340  078A                     __ptext13:	
  3341 ;; *************** function _Escribir_stringLCD *****************
  3342 ;; Defined at:
  3343 ;;		line 55 in file "LCD.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;  d               1    wreg     PTR const unsigned char 
  3346 ;;		 -> STR_3(13), STR_2(15), STR_1(16), 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;  d               1    7[COMMON] PTR const unsigned char 
  3349 ;;		 -> STR_3(13), STR_2(15), STR_1(16), 
  3350 ;;  i               1    6[COMMON] unsigned char 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  1    wreg      void 
  3353 ;; Registers used:
  3354 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3360 ;;      Params:         0       0       0       0       0
  3361 ;;      Locals:         2       0       0       0       0
  3362 ;;      Temps:          1       0       0       0       0
  3363 ;;      Totals:         3       0       0       0       0
  3364 ;;Total ram usage:        3 bytes
  3365 ;; Hardware stack levels used: 1
  3366 ;; Hardware stack levels required when called: 3
  3367 ;; This function calls:
  3368 ;;		_Escribir_comandoLCD
  3369 ;; This function is called by:
  3370 ;;		_main
  3371 ;;		_setup
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           
  3376                           ;psect for function _Escribir_stringLCD
  3377  078A                     _Escribir_stringLCD:
  3378                           
  3379                           ;incstack = 0
  3380                           ; Regs used in _Escribir_stringLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3381                           ;Escribir_stringLCD@d stored from wreg
  3382  078A  00F7               	movwf	Escribir_stringLCD@d
  3383  078B                     l2393:
  3384                           
  3385                           ;LCD.c: 56:     PORTDbits.RD3 = 1; PORTDbits.RD4 = 0;
  3386  078B  1283               	bcf	3,5	;RP0=0, select bank0
  3387  078C  1303               	bcf	3,6	;RP1=0, select bank0
  3388  078D  1588               	bsf	8,3	;volatile
  3389  078E  1208               	bcf	8,4	;volatile
  3390  078F                     l2395:
  3391                           
  3392                           ;LCD.c: 58:     for (char i=0; d[i]!='\0'; i++){
  3393  078F  01F6               	clrf	Escribir_stringLCD@i
  3394  0790  2FA2               	goto	l2401
  3395  0791                     l2397:
  3396                           
  3397                           ;LCD.c: 59:         Escribir_comandoLCD(d[i]);
  3398  0791  0876               	movf	Escribir_stringLCD@i,w
  3399  0792  0777               	addwf	Escribir_stringLCD@d,w
  3400  0793  0084               	movwf	4
  3401  0794  120A  118A  2700  120A  118A  	fcall	stringdir
  3402  0799  120A  118A  2662  120A  118A  	fcall	_Escribir_comandoLCD
  3403  079E                     l2399:
  3404                           
  3405                           ;LCD.c: 60:     }
  3406  079E  3001               	movlw	1
  3407  079F  00F5               	movwf	??_Escribir_stringLCD
  3408  07A0  0875               	movf	??_Escribir_stringLCD,w
  3409  07A1  07F6               	addwf	Escribir_stringLCD@i,f
  3410  07A2                     l2401:
  3411  07A2  0876               	movf	Escribir_stringLCD@i,w
  3412  07A3  0777               	addwf	Escribir_stringLCD@d,w
  3413  07A4  0084               	movwf	4
  3414  07A5  120A  118A  2700  120A  118A  	fcall	stringdir
  3415  07AA  3A00               	xorlw	0
  3416  07AB  1D03               	skipz
  3417  07AC  2FAE               	goto	u1661
  3418  07AD  2FAF               	goto	u1660
  3419  07AE                     u1661:
  3420  07AE  2F91               	goto	l2397
  3421  07AF                     u1660:
  3422  07AF                     l255:
  3423  07AF  0008               	return
  3424  07B0                     __end_of_Escribir_stringLCD:
  3425                           
  3426                           	psect	text14
  3427  0294                     __ptext14:	
  3428 ;; *************** function _Config_USART *****************
  3429 ;; Defined at:
  3430 ;;		line 13 in file "UART.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;  baud_rate       2    3[COMMON] int 
  3433 ;;  Freq            2    5[COMMON] int 
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;		None
  3436 ;; Return value:  Size  Location     Type
  3437 ;;                  1    wreg      void 
  3438 ;; Registers used:
  3439 ;;		wreg, status,2, status,0
  3440 ;; Tracked objects:
  3441 ;;		On entry : 0/0
  3442 ;;		On exit  : 0/0
  3443 ;;		Unchanged: 0/0
  3444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3445 ;;      Params:         4       0       0       0       0
  3446 ;;      Locals:         0       0       0       0       0
  3447 ;;      Temps:          0       0       0       0       0
  3448 ;;      Totals:         4       0       0       0       0
  3449 ;;Total ram usage:        4 bytes
  3450 ;; Hardware stack levels used: 1
  3451 ;; Hardware stack levels required when called: 1
  3452 ;; This function calls:
  3453 ;;		Nothing
  3454 ;; This function is called by:
  3455 ;;		_setup
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459                           
  3460                           ;psect for function _Config_USART
  3461  0294                     _Config_USART:
  3462  0294                     l1917:	
  3463                           ;incstack = 0
  3464                           ; Regs used in _Config_USART: [wreg+status,2+status,0]
  3465                           
  3466                           
  3467                           ;UART.c: 14:     if(baud_rate == 9600 && Freq == 4){
  3468  0294  3080               	movlw	128
  3469  0295  0673               	xorwf	Config_USART@baud_rate,w
  3470  0296  3025               	movlw	37
  3471  0297  1903               	skipnz
  3472  0298  0674               	xorwf	Config_USART@baud_rate+1,w
  3473  0299  1D03               	btfss	3,2
  3474  029A  2A9C               	goto	u1121
  3475  029B  2A9D               	goto	u1120
  3476  029C                     u1121:
  3477  029C  2AB0               	goto	l1927
  3478  029D                     u1120:
  3479  029D                     l1919:
  3480  029D  3004               	movlw	4
  3481  029E  0675               	xorwf	Config_USART@Freq,w
  3482  029F  0476               	iorwf	Config_USART@Freq+1,w
  3483  02A0  1D03               	btfss	3,2
  3484  02A1  2AA3               	goto	u1131
  3485  02A2  2AA4               	goto	u1130
  3486  02A3                     u1131:
  3487  02A3  2AB0               	goto	l1927
  3488  02A4                     u1130:
  3489  02A4                     l1921:
  3490                           
  3491                           ;UART.c: 15:         TXSTAbits.SYNC = 0;
  3492  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  3493  02A5  1303               	bcf	3,6	;RP1=0, select bank1
  3494  02A6  1218               	bcf	24,4	;volatile
  3495                           
  3496                           ;UART.c: 16:         TXSTAbits.BRGH = 1;
  3497  02A7  1518               	bsf	24,2	;volatile
  3498                           
  3499                           ;UART.c: 18:         BAUDCTLbits.BRG16 = 0;
  3500  02A8  1683               	bsf	3,5	;RP0=1, select bank3
  3501  02A9  1703               	bsf	3,6	;RP1=1, select bank3
  3502  02AA  1187               	bcf	7,3	;volatile
  3503  02AB                     l1923:
  3504                           
  3505                           ;UART.c: 20:         SPBRG = 25;
  3506  02AB  3019               	movlw	25
  3507  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  3508  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  3509  02AE  0099               	movwf	25	;volatile
  3510  02AF                     l1925:
  3511                           
  3512                           ;UART.c: 21:         SPBRGH = 0;
  3513  02AF  019A               	clrf	26	;volatile
  3514  02B0                     l1927:
  3515                           
  3516                           ;UART.c: 24:     if(baud_rate == 9600 && Freq == 8){
  3517  02B0  3080               	movlw	128
  3518  02B1  0673               	xorwf	Config_USART@baud_rate,w
  3519  02B2  3025               	movlw	37
  3520  02B3  1903               	skipnz
  3521  02B4  0674               	xorwf	Config_USART@baud_rate+1,w
  3522  02B5  1D03               	btfss	3,2
  3523  02B6  2AB8               	goto	u1141
  3524  02B7  2AB9               	goto	u1140
  3525  02B8                     u1141:
  3526  02B8  2ACC               	goto	l1937
  3527  02B9                     u1140:
  3528  02B9                     l1929:
  3529  02B9  3008               	movlw	8
  3530  02BA  0675               	xorwf	Config_USART@Freq,w
  3531  02BB  0476               	iorwf	Config_USART@Freq+1,w
  3532  02BC  1D03               	btfss	3,2
  3533  02BD  2ABF               	goto	u1151
  3534  02BE  2AC0               	goto	u1150
  3535  02BF                     u1151:
  3536  02BF  2ACC               	goto	l1937
  3537  02C0                     u1150:
  3538  02C0                     l1931:
  3539                           
  3540                           ;UART.c: 25:         TXSTAbits.SYNC = 0;
  3541  02C0  1683               	bsf	3,5	;RP0=1, select bank1
  3542  02C1  1303               	bcf	3,6	;RP1=0, select bank1
  3543  02C2  1218               	bcf	24,4	;volatile
  3544                           
  3545                           ;UART.c: 26:         TXSTAbits.BRGH = 0;
  3546  02C3  1118               	bcf	24,2	;volatile
  3547                           
  3548                           ;UART.c: 28:         BAUDCTLbits.BRG16 = 1;
  3549  02C4  1683               	bsf	3,5	;RP0=1, select bank3
  3550  02C5  1703               	bsf	3,6	;RP1=1, select bank3
  3551  02C6  1587               	bsf	7,3	;volatile
  3552  02C7                     l1933:
  3553                           
  3554                           ;UART.c: 30:         SPBRG = 51;
  3555  02C7  3033               	movlw	51
  3556  02C8  1683               	bsf	3,5	;RP0=1, select bank1
  3557  02C9  1303               	bcf	3,6	;RP1=0, select bank1
  3558  02CA  0099               	movwf	25	;volatile
  3559  02CB                     l1935:
  3560                           
  3561                           ;UART.c: 31:         SPBRGH = 0;
  3562  02CB  019A               	clrf	26	;volatile
  3563  02CC                     l1937:
  3564                           
  3565                           ;UART.c: 34:     if(baud_rate == 9600 && Freq == 1){
  3566  02CC  3080               	movlw	128
  3567  02CD  0673               	xorwf	Config_USART@baud_rate,w
  3568  02CE  3025               	movlw	37
  3569  02CF  1903               	skipnz
  3570  02D0  0674               	xorwf	Config_USART@baud_rate+1,w
  3571  02D1  1D03               	btfss	3,2
  3572  02D2  2AD4               	goto	u1161
  3573  02D3  2AD5               	goto	u1160
  3574  02D4                     u1161:
  3575  02D4  2AE7               	goto	l1947
  3576  02D5                     u1160:
  3577  02D5                     l1939:
  3578  02D5  0375               	decf	Config_USART@Freq,w
  3579  02D6  0476               	iorwf	Config_USART@Freq+1,w
  3580  02D7  1D03               	btfss	3,2
  3581  02D8  2ADA               	goto	u1171
  3582  02D9  2ADB               	goto	u1170
  3583  02DA                     u1171:
  3584  02DA  2AE7               	goto	l1947
  3585  02DB                     u1170:
  3586  02DB                     l1941:
  3587                           
  3588                           ;UART.c: 35:         TXSTAbits.SYNC = 0;
  3589  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  3590  02DC  1303               	bcf	3,6	;RP1=0, select bank1
  3591  02DD  1218               	bcf	24,4	;volatile
  3592                           
  3593                           ;UART.c: 36:         TXSTAbits.BRGH = 1;
  3594  02DE  1518               	bsf	24,2	;volatile
  3595                           
  3596                           ;UART.c: 38:         BAUDCTLbits.BRG16 = 1;
  3597  02DF  1683               	bsf	3,5	;RP0=1, select bank3
  3598  02E0  1703               	bsf	3,6	;RP1=1, select bank3
  3599  02E1  1587               	bsf	7,3	;volatile
  3600  02E2                     l1943:
  3601                           
  3602                           ;UART.c: 40:         SPBRG = 25;
  3603  02E2  3019               	movlw	25
  3604  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  3605  02E4  1303               	bcf	3,6	;RP1=0, select bank1
  3606  02E5  0099               	movwf	25	;volatile
  3607  02E6                     l1945:
  3608                           
  3609                           ;UART.c: 41:         SPBRGH = 0;
  3610  02E6  019A               	clrf	26	;volatile
  3611  02E7                     l1947:
  3612                           
  3613                           ;UART.c: 44:     if(baud_rate == 10417 && Freq == 4){
  3614  02E7  30B1               	movlw	177
  3615  02E8  0673               	xorwf	Config_USART@baud_rate,w
  3616  02E9  3028               	movlw	40
  3617  02EA  1903               	skipnz
  3618  02EB  0674               	xorwf	Config_USART@baud_rate+1,w
  3619  02EC  1D03               	btfss	3,2
  3620  02ED  2AEF               	goto	u1181
  3621  02EE  2AF0               	goto	u1180
  3622  02EF                     u1181:
  3623  02EF  2B03               	goto	l1957
  3624  02F0                     u1180:
  3625  02F0                     l1949:
  3626  02F0  3004               	movlw	4
  3627  02F1  0675               	xorwf	Config_USART@Freq,w
  3628  02F2  0476               	iorwf	Config_USART@Freq+1,w
  3629  02F3  1D03               	btfss	3,2
  3630  02F4  2AF6               	goto	u1191
  3631  02F5  2AF7               	goto	u1190
  3632  02F6                     u1191:
  3633  02F6  2B03               	goto	l1957
  3634  02F7                     u1190:
  3635  02F7                     l1951:
  3636                           
  3637                           ;UART.c: 45:         TXSTAbits.SYNC = 0;
  3638  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  3639  02F8  1303               	bcf	3,6	;RP1=0, select bank1
  3640  02F9  1218               	bcf	24,4	;volatile
  3641                           
  3642                           ;UART.c: 46:         TXSTAbits.BRGH = 1;
  3643  02FA  1518               	bsf	24,2	;volatile
  3644                           
  3645                           ;UART.c: 48:         BAUDCTLbits.BRG16 = 1;
  3646  02FB  1683               	bsf	3,5	;RP0=1, select bank3
  3647  02FC  1703               	bsf	3,6	;RP1=1, select bank3
  3648  02FD  1587               	bsf	7,3	;volatile
  3649  02FE                     l1953:
  3650                           
  3651                           ;UART.c: 50:         SPBRG = 23;
  3652  02FE  3017               	movlw	23
  3653  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  3654  0300  1303               	bcf	3,6	;RP1=0, select bank1
  3655  0301  0099               	movwf	25	;volatile
  3656  0302                     l1955:
  3657                           
  3658                           ;UART.c: 51:         SPBRGH = 0;
  3659  0302  019A               	clrf	26	;volatile
  3660  0303                     l1957:
  3661                           
  3662                           ;UART.c: 54:     if(baud_rate == 10417 && Freq == 8){
  3663  0303  30B1               	movlw	177
  3664  0304  0673               	xorwf	Config_USART@baud_rate,w
  3665  0305  3028               	movlw	40
  3666  0306  1903               	skipnz
  3667  0307  0674               	xorwf	Config_USART@baud_rate+1,w
  3668  0308  1D03               	btfss	3,2
  3669  0309  2B0B               	goto	u1201
  3670  030A  2B0C               	goto	u1200
  3671  030B                     u1201:
  3672  030B  2B1F               	goto	l1967
  3673  030C                     u1200:
  3674  030C                     l1959:
  3675  030C  3008               	movlw	8
  3676  030D  0675               	xorwf	Config_USART@Freq,w
  3677  030E  0476               	iorwf	Config_USART@Freq+1,w
  3678  030F  1D03               	btfss	3,2
  3679  0310  2B12               	goto	u1211
  3680  0311  2B13               	goto	u1210
  3681  0312                     u1211:
  3682  0312  2B1F               	goto	l1967
  3683  0313                     u1210:
  3684  0313                     l1961:
  3685                           
  3686                           ;UART.c: 55:         TXSTAbits.SYNC = 0;
  3687  0313  1683               	bsf	3,5	;RP0=1, select bank1
  3688  0314  1303               	bcf	3,6	;RP1=0, select bank1
  3689  0315  1218               	bcf	24,4	;volatile
  3690                           
  3691                           ;UART.c: 56:         TXSTAbits.BRGH = 0;
  3692  0316  1118               	bcf	24,2	;volatile
  3693                           
  3694                           ;UART.c: 58:         BAUDCTLbits.BRG16 = 1;
  3695  0317  1683               	bsf	3,5	;RP0=1, select bank3
  3696  0318  1703               	bsf	3,6	;RP1=1, select bank3
  3697  0319  1587               	bsf	7,3	;volatile
  3698  031A                     l1963:
  3699                           
  3700                           ;UART.c: 60:         SPBRG = 47;
  3701  031A  302F               	movlw	47
  3702  031B  1683               	bsf	3,5	;RP0=1, select bank1
  3703  031C  1303               	bcf	3,6	;RP1=0, select bank1
  3704  031D  0099               	movwf	25	;volatile
  3705  031E                     l1965:
  3706                           
  3707                           ;UART.c: 61:         SPBRGH = 0;
  3708  031E  019A               	clrf	26	;volatile
  3709  031F                     l1967:
  3710                           
  3711                           ;UART.c: 64:     if(baud_rate == 10417 && Freq == 1){
  3712  031F  30B1               	movlw	177
  3713  0320  0673               	xorwf	Config_USART@baud_rate,w
  3714  0321  3028               	movlw	40
  3715  0322  1903               	skipnz
  3716  0323  0674               	xorwf	Config_USART@baud_rate+1,w
  3717  0324  1D03               	btfss	3,2
  3718  0325  2B27               	goto	u1221
  3719  0326  2B28               	goto	u1220
  3720  0327                     u1221:
  3721  0327  2B3A               	goto	l1977
  3722  0328                     u1220:
  3723  0328                     l1969:
  3724  0328  0375               	decf	Config_USART@Freq,w
  3725  0329  0476               	iorwf	Config_USART@Freq+1,w
  3726  032A  1D03               	btfss	3,2
  3727  032B  2B2D               	goto	u1231
  3728  032C  2B2E               	goto	u1230
  3729  032D                     u1231:
  3730  032D  2B3A               	goto	l1977
  3731  032E                     u1230:
  3732  032E                     l1971:
  3733                           
  3734                           ;UART.c: 65:         TXSTAbits.SYNC = 0;
  3735  032E  1683               	bsf	3,5	;RP0=1, select bank1
  3736  032F  1303               	bcf	3,6	;RP1=0, select bank1
  3737  0330  1218               	bcf	24,4	;volatile
  3738                           
  3739                           ;UART.c: 66:         TXSTAbits.BRGH = 0;
  3740  0331  1118               	bcf	24,2	;volatile
  3741                           
  3742                           ;UART.c: 68:         BAUDCTLbits.BRG16 = 1;
  3743  0332  1683               	bsf	3,5	;RP0=1, select bank3
  3744  0333  1703               	bsf	3,6	;RP1=1, select bank3
  3745  0334  1587               	bsf	7,3	;volatile
  3746  0335                     l1973:
  3747                           
  3748                           ;UART.c: 70:         SPBRG = 5;
  3749  0335  3005               	movlw	5
  3750  0336  1683               	bsf	3,5	;RP0=1, select bank1
  3751  0337  1303               	bcf	3,6	;RP1=0, select bank1
  3752  0338  0099               	movwf	25	;volatile
  3753  0339                     l1975:
  3754                           
  3755                           ;UART.c: 71:         SPBRGH = 0;
  3756  0339  019A               	clrf	26	;volatile
  3757  033A                     l1977:
  3758                           
  3759                           ;UART.c: 74:     RCSTAbits.SPEN = 1;
  3760  033A  1283               	bcf	3,5	;RP0=0, select bank0
  3761  033B  1303               	bcf	3,6	;RP1=0, select bank0
  3762  033C  1798               	bsf	24,7	;volatile
  3763  033D                     l1979:
  3764                           
  3765                           ;UART.c: 75:     RCSTAbits.RX9 = 0;
  3766  033D  1318               	bcf	24,6	;volatile
  3767  033E                     l1981:
  3768                           
  3769                           ;UART.c: 76:     RCSTAbits.CREN = 1;
  3770  033E  1618               	bsf	24,4	;volatile
  3771  033F                     l1983:
  3772                           
  3773                           ;UART.c: 78:     TXSTAbits.TXEN = 1;
  3774  033F  1683               	bsf	3,5	;RP0=1, select bank1
  3775  0340  1303               	bcf	3,6	;RP1=0, select bank1
  3776  0341  1698               	bsf	24,5	;volatile
  3777  0342                     l1985:
  3778                           
  3779                           ;UART.c: 79:     PIE1bits.RCIE = 0;
  3780  0342  128C               	bcf	12,5	;volatile
  3781  0343                     l305:
  3782  0343  0008               	return
  3783  0344                     __end_of_Config_USART:
  3784                           
  3785                           	psect	text15
  3786  05D2                     __ptext15:	
  3787 ;; *************** function _divisor_dec *****************
  3788 ;; Defined at:
  3789 ;;		line 253 in file "Maestro I2C.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;  b               2    4[BANK0 ] int 
  3792 ;;  dig1            1    6[BANK0 ] PTR unsigned char 
  3793 ;;		 -> Giro_digy(1), Giro_digx(1), 
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;  n               2    9[BANK0 ] int 
  3796 ;; Return value:  Size  Location     Type
  3797 ;;                  1    wreg      void 
  3798 ;; Registers used:
  3799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3805 ;;      Params:         0       3       0       0       0
  3806 ;;      Locals:         0       2       0       0       0
  3807 ;;      Temps:          0       2       0       0       0
  3808 ;;      Totals:         0       7       0       0       0
  3809 ;;Total ram usage:        7 bytes
  3810 ;; Hardware stack levels used: 1
  3811 ;; Hardware stack levels required when called: 2
  3812 ;; This function calls:
  3813 ;;		___awdiv
  3814 ;;		___awmod
  3815 ;; This function is called by:
  3816 ;;		_main
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           
  3821                           ;psect for function _divisor_dec
  3822  05D2                     _divisor_dec:
  3823  05D2                     l2549:	
  3824                           ;incstack = 0
  3825                           ; Regs used in _divisor_dec: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3826                           
  3827                           
  3828                           ;Maestro I2C.c: 254:     for(int n = 0; n<3 ; n++){
  3829  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  3830  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  3831  05D4  01C2               	clrf	divisor_dec@n
  3832  05D5  01C3               	clrf	divisor_dec@n+1
  3833  05D6                     l2555:
  3834                           
  3835                           ;Maestro I2C.c: 255:         dig1[n] = b % 10;
  3836  05D6  300A               	movlw	10
  3837  05D7  00F3               	movwf	___awmod@divisor
  3838  05D8  3000               	movlw	0
  3839  05D9  00F4               	movwf	___awmod@divisor+1
  3840  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  3841  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  3842  05DC  083E               	movf	divisor_dec@b+1,w
  3843  05DD  00F6               	movwf	___awmod@dividend+1
  3844  05DE  083D               	movf	divisor_dec@b,w
  3845  05DF  00F5               	movwf	___awmod@dividend
  3846  05E0  120A  118A  2577  120A  118A  	fcall	___awmod
  3847  05E5  0873               	movf	?___awmod,w
  3848  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  3849  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  3850  05E8  00C0               	movwf	??_divisor_dec
  3851  05E9  0842               	movf	divisor_dec@n,w
  3852  05EA  073F               	addwf	divisor_dec@dig1,w
  3853  05EB  00C1               	movwf	??_divisor_dec+1
  3854  05EC  0841               	movf	??_divisor_dec+1,w
  3855  05ED  0084               	movwf	4
  3856  05EE  0840               	movf	??_divisor_dec,w
  3857  05EF  0080               	movwf	0
  3858                           
  3859                           ;Maestro I2C.c: 256:         b = (b - dig1[n])/10;
  3860  05F0  300A               	movlw	10
  3861  05F1  00F3               	movwf	___awdiv@divisor
  3862  05F2  3000               	movlw	0
  3863  05F3  00F4               	movwf	___awdiv@divisor+1
  3864  05F4  0842               	movf	divisor_dec@n,w
  3865  05F5  073F               	addwf	divisor_dec@dig1,w
  3866  05F6  00C0               	movwf	??_divisor_dec
  3867  05F7  0840               	movf	??_divisor_dec,w
  3868  05F8  0084               	movwf	4
  3869  05F9  0800               	movf	0,w
  3870  05FA  023D               	subwf	divisor_dec@b,w
  3871  05FB  00F5               	movwf	___awdiv@dividend
  3872  05FC  083E               	movf	divisor_dec@b+1,w
  3873  05FD  1C03               	skipc
  3874  05FE  033E               	decf	divisor_dec@b+1,w
  3875  05FF  00F6               	movwf	___awdiv@dividend+1
  3876  0600  120A  118A  2441  120A  118A  	fcall	___awdiv
  3877  0605  0874               	movf	?___awdiv+1,w
  3878  0606  1283               	bcf	3,5	;RP0=0, select bank0
  3879  0607  1303               	bcf	3,6	;RP1=0, select bank0
  3880  0608  00BE               	movwf	divisor_dec@b+1
  3881  0609  0873               	movf	?___awdiv,w
  3882  060A  00BD               	movwf	divisor_dec@b
  3883  060B                     l2557:
  3884                           
  3885                           ;Maestro I2C.c: 257:     }
  3886  060B  3001               	movlw	1
  3887  060C  07C2               	addwf	divisor_dec@n,f
  3888  060D  1803               	skipnc
  3889  060E  0AC3               	incf	divisor_dec@n+1,f
  3890  060F  3000               	movlw	0
  3891  0610  07C3               	addwf	divisor_dec@n+1,f
  3892  0611                     l2559:
  3893  0611  0843               	movf	divisor_dec@n+1,w
  3894  0612  3A80               	xorlw	128
  3895  0613  00FF               	movwf	btemp+1
  3896  0614  3080               	movlw	128
  3897  0615  027F               	subwf	btemp+1,w
  3898  0616  1D03               	skipz
  3899  0617  2E1A               	goto	u1845
  3900  0618  3003               	movlw	3
  3901  0619  0242               	subwf	divisor_dec@n,w
  3902  061A                     u1845:
  3903  061A  1C03               	skipc
  3904  061B  2E1D               	goto	u1841
  3905  061C  2E1E               	goto	u1840
  3906  061D                     u1841:
  3907  061D  2DD6               	goto	l2555
  3908  061E                     u1840:
  3909  061E                     l134:
  3910  061E  0008               	return
  3911  061F                     __end_of_divisor_dec:
  3912                           
  3913                           	psect	text16
  3914  0577                     __ptext16:	
  3915 ;; *************** function ___awmod *****************
  3916 ;; Defined at:
  3917 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;  divisor         2    3[COMMON] int 
  3920 ;;  dividend        2    5[COMMON] int 
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;  sign            1    1[BANK0 ] unsigned char 
  3923 ;;  counter         1    0[BANK0 ] unsigned char 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  2    3[COMMON] int 
  3926 ;; Registers used:
  3927 ;;		wreg, status,2, status,0
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3933 ;;      Params:         4       0       0       0       0
  3934 ;;      Locals:         0       2       0       0       0
  3935 ;;      Temps:          1       0       0       0       0
  3936 ;;      Totals:         5       2       0       0       0
  3937 ;;Total ram usage:        7 bytes
  3938 ;; Hardware stack levels used: 1
  3939 ;; Hardware stack levels required when called: 1
  3940 ;; This function calls:
  3941 ;;		Nothing
  3942 ;; This function is called by:
  3943 ;;		_divisor_dec
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           
  3948                           ;psect for function ___awmod
  3949  0577                     ___awmod:
  3950  0577                     l2485:	
  3951                           ;incstack = 0
  3952                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3953                           
  3954  0577  1283               	bcf	3,5	;RP0=0, select bank0
  3955  0578  1303               	bcf	3,6	;RP1=0, select bank0
  3956  0579  01BA               	clrf	___awmod@sign
  3957  057A                     l2487:
  3958  057A  1FF6               	btfss	___awmod@dividend+1,7
  3959  057B  2D7D               	goto	u1751
  3960  057C  2D7E               	goto	u1750
  3961  057D                     u1751:
  3962  057D  2D85               	goto	l2493
  3963  057E                     u1750:
  3964  057E                     l2489:
  3965  057E  09F5               	comf	___awmod@dividend,f
  3966  057F  09F6               	comf	___awmod@dividend+1,f
  3967  0580  0AF5               	incf	___awmod@dividend,f
  3968  0581  1903               	skipnz
  3969  0582  0AF6               	incf	___awmod@dividend+1,f
  3970  0583                     l2491:
  3971  0583  01BA               	clrf	___awmod@sign
  3972  0584  0ABA               	incf	___awmod@sign,f
  3973  0585                     l2493:
  3974  0585  1FF4               	btfss	___awmod@divisor+1,7
  3975  0586  2D88               	goto	u1761
  3976  0587  2D89               	goto	u1760
  3977  0588                     u1761:
  3978  0588  2D8E               	goto	l2497
  3979  0589                     u1760:
  3980  0589                     l2495:
  3981  0589  09F3               	comf	___awmod@divisor,f
  3982  058A  09F4               	comf	___awmod@divisor+1,f
  3983  058B  0AF3               	incf	___awmod@divisor,f
  3984  058C  1903               	skipnz
  3985  058D  0AF4               	incf	___awmod@divisor+1,f
  3986  058E                     l2497:
  3987  058E  0873               	movf	___awmod@divisor,w
  3988  058F  0474               	iorwf	___awmod@divisor+1,w
  3989  0590  1903               	btfsc	3,2
  3990  0591  2D93               	goto	u1771
  3991  0592  2D94               	goto	u1770
  3992  0593                     u1771:
  3993  0593  2DC3               	goto	l2515
  3994  0594                     u1770:
  3995  0594                     l2499:
  3996  0594  01B9               	clrf	___awmod@counter
  3997  0595  0AB9               	incf	___awmod@counter,f
  3998  0596  2DA2               	goto	l2505
  3999  0597                     l2501:
  4000  0597  3001               	movlw	1
  4001  0598                     u1785:
  4002  0598  1003               	clrc
  4003  0599  0DF3               	rlf	___awmod@divisor,f
  4004  059A  0DF4               	rlf	___awmod@divisor+1,f
  4005  059B  3EFF               	addlw	-1
  4006  059C  1D03               	skipz
  4007  059D  2D98               	goto	u1785
  4008  059E                     l2503:
  4009  059E  3001               	movlw	1
  4010  059F  00F7               	movwf	??___awmod
  4011  05A0  0877               	movf	??___awmod,w
  4012  05A1  07B9               	addwf	___awmod@counter,f
  4013  05A2                     l2505:
  4014  05A2  1FF4               	btfss	___awmod@divisor+1,7
  4015  05A3  2DA5               	goto	u1791
  4016  05A4  2DA6               	goto	u1790
  4017  05A5                     u1791:
  4018  05A5  2D97               	goto	l2501
  4019  05A6                     u1790:
  4020  05A6                     l2507:
  4021  05A6  0874               	movf	___awmod@divisor+1,w
  4022  05A7  0276               	subwf	___awmod@dividend+1,w
  4023  05A8  1D03               	skipz
  4024  05A9  2DAC               	goto	u1805
  4025  05AA  0873               	movf	___awmod@divisor,w
  4026  05AB  0275               	subwf	___awmod@dividend,w
  4027  05AC                     u1805:
  4028  05AC  1C03               	skipc
  4029  05AD  2DAF               	goto	u1801
  4030  05AE  2DB0               	goto	u1800
  4031  05AF                     u1801:
  4032  05AF  2DB6               	goto	l2511
  4033  05B0                     u1800:
  4034  05B0                     l2509:
  4035  05B0  0873               	movf	___awmod@divisor,w
  4036  05B1  02F5               	subwf	___awmod@dividend,f
  4037  05B2  0874               	movf	___awmod@divisor+1,w
  4038  05B3  1C03               	skipc
  4039  05B4  03F6               	decf	___awmod@dividend+1,f
  4040  05B5  02F6               	subwf	___awmod@dividend+1,f
  4041  05B6                     l2511:
  4042  05B6  3001               	movlw	1
  4043  05B7                     u1815:
  4044  05B7  1003               	clrc
  4045  05B8  0CF4               	rrf	___awmod@divisor+1,f
  4046  05B9  0CF3               	rrf	___awmod@divisor,f
  4047  05BA  3EFF               	addlw	-1
  4048  05BB  1D03               	skipz
  4049  05BC  2DB7               	goto	u1815
  4050  05BD                     l2513:
  4051  05BD  3001               	movlw	1
  4052  05BE  02B9               	subwf	___awmod@counter,f
  4053  05BF  1D03               	btfss	3,2
  4054  05C0  2DC2               	goto	u1821
  4055  05C1  2DC3               	goto	u1820
  4056  05C2                     u1821:
  4057  05C2  2DA6               	goto	l2507
  4058  05C3                     u1820:
  4059  05C3                     l2515:
  4060  05C3  083A               	movf	___awmod@sign,w
  4061  05C4  1903               	btfsc	3,2
  4062  05C5  2DC7               	goto	u1831
  4063  05C6  2DC8               	goto	u1830
  4064  05C7                     u1831:
  4065  05C7  2DCD               	goto	l2519
  4066  05C8                     u1830:
  4067  05C8                     l2517:
  4068  05C8  09F5               	comf	___awmod@dividend,f
  4069  05C9  09F6               	comf	___awmod@dividend+1,f
  4070  05CA  0AF5               	incf	___awmod@dividend,f
  4071  05CB  1903               	skipnz
  4072  05CC  0AF6               	incf	___awmod@dividend+1,f
  4073  05CD                     l2519:
  4074  05CD  0876               	movf	___awmod@dividend+1,w
  4075  05CE  00F4               	movwf	?___awmod+1
  4076  05CF  0875               	movf	___awmod@dividend,w
  4077  05D0  00F3               	movwf	?___awmod
  4078  05D1                     l629:
  4079  05D1  0008               	return
  4080  05D2                     __end_of___awmod:
  4081                           
  4082                           	psect	text17
  4083  0441                     __ptext17:	
  4084 ;; *************** function ___awdiv *****************
  4085 ;; Defined at:
  4086 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;  divisor         2    3[COMMON] int 
  4089 ;;  dividend        2    5[COMMON] int 
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;  quotient        2    2[BANK0 ] int 
  4092 ;;  sign            1    1[BANK0 ] unsigned char 
  4093 ;;  counter         1    0[BANK0 ] unsigned char 
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  2    3[COMMON] int 
  4096 ;; Registers used:
  4097 ;;		wreg, status,2, status,0
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4103 ;;      Params:         4       0       0       0       0
  4104 ;;      Locals:         0       4       0       0       0
  4105 ;;      Temps:          1       0       0       0       0
  4106 ;;      Totals:         5       4       0       0       0
  4107 ;;Total ram usage:        9 bytes
  4108 ;; Hardware stack levels used: 1
  4109 ;; Hardware stack levels required when called: 1
  4110 ;; This function calls:
  4111 ;;		Nothing
  4112 ;; This function is called by:
  4113 ;;		_divisor_dec
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117                           
  4118                           ;psect for function ___awdiv
  4119  0441                     ___awdiv:
  4120  0441                     l1987:	
  4121                           ;incstack = 0
  4122                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4123                           
  4124  0441  1283               	bcf	3,5	;RP0=0, select bank0
  4125  0442  1303               	bcf	3,6	;RP1=0, select bank0
  4126  0443  01BA               	clrf	___awdiv@sign
  4127  0444                     l1989:
  4128  0444  1FF4               	btfss	___awdiv@divisor+1,7
  4129  0445  2C47               	goto	u1241
  4130  0446  2C48               	goto	u1240
  4131  0447                     u1241:
  4132  0447  2C4F               	goto	l1995
  4133  0448                     u1240:
  4134  0448                     l1991:
  4135  0448  09F3               	comf	___awdiv@divisor,f
  4136  0449  09F4               	comf	___awdiv@divisor+1,f
  4137  044A  0AF3               	incf	___awdiv@divisor,f
  4138  044B  1903               	skipnz
  4139  044C  0AF4               	incf	___awdiv@divisor+1,f
  4140  044D                     l1993:
  4141  044D  01BA               	clrf	___awdiv@sign
  4142  044E  0ABA               	incf	___awdiv@sign,f
  4143  044F                     l1995:
  4144  044F  1FF6               	btfss	___awdiv@dividend+1,7
  4145  0450  2C52               	goto	u1251
  4146  0451  2C53               	goto	u1250
  4147  0452                     u1251:
  4148  0452  2C5C               	goto	l2001
  4149  0453                     u1250:
  4150  0453                     l1997:
  4151  0453  09F5               	comf	___awdiv@dividend,f
  4152  0454  09F6               	comf	___awdiv@dividend+1,f
  4153  0455  0AF5               	incf	___awdiv@dividend,f
  4154  0456  1903               	skipnz
  4155  0457  0AF6               	incf	___awdiv@dividend+1,f
  4156  0458                     l1999:
  4157  0458  3001               	movlw	1
  4158  0459  00F7               	movwf	??___awdiv
  4159  045A  0877               	movf	??___awdiv,w
  4160  045B  06BA               	xorwf	___awdiv@sign,f
  4161  045C                     l2001:
  4162  045C  01BB               	clrf	___awdiv@quotient
  4163  045D  01BC               	clrf	___awdiv@quotient+1
  4164  045E                     l2003:
  4165  045E  0873               	movf	___awdiv@divisor,w
  4166  045F  0474               	iorwf	___awdiv@divisor+1,w
  4167  0460  1903               	btfsc	3,2
  4168  0461  2C63               	goto	u1261
  4169  0462  2C64               	goto	u1260
  4170  0463                     u1261:
  4171  0463  2C9B               	goto	l2023
  4172  0464                     u1260:
  4173  0464                     l2005:
  4174  0464  01B9               	clrf	___awdiv@counter
  4175  0465  0AB9               	incf	___awdiv@counter,f
  4176  0466  2C72               	goto	l2011
  4177  0467                     l2007:
  4178  0467  3001               	movlw	1
  4179  0468                     u1275:
  4180  0468  1003               	clrc
  4181  0469  0DF3               	rlf	___awdiv@divisor,f
  4182  046A  0DF4               	rlf	___awdiv@divisor+1,f
  4183  046B  3EFF               	addlw	-1
  4184  046C  1D03               	skipz
  4185  046D  2C68               	goto	u1275
  4186  046E                     l2009:
  4187  046E  3001               	movlw	1
  4188  046F  00F7               	movwf	??___awdiv
  4189  0470  0877               	movf	??___awdiv,w
  4190  0471  07B9               	addwf	___awdiv@counter,f
  4191  0472                     l2011:
  4192  0472  1FF4               	btfss	___awdiv@divisor+1,7
  4193  0473  2C75               	goto	u1281
  4194  0474  2C76               	goto	u1280
  4195  0475                     u1281:
  4196  0475  2C67               	goto	l2007
  4197  0476                     u1280:
  4198  0476                     l2013:
  4199  0476  3001               	movlw	1
  4200  0477                     u1295:
  4201  0477  1003               	clrc
  4202  0478  0DBB               	rlf	___awdiv@quotient,f
  4203  0479  0DBC               	rlf	___awdiv@quotient+1,f
  4204  047A  3EFF               	addlw	-1
  4205  047B  1D03               	skipz
  4206  047C  2C77               	goto	u1295
  4207  047D  0874               	movf	___awdiv@divisor+1,w
  4208  047E  0276               	subwf	___awdiv@dividend+1,w
  4209  047F  1D03               	skipz
  4210  0480  2C83               	goto	u1305
  4211  0481  0873               	movf	___awdiv@divisor,w
  4212  0482  0275               	subwf	___awdiv@dividend,w
  4213  0483                     u1305:
  4214  0483  1C03               	skipc
  4215  0484  2C86               	goto	u1301
  4216  0485  2C87               	goto	u1300
  4217  0486                     u1301:
  4218  0486  2C8E               	goto	l2019
  4219  0487                     u1300:
  4220  0487                     l2015:
  4221  0487  0873               	movf	___awdiv@divisor,w
  4222  0488  02F5               	subwf	___awdiv@dividend,f
  4223  0489  0874               	movf	___awdiv@divisor+1,w
  4224  048A  1C03               	skipc
  4225  048B  03F6               	decf	___awdiv@dividend+1,f
  4226  048C  02F6               	subwf	___awdiv@dividend+1,f
  4227  048D                     l2017:
  4228  048D  143B               	bsf	___awdiv@quotient,0
  4229  048E                     l2019:
  4230  048E  3001               	movlw	1
  4231  048F                     u1315:
  4232  048F  1003               	clrc
  4233  0490  0CF4               	rrf	___awdiv@divisor+1,f
  4234  0491  0CF3               	rrf	___awdiv@divisor,f
  4235  0492  3EFF               	addlw	-1
  4236  0493  1D03               	skipz
  4237  0494  2C8F               	goto	u1315
  4238  0495                     l2021:
  4239  0495  3001               	movlw	1
  4240  0496  02B9               	subwf	___awdiv@counter,f
  4241  0497  1D03               	btfss	3,2
  4242  0498  2C9A               	goto	u1321
  4243  0499  2C9B               	goto	u1320
  4244  049A                     u1321:
  4245  049A  2C76               	goto	l2013
  4246  049B                     u1320:
  4247  049B                     l2023:
  4248  049B  083A               	movf	___awdiv@sign,w
  4249  049C  1903               	btfsc	3,2
  4250  049D  2C9F               	goto	u1331
  4251  049E  2CA0               	goto	u1330
  4252  049F                     u1331:
  4253  049F  2CA5               	goto	l2027
  4254  04A0                     u1330:
  4255  04A0                     l2025:
  4256  04A0  09BB               	comf	___awdiv@quotient,f
  4257  04A1  09BC               	comf	___awdiv@quotient+1,f
  4258  04A2  0ABB               	incf	___awdiv@quotient,f
  4259  04A3  1903               	skipnz
  4260  04A4  0ABC               	incf	___awdiv@quotient+1,f
  4261  04A5                     l2027:
  4262  04A5  083C               	movf	___awdiv@quotient+1,w
  4263  04A6  00F4               	movwf	?___awdiv+1
  4264  04A7  083B               	movf	___awdiv@quotient,w
  4265  04A8  00F3               	movwf	?___awdiv
  4266  04A9                     l616:
  4267  04A9  0008               	return
  4268  04AA                     __end_of___awdiv:
  4269                           
  4270                           	psect	text18
  4271  0762                     __ptext18:	
  4272 ;; *************** function _I2CMasterRead *****************
  4273 ;; Defined at:
  4274 ;;		line 116 in file "I2C.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;  ACK             1    wreg     enum E1309
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;  ACK             1    4[COMMON] enum E1309
  4279 ;;  Datos           1    5[COMMON] unsigned char 
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      unsigned char 
  4282 ;; Registers used:
  4283 ;;		wreg, status,2, status,0, pclath, cstack
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4289 ;;      Params:         0       0       0       0       0
  4290 ;;      Locals:         2       0       0       0       0
  4291 ;;      Temps:          1       0       0       0       0
  4292 ;;      Totals:         3       0       0       0       0
  4293 ;;Total ram usage:        3 bytes
  4294 ;; Hardware stack levels used: 1
  4295 ;; Hardware stack levels required when called: 2
  4296 ;; This function calls:
  4297 ;;		_I2CMasterCheck
  4298 ;; This function is called by:
  4299 ;;		_main
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           
  4304                           ;psect for function _I2CMasterRead
  4305  0762                     _I2CMasterRead:
  4306                           
  4307                           ;incstack = 0
  4308                           ; Regs used in _I2CMasterRead: [wreg+status,2+status,0+pclath+cstack]
  4309                           ;I2CMasterRead@ACK stored from wreg
  4310  0762  00F4               	movwf	I2CMasterRead@ACK
  4311  0763                     l2095:
  4312                           
  4313                           ;I2C.c: 117:     char Datos;;I2C.c: 118:     I2CMasterCheck();
  4314  0763  120A  118A  26F2  120A  118A  	fcall	_I2CMasterCheck
  4315  0768                     l2097:
  4316                           
  4317                           ;I2C.c: 119:     SSPCON2bits.RCEN = 1;
  4318  0768  1683               	bsf	3,5	;RP0=1, select bank1
  4319  0769  1303               	bcf	3,6	;RP1=0, select bank1
  4320  076A  1591               	bsf	17,3	;volatile
  4321                           
  4322                           ;I2C.c: 120:     I2CMasterCheck();
  4323  076B  120A  118A  26F2  120A  118A  	fcall	_I2CMasterCheck
  4324  0770                     l2099:
  4325                           
  4326                           ;I2C.c: 121:     Datos = SSPBUF;
  4327  0770  1283               	bcf	3,5	;RP0=0, select bank0
  4328  0771  1303               	bcf	3,6	;RP1=0, select bank0
  4329  0772  0813               	movf	19,w	;volatile
  4330  0773  00F3               	movwf	??_I2CMasterRead
  4331  0774  0873               	movf	??_I2CMasterRead,w
  4332  0775  00F5               	movwf	I2CMasterRead@Datos
  4333  0776                     l2101:
  4334                           
  4335                           ;I2C.c: 122:     I2CMasterCheck();
  4336  0776  120A  118A  26F2  120A  118A  	fcall	_I2CMasterCheck
  4337  077B                     l2103:
  4338                           
  4339                           ;I2C.c: 123:     if (ACK == 0) {
  4340  077B  0874               	movf	I2CMasterRead@ACK,w
  4341  077C  1D03               	btfss	3,2
  4342  077D  2F7F               	goto	u1431
  4343  077E  2F80               	goto	u1430
  4344  077F                     u1431:
  4345  077F  2F84               	goto	l216
  4346  0780                     u1430:
  4347  0780                     l2105:
  4348                           
  4349                           ;I2C.c: 124:       SSPCON2bits.ACKDT = 0;
  4350  0780  1683               	bsf	3,5	;RP0=1, select bank1
  4351  0781  1303               	bcf	3,6	;RP1=0, select bank1
  4352  0782  1291               	bcf	17,5	;volatile
  4353                           
  4354                           ;I2C.c: 125:     }
  4355  0783  2F87               	goto	l217
  4356  0784                     l216:	
  4357                           ;I2C.c: 126:     else {
  4358                           
  4359                           
  4360                           ;I2C.c: 127:       SSPCON2bits.ACKDT = 1;
  4361  0784  1683               	bsf	3,5	;RP0=1, select bank1
  4362  0785  1303               	bcf	3,6	;RP1=0, select bank1
  4363  0786  1691               	bsf	17,5	;volatile
  4364  0787                     l217:	
  4365                           ;I2C.c: 128:     }
  4366                           
  4367                           
  4368                           ;I2C.c: 129:     SSPCON2bits.ACKEN = 1;
  4369  0787  1611               	bsf	17,4	;volatile
  4370  0788                     l2107:
  4371                           
  4372                           ;I2C.c: 130:     return Datos;
  4373  0788  0875               	movf	I2CMasterRead@Datos,w
  4374  0789                     l218:
  4375  0789  0008               	return
  4376  078A                     __end_of_I2CMasterRead:
  4377                           
  4378                           	psect	text19
  4379  06F2                     __ptext19:	
  4380 ;; *************** function _I2CMasterCheck *****************
  4381 ;; Defined at:
  4382 ;;		line 91 in file "I2C.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;		None
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;		None
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  1    wreg      void 
  4389 ;; Registers used:
  4390 ;;		wreg, status,2
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4396 ;;      Params:         0       0       0       0       0
  4397 ;;      Locals:         0       0       0       0       0
  4398 ;;      Temps:          0       0       0       0       0
  4399 ;;      Totals:         0       0       0       0       0
  4400 ;;Total ram usage:        0 bytes
  4401 ;; Hardware stack levels used: 1
  4402 ;; Hardware stack levels required when called: 1
  4403 ;; This function calls:
  4404 ;;		Nothing
  4405 ;; This function is called by:
  4406 ;;		_I2C_Master_Start
  4407 ;;		_I2CMasterStop
  4408 ;;		_I2CMasterWrite
  4409 ;;		_I2CMasterRead
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           
  4414                           ;psect for function _I2CMasterCheck
  4415  06F2                     _I2CMasterCheck:
  4416  06F2                     l1669:	
  4417                           ;incstack = 0
  4418                           ; Regs used in _I2CMasterCheck: [wreg+status,2]
  4419                           
  4420  06F2                     l199:	
  4421                           ;I2C.c: 92:     while((SSPSTAT & 0x04)|| (SSPCON2 & 0x1F));
  4422                           
  4423  06F2  1683               	bsf	3,5	;RP0=1, select bank1
  4424  06F3  1303               	bcf	3,6	;RP1=0, select bank1
  4425  06F4  1914               	btfsc	20,2	;volatile
  4426  06F5  2EF7               	goto	u761
  4427  06F6  2EF8               	goto	u760
  4428  06F7                     u761:
  4429  06F7  2EF2               	goto	l199
  4430  06F8                     u760:
  4431  06F8                     l1671:
  4432  06F8  0811               	movf	17,w	;volatile
  4433  06F9  391F               	andlw	31
  4434  06FA  1D03               	btfss	3,2
  4435  06FB  2EFD               	goto	u771
  4436  06FC  2EFE               	goto	u770
  4437  06FD                     u771:
  4438  06FD  2EF2               	goto	l199
  4439  06FE                     u770:
  4440  06FE                     l202:
  4441  06FE  0008               	return
  4442  06FF                     __end_of_I2CMasterCheck:
  4443                           
  4444                           	psect	text20
  4445  0FF4                     __ptext20:	
  4446 ;; *************** function _Escribir_caracterLCD *****************
  4447 ;; Defined at:
  4448 ;;		line 63 in file "LCD.c"
  4449 ;; Parameters:    Size  Location     Type
  4450 ;;  a               1    wreg     unsigned char 
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;  a               1    5[COMMON] unsigned char 
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  1    wreg      void 
  4455 ;; Registers used:
  4456 ;;		wreg, status,2, status,0, pclath, cstack
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4462 ;;      Params:         0       0       0       0       0
  4463 ;;      Locals:         1       0       0       0       0
  4464 ;;      Temps:          0       0       0       0       0
  4465 ;;      Totals:         1       0       0       0       0
  4466 ;;Total ram usage:        1 bytes
  4467 ;; Hardware stack levels used: 1
  4468 ;; Hardware stack levels required when called: 3
  4469 ;; This function calls:
  4470 ;;		_Escribir_comandoLCD
  4471 ;; This function is called by:
  4472 ;;		_main
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476                           
  4477                           ;psect for function _Escribir_caracterLCD
  4478  0FF4                     _Escribir_caracterLCD:
  4479                           
  4480                           ;incstack = 0
  4481                           ; Regs used in _Escribir_caracterLCD: [wreg+status,2+status,0+pclath+cstack]
  4482                           ;Escribir_caracterLCD@a stored from wreg
  4483  0FF4  00F5               	movwf	Escribir_caracterLCD@a
  4484  0FF5                     l2561:
  4485                           
  4486                           ;LCD.c: 64:     PORTDbits.RD3 = 1; PORTDbits.RD4 = 0;
  4487  0FF5  1283               	bcf	3,5	;RP0=0, select bank0
  4488  0FF6  1303               	bcf	3,6	;RP1=0, select bank0
  4489  0FF7  1588               	bsf	8,3	;volatile
  4490  0FF8  1208               	bcf	8,4	;volatile
  4491  0FF9                     l2563:
  4492                           
  4493                           ;LCD.c: 66:     Escribir_comandoLCD(a);
  4494  0FF9  0875               	movf	Escribir_caracterLCD@a,w
  4495  0FFA  120A  118A  2662  120A  158A  	fcall	_Escribir_comandoLCD
  4496  0FFF                     l258:
  4497  0FFF  0008               	return
  4498  1000                     __end_of_Escribir_caracterLCD:
  4499                           
  4500                           	psect	text21
  4501  0662                     __ptext21:	
  4502 ;; *************** function _Escribir_comandoLCD *****************
  4503 ;; Defined at:
  4504 ;;		line 17 in file "LCD.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;  Comando         1    wreg     unsigned char 
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;  Comando         1    4[COMMON] unsigned char 
  4509 ;; Return value:  Size  Location     Type
  4510 ;;                  1    wreg      void 
  4511 ;; Registers used:
  4512 ;;		wreg, status,2, status,0, pclath, cstack
  4513 ;; Tracked objects:
  4514 ;;		On entry : 0/0
  4515 ;;		On exit  : 0/0
  4516 ;;		Unchanged: 0/0
  4517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4518 ;;      Params:         0       0       0       0       0
  4519 ;;      Locals:         1       0       0       0       0
  4520 ;;      Temps:          0       0       0       0       0
  4521 ;;      Totals:         1       0       0       0       0
  4522 ;;Total ram usage:        1 bytes
  4523 ;; Hardware stack levels used: 1
  4524 ;; Hardware stack levels required when called: 2
  4525 ;; This function calls:
  4526 ;;		_prender_ELCD
  4527 ;; This function is called by:
  4528 ;;		_Iniciar_LCD
  4529 ;;		_Escribir_stringLCD
  4530 ;;		_Escribir_caracterLCD
  4531 ;;		_Limpiar_pantallaLCD
  4532 ;;		_set_cursor
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           
  4537                           ;psect for function _Escribir_comandoLCD
  4538  0662                     _Escribir_comandoLCD:
  4539                           
  4540                           ;incstack = 0
  4541                           ; Regs used in _Escribir_comandoLCD: [wreg+status,2+status,0+pclath+cstack]
  4542                           ;Escribir_comandoLCD@Comando stored from wreg
  4543  0662  00F4               	movwf	Escribir_comandoLCD@Comando
  4544  0663                     l2325:
  4545                           
  4546                           ;LCD.c: 18:     if((Comando & 0b00000001) == 0b00000001){PORTDbits.RD6 = 1;} else {PORTD
      +                          bits.RD6 = 0;}
  4547  0663  1C74               	btfss	Escribir_comandoLCD@Comando,0
  4548  0664  2E66               	goto	u1471
  4549  0665  2E67               	goto	u1470
  4550  0666                     u1471:
  4551  0666  2E6B               	goto	l230
  4552  0667                     u1470:
  4553  0667                     l2327:
  4554  0667  1283               	bcf	3,5	;RP0=0, select bank0
  4555  0668  1303               	bcf	3,6	;RP1=0, select bank0
  4556  0669  1708               	bsf	8,6	;volatile
  4557  066A  2E6E               	goto	l231
  4558  066B                     l230:
  4559  066B  1283               	bcf	3,5	;RP0=0, select bank0
  4560  066C  1303               	bcf	3,6	;RP1=0, select bank0
  4561  066D  1308               	bcf	8,6	;volatile
  4562  066E                     l231:
  4563                           
  4564                           ;LCD.c: 19:     if((Comando & 0b00000010) == 0b00000010){PORTDbits.RD7 = 1;} else {PORTD
      +                          bits.RD7 = 0;}
  4565  066E  1CF4               	btfss	Escribir_comandoLCD@Comando,1
  4566  066F  2E71               	goto	u1481
  4567  0670  2E72               	goto	u1480
  4568  0671                     u1481:
  4569  0671  2E74               	goto	l232
  4570  0672                     u1480:
  4571  0672                     l2329:
  4572  0672  1788               	bsf	8,7	;volatile
  4573  0673  2E75               	goto	l233
  4574  0674                     l232:
  4575  0674  1388               	bcf	8,7	;volatile
  4576  0675                     l233:
  4577                           
  4578                           ;LCD.c: 20:     if((Comando & 0b00000100) == 0b00000100){PORTBbits.RB0 = 1;} else {PORTB
      +                          bits.RB0 = 0;}
  4579  0675  1D74               	btfss	Escribir_comandoLCD@Comando,2
  4580  0676  2E78               	goto	u1491
  4581  0677  2E79               	goto	u1490
  4582  0678                     u1491:
  4583  0678  2E7B               	goto	l234
  4584  0679                     u1490:
  4585  0679                     l2331:
  4586  0679  1406               	bsf	6,0	;volatile
  4587  067A  2E7C               	goto	l235
  4588  067B                     l234:
  4589  067B  1006               	bcf	6,0	;volatile
  4590  067C                     l235:
  4591                           
  4592                           ;LCD.c: 21:     if((Comando & 0b00001000) == 0b00001000){PORTBbits.RB1 = 1;} else {PORTB
      +                          bits.RB1 = 0;}
  4593  067C  1DF4               	btfss	Escribir_comandoLCD@Comando,3
  4594  067D  2E7F               	goto	u1501
  4595  067E  2E80               	goto	u1500
  4596  067F                     u1501:
  4597  067F  2E82               	goto	l236
  4598  0680                     u1500:
  4599  0680                     l2333:
  4600  0680  1486               	bsf	6,1	;volatile
  4601  0681  2E83               	goto	l237
  4602  0682                     l236:
  4603  0682  1086               	bcf	6,1	;volatile
  4604  0683                     l237:
  4605                           
  4606                           ;LCD.c: 22:     if((Comando & 0b00010000) == 0b00010000){PORTBbits.RB2 = 1;} else {PORTB
      +                          bits.RB2 = 0;}
  4607  0683  1E74               	btfss	Escribir_comandoLCD@Comando,4
  4608  0684  2E86               	goto	u1511
  4609  0685  2E87               	goto	u1510
  4610  0686                     u1511:
  4611  0686  2E89               	goto	l238
  4612  0687                     u1510:
  4613  0687                     l2335:
  4614  0687  1506               	bsf	6,2	;volatile
  4615  0688  2E8A               	goto	l239
  4616  0689                     l238:
  4617  0689  1106               	bcf	6,2	;volatile
  4618  068A                     l239:
  4619                           
  4620                           ;LCD.c: 23:     if((Comando & 0b00100000) == 0b00100000){PORTBbits.RB3 = 1;} else {PORTB
      +                          bits.RB3 = 0;}
  4621  068A  1EF4               	btfss	Escribir_comandoLCD@Comando,5
  4622  068B  2E8D               	goto	u1521
  4623  068C  2E8E               	goto	u1520
  4624  068D                     u1521:
  4625  068D  2E90               	goto	l240
  4626  068E                     u1520:
  4627  068E                     l2337:
  4628  068E  1586               	bsf	6,3	;volatile
  4629  068F  2E91               	goto	l241
  4630  0690                     l240:
  4631  0690  1186               	bcf	6,3	;volatile
  4632  0691                     l241:
  4633                           
  4634                           ;LCD.c: 24:     if((Comando & 0b01000000) == 0b01000000){PORTBbits.RB4 = 1;} else {PORTB
      +                          bits.RB4 = 0;}
  4635  0691  1F74               	btfss	Escribir_comandoLCD@Comando,6
  4636  0692  2E94               	goto	u1531
  4637  0693  2E95               	goto	u1530
  4638  0694                     u1531:
  4639  0694  2E97               	goto	l242
  4640  0695                     u1530:
  4641  0695                     l2339:
  4642  0695  1606               	bsf	6,4	;volatile
  4643  0696  2E98               	goto	l243
  4644  0697                     l242:
  4645  0697  1206               	bcf	6,4	;volatile
  4646  0698                     l243:
  4647                           
  4648                           ;LCD.c: 25:     if((Comando & 0b10000000) == 0b10000000){PORTBbits.RB5 = 1;} else {PORTB
      +                          bits.RB5 = 0;}
  4649  0698  1FF4               	btfss	Escribir_comandoLCD@Comando,7
  4650  0699  2E9B               	goto	u1541
  4651  069A  2E9C               	goto	u1540
  4652  069B                     u1541:
  4653  069B  2E9E               	goto	l244
  4654  069C                     u1540:
  4655  069C                     l2341:
  4656  069C  1686               	bsf	6,5	;volatile
  4657  069D  2E9F               	goto	l2343
  4658  069E                     l244:
  4659  069E  1286               	bcf	6,5	;volatile
  4660  069F                     l2343:
  4661                           
  4662                           ;LCD.c: 27:     prender_ELCD();
  4663  069F  120A  118A  26E4  120A  118A  	fcall	_prender_ELCD
  4664  06A4                     l246:
  4665  06A4  0008               	return
  4666  06A5                     __end_of_Escribir_comandoLCD:
  4667                           
  4668                           	psect	text22
  4669  06E4                     __ptext22:	
  4670 ;; *************** function _prender_ELCD *****************
  4671 ;; Defined at:
  4672 ;;		line 11 in file "LCD.c"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;		None
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;		None
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  1    wreg      void 
  4679 ;; Registers used:
  4680 ;;		wreg
  4681 ;; Tracked objects:
  4682 ;;		On entry : 0/0
  4683 ;;		On exit  : 0/0
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4686 ;;      Params:         0       0       0       0       0
  4687 ;;      Locals:         0       0       0       0       0
  4688 ;;      Temps:          1       0       0       0       0
  4689 ;;      Totals:         1       0       0       0       0
  4690 ;;Total ram usage:        1 bytes
  4691 ;; Hardware stack levels used: 1
  4692 ;; Hardware stack levels required when called: 1
  4693 ;; This function calls:
  4694 ;;		Nothing
  4695 ;; This function is called by:
  4696 ;;		_Escribir_comandoLCD
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           
  4701                           ;psect for function _prender_ELCD
  4702  06E4                     _prender_ELCD:
  4703  06E4                     l2319:	
  4704                           ;incstack = 0
  4705                           ; Regs used in _prender_ELCD: [wreg]
  4706                           
  4707                           
  4708                           ;LCD.c: 12:     PORTDbits.RD5 = 1;
  4709  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  4710  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  4711  06E6  1688               	bsf	8,5	;volatile
  4712  06E7                     l2321:
  4713                           
  4714                           ;LCD.c: 13:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  4715  06E7  30C7               	movlw	199
  4716  06E8  00F3               	movwf	??_prender_ELCD
  4717  06E9                     u2027:
  4718  06E9  2EEA               	nop2
  4719  06EA  0BF3               	decfsz	??_prender_ELCD,f
  4720  06EB  2EE9               	goto	u2027
  4721  06EC  2EED               	nop2
  4722  06ED  2EEE               	nop2
  4723  06EE                     l2323:
  4724                           
  4725                           ;LCD.c: 14:     PORTDbits.RD5 = 0;
  4726  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  4727  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  4728  06F0  1288               	bcf	8,5	;volatile
  4729  06F1                     l227:
  4730  06F1  0008               	return
  4731  06F2                     __end_of_prender_ELCD:
  4732                           
  4733                           	psect	text23
  4734  07E4                     __ptext23:	
  4735 ;; *************** function _isr *****************
  4736 ;; Defined at:
  4737 ;;		line 102 in file "Maestro I2C.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;		None
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;		None
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  1    wreg      void 
  4744 ;; Registers used:
  4745 ;;		wreg
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4751 ;;      Params:         0       0       0       0       0
  4752 ;;      Locals:         0       0       0       0       0
  4753 ;;      Temps:          3       0       0       0       0
  4754 ;;      Totals:         3       0       0       0       0
  4755 ;;Total ram usage:        3 bytes
  4756 ;; Hardware stack levels used: 1
  4757 ;; This function calls:
  4758 ;;		Nothing
  4759 ;; This function is called by:
  4760 ;;		Interrupt level 1
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           
  4765                           ;psect for function _isr
  4766  07E4                     _isr:
  4767  07E4                     i1l2197:
  4768                           
  4769                           ;Maestro I2C.c: 103:     if(PIR1bits.RCIF){
  4770  07E4  1283               	bcf	3,5	;RP0=0, select bank0
  4771  07E5  1303               	bcf	3,6	;RP1=0, select bank0
  4772  07E6  1E8C               	btfss	12,5	;volatile
  4773  07E7  2FE9               	goto	u145_21
  4774  07E8  2FEA               	goto	u145_20
  4775  07E9                     u145_21:
  4776  07E9  2FEE               	goto	i1l118
  4777  07EA                     u145_20:
  4778  07EA                     i1l2199:
  4779                           
  4780                           ;Maestro I2C.c: 104:         dato = RCREG;
  4781  07EA  081A               	movf	26,w	;volatile
  4782  07EB  00F0               	movwf	??_isr
  4783  07EC  0870               	movf	??_isr,w
  4784  07ED  00A1               	movwf	_dato
  4785  07EE                     i1l118:
  4786  07EE  0872               	movf	??_isr+2,w
  4787  07EF  008A               	movwf	10
  4788  07F0  0E71               	swapf	??_isr+1,w
  4789  07F1  0083               	movwf	3
  4790  07F2  0EFE               	swapf	btemp,f
  4791  07F3  0E7E               	swapf	btemp,w
  4792  07F4  0009               	retfie
  4793  07F5                     __end_of_isr:
  4794  007E                     btemp	set	126	;btemp
  4795  007E                     wtemp0	set	126
  4796                           
  4797                           	psect	intentry
  4798  0004                     __pintentry:	
  4799                           ;incstack = 0
  4800                           ; Regs used in _isr: [wreg]
  4801                           
  4802  0004                     interrupt_function:
  4803  007E                     saved_w	set	btemp
  4804  0004  00FE               	movwf	btemp
  4805  0005  0E03               	swapf	3,w
  4806  0006  00F1               	movwf	??_isr+1
  4807  0007  080A               	movf	10,w
  4808  0008  00F2               	movwf	??_isr+2
  4809  0009  120A  118A  2FE4   	ljmp	_isr
  4810                           
  4811                           	psect	config
  4812                           
  4813                           ;Config register CONFIG1 @ 0x2007
  4814                           ;	Oscillator Selection bits
  4815                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4816                           ;	Watchdog Timer Enable bit
  4817                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4818                           ;	Power-up Timer Enable bit
  4819                           ;	PWRTE = OFF, PWRT disabled
  4820                           ;	RE3/MCLR pin function select bit
  4821                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4822                           ;	Code Protection bit
  4823                           ;	CP = OFF, Program memory code protection is disabled
  4824                           ;	Data Code Protection bit
  4825                           ;	CPD = OFF, Data memory code protection is disabled
  4826                           ;	Brown Out Reset Selection bits
  4827                           ;	BOREN = OFF, BOR disabled
  4828                           ;	Internal External Switchover bit
  4829                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4830                           ;	Fail-Safe Clock Monitor Enabled bit
  4831                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4832                           ;	Low Voltage Programming Enable bit
  4833                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4834                           ;	In-Circuit Debugger Mode bit
  4835                           ;	DEBUG = 0x1, unprogrammed default
  4836  2007                     	org	8199
  4837  2007  20D4               	dw	8404
  4838                           
  4839                           ;Config register CONFIG2 @ 0x2008
  4840                           ;	Brown-out Reset Selection bit
  4841                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4842                           ;	Flash Program Memory Self Write Enable bits
  4843                           ;	WRT = OFF, Write protection off
  4844  2008                     	org	8200
  4845  2008  3FFF               	dw	16383

Data Sizes:
    Strings     44
    Constant    0
    Data        2
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     24      51
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Escribir_stringLCD@d	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_3(CODE[13]), STR_2(CODE[15]), STR_1(CODE[16]), 

    divisor_dec@dig1	PTR unsigned char  size(1) Largest target is 1
		 -> Giro_digy(COMMON[1]), Giro_digx(COMMON[1]), 


Critical Paths under _main in COMMON

    _main->_Escribir_stringLCD
    _main->_set_cursor
    _setup->_Escribir_stringLCD
    _setup->_InitMSSP
    _setup->_set_cursor
    _set_cursor->_Escribir_comandoLCD
    _Limpiar_pantallaLCD->_Escribir_comandoLCD
    _InitMSSP->___lldiv
    _InitMPU6050->_I2CMasterWrite
    _InitMPU6050->_I2C_Master_Start
    _Iniciar_LCD->_Escribir_comandoLCD
    _Escribir_stringLCD->_Escribir_comandoLCD
    _divisor_dec->___awdiv
    _divisor_dec->___awmod
    _Escribir_caracterLCD->_Escribir_comandoLCD
    _Escribir_comandoLCD->_prender_ELCD

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_setup
    _setup->_InitMSSP
    _InitMSSP->___lldiv
    _divisor_dec->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6783
                                             21 BANK0      3     3      0
               _Escribir_caracterLCD
                 _Escribir_stringLCD
                      _I2CMasterRead
                      _I2CMasterStop
                     _I2CMasterWrite
                   _I2C_Master_Start
                        _divisor_dec
                         _set_cursor
                              _setup
                     _tabla_numASCII
 ---------------------------------------------------------------------------------
 (1) _tabla_numASCII                                       3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                3     3      0    3378
                                             18 BANK0      3     3      0
                       _Config_USART
                 _Escribir_stringLCD
                        _Iniciar_LCD
                        _InitMPU6050
                           _InitMSSP
                _Limpiar_pantallaLCD
                            _initOsc
                         _set_cursor
 ---------------------------------------------------------------------------------
 (2) _set_cursor                                           4     3      1     825
                                              5 COMMON     3     2      1
                                              0 BANK0      1     1      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      88
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Limpiar_pantallaLCD                                  2     2      0     248
                                              5 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _InitMSSP                                             9     5      4    1001
                                              4 COMMON     4     4      0
                                             13 BANK0      5     1      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     601
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _InitMPU6050                                          3     3      0      66
                                              4 COMMON     3     3      0
                      _I2CMasterStop
                     _I2CMasterWrite
                   _I2C_Master_Start
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     1     1      0      44
                                              3 COMMON     1     1      0
                     _I2CMasterCheck
 ---------------------------------------------------------------------------------
 (3) _I2CMasterWrite                                       1     1      0      22
                                              3 COMMON     1     1      0
                     _I2CMasterCheck
 ---------------------------------------------------------------------------------
 (3) _I2CMasterStop                                        0     0      0       0
                     _I2CMasterCheck
 ---------------------------------------------------------------------------------
 (2) _Iniciar_LCD                                          2     2      0     248
                                              5 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Escribir_stringLCD                                   3     3      0     486
                                              5 COMMON     3     3      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Config_USART                                         4     0      4     416
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _divisor_dec                                          7     4      3    1682
                                              4 BANK0      7     4      3
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     613
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _I2CMasterRead                                        3     3      0      45
                                              3 COMMON     3     3      0
                     _I2CMasterCheck
 ---------------------------------------------------------------------------------
 (4) _I2CMasterCheck                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Escribir_caracterLCD                                 1     1      0     279
                                              5 COMMON     1     1      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (3) _Escribir_comandoLCD                                  1     1      0     248
                                              4 COMMON     1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (4) _prender_ELCD                                         1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_caracterLCD
     _Escribir_comandoLCD
       _prender_ELCD
   _Escribir_stringLCD
     _Escribir_comandoLCD
   _I2CMasterRead
     _I2CMasterCheck
   _I2CMasterStop
     _I2CMasterCheck
   _I2CMasterWrite
     _I2CMasterCheck
   _I2C_Master_Start
     _I2CMasterCheck
   _divisor_dec
     ___awdiv
     ___awmod
   _set_cursor
     _Escribir_comandoLCD
   _setup
     _Config_USART
     _Escribir_stringLCD
     _Iniciar_LCD
       _Escribir_comandoLCD
     _InitMPU6050
       _I2CMasterStop
       _I2CMasterWrite
       _I2C_Master_Start
     _InitMSSP
       ___lldiv
     _Limpiar_pantallaLCD
       _Escribir_comandoLCD
     _initOsc
     _set_cursor
   _tabla_numASCII

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     18      33       5       63.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3E      12        0.0%
ABS                  0      0      3E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Mar 07 12:35:20 2022

                            pc 0002                    _SSPSTATbits 0094                             _T1 0032  
                           _T2 0031                             _UA 04A1                   ___awdiv@sign 003A  
                           fsr 0004                set_cursor@linea 0039                   ?_divisor_dec 003D  
                          l202 06FE                            l210 0FF3                            l213 07FF  
                          l230 066B                            l134 061E                            l206 07E0  
                          l231 066E                            l207 07E3                            l240 0690  
                          l232 0674                            l216 0784                            l241 0691  
                          l233 0675                            l217 0787                            l305 0343  
                          l129 0440                            l242 0697                            l234 067B  
                          l218 0789                            l322 03CD                            l227 06F1  
                          l243 0698                            l235 067C                            l139 06E3  
                          l244 069E                            l236 0682                            l237 0683  
                          l261 07C9                            l246 06A4                            l238 0689  
                          l239 068A                            l255 07AF                            l271 0661  
                          l280 0761                            l249 0576                            l193 023B  
                          l258 0FFF                            l194 027B                            l186 0209  
                          l196 0293                            l188 0217                            l199 06F2  
                          l279 075E                            l616 04A9                            l629 05D1  
                          l499 0511                            _CKP 00A4                            _GIE 005F  
                          _Ax1 0038                            _Ax2 0037                            _Ay1 0036  
                          u760 06F8                            _Ay2 0035                            u761 06F7  
                          _Az1 0034                            u770 06FE                            _Az2 0033  
                          u771 06FD                            u780 07D5                            u781 07D4  
                          u790 07DD                            u791 07DC                            _Gx1 0078  
                          _Gx2 0030                            _Gy1 002F                            _Gy2 002E  
                          _Gz1 002D                            _Gz2 002C                            _isr 07E4  
                          fsr0 0004                            indf 0000                   ___awmod@sign 003A  
                ??_InitMPU6050 0074                           l2001 045C                           l2011 0472  
                         l2003 045E                           l2101 0776                           l2021 0495  
                         l2013 0476                           l2005 0464                           l2103 077B  
                         l2015 0487                           l2007 0467                           l2023 049B  
                         l2105 0780                           l2025 04A0                           l2017 048D  
                         l2009 046E                           l2107 0788                           l2027 04A5  
                         l2019 048E                           l2131 06A9                           l2123 06A6  
                         l2125 06A7                           l2143 06AD                           l2321 06E7  
                         l2401 07A2                           l2161 06B3                           l2137 06AB  
                         l2323 06EE                           l2331 0679                           l2411 01FD  
                         l2403 01E6                           l2155 06B1                           l2341 069C  
                         l2333 0680                           l2325 0663                           l2501 0597  
                         l2421 0223                           l2413 0205                           l2405 01E7  
                         l2173 06B7                           l2149 06AF                           l2319 06E4  
                         l2343 069F                           l2335 0687                           l2327 0667  
                         l2095 0763                           l2511 05B6                           l2503 059E  
                         l2351 04CC                           l2431 0246                           l2423 022D  
                         l2415 020C                           l2407 01F0                           l2167 06B5  
                         l2337 068E                           l2329 0672                           l2097 0768  
                         l2513 05BD                           l2505 05A2                           l2361 04FA  
                         l2353 04D0                           l2345 04AA                           l2441 0287  
                         l2433 024A                           l2425 0235                           l2417 0214  
                         l2409 01F9                           l2601 00D2                           l2339 0695  
                         l2099 0770                           l2507 05A6                           l2515 05C3  
                         l2451 0512                           l2363 0503                           l2355 04D9  
                         l2347 04BC                           l2443 0288                           l2435 0279  
                         l2427 023E                           l2419 021D                           l2371 0624  
                         l2531 03F7                           l2523 03CE                           l2179 06B9  
                         l2187 06BB                           l2611 0101                           l2603 00DD  
                         l2517 05C8                           l2509 05B0                           l2461 0539  
                         l2453 0516                           l2357 04EB                           l2349 04BF  
                         l2365 0509                           l2445 0289                           l2437 0280  
                         l2429 0245                           l2381 0645                           l2373 0629  
                         l2541 041A                           l2533 03FC                           l2525 03DC  
                         l2621 012B                           l2613 0107                           l2605 00E8  
                         l1671 06F8                           l2519 05CD                           l2471 0565  
                         l2463 0544                           l2455 051F                           l2359 04F9  
                         l2439 0286                           l2447 028C                           l2391 0658  
                         l2375 0630                           l2543 0420                           l2535 0401  
                         l2527 03E2                           l2631 0165                           l2623 013D  
                         l2615 010D                           l2607 00ED                           l2561 0FF5  
                         l1921 02A4                           l2393 078B                           l2473 056B  
                         l2465 054A                           l2457 0525                           l1681 07D0  
                         l1841 0350                           l2449 0290                           l2481 07BA  
                         l2385 064B                           l2377 0636                           l2369 0622  
                         l2545 042E                           l2537 0408                           l2529 03F2  
                         l2641 018A                           l2633 016B                           l2625 0148  
                         l2617 0118                           l2609 00FB                           l2563 0FF9  
                         l2491 0583                           l2555 05D6                           l1931 02C0  
                         l1923 02AB                           l2395 078F                           l2467 0555  
                         l2459 0534                           l1691 07FB                           l1683 07D5  
                         l1851 036E                           l1843 0356                           l2483 07C3  
                         l2387 0651                           l2379 063C                           l2547 0433  
                         l2539 040E                           l2643 01BD                           l2635 0172  
                         l2627 0153                           l2619 011D                           l2571 003C  
                         l1669 06F2                           l2493 0585                           l2485 0577  
                         l2557 060B                           l2549 05D2                           l1941 02DB  
                         l1933 02C7                           l1925 02AF                           l1917 0294  
                         l2397 0791                           l2469 055A                           l1693 0FEB  
                         l1685 07D8                           l1861 038C                           l1853 0374  
                         l1845 035C                           l2477 07B0                           l1781 0744  
                         l2389 0653                           l2645 01C7                           l2637 017A  
                         l2629 015E                           l2581 0064                           l2573 0042  
                         l2565 002B                           l2495 0589                           l2487 057A  
                         l2559 0611                           l1951 02F7                           l1943 02E2  
                         l1935 02CB                           l1919 029D                           l1927 02B0  
                         l2399 079E                           l1695 0FF0                           l1687 07DD  
                         l1679 07CB                           l1871 03AA                           l1863 0392  
                         l1855 037A                           l1847 0362                           l1839 0344  
                         l2479 07B4                           l1783 0749                           l1775 0733  
                         l2647 01CF                           l2639 0182                           l2591 009B  
                         l2583 006F                           l2575 0048                           l2567 0030  
                         l2497 058E                           l2489 057E                           l1961 0313  
                         l1953 02FE                           l1945 02E6                           l1929 02B9  
                         l1937 02CC                           l1689 07F6                           l1881 03C8  
                         l1873 03B0                           l1865 0398                           l1857 0380  
                         l1849 0368                           l1785 074F                           l1777 0739  
                         l2649 01D7                           l2593 00A6                           l2585 007A  
                         l2577 004E                           l2569 0036                           l2499 0594  
                         l1971 032E                           l1963 031A                           l1955 0302  
                         l1939 02D5                           l1947 02E7                           l1875 03B6  
                         l1867 039E                           l1859 0386                           l1787 0754  
                         l1779 073E                           l2683 06C3                           l2595 00B1  
                         l2587 0085                           l2579 0059                           l1981 033E  
                         l1973 0335                           l1965 031E                           l1949 02F0  
                         l1957 0303                           l1877 03BC                           l1869 03A4  
                         l1789 0759                           l2597 00BC                           l2589 0090  
                         l1991 0448                           l1983 033F                           l1975 0339  
                         l1959 030C                           l1967 031F                           l1879 03C2  
                         l2599 00C7                           l1993 044D                           l1985 0342  
                         l1969 0328                           l1977 033A                           l1995 044F  
                         l1987 0441                           l1979 033D                           l1997 0453  
                         l1989 0444                           l1999 0458                           ?_isr 0070  
                         STR_1 0706                           STR_2 0716                           STR_3 0725  
                         u1000 0739                           u1001 0738                           u1010 0744  
                         u1011 0743                           u1020 074F                           u1021 074E  
                         u1030 0759                           u1031 0758                           u1200 030C  
                         u1120 029D                           u1201 030B                           u1121 029C  
                         u1210 0313                           u1130 02A4                           u1211 0312  
                         u1131 02A3                           u1300 0487                           u1220 0328  
                         u1140 02B9                           u1301 0486                           u1221 0327  
                         u1141 02B8                           u1230 032E                           u1150 02C0  
                         u1231 032D                           u1151 02BF                           u2007 0562  
                         u1320 049B                           u1240 0448                           u1160 02D5  
                         u1321 049A                           u1305 0483                           u1241 0447  
                         u1161 02D4                           u2017 056D                           u1330 04A0  
                         u1250 0453                           u1170 02DB                           u2027 06E9  
                         u1331 049F                           u1315 048F                           u1251 0452  
                         u1171 02DA                           u1500 0680                           u1260 0464  
                         u1180 02F0                           u1501 067F                           u1261 0463  
                         u1181 02EF                           u1510 0687                           u1430 0780  
                         u1190 02F7                           u1511 0686                           u1431 077F  
                         u1191 02F6                           u1520 068E                           u1280 0476  
                         u1521 068D                           u1281 0475                           u1530 0695  
                         u1610 0509                           u1531 0694                           u1275 0468  
                         u1611 0508                           u1540 069C                           u1700 0223  
                         u1620 0629                           u1541 069B                           u1605 04FB  
                         u1701 0222                           u1621 0628                           u1470 0667  
                         u1550 04BC                           u1710 0235                           u1630 0636  
                         u1471 0666                           u1295 0477                           u1551 04BB  
                         u1711 0234                           u1631 0635                           u1480 0672  
                         u1800 05B0                           u1720 023B                           u1640 064A  
                         u1481 0671                           u1801 05AF                           u1721 023A  
                         u1641 0649                           u1490 0679                           u1570 04D0  
                         u1730 0245                           u1650 0658                           u1491 0678  
                         u1571 04CF                           u1731 0244                           u1651 0657  
                         u1820 05C3                           u1660 07AF                           u1740 025A  
                         u1821 05C2                           u1805 05AC                           u1661 07AE  
                         u1565 04C1                           u1830 05C8                           u1750 057E  
                         u1590 04EB                           u1670 01F9                           u1831 05C7  
                         u1815 05B7                           u1751 057D                           u1591 04EA  
                         u1671 01F8                           u1760 0589                           u1840 061E  
                         u1680 0205                           u1761 0588                           u1841 061D  
                         u1585 04D2                           u1745 0255                           u1681 0204  
                         u1770 0594                           u1690 0214                           u1771 0593  
                         u1595 04E7                           u1691 0213                           u1907 065C  
                         u1845 061A                           u1917 07BE                           u1790 05A6  
                         u1791 05A5                           u1927 01EB                           u1785 0598  
                         u1937 034A                           u1947 051A                           u1867 00F5  
                         _PEIE 005E                           u1957 0529                           u1877 0125  
                         u1967 0536                           u1887 0428                           u1977 0541  
                         u1897 0640                           u1987 054C                           u1997 0557  
                         _TXIF 0064                  ??_Iniciar_LCD 0075                           _dato 0021  
                         _main 002B                           btemp 007E                           start 000C  
         _Escribir_caracterLCD 0FF4         __size_of_I2CMasterRead 0028         __size_of_I2CMasterStop 0009  
                        ??_isr 0070     __end_of_Escribir_stringLCD 07B0                          ?_main 0070  
              __end_of___awdiv 04AA                __end_of___awmod 05D2                          _ANSEL 0188  
              __end_of___lldiv 0512                ___awdiv@divisor 0073                          i1l118 07EE  
              ___awdiv@counter 0039                          _RCREG 001A                          _SPBRG 0099  
                        _PORTA 0005                          _PORTB 0006                          _PORTD 0008  
                        _TRISA 0085                          _TRISB 0086                          _TRISD 0088  
                        _SSPIE 0463                          _SSPIF 0063                          _TXREG 0019  
                 InitMSSP@Dato 0046                   InitMSSP@Modo 004A                          _dec_x 002A  
                        _dec_y 0027                          _dec_z 0023                          _cen_x 0029  
                        _cen_y 0026                          _cen_z 0022                __end_of_initOsc 0762  
                        _setup 03CE                          _uni_x 002B                          _uni_y 0028  
                        _uni_z 0024            _Limpiar_pantallaLCD 07B0                          pclath 000A  
          __end_of_InitMPU6050 03CE                          status 0003                          wtemp0 007E  
        ?_Escribir_caracterLCD 0070           __end_of_Config_USART 0344                __initialization 000F  
          __end_of_Iniciar_LCD 0577                   __end_of_main 01E3        __size_of_I2CMasterCheck 000D  
             __end_of_InitMSSP 0294           ?_Limpiar_pantallaLCD 0070        __size_of_I2CMasterWrite 000B  
                       ??_main 004E                   divisor_dec@b 003D                   divisor_dec@n 0042  
            ?_I2C_Master_Start 0070                  _I2CMasterRead 0762             ??_I2C_Master_Start 0073  
                _I2CMasterStop 0FEB             set_cursor@posicion 0075               ___awdiv@dividend 0075  
                       ?_setup 0070                         _ANSELH 0189                         i1l2197 07E4  
                       i1l2199 07EA                         u145_20 07EA                         u145_21 07E9  
                       _SPBRGH 009A                         _SSPADD 0093                         _TRISC3 043B  
                       _TRISC4 043C                         _SSPCON 0014                         _SSPBUF 0013  
             ??_tabla_numASCII 0073          ??_Limpiar_pantallaLCD 0075                      ??___awdiv 0077  
                    ??___awmod 0077                      ??___lldiv 0073               ___awdiv@quotient 003B  
              ___awmod@divisor 0073                ___awmod@counter 0039                      ??_initOsc 0073  
         __size_of_divisor_dec 004D                         saved_w 007E                    _InitMPU6050 0344  
               ?_I2CMasterRead 0070                 ?_I2CMasterStop 0070                divisor_dec@dig1 003F  
      __end_of__initialization 0027                    _Iniciar_LCD 0512         ??_Escribir_caracterLCD 0075  
               __pcstackCOMMON 0070                   __pidataBANK0 0FE1                  __end_of_setup 0441  
                      ??_setup 004B                     __pbssBANK0 0020                      ?_InitMSSP 0046  
        __size_of_Config_USART 00B0                     __pmaintext 002B                 _I2CMasterCheck 06F2  
                   __pintentry 0004                 _I2CMasterWrite 07F5   __size_of_Escribir_comandoLCD 0043  
          I2CMasterWrite@Datos 0073                   initOsc@Valor 0073                ??_I2CMasterRead 0073  
              ??_I2CMasterStop 0073                   _Config_USART 0294                        _SSPCON2 0091  
                      _SSPSTAT 0094             _Escribir_stringLCD 078A                     __stringtab 0700  
                   ??_InitMSSP 0074                tabla_numASCII@a 0075            ?_Escribir_stringLCD 0070  
       __end_of_I2CMasterCheck 06FF          Escribir_caracterLCD@a 0075         __end_of_I2CMasterWrite 0800  
                      ___awdiv 0441                     _estado_sem 0020                        ___awmod 0577  
                      ___lldiv 04AA                        _bandera 0051                        __ptext1 06A5  
                      __ptext2 03CE                        __ptext3 061F                        __ptext4 0732  
                      __ptext5 07B0                        __ptext6 01E3                        __ptext7 04AA  
                      __ptext8 0344                        __ptext9 07CA           ??_Escribir_stringLCD 0075  
                      _initOsc 0732                   __size_of_isr 0011               ___awmod@dividend 0075  
                ?_prender_ELCD 0070                        clrloop0 0FE4           end_of_initialization 0027  
    __size_of_I2C_Master_Start 001A                ___lldiv@divisor 0039                ___lldiv@counter 0045  
              ?_I2CMasterCheck 0070                     _set_cursor 061F                      _RCSTAbits 0018  
              ?_I2CMasterWrite 0070                      _PORTBbits 0006                      _PORTDbits 0008  
               ??_prender_ELCD 0073                      _TRISAbits 0085                      _TRISCbits 0087  
                 ?_InitMPU6050 0070                   ?_Iniciar_LCD 0070                      _TXSTAbits 0098  
  __end_of_Limpiar_pantallaLCD 07CA             I2CMasterRead@Datos 0075                    _BAUDCTLbits 0187  
                ??_divisor_dec 0040                      _Giro_digx 007A                      _Giro_digy 0079  
                    _Giro_digz 0025            start_initialization 000F                    __end_of_isr 07F5  
          _Escribir_comandoLCD 0662     Escribir_comandoLCD@Comando 0074              __size_of_InitMSSP 00B1  
__size_of_Escribir_caracterLCD 000C                    ?_set_cursor 0075                    __pdataBANK0 0051  
         ?_Escribir_comandoLCD 0070                    __pbssCOMMON 0078        __size_of_tabla_numASCII 003F  
                    ___latbits 0002                  __pcstackBANK0 0039            __end_of_divisor_dec 061F  
             _I2C_Master_Start 07CA           __end_of_prender_ELCD 06F2                       ?___awdiv 0073  
                     ?___awmod 0073                       ?___lldiv 0039          ??_Escribir_comandoLCD 0074  
                    __pstrings 0700                       ?_initOsc 0070          __end_of_I2CMasterRead 078A  
        __end_of_I2CMasterStop 0FF4            __size_of_set_cursor 0043           __size_of_InitMPU6050 008A  
               __size_of_setup 0073               ??_I2CMasterCheck 0073              interrupt_function 0004  
  I2C_Master_Start@Modo_Inicio 0073               ??_I2CMasterWrite 0073                      clear_ram0 0FE3  
                     _PIE1bits 008C           __size_of_Iniciar_LCD 0065                       _PIR1bits 000C  
                  __stringbase 0705                    _divisor_dec 05D2    __size_of_Escribir_stringLCD 0026  
                     _InitMSSP 01E3            Escribir_stringLCD@d 0077            Escribir_stringLCD@i 0076  
             __size_of___awdiv 0069               __size_of___awmod 005B               __size_of___lldiv 0068  
           __end_of__stringtab 0706                 _tabla_numASCII 06A5               __size_of_initOsc 0030  
                     __ptext10 07F5                       __ptext11 0FEB                       __ptext20 0FF4  
                     __ptext12 0512                       __ptext21 0662                       __ptext13 078A  
                     __ptext22 06E4                       __ptext14 0294                       __ptext23 07E4  
                     __ptext15 05D2                       __ptext16 0577                       __ptext17 0441  
                     __ptext18 0762                       __ptext19 06F2          __size_of_prender_ELCD 000E  
                __size_of_main 01B8                   ??_set_cursor 0076   __size_of_Limpiar_pantallaLCD 001A  
             I2CMasterRead@ACK 0074         __end_of_tabla_numASCII 06E4       __end_of_I2C_Master_Start 07E4  
                   _INTCONbits 000B   __end_of_Escribir_caracterLCD 1000                   _prender_ELCD 06E4  
                ?_Config_USART 0073               Config_USART@Freq 0075             __end_of_set_cursor 0662  
                     intlevel1 0000               ___lldiv@dividend 003D                      stringcode 0700  
                   _OSCCONbits 008F                ?_tabla_numASCII 0070               ___lldiv@quotient 0041  
               ??_Config_USART 0077                       stringdir 0700                       stringtab 0700  
                  _SSPCON2bits 0091          Config_USART@baud_rate 0073                     _SSPCONbits 0014  
  __end_of_Escribir_comandoLCD 06A5  
