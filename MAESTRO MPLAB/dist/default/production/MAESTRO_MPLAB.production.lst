

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Mar 06 23:06:00 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  008F                     	;# 
   274  0090                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  0105                     	;# 
   293  0107                     	;# 
   294  0108                     	;# 
   295  0109                     	;# 
   296  010C                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  0185                     	;# 
   302  0187                     	;# 
   303  0188                     	;# 
   304  0189                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  000E                     	;# 
   323  000F                     	;# 
   324  0010                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001D                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0086                     	;# 
   345  0087                     	;# 
   346  0088                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  008F                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  0105                     	;# 
   371  0107                     	;# 
   372  0108                     	;# 
   373  0109                     	;# 
   374  010C                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  0185                     	;# 
   380  0187                     	;# 
   381  0188                     	;# 
   382  0189                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385  0000                     	;# 
   386  0001                     	;# 
   387  0002                     	;# 
   388  0003                     	;# 
   389  0004                     	;# 
   390  0005                     	;# 
   391  0006                     	;# 
   392  0007                     	;# 
   393  0008                     	;# 
   394  0009                     	;# 
   395  000A                     	;# 
   396  000B                     	;# 
   397  000C                     	;# 
   398  000D                     	;# 
   399  000E                     	;# 
   400  000E                     	;# 
   401  000F                     	;# 
   402  0010                     	;# 
   403  0011                     	;# 
   404  0012                     	;# 
   405  0013                     	;# 
   406  0014                     	;# 
   407  0015                     	;# 
   408  0015                     	;# 
   409  0016                     	;# 
   410  0017                     	;# 
   411  0018                     	;# 
   412  0019                     	;# 
   413  001A                     	;# 
   414  001B                     	;# 
   415  001B                     	;# 
   416  001C                     	;# 
   417  001D                     	;# 
   418  001E                     	;# 
   419  001F                     	;# 
   420  0081                     	;# 
   421  0085                     	;# 
   422  0086                     	;# 
   423  0087                     	;# 
   424  0088                     	;# 
   425  0089                     	;# 
   426  008C                     	;# 
   427  008D                     	;# 
   428  008E                     	;# 
   429  008F                     	;# 
   430  0090                     	;# 
   431  0091                     	;# 
   432  0092                     	;# 
   433  0093                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0094                     	;# 
   437  0095                     	;# 
   438  0096                     	;# 
   439  0097                     	;# 
   440  0098                     	;# 
   441  0099                     	;# 
   442  009A                     	;# 
   443  009B                     	;# 
   444  009C                     	;# 
   445  009D                     	;# 
   446  009E                     	;# 
   447  009F                     	;# 
   448  0105                     	;# 
   449  0107                     	;# 
   450  0108                     	;# 
   451  0109                     	;# 
   452  010C                     	;# 
   453  010C                     	;# 
   454  010D                     	;# 
   455  010E                     	;# 
   456  010F                     	;# 
   457  0185                     	;# 
   458  0187                     	;# 
   459  0188                     	;# 
   460  0189                     	;# 
   461  018C                     	;# 
   462  018D                     	;# 
   463  0000                     	;# 
   464  0001                     	;# 
   465  0002                     	;# 
   466  0003                     	;# 
   467  0004                     	;# 
   468  0005                     	;# 
   469  0006                     	;# 
   470  0007                     	;# 
   471  0008                     	;# 
   472  0009                     	;# 
   473  000A                     	;# 
   474  000B                     	;# 
   475  000C                     	;# 
   476  000D                     	;# 
   477  000E                     	;# 
   478  000E                     	;# 
   479  000F                     	;# 
   480  0010                     	;# 
   481  0011                     	;# 
   482  0012                     	;# 
   483  0013                     	;# 
   484  0014                     	;# 
   485  0015                     	;# 
   486  0015                     	;# 
   487  0016                     	;# 
   488  0017                     	;# 
   489  0018                     	;# 
   490  0019                     	;# 
   491  001A                     	;# 
   492  001B                     	;# 
   493  001B                     	;# 
   494  001C                     	;# 
   495  001D                     	;# 
   496  001E                     	;# 
   497  001F                     	;# 
   498  0081                     	;# 
   499  0085                     	;# 
   500  0086                     	;# 
   501  0087                     	;# 
   502  0088                     	;# 
   503  0089                     	;# 
   504  008C                     	;# 
   505  008D                     	;# 
   506  008E                     	;# 
   507  008F                     	;# 
   508  0090                     	;# 
   509  0091                     	;# 
   510  0092                     	;# 
   511  0093                     	;# 
   512  0093                     	;# 
   513  0093                     	;# 
   514  0094                     	;# 
   515  0095                     	;# 
   516  0096                     	;# 
   517  0097                     	;# 
   518  0098                     	;# 
   519  0099                     	;# 
   520  009A                     	;# 
   521  009B                     	;# 
   522  009C                     	;# 
   523  009D                     	;# 
   524  009E                     	;# 
   525  009F                     	;# 
   526  0105                     	;# 
   527  0107                     	;# 
   528  0108                     	;# 
   529  0109                     	;# 
   530  010C                     	;# 
   531  010C                     	;# 
   532  010D                     	;# 
   533  010E                     	;# 
   534  010F                     	;# 
   535  0185                     	;# 
   536  0187                     	;# 
   537  0188                     	;# 
   538  0189                     	;# 
   539  018C                     	;# 
   540  018D                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000D                     	;# 
   555  000E                     	;# 
   556  000E                     	;# 
   557  000F                     	;# 
   558  0010                     	;# 
   559  0011                     	;# 
   560  0012                     	;# 
   561  0013                     	;# 
   562  0014                     	;# 
   563  0015                     	;# 
   564  0015                     	;# 
   565  0016                     	;# 
   566  0017                     	;# 
   567  0018                     	;# 
   568  0019                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001B                     	;# 
   572  001C                     	;# 
   573  001D                     	;# 
   574  001E                     	;# 
   575  001F                     	;# 
   576  0081                     	;# 
   577  0085                     	;# 
   578  0086                     	;# 
   579  0087                     	;# 
   580  0088                     	;# 
   581  0089                     	;# 
   582  008C                     	;# 
   583  008D                     	;# 
   584  008E                     	;# 
   585  008F                     	;# 
   586  0090                     	;# 
   587  0091                     	;# 
   588  0092                     	;# 
   589  0093                     	;# 
   590  0093                     	;# 
   591  0093                     	;# 
   592  0094                     	;# 
   593  0095                     	;# 
   594  0096                     	;# 
   595  0097                     	;# 
   596  0098                     	;# 
   597  0099                     	;# 
   598  009A                     	;# 
   599  009B                     	;# 
   600  009C                     	;# 
   601  009D                     	;# 
   602  009E                     	;# 
   603  009F                     	;# 
   604  0105                     	;# 
   605  0107                     	;# 
   606  0108                     	;# 
   607  0109                     	;# 
   608  010C                     	;# 
   609  010C                     	;# 
   610  010D                     	;# 
   611  010E                     	;# 
   612  010F                     	;# 
   613  0185                     	;# 
   614  0187                     	;# 
   615  0188                     	;# 
   616  0189                     	;# 
   617  018C                     	;# 
   618  018D                     	;# 
   619  0018                     _RCSTAbits	set	24
   620  0006                     _PORTBbits	set	6
   621  0008                     _PORTDbits	set	8
   622  0013                     _SSPBUF	set	19
   623  0014                     _SSPCON	set	20
   624  000B                     _INTCONbits	set	11
   625  0014                     _SSPCONbits	set	20
   626  0008                     _PORTD	set	8
   627  0006                     _PORTB	set	6
   628  0005                     _PORTA	set	5
   629  0063                     _SSPIF	set	99
   630  00A4                     _CKP	set	164
   631  009A                     _SPBRGH	set	154
   632  0099                     _SPBRG	set	153
   633  0098                     _TXSTAbits	set	152
   634  008F                     _OSCCONbits	set	143
   635  0091                     _SSPCON2bits	set	145
   636  008C                     _PIE1bits	set	140
   637  0093                     _SSPADD	set	147
   638  0094                     _SSPSTAT	set	148
   639  0091                     _SSPCON2	set	145
   640  0094                     _SSPSTATbits	set	148
   641  0085                     _TRISAbits	set	133
   642  0087                     _TRISCbits	set	135
   643  0088                     _TRISD	set	136
   644  0086                     _TRISB	set	134
   645  0085                     _TRISA	set	133
   646  04A1                     _UA	set	1185
   647  0187                     _BAUDCTLbits	set	391
   648  0189                     _ANSELH	set	393
   649  0188                     _ANSEL	set	392
   650                           
   651                           	psect	strings
   652  06A2                     __pstrings:
   653  06A2                     stringtab:
   654  06A2                     __stringtab:
   655  06A2                     stringcode:	
   656                           ;	String table - string pointers are 1 byte each
   657                           
   658  06A2                     stringdir:
   659  06A2  3006               	movlw	high stringdir
   660  06A3  008A               	movwf	10
   661  06A4  0804               	movf	4,w
   662  06A5  0A84               	incf	4,f
   663  06A6  0782               	addwf	2,f
   664  06A7                     __stringbase:
   665  06A7  3400               	retlw	0
   666  06A8                     __end_of__stringtab:
   667  06A8                     STR_1:
   668  06A8  3458               	retlw	88	;'X'
   669  06A9  343A               	retlw	58	;':'
   670  06AA  3420               	retlw	32	;' '
   671  06AB  3420               	retlw	32	;' '
   672  06AC  3420               	retlw	32	;' '
   673  06AD  3420               	retlw	32	;' '
   674  06AE  3459               	retlw	89	;'Y'
   675  06AF  343A               	retlw	58	;':'
   676  06B0  3420               	retlw	32	;' '
   677  06B1  3420               	retlw	32	;' '
   678  06B2  3420               	retlw	32	;' '
   679  06B3  3420               	retlw	32	;' '
   680  06B4  3420               	retlw	32	;' '
   681  06B5  3453               	retlw	83	;'S'
   682  06B6  343A               	retlw	58	;':'
   683  06B7  3400               	retlw	0
   684  06B8                     STR_2:
   685  06B8  344D               	retlw	77	;'M'
   686  06B9  3469               	retlw	105	;'i'
   687  06BA  346E               	retlw	110	;'n'
   688  06BB  3469               	retlw	105	;'i'
   689  06BC  3470               	retlw	112	;'p'
   690  06BD  3472               	retlw	114	;'r'
   691  06BE  346F               	retlw	111	;'o'
   692  06BF  3479               	retlw	121	;'y'
   693  06C0  3465               	retlw	101	;'e'
   694  06C1  3463               	retlw	99	;'c'
   695  06C2  3474               	retlw	116	;'t'
   696  06C3  346F               	retlw	111	;'o'
   697  06C4  3420               	retlw	32	;' '
   698  06C5  3432               	retlw	50	;'2'
   699  06C6  3400               	retlw	0
   700  06C7                     STR_3:
   701  06C7  344A               	retlw	74	;'J'
   702  06C8  346F               	retlw	111	;'o'
   703  06C9  3473               	retlw	115	;'s'
   704  06CA  3465               	retlw	101	;'e'
   705  06CB  3420               	retlw	32	;' '
   706  06CC  3453               	retlw	83	;'S'
   707  06CD  3461               	retlw	97	;'a'
   708  06CE  346E               	retlw	110	;'n'
   709  06CF  3474               	retlw	116	;'t'
   710  06D0  3469               	retlw	105	;'i'
   711  06D1  347A               	retlw	122	;'z'
   712  06D2  346F               	retlw	111	;'o'
   713  06D3  3400               	retlw	0
   714                           
   715                           	psect	cinit
   716  000F                     start_initialization:	
   717                           ; #config settings
   718                           
   719  000F                     __initialization:
   720                           
   721                           ; Clear objects allocated to COMMON
   722  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   723  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   724                           
   725                           ; Clear objects allocated to BANK0
   726  0011  1383               	bcf	3,7	;select IRP bank0
   727  0012  3020               	movlw	low __pbssBANK0
   728  0013  0084               	movwf	4
   729  0014  3038               	movlw	low (__pbssBANK0+24)
   730  0015  120A  118A  27C1  120A  118A  	fcall	clear_ram0
   731  001A                     end_of_initialization:	
   732                           ;End of C runtime variable initialization code
   733                           
   734  001A                     __end_of__initialization:
   735  001A  0183               	clrf	3
   736  001B  120A  118A  281E   	ljmp	_main	;jump to C main() function
   737                           
   738                           	psect	bssCOMMON
   739  007A                     __pbssCOMMON:
   740  007A                     _Giro_digy:
   741  007A                     	ds	1
   742  007B                     _Giro_digx:
   743  007B                     	ds	1
   744                           
   745                           	psect	bssBANK0
   746  0020                     __pbssBANK0:
   747  0020                     _cen_z:
   748  0020                     	ds	1
   749  0021                     _dec_z:
   750  0021                     	ds	1
   751  0022                     _uni_z:
   752  0022                     	ds	1
   753  0023                     _Giro_digz:
   754  0023                     	ds	1
   755  0024                     _cen_y:
   756  0024                     	ds	1
   757  0025                     _dec_y:
   758  0025                     	ds	1
   759  0026                     _uni_y:
   760  0026                     	ds	1
   761  0027                     _cen_x:
   762  0027                     	ds	1
   763  0028                     _dec_x:
   764  0028                     	ds	1
   765  0029                     _uni_x:
   766  0029                     	ds	1
   767  002A                     _Gz2:
   768  002A                     	ds	1
   769  002B                     _Gz1:
   770  002B                     	ds	1
   771  002C                     _Gy2:
   772  002C                     	ds	1
   773  002D                     _Gy1:
   774  002D                     	ds	1
   775  002E                     _Gx2:
   776  002E                     	ds	1
   777  002F                     _Gx1:
   778  002F                     	ds	1
   779  0030                     _T2:
   780  0030                     	ds	1
   781  0031                     _T1:
   782  0031                     	ds	1
   783  0032                     _Az2:
   784  0032                     	ds	1
   785  0033                     _Az1:
   786  0033                     	ds	1
   787  0034                     _Ay2:
   788  0034                     	ds	1
   789  0035                     _Ay1:
   790  0035                     	ds	1
   791  0036                     _Ax2:
   792  0036                     	ds	1
   793  0037                     _Ax1:
   794  0037                     	ds	1
   795                           
   796                           	psect	clrtext
   797  07C1                     clear_ram0:	
   798                           ;	Called with FSR containing the base address, and
   799                           ;	W with the last address+1
   800                           
   801  07C1  0064               	clrwdt	;clear the watchdog before getting into this loop
   802  07C2                     clrloop0:
   803  07C2  0180               	clrf	0	;clear RAM location pointed to by FSR
   804  07C3  0A84               	incf	4,f	;increment pointer
   805  07C4  0604               	xorwf	4,w	;XOR with final address
   806  07C5  1903               	btfsc	3,2	;have we reached the end yet?
   807  07C6  3400               	retlw	0	;all done for this memory range, return
   808  07C7  0604               	xorwf	4,w	;XOR again to restore value
   809  07C8  2FC2               	goto	clrloop0	;do the next byte
   810                           
   811                           	psect	cstackCOMMON
   812  0070                     __pcstackCOMMON:
   813  0070                     ?_setup:
   814  0070                     ?_I2C_Master_Start:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0070                     ?_I2CMasterWrite:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0070                     ?_I2CMasterRead:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0070                     ?_I2CMasterStop:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0070                     ?_tabla_numASCII:	
   827                           ; 1 bytes @ 0x0
   828                           
   829  0070                     ?_Escribir_stringLCD:	
   830                           ; 1 bytes @ 0x0
   831                           
   832  0070                     ?_Escribir_caracterLCD:	
   833                           ; 1 bytes @ 0x0
   834                           
   835  0070                     ?_initOsc:	
   836                           ; 1 bytes @ 0x0
   837                           
   838  0070                     ?_InitMPU6050:	
   839                           ; 1 bytes @ 0x0
   840                           
   841  0070                     ?_Iniciar_LCD:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0070                     ?_Limpiar_pantallaLCD:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0070                     ?_isr:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0070                     ??_isr:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0070                     ?_main:	
   854                           ; 1 bytes @ 0x0
   855                           
   856  0070                     ?_I2CMasterCheck:	
   857                           ; 1 bytes @ 0x0
   858                           
   859  0070                     ?_prender_ELCD:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0070                     ?_Escribir_comandoLCD:	
   863                           ; 1 bytes @ 0x0
   864                           
   865                           
   866                           ; 1 bytes @ 0x0
   867  0070                     	ds	2
   868  0072                     ??_I2C_Master_Start:
   869  0072                     ??_I2CMasterWrite:	
   870                           ; 1 bytes @ 0x2
   871                           
   872  0072                     ??_I2CMasterRead:	
   873                           ; 1 bytes @ 0x2
   874                           
   875  0072                     ??_I2CMasterStop:	
   876                           ; 1 bytes @ 0x2
   877                           
   878  0072                     ??_tabla_numASCII:	
   879                           ; 1 bytes @ 0x2
   880                           
   881  0072                     ??_initOsc:	
   882                           ; 1 bytes @ 0x2
   883                           
   884  0072                     ?_Config_USART:	
   885                           ; 1 bytes @ 0x2
   886                           
   887  0072                     ??_I2CMasterCheck:	
   888                           ; 1 bytes @ 0x2
   889                           
   890  0072                     ??_prender_ELCD:	
   891                           ; 1 bytes @ 0x2
   892                           
   893  0072                     ?___awdiv:	
   894                           ; 1 bytes @ 0x2
   895                           
   896  0072                     ?___awmod:	
   897                           ; 2 bytes @ 0x2
   898                           
   899  0072                     ?___lldiv:	
   900                           ; 2 bytes @ 0x2
   901                           
   902  0072                     I2C_Master_Start@Modo_Inicio:	
   903                           ; 4 bytes @ 0x2
   904                           
   905  0072                     I2CMasterWrite@Datos:	
   906                           ; 1 bytes @ 0x2
   907                           
   908  0072                     initOsc@Valor:	
   909                           ; 1 bytes @ 0x2
   910                           
   911  0072                     Config_USART@baud_rate:	
   912                           ; 1 bytes @ 0x2
   913                           
   914  0072                     ___awdiv@divisor:	
   915                           ; 2 bytes @ 0x2
   916                           
   917  0072                     ___awmod@divisor:	
   918                           ; 2 bytes @ 0x2
   919                           
   920  0072                     ___lldiv@divisor:	
   921                           ; 2 bytes @ 0x2
   922                           
   923                           
   924                           ; 4 bytes @ 0x2
   925  0072                     	ds	1
   926  0073                     ??_InitMPU6050:
   927  0073                     ??_Escribir_comandoLCD:	
   928                           ; 1 bytes @ 0x3
   929                           
   930  0073                     I2CMasterRead@ACK:	
   931                           ; 1 bytes @ 0x3
   932                           
   933  0073                     Escribir_comandoLCD@Comando:	
   934                           ; 1 bytes @ 0x3
   935                           
   936                           
   937                           ; 1 bytes @ 0x3
   938  0073                     	ds	1
   939  0074                     ?_set_cursor:
   940  0074                     ??_Escribir_stringLCD:	
   941                           ; 1 bytes @ 0x4
   942                           
   943  0074                     ??_Escribir_caracterLCD:	
   944                           ; 1 bytes @ 0x4
   945                           
   946  0074                     ??_Iniciar_LCD:	
   947                           ; 1 bytes @ 0x4
   948                           
   949  0074                     ??_Limpiar_pantallaLCD:	
   950                           ; 1 bytes @ 0x4
   951                           
   952  0074                     tabla_numASCII@a:	
   953                           ; 1 bytes @ 0x4
   954                           
   955  0074                     I2CMasterRead@Datos:	
   956                           ; 1 bytes @ 0x4
   957                           
   958  0074                     Escribir_caracterLCD@a:	
   959                           ; 1 bytes @ 0x4
   960                           
   961  0074                     set_cursor@posicion:	
   962                           ; 1 bytes @ 0x4
   963                           
   964  0074                     Config_USART@Freq:	
   965                           ; 1 bytes @ 0x4
   966                           
   967  0074                     ___awdiv@dividend:	
   968                           ; 2 bytes @ 0x4
   969                           
   970  0074                     ___awmod@dividend:	
   971                           ; 2 bytes @ 0x4
   972                           
   973                           
   974                           ; 2 bytes @ 0x4
   975  0074                     	ds	1
   976  0075                     ??_set_cursor:
   977  0075                     Escribir_stringLCD@i:	
   978                           ; 1 bytes @ 0x5
   979                           
   980                           
   981                           ; 1 bytes @ 0x5
   982  0075                     	ds	1
   983  0076                     ??_Config_USART:
   984  0076                     ??___awdiv:	
   985                           ; 1 bytes @ 0x6
   986                           
   987  0076                     ??___awmod:	
   988                           ; 1 bytes @ 0x6
   989                           
   990  0076                     Escribir_stringLCD@d:	
   991                           ; 1 bytes @ 0x6
   992                           
   993  0076                     ___lldiv@dividend:	
   994                           ; 1 bytes @ 0x6
   995                           
   996                           
   997                           ; 4 bytes @ 0x6
   998  0076                     	ds	1
   999  0077                     set_cursor@linea:
  1000  0077                     ___awmod@counter:	
  1001                           ; 1 bytes @ 0x7
  1002                           
  1003                           
  1004                           ; 1 bytes @ 0x7
  1005  0077                     	ds	1
  1006  0078                     ___awmod@sign:
  1007                           
  1008                           ; 1 bytes @ 0x8
  1009  0078                     	ds	2
  1010                           
  1011                           	psect	cstackBANK0
  1012  0038                     __pcstackBANK0:
  1013  0038                     ??___lldiv:
  1014  0038                     ___awdiv@counter:	
  1015                           ; 1 bytes @ 0x0
  1016                           
  1017                           
  1018                           ; 1 bytes @ 0x0
  1019  0038                     	ds	1
  1020  0039                     ___awdiv@sign:
  1021  0039                     ___lldiv@quotient:	
  1022                           ; 1 bytes @ 0x1
  1023                           
  1024                           
  1025                           ; 4 bytes @ 0x1
  1026  0039                     	ds	1
  1027  003A                     ___awdiv@quotient:
  1028                           
  1029                           ; 2 bytes @ 0x2
  1030  003A                     	ds	2
  1031  003C                     ?_divisor_dec:
  1032  003C                     divisor_dec@b:	
  1033                           ; 1 bytes @ 0x4
  1034                           
  1035                           
  1036                           ; 2 bytes @ 0x4
  1037  003C                     	ds	1
  1038  003D                     ___lldiv@counter:
  1039                           
  1040                           ; 1 bytes @ 0x5
  1041  003D                     	ds	1
  1042  003E                     ?_InitMSSP:
  1043  003E                     divisor_dec@dig1:	
  1044                           ; 1 bytes @ 0x6
  1045                           
  1046  003E                     InitMSSP@Dato:	
  1047                           ; 1 bytes @ 0x6
  1048                           
  1049                           
  1050                           ; 4 bytes @ 0x6
  1051  003E                     	ds	1
  1052  003F                     ??_divisor_dec:
  1053                           
  1054                           ; 1 bytes @ 0x7
  1055  003F                     	ds	2
  1056  0041                     divisor_dec@n:
  1057                           
  1058                           ; 2 bytes @ 0x9
  1059  0041                     	ds	1
  1060  0042                     ??_InitMSSP:
  1061                           
  1062                           ; 1 bytes @ 0xA
  1063  0042                     	ds	4
  1064  0046                     InitMSSP@Modo:
  1065                           
  1066                           ; 1 bytes @ 0xE
  1067  0046                     	ds	1
  1068  0047                     ??_setup:
  1069                           
  1070                           ; 1 bytes @ 0xF
  1071  0047                     	ds	3
  1072  004A                     ??_main:
  1073                           
  1074                           ; 1 bytes @ 0x12
  1075  004A                     	ds	3
  1076                           
  1077                           	psect	maintext
  1078  001E                     __pmaintext:	
  1079 ;;
  1080 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1081 ;;
  1082 ;; *************** function _main *****************
  1083 ;; Defined at:
  1084 ;;		line 99 in file "Maestro I2C.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;		None
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;		None
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      void 
  1091 ;; Registers used:
  1092 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1093 ;; Tracked objects:
  1094 ;;		On entry : B00/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1098 ;;      Params:         0       0       0       0       0
  1099 ;;      Locals:         0       0       0       0       0
  1100 ;;      Temps:          0       3       0       0       0
  1101 ;;      Totals:         0       3       0       0       0
  1102 ;;Total ram usage:        3 bytes
  1103 ;; Hardware stack levels required when called: 5
  1104 ;; This function calls:
  1105 ;;		_Escribir_caracterLCD
  1106 ;;		_Escribir_stringLCD
  1107 ;;		_I2CMasterRead
  1108 ;;		_I2CMasterStop
  1109 ;;		_I2CMasterWrite
  1110 ;;		_I2C_Master_Start
  1111 ;;		_divisor_dec
  1112 ;;		_set_cursor
  1113 ;;		_setup
  1114 ;;		_tabla_numASCII
  1115 ;; This function is called by:
  1116 ;;		Startup code after reset
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           
  1121                           ;psect for function _main
  1122  001E                     _main:
  1123  001E                     l2303:	
  1124                           ;incstack = 0
  1125                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1126                           
  1127                           
  1128                           ;Maestro I2C.c: 100:     setup();
  1129  001E  120A  118A  238E  120A  118A  	fcall	_setup
  1130  0023                     l2305:
  1131                           
  1132                           ;Maestro I2C.c: 105:         I2C_Master_Start(Standard);
  1133  0023  3001               	movlw	1
  1134  0024  120A  118A  276C  120A  118A  	fcall	_I2C_Master_Start
  1135  0029                     l2307:
  1136                           
  1137                           ;Maestro I2C.c: 106:         I2CMasterWrite(0b11010010 +0);
  1138  0029  30D2               	movlw	210
  1139  002A  120A  118A  27AD  120A  118A  	fcall	_I2CMasterWrite
  1140  002F                     l2309:
  1141                           
  1142                           ;Maestro I2C.c: 107:         I2CMasterWrite(0x3B);
  1143  002F  303B               	movlw	59
  1144  0030  120A  118A  27AD  120A  118A  	fcall	_I2CMasterWrite
  1145  0035                     l2311:
  1146                           
  1147                           ;Maestro I2C.c: 109:         I2C_Master_Start(Repeated);
  1148  0035  3000               	movlw	0
  1149  0036  120A  118A  276C  120A  118A  	fcall	_I2C_Master_Start
  1150  003B                     l2313:
  1151                           
  1152                           ;Maestro I2C.c: 110:         I2CMasterWrite(0b11010010 +1);
  1153  003B  30D3               	movlw	211
  1154  003C  120A  118A  27AD  120A  118A  	fcall	_I2CMasterWrite
  1155  0041                     l2315:
  1156                           
  1157                           ;Maestro I2C.c: 122:         Ax1 = I2CMasterRead(ACK); Ax2 = I2CMasterRead(ACK);
  1158  0041  3000               	movlw	0
  1159  0042  120A  118A  2704  120A  118A  	fcall	_I2CMasterRead
  1160  0047  1283               	bcf	3,5	;RP0=0, select bank0
  1161  0048  1303               	bcf	3,6	;RP1=0, select bank0
  1162  0049  00CA               	movwf	??_main
  1163  004A  084A               	movf	??_main,w
  1164  004B  00B7               	movwf	_Ax1
  1165  004C                     l2317:
  1166  004C  3000               	movlw	0
  1167  004D  120A  118A  2704  120A  118A  	fcall	_I2CMasterRead
  1168  0052  1283               	bcf	3,5	;RP0=0, select bank0
  1169  0053  1303               	bcf	3,6	;RP1=0, select bank0
  1170  0054  00CA               	movwf	??_main
  1171  0055  084A               	movf	??_main,w
  1172  0056  00B6               	movwf	_Ax2
  1173  0057                     l2319:
  1174                           
  1175                           ;Maestro I2C.c: 123:         Ay1 = I2CMasterRead(ACK); Ay2 = I2CMasterRead(ACK);
  1176  0057  3000               	movlw	0
  1177  0058  120A  118A  2704  120A  118A  	fcall	_I2CMasterRead
  1178  005D  1283               	bcf	3,5	;RP0=0, select bank0
  1179  005E  1303               	bcf	3,6	;RP1=0, select bank0
  1180  005F  00CA               	movwf	??_main
  1181  0060  084A               	movf	??_main,w
  1182  0061  00B5               	movwf	_Ay1
  1183  0062                     l2321:
  1184  0062  3000               	movlw	0
  1185  0063  120A  118A  2704  120A  118A  	fcall	_I2CMasterRead
  1186  0068  1283               	bcf	3,5	;RP0=0, select bank0
  1187  0069  1303               	bcf	3,6	;RP1=0, select bank0
  1188  006A  00CA               	movwf	??_main
  1189  006B  084A               	movf	??_main,w
  1190  006C  00B4               	movwf	_Ay2
  1191  006D                     l2323:
  1192                           
  1193                           ;Maestro I2C.c: 124:         Az1 = I2CMasterRead(ACK); Az2 = I2CMasterRead(ACK);
  1194  006D  3000               	movlw	0
  1195  006E  120A  118A  2704  120A  118A  	fcall	_I2CMasterRead
  1196  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1197  0074  1303               	bcf	3,6	;RP1=0, select bank0
  1198  0075  00CA               	movwf	??_main
  1199  0076  084A               	movf	??_main,w
  1200  0077  00B3               	movwf	_Az1
  1201  0078                     l2325:
  1202  0078  3000               	movlw	0
  1203  0079  120A  118A  2704  120A  118A  	fcall	_I2CMasterRead
  1204  007E  1283               	bcf	3,5	;RP0=0, select bank0
  1205  007F  1303               	bcf	3,6	;RP1=0, select bank0
  1206  0080  00CA               	movwf	??_main
  1207  0081  084A               	movf	??_main,w
  1208  0082  00B2               	movwf	_Az2
  1209  0083                     l2327:
  1210                           
  1211                           ;Maestro I2C.c: 125:         T1 = I2CMasterRead(ACK); T2 = I2CMasterRead(ACK);
  1212  0083  3000               	movlw	0
  1213  0084  120A  118A  2704  120A  118A  	fcall	_I2CMasterRead
  1214  0089  1283               	bcf	3,5	;RP0=0, select bank0
  1215  008A  1303               	bcf	3,6	;RP1=0, select bank0
  1216  008B  00CA               	movwf	??_main
  1217  008C  084A               	movf	??_main,w
  1218  008D  00B1               	movwf	_T1
  1219  008E                     l2329:
  1220  008E  3000               	movlw	0
  1221  008F  120A  118A  2704  120A  118A  	fcall	_I2CMasterRead
  1222  0094  1283               	bcf	3,5	;RP0=0, select bank0
  1223  0095  1303               	bcf	3,6	;RP1=0, select bank0
  1224  0096  00CA               	movwf	??_main
  1225  0097  084A               	movf	??_main,w
  1226  0098  00B0               	movwf	_T2
  1227  0099                     l2331:
  1228                           
  1229                           ;Maestro I2C.c: 126:         Gx1 = I2CMasterRead(ACK); Gx2 = I2CMasterRead(ACK);
  1230  0099  3000               	movlw	0
  1231  009A  120A  118A  2704  120A  118A  	fcall	_I2CMasterRead
  1232  009F  1283               	bcf	3,5	;RP0=0, select bank0
  1233  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1234  00A1  00CA               	movwf	??_main
  1235  00A2  084A               	movf	??_main,w
  1236  00A3  00AF               	movwf	_Gx1
  1237  00A4                     l2333:
  1238  00A4  3000               	movlw	0
  1239  00A5  120A  118A  2704  120A  118A  	fcall	_I2CMasterRead
  1240  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1241  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1242  00AC  00CA               	movwf	??_main
  1243  00AD  084A               	movf	??_main,w
  1244  00AE  00AE               	movwf	_Gx2
  1245  00AF                     l2335:
  1246                           
  1247                           ;Maestro I2C.c: 127:         Gy1 = I2CMasterRead(ACK); Gy2 = I2CMasterRead(ACK);
  1248  00AF  3000               	movlw	0
  1249  00B0  120A  118A  2704  120A  118A  	fcall	_I2CMasterRead
  1250  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1251  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1252  00B7  00CA               	movwf	??_main
  1253  00B8  084A               	movf	??_main,w
  1254  00B9  00AD               	movwf	_Gy1
  1255  00BA                     l2337:
  1256  00BA  3000               	movlw	0
  1257  00BB  120A  118A  2704  120A  118A  	fcall	_I2CMasterRead
  1258  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1259  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1260  00C2  00CA               	movwf	??_main
  1261  00C3  084A               	movf	??_main,w
  1262  00C4  00AC               	movwf	_Gy2
  1263  00C5                     l2339:
  1264                           
  1265                           ;Maestro I2C.c: 128:         Gz1 = I2CMasterRead(ACK); Gz2 = I2CMasterRead(NACK);
  1266  00C5  3000               	movlw	0
  1267  00C6  120A  118A  2704  120A  118A  	fcall	_I2CMasterRead
  1268  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1269  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1270  00CD  00CA               	movwf	??_main
  1271  00CE  084A               	movf	??_main,w
  1272  00CF  00AB               	movwf	_Gz1
  1273  00D0                     l2341:
  1274  00D0  3001               	movlw	1
  1275  00D1  120A  118A  2704  120A  118A  	fcall	_I2CMasterRead
  1276  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1277  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1278  00D8  00CA               	movwf	??_main
  1279  00D9  084A               	movf	??_main,w
  1280  00DA  00AA               	movwf	_Gz2
  1281  00DB                     l2343:
  1282                           
  1283                           ;Maestro I2C.c: 130:         I2CMasterStop();
  1284  00DB  120A  118A  27B8  120A  118A  	fcall	_I2CMasterStop
  1285  00E0                     l2345:
  1286                           
  1287                           ;Maestro I2C.c: 131:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1288  00E0  301A               	movlw	26
  1289  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1290  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  1291  00E3  00CB               	movwf	??_main+1
  1292  00E4  30F7               	movlw	247
  1293  00E5  00CA               	movwf	??_main
  1294  00E6                     u1657:
  1295  00E6  0BCA               	decfsz	??_main,f
  1296  00E7  28E6               	goto	u1657
  1297  00E8  0BCB               	decfsz	??_main+1,f
  1298  00E9  28E6               	goto	u1657
  1299  00EA  28EB               	nop2
  1300  00EB                     l2347:
  1301                           
  1302                           ;Maestro I2C.c: 138:         divisor_dec(Gx1,Giro_digx);
  1303  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1304  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  1305  00ED  082F               	movf	_Gx1,w
  1306  00EE  00CA               	movwf	??_main
  1307  00EF  01CB               	clrf	??_main+1
  1308  00F0  084A               	movf	??_main,w
  1309  00F1  00BC               	movwf	divisor_dec@b
  1310  00F2  084B               	movf	??_main+1,w
  1311  00F3  00BD               	movwf	divisor_dec@b+1
  1312  00F4  307B               	movlw	(low (_Giro_digx| 0))& (0+255)
  1313  00F5  00CC               	movwf	??_main+2
  1314  00F6  084C               	movf	??_main+2,w
  1315  00F7  00BE               	movwf	divisor_dec@dig1
  1316  00F8  120A  118A  2590  120A  118A  	fcall	_divisor_dec
  1317  00FD                     l2349:
  1318                           
  1319                           ;Maestro I2C.c: 141:         uni_x = tabla_numASCII(Giro_digx[0]);
  1320  00FD  087B               	movf	_Giro_digx,w
  1321  00FE  120A  118A  2663  120A  118A  	fcall	_tabla_numASCII
  1322  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1323  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1324  0105  00CA               	movwf	??_main
  1325  0106  084A               	movf	??_main,w
  1326  0107  00A9               	movwf	_uni_x
  1327  0108                     l2351:
  1328                           
  1329                           ;Maestro I2C.c: 142:         dec_x = tabla_numASCII(Giro_digx[1]);
  1330  0108  087C               	movf	_Giro_digx+1,w
  1331  0109  120A  118A  2663  120A  118A  	fcall	_tabla_numASCII
  1332  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1333  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1334  0110  00CA               	movwf	??_main
  1335  0111  084A               	movf	??_main,w
  1336  0112  00A8               	movwf	_dec_x
  1337  0113                     l2353:
  1338                           
  1339                           ;Maestro I2C.c: 143:         cen_x = tabla_numASCII(Giro_digx[2]);
  1340  0113  087D               	movf	_Giro_digx+2,w
  1341  0114  120A  118A  2663  120A  118A  	fcall	_tabla_numASCII
  1342  0119  1283               	bcf	3,5	;RP0=0, select bank0
  1343  011A  1303               	bcf	3,6	;RP1=0, select bank0
  1344  011B  00CA               	movwf	??_main
  1345  011C  084A               	movf	??_main,w
  1346  011D  00A7               	movwf	_cen_x
  1347  011E                     l2355:
  1348                           
  1349                           ;Maestro I2C.c: 146:         set_cursor(1,0);
  1350  011E  01F4               	clrf	set_cursor@posicion
  1351  011F  3001               	movlw	1
  1352  0120  120A  118A  25DD  120A  118A  	fcall	_set_cursor
  1353  0125                     l2357:
  1354                           
  1355                           ;Maestro I2C.c: 147:         Escribir_stringLCD("X:    Y:     S:");
  1356  0125  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1357  0126  120A  118A  272C  120A  118A  	fcall	_Escribir_stringLCD
  1358  012B                     l2359:
  1359                           
  1360                           ;Maestro I2C.c: 149:         set_cursor(2,0);
  1361  012B  01F4               	clrf	set_cursor@posicion
  1362  012C  3002               	movlw	2
  1363  012D  120A  118A  25DD  120A  118A  	fcall	_set_cursor
  1364  0132                     l2361:
  1365                           
  1366                           ;Maestro I2C.c: 150:         Escribir_caracterLCD(cen_x);
  1367  0132  1283               	bcf	3,5	;RP0=0, select bank0
  1368  0133  1303               	bcf	3,6	;RP1=0, select bank0
  1369  0134  0827               	movf	_cen_x,w
  1370  0135  120A  118A  27A1  120A  118A  	fcall	_Escribir_caracterLCD
  1371  013A                     l2363:
  1372                           
  1373                           ;Maestro I2C.c: 151:         Escribir_caracterLCD(dec_x);
  1374  013A  1283               	bcf	3,5	;RP0=0, select bank0
  1375  013B  1303               	bcf	3,6	;RP1=0, select bank0
  1376  013C  0828               	movf	_dec_x,w
  1377  013D  120A  118A  27A1  120A  118A  	fcall	_Escribir_caracterLCD
  1378  0142                     l2365:
  1379                           
  1380                           ;Maestro I2C.c: 152:         Escribir_caracterLCD(uni_x);
  1381  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1382  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1383  0144  0829               	movf	_uni_x,w
  1384  0145  120A  118A  27A1  120A  118A  	fcall	_Escribir_caracterLCD
  1385  014A                     l2367:
  1386                           
  1387                           ;Maestro I2C.c: 155:         divisor_dec(Gy1,Giro_digy);
  1388  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1389  014B  1303               	bcf	3,6	;RP1=0, select bank0
  1390  014C  082D               	movf	_Gy1,w
  1391  014D  00CA               	movwf	??_main
  1392  014E  01CB               	clrf	??_main+1
  1393  014F  084A               	movf	??_main,w
  1394  0150  00BC               	movwf	divisor_dec@b
  1395  0151  084B               	movf	??_main+1,w
  1396  0152  00BD               	movwf	divisor_dec@b+1
  1397  0153  307A               	movlw	(low (_Giro_digy| 0))& (0+255)
  1398  0154  00CC               	movwf	??_main+2
  1399  0155  084C               	movf	??_main+2,w
  1400  0156  00BE               	movwf	divisor_dec@dig1
  1401  0157  120A  118A  2590  120A  118A  	fcall	_divisor_dec
  1402  015C                     l2369:
  1403                           
  1404                           ;Maestro I2C.c: 158:         uni_y = tabla_numASCII(Giro_digy[0]);
  1405  015C  087A               	movf	_Giro_digy,w
  1406  015D  120A  118A  2663  120A  118A  	fcall	_tabla_numASCII
  1407  0162  1283               	bcf	3,5	;RP0=0, select bank0
  1408  0163  1303               	bcf	3,6	;RP1=0, select bank0
  1409  0164  00CA               	movwf	??_main
  1410  0165  084A               	movf	??_main,w
  1411  0166  00A6               	movwf	_uni_y
  1412  0167                     l2371:
  1413                           
  1414                           ;Maestro I2C.c: 159:         dec_y = tabla_numASCII(Giro_digy[1]);
  1415  0167  087B               	movf	_Giro_digy+1,w
  1416  0168  120A  118A  2663  120A  118A  	fcall	_tabla_numASCII
  1417  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1418  016E  1303               	bcf	3,6	;RP1=0, select bank0
  1419  016F  00CA               	movwf	??_main
  1420  0170  084A               	movf	??_main,w
  1421  0171  00A5               	movwf	_dec_y
  1422  0172                     l2373:
  1423                           
  1424                           ;Maestro I2C.c: 160:         cen_y = tabla_numASCII(Giro_digy[2]);
  1425  0172  087C               	movf	_Giro_digy+2,w
  1426  0173  120A  118A  2663  120A  118A  	fcall	_tabla_numASCII
  1427  0178  1283               	bcf	3,5	;RP0=0, select bank0
  1428  0179  1303               	bcf	3,6	;RP1=0, select bank0
  1429  017A  00CA               	movwf	??_main
  1430  017B  084A               	movf	??_main,w
  1431  017C  00A4               	movwf	_cen_y
  1432  017D                     l2375:
  1433                           
  1434                           ;Maestro I2C.c: 162:         set_cursor(2,6);
  1435  017D  3006               	movlw	6
  1436  017E  00CA               	movwf	??_main
  1437  017F  084A               	movf	??_main,w
  1438  0180  00F4               	movwf	set_cursor@posicion
  1439  0181  3002               	movlw	2
  1440  0182  120A  118A  25DD  120A  118A  	fcall	_set_cursor
  1441  0187                     l2377:
  1442                           
  1443                           ;Maestro I2C.c: 163:         Escribir_caracterLCD(cen_y);
  1444  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1446  0189  0824               	movf	_cen_y,w
  1447  018A  120A  118A  27A1  120A  118A  	fcall	_Escribir_caracterLCD
  1448  018F                     l2379:
  1449                           
  1450                           ;Maestro I2C.c: 164:         Escribir_caracterLCD(dec_y);
  1451  018F  1283               	bcf	3,5	;RP0=0, select bank0
  1452  0190  1303               	bcf	3,6	;RP1=0, select bank0
  1453  0191  0825               	movf	_dec_y,w
  1454  0192  120A  118A  27A1  120A  118A  	fcall	_Escribir_caracterLCD
  1455  0197                     l2381:
  1456                           
  1457                           ;Maestro I2C.c: 165:         Escribir_caracterLCD(uni_y);
  1458  0197  1283               	bcf	3,5	;RP0=0, select bank0
  1459  0198  1303               	bcf	3,6	;RP1=0, select bank0
  1460  0199  0826               	movf	_uni_y,w
  1461  019A  120A  118A  27A1  120A  118A  	fcall	_Escribir_caracterLCD
  1462  019F  2823               	goto	l2305
  1463  01A0  120A  118A  280C   	ljmp	start
  1464  01A3                     __end_of_main:
  1465                           
  1466                           	psect	text1
  1467  0663                     __ptext1:	
  1468 ;; *************** function _tabla_numASCII *****************
  1469 ;; Defined at:
  1470 ;;		line 217 in file "Maestro I2C.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  a               1    wreg     unsigned char 
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  a               1    4[COMMON] unsigned char 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      unsigned char 
  1477 ;; Registers used:
  1478 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1484 ;;      Params:         0       0       0       0       0
  1485 ;;      Locals:         1       0       0       0       0
  1486 ;;      Temps:          2       0       0       0       0
  1487 ;;      Totals:         3       0       0       0       0
  1488 ;;Total ram usage:        3 bytes
  1489 ;; Hardware stack levels used: 1
  1490 ;; Hardware stack levels required when called: 1
  1491 ;; This function calls:
  1492 ;;		Nothing
  1493 ;; This function is called by:
  1494 ;;		_main
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           
  1499                           ;psect for function _tabla_numASCII
  1500  0663                     _tabla_numASCII:
  1501                           
  1502                           ;incstack = 0
  1503                           ; Regs used in _tabla_numASCII: [wreg-fsr0h+status,2+status,0]
  1504                           ;tabla_numASCII@a stored from wreg
  1505  0663  00F4               	movwf	tabla_numASCII@a
  1506  0664                     l1975:
  1507                           
  1508                           ;Maestro I2C.c: 218:     switch(a){
  1509  0664  2E79               	goto	l2039
  1510  0665                     l1977:
  1511                           
  1512                           ;Maestro I2C.c: 220:             return 48;
  1513  0665  3030               	movlw	48
  1514  0666  2EA1               	goto	l128
  1515  0667                     l1983:
  1516                           
  1517                           ;Maestro I2C.c: 223:             return 49;
  1518  0667  3031               	movlw	49
  1519  0668  2EA1               	goto	l128
  1520  0669                     l1989:
  1521                           
  1522                           ;Maestro I2C.c: 226:             return 50;
  1523  0669  3032               	movlw	50
  1524  066A  2EA1               	goto	l128
  1525  066B                     l1995:
  1526                           
  1527                           ;Maestro I2C.c: 229:             return 51;
  1528  066B  3033               	movlw	51
  1529  066C  2EA1               	goto	l128
  1530  066D                     l2001:
  1531                           
  1532                           ;Maestro I2C.c: 232:             return 52;
  1533  066D  3034               	movlw	52
  1534  066E  2EA1               	goto	l128
  1535  066F                     l2007:
  1536                           
  1537                           ;Maestro I2C.c: 235:             return 53;
  1538  066F  3035               	movlw	53
  1539  0670  2EA1               	goto	l128
  1540  0671                     l2013:
  1541                           
  1542                           ;Maestro I2C.c: 238:             return 54;
  1543  0671  3036               	movlw	54
  1544  0672  2EA1               	goto	l128
  1545  0673                     l2019:
  1546                           
  1547                           ;Maestro I2C.c: 241:             return 55;
  1548  0673  3037               	movlw	55
  1549  0674  2EA1               	goto	l128
  1550  0675                     l2025:
  1551                           
  1552                           ;Maestro I2C.c: 244:             return 56;
  1553  0675  3038               	movlw	56
  1554  0676  2EA1               	goto	l128
  1555  0677                     l2031:
  1556                           
  1557                           ;Maestro I2C.c: 247:             return 57;
  1558  0677  3039               	movlw	57
  1559  0678  2EA1               	goto	l128
  1560  0679                     l2039:
  1561  0679  0874               	movf	tabla_numASCII@a,w
  1562  067A  00F2               	movwf	??_tabla_numASCII
  1563  067B  01F3               	clrf	??_tabla_numASCII+1
  1564                           
  1565                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1566                           ; Switch size 1, requested type "simple"
  1567                           ; Number of cases is 1, Range of values is 0 to 0
  1568                           ; switch strategies available:
  1569                           ; Name         Instructions Cycles
  1570                           ; simple_byte            4     3 (average)
  1571                           ; direct_byte           11     8 (fixed)
  1572                           ; jumptable            260     6 (fixed)
  1573                           ;	Chosen strategy is simple_byte
  1574  067C  0873               	movf	??_tabla_numASCII+1,w
  1575  067D  3A00               	xorlw	0	; case 0
  1576  067E  1903               	skipnz
  1577  067F  2E81               	goto	l2403
  1578  0680  2EA1               	goto	l128
  1579  0681                     l2403:
  1580                           
  1581                           ; Switch size 1, requested type "simple"
  1582                           ; Number of cases is 10, Range of values is 0 to 9
  1583                           ; switch strategies available:
  1584                           ; Name         Instructions Cycles
  1585                           ; simple_byte           31    16 (average)
  1586                           ; direct_byte           38     8 (fixed)
  1587                           ; jumptable            260     6 (fixed)
  1588                           ;	Chosen strategy is simple_byte
  1589  0681  0872               	movf	??_tabla_numASCII,w
  1590  0682  3A00               	xorlw	0	; case 0
  1591  0683  1903               	skipnz
  1592  0684  2E65               	goto	l1977
  1593  0685  3A01               	xorlw	1	; case 1
  1594  0686  1903               	skipnz
  1595  0687  2E67               	goto	l1983
  1596  0688  3A03               	xorlw	3	; case 2
  1597  0689  1903               	skipnz
  1598  068A  2E69               	goto	l1989
  1599  068B  3A01               	xorlw	1	; case 3
  1600  068C  1903               	skipnz
  1601  068D  2E6B               	goto	l1995
  1602  068E  3A07               	xorlw	7	; case 4
  1603  068F  1903               	skipnz
  1604  0690  2E6D               	goto	l2001
  1605  0691  3A01               	xorlw	1	; case 5
  1606  0692  1903               	skipnz
  1607  0693  2E6F               	goto	l2007
  1608  0694  3A03               	xorlw	3	; case 6
  1609  0695  1903               	skipnz
  1610  0696  2E71               	goto	l2013
  1611  0697  3A01               	xorlw	1	; case 7
  1612  0698  1903               	skipnz
  1613  0699  2E73               	goto	l2019
  1614  069A  3A0F               	xorlw	15	; case 8
  1615  069B  1903               	skipnz
  1616  069C  2E75               	goto	l2025
  1617  069D  3A01               	xorlw	1	; case 9
  1618  069E  1903               	skipnz
  1619  069F  2E77               	goto	l2031
  1620  06A0  2EA1               	goto	l128
  1621  06A1                     l128:
  1622  06A1  0008               	return
  1623  06A2                     __end_of_tabla_numASCII:
  1624                           
  1625                           	psect	text2
  1626  038E                     __ptext2:	
  1627 ;; *************** function _setup *****************
  1628 ;; Defined at:
  1629 ;;		line 171 in file "Maestro I2C.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;		None
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;		None
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  1    wreg      void 
  1636 ;; Registers used:
  1637 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1643 ;;      Params:         0       0       0       0       0
  1644 ;;      Locals:         0       0       0       0       0
  1645 ;;      Temps:          0       3       0       0       0
  1646 ;;      Totals:         0       3       0       0       0
  1647 ;;Total ram usage:        3 bytes
  1648 ;; Hardware stack levels used: 1
  1649 ;; Hardware stack levels required when called: 4
  1650 ;; This function calls:
  1651 ;;		_Config_USART
  1652 ;;		_Escribir_stringLCD
  1653 ;;		_Iniciar_LCD
  1654 ;;		_InitMPU6050
  1655 ;;		_InitMSSP
  1656 ;;		_Limpiar_pantallaLCD
  1657 ;;		_initOsc
  1658 ;;		_set_cursor
  1659 ;; This function is called by:
  1660 ;;		_main
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664                           
  1665                           ;psect for function _setup
  1666  038E                     _setup:
  1667  038E                     l2265:	
  1668                           ;incstack = 0
  1669                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1670                           
  1671                           
  1672                           ;Maestro I2C.c: 174:     ANSEL = 0;
  1673  038E  1683               	bsf	3,5	;RP0=1, select bank3
  1674  038F  1703               	bsf	3,6	;RP1=1, select bank3
  1675  0390  0188               	clrf	8	;volatile
  1676                           
  1677                           ;Maestro I2C.c: 175:     ANSELH = 0;
  1678  0391  0189               	clrf	9	;volatile
  1679                           
  1680                           ;Maestro I2C.c: 177:     TRISA = 0;
  1681  0392  1683               	bsf	3,5	;RP0=1, select bank1
  1682  0393  1303               	bcf	3,6	;RP1=0, select bank1
  1683  0394  0185               	clrf	5	;volatile
  1684                           
  1685                           ;Maestro I2C.c: 178:     TRISB = 0;
  1686  0395  0186               	clrf	6	;volatile
  1687                           
  1688                           ;Maestro I2C.c: 179:     TRISD = 0;
  1689  0396  0188               	clrf	8	;volatile
  1690                           
  1691                           ;Maestro I2C.c: 181:     PORTA = 0;
  1692  0397  1283               	bcf	3,5	;RP0=0, select bank0
  1693  0398  1303               	bcf	3,6	;RP1=0, select bank0
  1694  0399  0185               	clrf	5	;volatile
  1695                           
  1696                           ;Maestro I2C.c: 182:     PORTB = 0;
  1697  039A  0186               	clrf	6	;volatile
  1698                           
  1699                           ;Maestro I2C.c: 183:     PORTD = 0;
  1700  039B  0188               	clrf	8	;volatile
  1701  039C                     l2267:
  1702                           
  1703                           ;Maestro I2C.c: 186:     initOsc(4);
  1704  039C  3004               	movlw	4
  1705  039D  120A  118A  26D4  120A  118A  	fcall	_initOsc
  1706  03A2                     l2269:
  1707                           
  1708                           ;Maestro I2C.c: 190:     InitMSSP(I2C_MASTER_FOSC, 100000);
  1709  03A2  3000               	movlw	0
  1710  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  1711  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  1712  03A5  00C1               	movwf	InitMSSP@Dato+3
  1713  03A6  3001               	movlw	1
  1714  03A7  00C0               	movwf	InitMSSP@Dato+2
  1715  03A8  3086               	movlw	134
  1716  03A9  00BF               	movwf	InitMSSP@Dato+1
  1717  03AA  30A0               	movlw	160
  1718  03AB  00BE               	movwf	InitMSSP@Dato
  1719  03AC  3008               	movlw	8
  1720  03AD  120A  118A  21A3  120A  118A  	fcall	_InitMSSP
  1721  03B2                     l2271:
  1722                           
  1723                           ;Maestro I2C.c: 193:     InitMPU6050();
  1724  03B2  120A  118A  2304  120A  118A  	fcall	_InitMPU6050
  1725  03B7                     l2273:
  1726                           
  1727                           ;Maestro I2C.c: 196:     Iniciar_LCD();
  1728  03B7  120A  118A  24D2  120A  118A  	fcall	_Iniciar_LCD
  1729  03BC                     l2275:
  1730                           
  1731                           ;Maestro I2C.c: 197:     Limpiar_pantallaLCD();
  1732  03BC  120A  118A  2752  120A  118A  	fcall	_Limpiar_pantallaLCD
  1733  03C1                     l2277:
  1734                           
  1735                           ;Maestro I2C.c: 198:     set_cursor(1,0);
  1736  03C1  01F4               	clrf	set_cursor@posicion
  1737  03C2  3001               	movlw	1
  1738  03C3  120A  118A  25DD  120A  118A  	fcall	_set_cursor
  1739  03C8                     l2279:
  1740                           
  1741                           ;Maestro I2C.c: 199:     Escribir_stringLCD("Miniproyecto 2");
  1742  03C8  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1743  03C9  120A  118A  272C  120A  118A  	fcall	_Escribir_stringLCD
  1744  03CE                     l2281:
  1745                           
  1746                           ;Maestro I2C.c: 200:     set_cursor(2,2);
  1747  03CE  3002               	movlw	2
  1748  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  1749  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  1750  03D1  00C7               	movwf	??_setup
  1751  03D2  0847               	movf	??_setup,w
  1752  03D3  00F4               	movwf	set_cursor@posicion
  1753  03D4  3002               	movlw	2
  1754  03D5  120A  118A  25DD  120A  118A  	fcall	_set_cursor
  1755  03DA                     l2283:
  1756                           
  1757                           ;Maestro I2C.c: 201:     Escribir_stringLCD("Jose Santizo");
  1758  03DA  3020               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1759  03DB  120A  118A  272C  120A  118A  	fcall	_Escribir_stringLCD
  1760  03E0                     l2285:
  1761                           
  1762                           ;Maestro I2C.c: 202:     _delay((unsigned long)((5000)*(8000000/4000.0)));
  1763  03E0  3033               	movlw	51
  1764  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  1765  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  1766  03E3  00C9               	movwf	??_setup+2
  1767  03E4  30BB               	movlw	187
  1768  03E5  00C8               	movwf	??_setup+1
  1769  03E6  30DF               	movlw	223
  1770  03E7  00C7               	movwf	??_setup
  1771  03E8                     u1667:
  1772  03E8  0BC7               	decfsz	??_setup,f
  1773  03E9  2BE8               	goto	u1667
  1774  03EA  0BC8               	decfsz	??_setup+1,f
  1775  03EB  2BE8               	goto	u1667
  1776  03EC  0BC9               	decfsz	??_setup+2,f
  1777  03ED  2BE8               	goto	u1667
  1778  03EE                     l2287:
  1779                           
  1780                           ;Maestro I2C.c: 203:     Limpiar_pantallaLCD();
  1781  03EE  120A  118A  2752  120A  118A  	fcall	_Limpiar_pantallaLCD
  1782  03F3                     l2289:
  1783                           
  1784                           ;Maestro I2C.c: 206:     Config_USART(9600,4);
  1785  03F3  3080               	movlw	128
  1786  03F4  00F2               	movwf	Config_USART@baud_rate
  1787  03F5  3025               	movlw	37
  1788  03F6  00F3               	movwf	Config_USART@baud_rate+1
  1789  03F7  3004               	movlw	4
  1790  03F8  00F4               	movwf	Config_USART@Freq
  1791  03F9  3000               	movlw	0
  1792  03FA  00F5               	movwf	Config_USART@Freq+1
  1793  03FB  120A  118A  2254  120A  118A  	fcall	_Config_USART
  1794  0400                     l118:
  1795  0400  0008               	return
  1796  0401                     __end_of_setup:
  1797                           
  1798                           	psect	text3
  1799  05DD                     __ptext3:	
  1800 ;; *************** function _set_cursor *****************
  1801 ;; Defined at:
  1802 ;;		line 77 in file "LCD.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  linea           1    wreg     unsigned char 
  1805 ;;  posicion        1    4[COMMON] unsigned char 
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;  linea           1    7[COMMON] unsigned char 
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  1    wreg      void 
  1810 ;; Registers used:
  1811 ;;		wreg, status,2, status,0, pclath, cstack
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1817 ;;      Params:         1       0       0       0       0
  1818 ;;      Locals:         1       0       0       0       0
  1819 ;;      Temps:          2       0       0       0       0
  1820 ;;      Totals:         4       0       0       0       0
  1821 ;;Total ram usage:        4 bytes
  1822 ;; Hardware stack levels used: 1
  1823 ;; Hardware stack levels required when called: 3
  1824 ;; This function calls:
  1825 ;;		_Escribir_comandoLCD
  1826 ;; This function is called by:
  1827 ;;		_main
  1828 ;;		_setup
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           
  1833                           ;psect for function _set_cursor
  1834  05DD                     _set_cursor:
  1835                           
  1836                           ;incstack = 0
  1837                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1838                           ;set_cursor@linea stored from wreg
  1839  05DD  00F7               	movwf	set_cursor@linea
  1840  05DE                     l1593:
  1841                           
  1842                           ;LCD.c: 78:     PORTDbits.RD3 = 0; PORTDbits.RD4 = 0;
  1843  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1844  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1845  05E0  1188               	bcf	8,3	;volatile
  1846  05E1  1208               	bcf	8,4	;volatile
  1847  05E2                     l1595:
  1848                           
  1849                           ;LCD.c: 81:     if (linea == 1){ Escribir_comandoLCD(0b10000000);}
  1850  05E2  0377               	decf	set_cursor@linea,w
  1851  05E3  1D03               	btfss	3,2
  1852  05E4  2DE6               	goto	u891
  1853  05E5  2DE7               	goto	u890
  1854  05E6                     u891:
  1855  05E6  2DEE               	goto	l1599
  1856  05E7                     u890:
  1857  05E7                     l1597:
  1858  05E7  3080               	movlw	128
  1859  05E8  120A  118A  2620  120A  118A  	fcall	_Escribir_comandoLCD
  1860  05ED  2DFA               	goto	l1603
  1861  05EE                     l1599:
  1862  05EE  3002               	movlw	2
  1863  05EF  0677               	xorwf	set_cursor@linea,w
  1864  05F0  1D03               	btfss	3,2
  1865  05F1  2DF3               	goto	u901
  1866  05F2  2DF4               	goto	u900
  1867  05F3                     u901:
  1868  05F3  2DFA               	goto	l1603
  1869  05F4                     u900:
  1870  05F4                     l1601:
  1871  05F4  30C0               	movlw	192
  1872  05F5  120A  118A  2620  120A  118A  	fcall	_Escribir_comandoLCD
  1873  05FA                     l1603:
  1874                           
  1875                           ;LCD.c: 84:     _delay((unsigned long)((40)*(8000000/4000.0)));
  1876  05FA  3068               	movlw	104
  1877  05FB  00F6               	movwf	??_set_cursor+1
  1878  05FC  30E4               	movlw	228
  1879  05FD  00F5               	movwf	??_set_cursor
  1880  05FE                     u1677:
  1881  05FE  0BF5               	decfsz	??_set_cursor,f
  1882  05FF  2DFE               	goto	u1677
  1883  0600  0BF6               	decfsz	??_set_cursor+1,f
  1884  0601  2DFE               	goto	u1677
  1885  0602  0000               	nop
  1886  0603                     l1605:
  1887                           
  1888                           ;LCD.c: 86:     if (posicion != 0){
  1889  0603  0874               	movf	set_cursor@posicion,w
  1890  0604  1903               	btfsc	3,2
  1891  0605  2E07               	goto	u911
  1892  0606  2E08               	goto	u910
  1893  0607                     u911:
  1894  0607  2E1F               	goto	l260
  1895  0608                     u910:
  1896  0608  2E11               	goto	l1613
  1897  0609                     l1609:
  1898                           
  1899                           ;LCD.c: 88:             Escribir_comandoLCD(0b00010100);
  1900  0609  3014               	movlw	20
  1901  060A  120A  118A  2620  120A  118A  	fcall	_Escribir_comandoLCD
  1902  060F                     l1611:
  1903                           
  1904                           ;LCD.c: 89:             posicion--;
  1905  060F  3001               	movlw	1
  1906  0610  02F4               	subwf	set_cursor@posicion,f
  1907  0611                     l1613:
  1908                           
  1909                           ;LCD.c: 87:         while(posicion > 0){
  1910  0611  0874               	movf	set_cursor@posicion,w
  1911  0612  1D03               	btfss	3,2
  1912  0613  2E15               	goto	u921
  1913  0614  2E16               	goto	u920
  1914  0615                     u921:
  1915  0615  2E09               	goto	l1609
  1916  0616                     u920:
  1917  0616                     l1615:
  1918                           
  1919                           ;LCD.c: 92:         _delay((unsigned long)((40)*(8000000/4000.0)));
  1920  0616  3068               	movlw	104
  1921  0617  00F6               	movwf	??_set_cursor+1
  1922  0618  30E4               	movlw	228
  1923  0619  00F5               	movwf	??_set_cursor
  1924  061A                     u1687:
  1925  061A  0BF5               	decfsz	??_set_cursor,f
  1926  061B  2E1A               	goto	u1687
  1927  061C  0BF6               	decfsz	??_set_cursor+1,f
  1928  061D  2E1A               	goto	u1687
  1929  061E  0000               	nop
  1930  061F                     l260:
  1931  061F  0008               	return
  1932  0620                     __end_of_set_cursor:
  1933                           
  1934                           	psect	text4
  1935  06D4                     __ptext4:	
  1936 ;; *************** function _initOsc *****************
  1937 ;; Defined at:
  1938 ;;		line 12 in file "Oscilador.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  Valor           1    wreg     unsigned char 
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;  Valor           1    2[COMMON] unsigned char 
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg, status,2, status,0
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1952 ;;      Params:         0       0       0       0       0
  1953 ;;      Locals:         1       0       0       0       0
  1954 ;;      Temps:          0       0       0       0       0
  1955 ;;      Totals:         1       0       0       0       0
  1956 ;;Total ram usage:        1 bytes
  1957 ;; Hardware stack levels used: 1
  1958 ;; Hardware stack levels required when called: 1
  1959 ;; This function calls:
  1960 ;;		Nothing
  1961 ;; This function is called by:
  1962 ;;		_setup
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           
  1967                           ;psect for function _initOsc
  1968  06D4                     _initOsc:
  1969                           
  1970                           ;incstack = 0
  1971                           ; Regs used in _initOsc: [wreg+status,2+status,0]
  1972                           ;initOsc@Valor stored from wreg
  1973  06D4  00F2               	movwf	initOsc@Valor
  1974  06D5                     l1627:
  1975                           
  1976                           ;Oscilador.c: 14:     if(Valor == 8){
  1977  06D5  3008               	movlw	8
  1978  06D6  0672               	xorwf	initOsc@Valor,w
  1979  06D7  1D03               	btfss	3,2
  1980  06D8  2EDA               	goto	u941
  1981  06D9  2EDB               	goto	u940
  1982  06DA                     u941:
  1983  06DA  2EE0               	goto	l1631
  1984  06DB                     u940:
  1985  06DB                     l1629:
  1986                           
  1987                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
  1988  06DB  1683               	bsf	3,5	;RP0=1, select bank1
  1989  06DC  1303               	bcf	3,6	;RP1=0, select bank1
  1990  06DD  160F               	bsf	15,4	;volatile
  1991                           
  1992                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
  1993  06DE  168F               	bsf	15,5	;volatile
  1994                           
  1995                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
  1996  06DF  170F               	bsf	15,6	;volatile
  1997  06E0                     l1631:
  1998                           
  1999                           ;Oscilador.c: 19:     if(Valor == 4){
  2000  06E0  3004               	movlw	4
  2001  06E1  0672               	xorwf	initOsc@Valor,w
  2002  06E2  1D03               	btfss	3,2
  2003  06E3  2EE5               	goto	u951
  2004  06E4  2EE6               	goto	u950
  2005  06E5                     u951:
  2006  06E5  2EEB               	goto	l1635
  2007  06E6                     u950:
  2008  06E6                     l1633:
  2009                           
  2010                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
  2011  06E6  1683               	bsf	3,5	;RP0=1, select bank1
  2012  06E7  1303               	bcf	3,6	;RP1=0, select bank1
  2013  06E8  120F               	bcf	15,4	;volatile
  2014                           
  2015                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
  2016  06E9  168F               	bsf	15,5	;volatile
  2017                           
  2018                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
  2019  06EA  170F               	bsf	15,6	;volatile
  2020  06EB                     l1635:
  2021                           
  2022                           ;Oscilador.c: 24:     if(Valor == 2){
  2023  06EB  3002               	movlw	2
  2024  06EC  0672               	xorwf	initOsc@Valor,w
  2025  06ED  1D03               	btfss	3,2
  2026  06EE  2EF0               	goto	u961
  2027  06EF  2EF1               	goto	u960
  2028  06F0                     u961:
  2029  06F0  2EF6               	goto	l1639
  2030  06F1                     u960:
  2031  06F1                     l1637:
  2032                           
  2033                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
  2034  06F1  1683               	bsf	3,5	;RP0=1, select bank1
  2035  06F2  1303               	bcf	3,6	;RP1=0, select bank1
  2036  06F3  160F               	bsf	15,4	;volatile
  2037                           
  2038                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
  2039  06F4  128F               	bcf	15,5	;volatile
  2040                           
  2041                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
  2042  06F5  170F               	bsf	15,6	;volatile
  2043  06F6                     l1639:
  2044                           
  2045                           ;Oscilador.c: 29:     if(Valor == 1){
  2046  06F6  0372               	decf	initOsc@Valor,w
  2047  06F7  1D03               	btfss	3,2
  2048  06F8  2EFA               	goto	u971
  2049  06F9  2EFB               	goto	u970
  2050  06FA                     u971:
  2051  06FA  2F00               	goto	l268
  2052  06FB                     u970:
  2053  06FB                     l1641:
  2054                           
  2055                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
  2056  06FB  1683               	bsf	3,5	;RP0=1, select bank1
  2057  06FC  1303               	bcf	3,6	;RP1=0, select bank1
  2058  06FD  120F               	bcf	15,4	;volatile
  2059                           
  2060                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
  2061  06FE  128F               	bcf	15,5	;volatile
  2062                           
  2063                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
  2064  06FF  170F               	bsf	15,6	;volatile
  2065  0700                     l268:	
  2066                           ;Oscilador.c: 33:     }
  2067                           
  2068                           
  2069                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
  2070  0700  1683               	bsf	3,5	;RP0=1, select bank1
  2071  0701  1303               	bcf	3,6	;RP1=0, select bank1
  2072  0702  140F               	bsf	15,0	;volatile
  2073  0703                     l269:
  2074  0703  0008               	return
  2075  0704                     __end_of_initOsc:
  2076                           
  2077                           	psect	text5
  2078  0752                     __ptext5:	
  2079 ;; *************** function _Limpiar_pantallaLCD *****************
  2080 ;; Defined at:
  2081 ;;		line 69 in file "LCD.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;		None
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;		None
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  1    wreg      void 
  2088 ;; Registers used:
  2089 ;;		wreg, status,2, status,0, pclath, cstack
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2095 ;;      Params:         0       0       0       0       0
  2096 ;;      Locals:         0       0       0       0       0
  2097 ;;      Temps:          2       0       0       0       0
  2098 ;;      Totals:         2       0       0       0       0
  2099 ;;Total ram usage:        2 bytes
  2100 ;; Hardware stack levels used: 1
  2101 ;; Hardware stack levels required when called: 3
  2102 ;; This function calls:
  2103 ;;		_Escribir_comandoLCD
  2104 ;; This function is called by:
  2105 ;;		_setup
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           
  2110                           ;psect for function _Limpiar_pantallaLCD
  2111  0752                     _Limpiar_pantallaLCD:
  2112  0752                     l1761:	
  2113                           ;incstack = 0
  2114                           ; Regs used in _Limpiar_pantallaLCD: [wreg+status,2+status,0+pclath+cstack]
  2115                           
  2116                           
  2117                           ;LCD.c: 70:     PORTDbits.RD3 = 0; PORTDbits.RD4 = 0;
  2118  0752  1283               	bcf	3,5	;RP0=0, select bank0
  2119  0753  1303               	bcf	3,6	;RP1=0, select bank0
  2120  0754  1188               	bcf	8,3	;volatile
  2121  0755  1208               	bcf	8,4	;volatile
  2122  0756                     l1763:
  2123                           
  2124                           ;LCD.c: 72:     Escribir_comandoLCD(0b00000001);
  2125  0756  3001               	movlw	1
  2126  0757  120A  118A  2620  120A  118A  	fcall	_Escribir_comandoLCD
  2127  075C                     l1765:
  2128                           
  2129                           ;LCD.c: 73:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2130  075C  301A               	movlw	26
  2131  075D  00F5               	movwf	??_Limpiar_pantallaLCD+1
  2132  075E  30F8               	movlw	248
  2133  075F  00F4               	movwf	??_Limpiar_pantallaLCD
  2134  0760                     u1697:
  2135  0760  0BF4               	decfsz	??_Limpiar_pantallaLCD,f
  2136  0761  2F60               	goto	u1697
  2137  0762  0BF5               	decfsz	??_Limpiar_pantallaLCD+1,f
  2138  0763  2F60               	goto	u1697
  2139  0764  0000               	nop
  2140  0765                     l1767:
  2141                           
  2142                           ;LCD.c: 74:     Escribir_comandoLCD(0b00000010);
  2143  0765  3002               	movlw	2
  2144  0766  120A  118A  2620  120A  118A  	fcall	_Escribir_comandoLCD
  2145  076B                     l250:
  2146  076B  0008               	return
  2147  076C                     __end_of_Limpiar_pantallaLCD:
  2148                           
  2149                           	psect	text6
  2150  01A3                     __ptext6:	
  2151 ;; *************** function _InitMSSP *****************
  2152 ;; Defined at:
  2153 ;;		line 5 in file "I2C.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;  Modo            1    wreg     enum E1292
  2156 ;;  Dato            4    6[BANK0 ] unsigned long 
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;  Modo            1   14[BANK0 ] enum E1292
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  1    wreg      void 
  2161 ;; Registers used:
  2162 ;;		wreg, status,2, status,0, pclath, cstack
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2168 ;;      Params:         0       4       0       0       0
  2169 ;;      Locals:         0       1       0       0       0
  2170 ;;      Temps:          0       4       0       0       0
  2171 ;;      Totals:         0       9       0       0       0
  2172 ;;Total ram usage:        9 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; Hardware stack levels required when called: 2
  2175 ;; This function calls:
  2176 ;;		___lldiv
  2177 ;; This function is called by:
  2178 ;;		_setup
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           
  2183                           ;psect for function _InitMSSP
  2184  01A3                     _InitMSSP:
  2185                           
  2186                           ;incstack = 0
  2187                           ; Regs used in _InitMSSP: [wreg+status,2+status,0+pclath+cstack]
  2188                           ;InitMSSP@Modo stored from wreg
  2189  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  2190  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  2191  01A5  00C6               	movwf	InitMSSP@Modo
  2192  01A6                     l2173:
  2193                           
  2194                           ;I2C.c: 9:     SSPCONbits.SSPEN = 0;
  2195  01A6  1294               	bcf	20,5	;volatile
  2196  01A7                     l2175:
  2197                           
  2198                           ;I2C.c: 10:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2199  01A7  301A               	movlw	26
  2200  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  2201  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  2202  01AA  00C3               	movwf	??_InitMSSP+1
  2203  01AB  30F7               	movlw	247
  2204  01AC  00C2               	movwf	??_InitMSSP
  2205  01AD                     u1707:
  2206  01AD  0BC2               	decfsz	??_InitMSSP,f
  2207  01AE  29AD               	goto	u1707
  2208  01AF  0BC3               	decfsz	??_InitMSSP+1,f
  2209  01B0  29AD               	goto	u1707
  2210  01B1  29B2               	nop2
  2211  01B2                     l2177:
  2212                           
  2213                           ;I2C.c: 11:     SSPCONbits.SSPEN = 1;
  2214  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  2215  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  2216  01B4  1694               	bsf	20,5	;volatile
  2217                           
  2218                           ;I2C.c: 14:     if (Modo < 0b00000110){
  2219  01B5  3006               	movlw	6
  2220  01B6  0246               	subwf	InitMSSP@Modo,w
  2221  01B7  1803               	skipnc
  2222  01B8  29BA               	goto	u1461
  2223  01B9  29BB               	goto	u1460
  2224  01BA                     u1461:
  2225  01BA  29DF               	goto	l2189
  2226  01BB                     u1460:
  2227  01BB                     l2179:
  2228                           
  2229                           ;I2C.c: 17:         TRISCbits.TRISC5 = 0;
  2230  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  2231  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  2232  01BD  1287               	bcf	7,5	;volatile
  2233                           
  2234                           ;I2C.c: 18:         TRISCbits.TRISC4 = 1;
  2235  01BE  1607               	bsf	7,4	;volatile
  2236  01BF                     l2181:
  2237                           
  2238                           ;I2C.c: 20:         if (Modo < 0b00000100){
  2239  01BF  3004               	movlw	4
  2240  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  2241  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  2242  01C2  0246               	subwf	InitMSSP@Modo,w
  2243  01C3  1803               	skipnc
  2244  01C4  29C6               	goto	u1471
  2245  01C5  29C7               	goto	u1470
  2246  01C6                     u1471:
  2247  01C6  29CB               	goto	l175
  2248  01C7                     u1470:
  2249  01C7                     l2183:
  2250                           
  2251                           ;I2C.c: 21:             TRISCbits.TRISC3 = 0;
  2252  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  2253  01C8  1303               	bcf	3,6	;RP1=0, select bank1
  2254  01C9  1187               	bcf	7,3	;volatile
  2255                           
  2256                           ;I2C.c: 22:         }
  2257  01CA  29CE               	goto	l2185
  2258  01CB                     l175:	
  2259                           ;I2C.c: 23:         else {
  2260                           
  2261                           
  2262                           ;I2C.c: 24:             TRISCbits.TRISC3 = 1;
  2263  01CB  1683               	bsf	3,5	;RP0=1, select bank1
  2264  01CC  1303               	bcf	3,6	;RP1=0, select bank1
  2265  01CD  1587               	bsf	7,3	;volatile
  2266  01CE                     l2185:
  2267                           
  2268                           ;I2C.c: 27:         if (Modo == 0b00000100){ TRISAbits.TRISA5 = 1;}
  2269  01CE  3004               	movlw	4
  2270  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  2271  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  2272  01D1  0646               	xorwf	InitMSSP@Modo,w
  2273  01D2  1D03               	btfss	3,2
  2274  01D3  29D5               	goto	u1481
  2275  01D4  29D6               	goto	u1480
  2276  01D5                     u1481:
  2277  01D5  29D9               	goto	l177
  2278  01D6                     u1480:
  2279  01D6                     l2187:
  2280  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  2281  01D7  1303               	bcf	3,6	;RP1=0, select bank1
  2282  01D8  1685               	bsf	5,5	;volatile
  2283  01D9                     l177:
  2284                           
  2285                           ;I2C.c: 31:         SSPCONbits.CKP = 0;
  2286  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  2287  01DA  1214               	bcf	20,4	;volatile
  2288                           
  2289                           ;I2C.c: 36:         SSPSTATbits.SMP = 1;
  2290  01DB  1683               	bsf	3,5	;RP0=1, select bank1
  2291  01DC  1303               	bcf	3,6	;RP1=0, select bank1
  2292  01DD  1794               	bsf	20,7	;volatile
  2293                           
  2294                           ;I2C.c: 38:     }
  2295  01DE  2A4C               	goto	l2217
  2296  01DF                     l2189:
  2297  01DF  3006               	movlw	6
  2298  01E0  0246               	subwf	InitMSSP@Modo,w
  2299  01E1  1C03               	skipc
  2300  01E2  29E4               	goto	u1491
  2301  01E3  29E5               	goto	u1490
  2302  01E4                     u1491:
  2303  01E4  2A4C               	goto	l2217
  2304  01E5                     u1490:
  2305  01E5                     l2191:
  2306                           
  2307                           ;I2C.c: 42:         TRISCbits.TRISC3 = 1;
  2308  01E5  1683               	bsf	3,5	;RP0=1, select bank1
  2309  01E6  1303               	bcf	3,6	;RP1=0, select bank1
  2310  01E7  1587               	bsf	7,3	;volatile
  2311                           
  2312                           ;I2C.c: 43:         TRISCbits.TRISC4 = 1;
  2313  01E8  1607               	bsf	7,4	;volatile
  2314                           
  2315                           ;I2C.c: 44:         SSPCONbits.SSPEN = 1;
  2316  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  2317  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  2318  01EB  1694               	bsf	20,5	;volatile
  2319                           
  2320                           ;I2C.c: 45:         SSPSTATbits.SMP = 1;
  2321  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  2322  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  2323  01EE  1794               	bsf	20,7	;volatile
  2324  01EF                     l2193:
  2325                           
  2326                           ;I2C.c: 46:         if (Modo == 0b00000111 || Modo == 0b00001111){
  2327  01EF  3007               	movlw	7
  2328  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  2329  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  2330  01F2  0646               	xorwf	InitMSSP@Modo,w
  2331  01F3  1903               	btfsc	3,2
  2332  01F4  29F6               	goto	u1501
  2333  01F5  29F7               	goto	u1500
  2334  01F6                     u1501:
  2335  01F6  29FD               	goto	l182
  2336  01F7                     u1500:
  2337  01F7                     l2195:
  2338  01F7  300F               	movlw	15
  2339  01F8  0646               	xorwf	InitMSSP@Modo,w
  2340  01F9  1D03               	btfss	3,2
  2341  01FA  29FC               	goto	u1511
  2342  01FB  29FD               	goto	u1510
  2343  01FC                     u1511:
  2344  01FC  2A00               	goto	l2197
  2345  01FD                     u1510:
  2346  01FD                     l182:
  2347                           
  2348                           ;I2C.c: 47:             UA = 0;
  2349  01FD  1683               	bsf	3,5	;RP0=1, select bank1
  2350  01FE  1303               	bcf	3,6	;RP1=0, select bank1
  2351  01FF  1094               	bcf	20,1	;volatile
  2352  0200                     l2197:
  2353                           
  2354                           ;I2C.c: 50:         if (Modo == 0b00001000){
  2355  0200  3008               	movlw	8
  2356  0201  1283               	bcf	3,5	;RP0=0, select bank0
  2357  0202  0646               	xorwf	InitMSSP@Modo,w
  2358  0203  1D03               	btfss	3,2
  2359  0204  2A06               	goto	u1521
  2360  0205  2A07               	goto	u1520
  2361  0206                     u1521:
  2362  0206  2A3B               	goto	l183
  2363  0207                     u1520:
  2364  0207                     l2199:
  2365                           
  2366                           ;I2C.c: 51:             CKP = 0;
  2367  0207  1214               	bcf	20,4	;volatile
  2368  0208                     l2201:
  2369                           
  2370                           ;I2C.c: 52:             SSPCON2 = 0;
  2371  0208  1683               	bsf	3,5	;RP0=1, select bank1
  2372  0209  1303               	bcf	3,6	;RP1=0, select bank1
  2373  020A  0191               	clrf	17	;volatile
  2374                           
  2375                           ;I2C.c: 53:             SSPSTAT = 0;
  2376  020B  0194               	clrf	20	;volatile
  2377  020C                     l2203:
  2378                           
  2379                           ;I2C.c: 54:             SSPADD = (8000000/(Dato*4))-1;
  2380  020C  1283               	bcf	3,5	;RP0=0, select bank0
  2381  020D  1303               	bcf	3,6	;RP1=0, select bank0
  2382  020E  083E               	movf	InitMSSP@Dato,w
  2383  020F  00C2               	movwf	??_InitMSSP
  2384  0210  083F               	movf	InitMSSP@Dato+1,w
  2385  0211  00C3               	movwf	??_InitMSSP+1
  2386  0212  0840               	movf	InitMSSP@Dato+2,w
  2387  0213  00C4               	movwf	??_InitMSSP+2
  2388  0214  0841               	movf	InitMSSP@Dato+3,w
  2389  0215  00C5               	movwf	??_InitMSSP+3
  2390  0216  3002               	movlw	2
  2391  0217                     u1535:
  2392  0217  1003               	clrc
  2393  0218  0DC2               	rlf	??_InitMSSP,f
  2394  0219  0DC3               	rlf	??_InitMSSP+1,f
  2395  021A  0DC4               	rlf	??_InitMSSP+2,f
  2396  021B  0DC5               	rlf	??_InitMSSP+3,f
  2397  021C                     u1530:
  2398  021C  3EFF               	addlw	-1
  2399  021D  1D03               	skipz
  2400  021E  2A17               	goto	u1535
  2401  021F  0845               	movf	??_InitMSSP+3,w
  2402  0220  00F5               	movwf	___lldiv@divisor+3
  2403  0221  0844               	movf	??_InitMSSP+2,w
  2404  0222  00F4               	movwf	___lldiv@divisor+2
  2405  0223  0843               	movf	??_InitMSSP+1,w
  2406  0224  00F3               	movwf	___lldiv@divisor+1
  2407  0225  0842               	movf	??_InitMSSP,w
  2408  0226  00F2               	movwf	___lldiv@divisor
  2409  0227  3000               	movlw	0
  2410  0228  00F9               	movwf	___lldiv@dividend+3
  2411  0229  307A               	movlw	122
  2412  022A  00F8               	movwf	___lldiv@dividend+2
  2413  022B  3012               	movlw	18
  2414  022C  00F7               	movwf	___lldiv@dividend+1
  2415  022D  3000               	movlw	0
  2416  022E  00F6               	movwf	___lldiv@dividend
  2417  022F  120A  118A  246A  120A  118A  	fcall	___lldiv
  2418  0234  0872               	movf	?___lldiv,w
  2419  0235  3EFF               	addlw	255
  2420  0236  1683               	bsf	3,5	;RP0=1, select bank1
  2421  0237  1303               	bcf	3,6	;RP1=0, select bank1
  2422  0238  0093               	movwf	19	;volatile
  2423  0239                     l2205:
  2424                           
  2425                           ;I2C.c: 55:             PIE1bits.SSPIE = 0;
  2426  0239  118C               	bcf	12,3	;volatile
  2427                           
  2428                           ;I2C.c: 56:         }
  2429  023A  2A4C               	goto	l2217
  2430  023B                     l183:	
  2431                           ;I2C.c: 57:         else {
  2432                           
  2433                           
  2434                           ;I2C.c: 58:             CKP = 1;
  2435  023B  1614               	bsf	20,4	;volatile
  2436                           
  2437                           ;I2C.c: 59:             SSPCON2bits.GCEN = 0;
  2438  023C  1683               	bsf	3,5	;RP0=1, select bank1
  2439  023D  1303               	bcf	3,6	;RP1=0, select bank1
  2440  023E  1391               	bcf	17,7	;volatile
  2441                           
  2442                           ;I2C.c: 60:             SSPCON2bits.SEN = 1;
  2443  023F  1411               	bsf	17,0	;volatile
  2444  0240                     l2207:
  2445                           
  2446                           ;I2C.c: 61:             SSPADD = Dato;
  2447  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2448  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2449  0242  083E               	movf	InitMSSP@Dato,w
  2450  0243  1683               	bsf	3,5	;RP0=1, select bank1
  2451  0244  1303               	bcf	3,6	;RP1=0, select bank1
  2452  0245  0093               	movwf	19	;volatile
  2453  0246                     l2209:
  2454                           
  2455                           ;I2C.c: 62:             INTCONbits.GIE = 1;
  2456  0246  178B               	bsf	11,7	;volatile
  2457  0247                     l2211:
  2458                           
  2459                           ;I2C.c: 63:             INTCONbits.PEIE = 1;
  2460  0247  170B               	bsf	11,6	;volatile
  2461  0248                     l2213:
  2462                           
  2463                           ;I2C.c: 64:             PIE1bits.SSPIE = 1;
  2464  0248  158C               	bsf	12,3	;volatile
  2465  0249                     l2215:
  2466                           
  2467                           ;I2C.c: 65:             SSPIF = 0;
  2468  0249  1283               	bcf	3,5	;RP0=0, select bank0
  2469  024A  1303               	bcf	3,6	;RP1=0, select bank0
  2470  024B  118C               	bcf	12,3	;volatile
  2471  024C                     l2217:
  2472                           
  2473                           ;I2C.c: 72:     SSPCON = SSPCON | Modo;
  2474  024C  1283               	bcf	3,5	;RP0=0, select bank0
  2475  024D  0814               	movf	20,w	;volatile
  2476  024E  0446               	iorwf	InitMSSP@Modo,w	;volatile
  2477  024F  0094               	movwf	20	;volatile
  2478  0250                     l2219:
  2479                           
  2480                           ;I2C.c: 77:     SSPSTATbits.CKE = 0;
  2481  0250  1683               	bsf	3,5	;RP0=1, select bank1
  2482  0251  1303               	bcf	3,6	;RP1=0, select bank1
  2483  0252  1314               	bcf	20,6	;volatile
  2484  0253                     l185:
  2485  0253  0008               	return
  2486  0254                     __end_of_InitMSSP:
  2487                           
  2488                           	psect	text7
  2489  046A                     __ptext7:	
  2490 ;; *************** function ___lldiv *****************
  2491 ;; Defined at:
  2492 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  divisor         4    2[COMMON] unsigned long 
  2495 ;;  dividend        4    6[COMMON] unsigned long 
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;  quotient        4    1[BANK0 ] unsigned long 
  2498 ;;  counter         1    5[BANK0 ] unsigned char 
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  4    2[COMMON] unsigned long 
  2501 ;; Registers used:
  2502 ;;		wreg, status,2, status,0
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2508 ;;      Params:         8       0       0       0       0
  2509 ;;      Locals:         0       5       0       0       0
  2510 ;;      Temps:          0       1       0       0       0
  2511 ;;      Totals:         8       6       0       0       0
  2512 ;;Total ram usage:       14 bytes
  2513 ;; Hardware stack levels used: 1
  2514 ;; Hardware stack levels required when called: 1
  2515 ;; This function calls:
  2516 ;;		Nothing
  2517 ;; This function is called by:
  2518 ;;		_InitMSSP
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           
  2523                           ;psect for function ___lldiv
  2524  046A                     ___lldiv:
  2525  046A                     l2149:	
  2526                           ;incstack = 0
  2527                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2528                           
  2529  046A  3000               	movlw	0
  2530  046B  1283               	bcf	3,5	;RP0=0, select bank0
  2531  046C  1303               	bcf	3,6	;RP1=0, select bank0
  2532  046D  00BC               	movwf	___lldiv@quotient+3
  2533  046E  3000               	movlw	0
  2534  046F  00BB               	movwf	___lldiv@quotient+2
  2535  0470  3000               	movlw	0
  2536  0471  00BA               	movwf	___lldiv@quotient+1
  2537  0472  3000               	movlw	0
  2538  0473  00B9               	movwf	___lldiv@quotient
  2539  0474  0875               	movf	___lldiv@divisor+3,w
  2540  0475  0474               	iorwf	___lldiv@divisor+2,w
  2541  0476  0473               	iorwf	___lldiv@divisor+1,w
  2542  0477  0472               	iorwf	___lldiv@divisor,w
  2543  0478  1903               	skipnz
  2544  0479  2C7B               	goto	u1391
  2545  047A  2C7C               	goto	u1390
  2546  047B                     u1391:
  2547  047B  2CC9               	goto	l2169
  2548  047C                     u1390:
  2549  047C                     l2151:
  2550  047C  01BD               	clrf	___lldiv@counter
  2551  047D  0ABD               	incf	___lldiv@counter,f
  2552  047E  2C8C               	goto	l2155
  2553  047F                     l2153:
  2554  047F  3001               	movlw	1
  2555  0480  00B8               	movwf	??___lldiv
  2556  0481                     u1405:
  2557  0481  1003               	clrc
  2558  0482  0DF2               	rlf	___lldiv@divisor,f
  2559  0483  0DF3               	rlf	___lldiv@divisor+1,f
  2560  0484  0DF4               	rlf	___lldiv@divisor+2,f
  2561  0485  0DF5               	rlf	___lldiv@divisor+3,f
  2562  0486  0BB8               	decfsz	??___lldiv,f
  2563  0487  2C81               	goto	u1405
  2564  0488  3001               	movlw	1
  2565  0489  00B8               	movwf	??___lldiv
  2566  048A  0838               	movf	??___lldiv,w
  2567  048B  07BD               	addwf	___lldiv@counter,f
  2568  048C                     l2155:
  2569  048C  1FF5               	btfss	___lldiv@divisor+3,7
  2570  048D  2C8F               	goto	u1411
  2571  048E  2C90               	goto	u1410
  2572  048F                     u1411:
  2573  048F  2C7F               	goto	l2153
  2574  0490                     u1410:
  2575  0490                     l2157:
  2576  0490  3001               	movlw	1
  2577  0491  00B8               	movwf	??___lldiv
  2578  0492                     u1425:
  2579  0492  1003               	clrc
  2580  0493  0DB9               	rlf	___lldiv@quotient,f
  2581  0494  0DBA               	rlf	___lldiv@quotient+1,f
  2582  0495  0DBB               	rlf	___lldiv@quotient+2,f
  2583  0496  0DBC               	rlf	___lldiv@quotient+3,f
  2584  0497  0BB8               	decfsz	??___lldiv,f
  2585  0498  2C92               	goto	u1425
  2586  0499                     l2159:
  2587  0499  0875               	movf	___lldiv@divisor+3,w
  2588  049A  0279               	subwf	___lldiv@dividend+3,w
  2589  049B  1D03               	skipz
  2590  049C  2CA7               	goto	u1435
  2591  049D  0874               	movf	___lldiv@divisor+2,w
  2592  049E  0278               	subwf	___lldiv@dividend+2,w
  2593  049F  1D03               	skipz
  2594  04A0  2CA7               	goto	u1435
  2595  04A1  0873               	movf	___lldiv@divisor+1,w
  2596  04A2  0277               	subwf	___lldiv@dividend+1,w
  2597  04A3  1D03               	skipz
  2598  04A4  2CA7               	goto	u1435
  2599  04A5  0872               	movf	___lldiv@divisor,w
  2600  04A6  0276               	subwf	___lldiv@dividend,w
  2601  04A7                     u1435:
  2602  04A7  1C03               	skipc
  2603  04A8  2CAA               	goto	u1431
  2604  04A9  2CAB               	goto	u1430
  2605  04AA                     u1431:
  2606  04AA  2CBA               	goto	l2165
  2607  04AB                     u1430:
  2608  04AB                     l2161:
  2609  04AB  0872               	movf	___lldiv@divisor,w
  2610  04AC  02F6               	subwf	___lldiv@dividend,f
  2611  04AD  0873               	movf	___lldiv@divisor+1,w
  2612  04AE  1C03               	skipc
  2613  04AF  0F73               	incfsz	___lldiv@divisor+1,w
  2614  04B0  02F7               	subwf	___lldiv@dividend+1,f
  2615  04B1  0874               	movf	___lldiv@divisor+2,w
  2616  04B2  1C03               	skipc
  2617  04B3  0F74               	incfsz	___lldiv@divisor+2,w
  2618  04B4  02F8               	subwf	___lldiv@dividend+2,f
  2619  04B5  0875               	movf	___lldiv@divisor+3,w
  2620  04B6  1C03               	skipc
  2621  04B7  0F75               	incfsz	___lldiv@divisor+3,w
  2622  04B8  02F9               	subwf	___lldiv@dividend+3,f
  2623  04B9                     l2163:
  2624  04B9  1439               	bsf	___lldiv@quotient,0
  2625  04BA                     l2165:
  2626  04BA  3001               	movlw	1
  2627  04BB                     u1445:
  2628  04BB  1003               	clrc
  2629  04BC  0CF5               	rrf	___lldiv@divisor+3,f
  2630  04BD  0CF4               	rrf	___lldiv@divisor+2,f
  2631  04BE  0CF3               	rrf	___lldiv@divisor+1,f
  2632  04BF  0CF2               	rrf	___lldiv@divisor,f
  2633  04C0  3EFF               	addlw	-1
  2634  04C1  1D03               	skipz
  2635  04C2  2CBB               	goto	u1445
  2636  04C3                     l2167:
  2637  04C3  3001               	movlw	1
  2638  04C4  02BD               	subwf	___lldiv@counter,f
  2639  04C5  1D03               	btfss	3,2
  2640  04C6  2CC8               	goto	u1451
  2641  04C7  2CC9               	goto	u1450
  2642  04C8                     u1451:
  2643  04C8  2C90               	goto	l2157
  2644  04C9                     u1450:
  2645  04C9                     l2169:
  2646  04C9  083C               	movf	___lldiv@quotient+3,w
  2647  04CA  00F5               	movwf	?___lldiv+3
  2648  04CB  083B               	movf	___lldiv@quotient+2,w
  2649  04CC  00F4               	movwf	?___lldiv+2
  2650  04CD  083A               	movf	___lldiv@quotient+1,w
  2651  04CE  00F3               	movwf	?___lldiv+1
  2652  04CF  0839               	movf	___lldiv@quotient,w
  2653  04D0  00F2               	movwf	?___lldiv
  2654  04D1                     l423:
  2655  04D1  0008               	return
  2656  04D2                     __end_of___lldiv:
  2657                           
  2658                           	psect	text8
  2659  0304                     __ptext8:	
  2660 ;; *************** function _InitMPU6050 *****************
  2661 ;; Defined at:
  2662 ;;		line 13 in file "MPU.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;		None
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;		None
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  1    wreg      void 
  2669 ;; Registers used:
  2670 ;;		wreg, status,2, status,0, pclath, cstack
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2676 ;;      Params:         0       0       0       0       0
  2677 ;;      Locals:         0       0       0       0       0
  2678 ;;      Temps:          3       0       0       0       0
  2679 ;;      Totals:         3       0       0       0       0
  2680 ;;Total ram usage:        3 bytes
  2681 ;; Hardware stack levels used: 1
  2682 ;; Hardware stack levels required when called: 3
  2683 ;; This function calls:
  2684 ;;		_I2CMasterStop
  2685 ;;		_I2CMasterWrite
  2686 ;;		_I2C_Master_Start
  2687 ;; This function is called by:
  2688 ;;		_setup
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           
  2693                           ;psect for function _InitMPU6050
  2694  0304                     _InitMPU6050:
  2695  0304                     l1691:	
  2696                           ;incstack = 0
  2697                           ; Regs used in _InitMPU6050: [wreg+status,2+status,0+pclath+cstack]
  2698                           
  2699                           
  2700                           ;MPU.c: 14:     _delay((unsigned long)((150)*(8000000/4000.0)));
  2701  0304  3002               	movlw	2
  2702  0305  00F5               	movwf	??_InitMPU6050+2
  2703  0306  3086               	movlw	134
  2704  0307  00F4               	movwf	??_InitMPU6050+1
  2705  0308  3099               	movlw	153
  2706  0309  00F3               	movwf	??_InitMPU6050
  2707  030A                     u1717:
  2708  030A  0BF3               	decfsz	??_InitMPU6050,f
  2709  030B  2B0A               	goto	u1717
  2710  030C  0BF4               	decfsz	??_InitMPU6050+1,f
  2711  030D  2B0A               	goto	u1717
  2712  030E  0BF5               	decfsz	??_InitMPU6050+2,f
  2713  030F  2B0A               	goto	u1717
  2714  0310                     l1693:
  2715                           
  2716                           ;MPU.c: 17:     I2C_Master_Start(Standard);
  2717  0310  3001               	movlw	1
  2718  0311  120A  118A  276C  120A  118A  	fcall	_I2C_Master_Start
  2719  0316                     l1695:
  2720                           
  2721                           ;MPU.c: 18:     I2CMasterWrite(0b11010010 +0);
  2722  0316  30D2               	movlw	210
  2723  0317  120A  118A  27AD  120A  118A  	fcall	_I2CMasterWrite
  2724  031C                     l1697:
  2725                           
  2726                           ;MPU.c: 19:     I2CMasterWrite(0x6B);
  2727  031C  306B               	movlw	107
  2728  031D  120A  118A  27AD  120A  118A  	fcall	_I2CMasterWrite
  2729  0322                     l1699:
  2730                           
  2731                           ;MPU.c: 20:     I2CMasterWrite(0b00000001);
  2732  0322  3001               	movlw	1
  2733  0323  120A  118A  27AD  120A  118A  	fcall	_I2CMasterWrite
  2734  0328                     l1701:
  2735                           
  2736                           ;MPU.c: 24:     I2C_Master_Start(Repeated);
  2737  0328  3000               	movlw	0
  2738  0329  120A  118A  276C  120A  118A  	fcall	_I2C_Master_Start
  2739  032E                     l1703:
  2740                           
  2741                           ;MPU.c: 25:     I2CMasterWrite(0b11010010 +0);
  2742  032E  30D2               	movlw	210
  2743  032F  120A  118A  27AD  120A  118A  	fcall	_I2CMasterWrite
  2744  0334                     l1705:
  2745                           
  2746                           ;MPU.c: 26:     I2CMasterWrite(0x1B);
  2747  0334  301B               	movlw	27
  2748  0335  120A  118A  27AD  120A  118A  	fcall	_I2CMasterWrite
  2749  033A                     l1707:
  2750                           
  2751                           ;MPU.c: 27:     I2CMasterWrite(0b00000000);
  2752  033A  3000               	movlw	0
  2753  033B  120A  118A  27AD  120A  118A  	fcall	_I2CMasterWrite
  2754  0340                     l1709:
  2755                           
  2756                           ;MPU.c: 31:     I2C_Master_Start(Repeated);
  2757  0340  3000               	movlw	0
  2758  0341  120A  118A  276C  120A  118A  	fcall	_I2C_Master_Start
  2759  0346                     l1711:
  2760                           
  2761                           ;MPU.c: 32:     I2CMasterWrite(0b11010010 +0);
  2762  0346  30D2               	movlw	210
  2763  0347  120A  118A  27AD  120A  118A  	fcall	_I2CMasterWrite
  2764  034C                     l1713:
  2765                           
  2766                           ;MPU.c: 33:     I2CMasterWrite(0x1C);
  2767  034C  301C               	movlw	28
  2768  034D  120A  118A  27AD  120A  118A  	fcall	_I2CMasterWrite
  2769  0352                     l1715:
  2770                           
  2771                           ;MPU.c: 34:     I2CMasterWrite(0b00000000);
  2772  0352  3000               	movlw	0
  2773  0353  120A  118A  27AD  120A  118A  	fcall	_I2CMasterWrite
  2774  0358                     l1717:
  2775                           
  2776                           ;MPU.c: 37:     I2C_Master_Start(Repeated);
  2777  0358  3000               	movlw	0
  2778  0359  120A  118A  276C  120A  118A  	fcall	_I2C_Master_Start
  2779  035E                     l1719:
  2780                           
  2781                           ;MPU.c: 38:     I2CMasterWrite(0b11010010 +0);
  2782  035E  30D2               	movlw	210
  2783  035F  120A  118A  27AD  120A  118A  	fcall	_I2CMasterWrite
  2784  0364                     l1721:
  2785                           
  2786                           ;MPU.c: 39:     I2CMasterWrite(0x1A);
  2787  0364  301A               	movlw	26
  2788  0365  120A  118A  27AD  120A  118A  	fcall	_I2CMasterWrite
  2789  036A                     l1723:
  2790                           
  2791                           ;MPU.c: 40:     I2CMasterWrite(0b00000000);
  2792  036A  3000               	movlw	0
  2793  036B  120A  118A  27AD  120A  118A  	fcall	_I2CMasterWrite
  2794  0370                     l1725:
  2795                           
  2796                           ;MPU.c: 43:     I2C_Master_Start(Repeated);
  2797  0370  3000               	movlw	0
  2798  0371  120A  118A  276C  120A  118A  	fcall	_I2C_Master_Start
  2799  0376                     l1727:
  2800                           
  2801                           ;MPU.c: 44:     I2CMasterWrite(0b11010010 +0);
  2802  0376  30D2               	movlw	210
  2803  0377  120A  118A  27AD  120A  118A  	fcall	_I2CMasterWrite
  2804  037C                     l1729:
  2805                           
  2806                           ;MPU.c: 45:     I2CMasterWrite(0x19);
  2807  037C  3019               	movlw	25
  2808  037D  120A  118A  27AD  120A  118A  	fcall	_I2CMasterWrite
  2809  0382                     l1731:
  2810                           
  2811                           ;MPU.c: 46:     I2CMasterWrite(0b00000111);
  2812  0382  3007               	movlw	7
  2813  0383  120A  118A  27AD  120A  118A  	fcall	_I2CMasterWrite
  2814  0388                     l1733:
  2815                           
  2816                           ;MPU.c: 48:     I2CMasterStop();
  2817  0388  120A  118A  27B8  120A  118A  	fcall	_I2CMasterStop
  2818  038D                     l301:
  2819  038D  0008               	return
  2820  038E                     __end_of_InitMPU6050:
  2821                           
  2822                           	psect	text9
  2823  076C                     __ptext9:	
  2824 ;; *************** function _I2C_Master_Start *****************
  2825 ;; Defined at:
  2826 ;;		line 96 in file "I2C.c"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;  Modo_Inicio     1    wreg     enum E1305
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;  Modo_Inicio     1    2[COMMON] enum E1305
  2831 ;; Return value:  Size  Location     Type
  2832 ;;                  1    wreg      void 
  2833 ;; Registers used:
  2834 ;;		wreg, status,2, status,0, pclath, cstack
  2835 ;; Tracked objects:
  2836 ;;		On entry : 0/0
  2837 ;;		On exit  : 0/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2840 ;;      Params:         0       0       0       0       0
  2841 ;;      Locals:         1       0       0       0       0
  2842 ;;      Temps:          0       0       0       0       0
  2843 ;;      Totals:         1       0       0       0       0
  2844 ;;Total ram usage:        1 bytes
  2845 ;; Hardware stack levels used: 1
  2846 ;; Hardware stack levels required when called: 2
  2847 ;; This function calls:
  2848 ;;		_I2CMasterCheck
  2849 ;; This function is called by:
  2850 ;;		_main
  2851 ;;		_InitMPU6050
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           
  2856                           ;psect for function _I2C_Master_Start
  2857  076C                     _I2C_Master_Start:
  2858                           
  2859                           ;incstack = 0
  2860                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2861                           ;I2C_Master_Start@Modo_Inicio stored from wreg
  2862  076C  00F2               	movwf	I2C_Master_Start@Modo_Inicio
  2863  076D                     l1531:
  2864                           
  2865                           ;I2C.c: 97:     I2CMasterCheck();
  2866  076D  120A  118A  2794  120A  118A  	fcall	_I2CMasterCheck
  2867  0772                     l1533:
  2868                           
  2869                           ;I2C.c: 98:     if (Modo_Inicio == 1) SSPCON2bits.SEN = 1;
  2870  0772  0372               	decf	I2C_Master_Start@Modo_Inicio,w
  2871  0773  1D03               	btfss	3,2
  2872  0774  2F76               	goto	u721
  2873  0775  2F77               	goto	u720
  2874  0776                     u721:
  2875  0776  2F7A               	goto	l1537
  2876  0777                     u720:
  2877  0777                     l1535:
  2878  0777  1683               	bsf	3,5	;RP0=1, select bank1
  2879  0778  1303               	bcf	3,6	;RP1=0, select bank1
  2880  0779  1411               	bsf	17,0	;volatile
  2881  077A                     l1537:
  2882                           
  2883                           ;I2C.c: 99:     if (Modo_Inicio == 0) SSPCON2bits.RSEN = 1;
  2884  077A  0872               	movf	I2C_Master_Start@Modo_Inicio,w
  2885  077B  1D03               	btfss	3,2
  2886  077C  2F7E               	goto	u731
  2887  077D  2F7F               	goto	u730
  2888  077E                     u731:
  2889  077E  2F82               	goto	l195
  2890  077F                     u730:
  2891  077F                     l1539:
  2892  077F  1683               	bsf	3,5	;RP0=1, select bank1
  2893  0780  1303               	bcf	3,6	;RP1=0, select bank1
  2894  0781  1491               	bsf	17,1	;volatile
  2895  0782                     l195:
  2896                           
  2897                           ;I2C.c: 100:     SSPIF = 0;
  2898  0782  1283               	bcf	3,5	;RP0=0, select bank0
  2899  0783  1303               	bcf	3,6	;RP1=0, select bank0
  2900  0784  118C               	bcf	12,3	;volatile
  2901  0785                     l196:
  2902  0785  0008               	return
  2903  0786                     __end_of_I2C_Master_Start:
  2904                           
  2905                           	psect	text10
  2906  07AD                     __ptext10:	
  2907 ;; *************** function _I2CMasterWrite *****************
  2908 ;; Defined at:
  2909 ;;		line 110 in file "I2C.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;  Datos           1    wreg     unsigned char 
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;  Datos           1    2[COMMON] unsigned char 
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      void 
  2916 ;; Registers used:
  2917 ;;		wreg, status,2, status,0, pclath, cstack
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2923 ;;      Params:         0       0       0       0       0
  2924 ;;      Locals:         1       0       0       0       0
  2925 ;;      Temps:          0       0       0       0       0
  2926 ;;      Totals:         1       0       0       0       0
  2927 ;;Total ram usage:        1 bytes
  2928 ;; Hardware stack levels used: 1
  2929 ;; Hardware stack levels required when called: 2
  2930 ;; This function calls:
  2931 ;;		_I2CMasterCheck
  2932 ;; This function is called by:
  2933 ;;		_main
  2934 ;;		_InitMPU6050
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           
  2939                           ;psect for function _I2CMasterWrite
  2940  07AD                     _I2CMasterWrite:
  2941                           
  2942                           ;incstack = 0
  2943                           ; Regs used in _I2CMasterWrite: [wreg+status,2+status,0+pclath+cstack]
  2944                           ;I2CMasterWrite@Datos stored from wreg
  2945  07AD  00F2               	movwf	I2CMasterWrite@Datos
  2946  07AE                     l1541:
  2947                           
  2948                           ;I2C.c: 111:     I2CMasterCheck();
  2949  07AE  120A  118A  2794  120A  118A  	fcall	_I2CMasterCheck
  2950  07B3                     l1543:
  2951                           
  2952                           ;I2C.c: 112:     SSPBUF = Datos;
  2953  07B3  0872               	movf	I2CMasterWrite@Datos,w
  2954  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  2955  07B5  1303               	bcf	3,6	;RP1=0, select bank0
  2956  07B6  0093               	movwf	19	;volatile
  2957  07B7                     l202:
  2958  07B7  0008               	return
  2959  07B8                     __end_of_I2CMasterWrite:
  2960                           
  2961                           	psect	text11
  2962  07B8                     __ptext11:	
  2963 ;; *************** function _I2CMasterStop *****************
  2964 ;; Defined at:
  2965 ;;		line 104 in file "I2C.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;		None
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;		None
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  1    wreg      void 
  2972 ;; Registers used:
  2973 ;;		wreg, status,2, status,0, pclath, cstack
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2979 ;;      Params:         0       0       0       0       0
  2980 ;;      Locals:         0       0       0       0       0
  2981 ;;      Temps:          0       0       0       0       0
  2982 ;;      Totals:         0       0       0       0       0
  2983 ;;Total ram usage:        0 bytes
  2984 ;; Hardware stack levels used: 1
  2985 ;; Hardware stack levels required when called: 2
  2986 ;; This function calls:
  2987 ;;		_I2CMasterCheck
  2988 ;; This function is called by:
  2989 ;;		_main
  2990 ;;		_InitMPU6050
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           
  2995                           ;psect for function _I2CMasterStop
  2996  07B8                     _I2CMasterStop:
  2997  07B8                     l1545:	
  2998                           ;incstack = 0
  2999                           ; Regs used in _I2CMasterStop: [wreg+status,2+status,0+pclath+cstack]
  3000                           
  3001                           
  3002                           ;I2C.c: 105:     I2CMasterCheck();
  3003  07B8  120A  118A  2794  120A  118A  	fcall	_I2CMasterCheck
  3004  07BD                     l1547:
  3005                           
  3006                           ;I2C.c: 106:     SSPCON2bits.PEN = 1;
  3007  07BD  1683               	bsf	3,5	;RP0=1, select bank1
  3008  07BE  1303               	bcf	3,6	;RP1=0, select bank1
  3009  07BF  1511               	bsf	17,2	;volatile
  3010  07C0                     l199:
  3011  07C0  0008               	return
  3012  07C1                     __end_of_I2CMasterStop:
  3013                           
  3014                           	psect	text12
  3015  04D2                     __ptext12:	
  3016 ;; *************** function _Iniciar_LCD *****************
  3017 ;; Defined at:
  3018 ;;		line 30 in file "LCD.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;		None
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;		None
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  1    wreg      void 
  3025 ;; Registers used:
  3026 ;;		wreg, status,2, status,0, pclath, cstack
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3032 ;;      Params:         0       0       0       0       0
  3033 ;;      Locals:         0       0       0       0       0
  3034 ;;      Temps:          2       0       0       0       0
  3035 ;;      Totals:         2       0       0       0       0
  3036 ;;Total ram usage:        2 bytes
  3037 ;; Hardware stack levels used: 1
  3038 ;; Hardware stack levels required when called: 3
  3039 ;; This function calls:
  3040 ;;		_Escribir_comandoLCD
  3041 ;; This function is called by:
  3042 ;;		_setup
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           
  3047                           ;psect for function _Iniciar_LCD
  3048  04D2                     _Iniciar_LCD:
  3049  04D2                     l1735:	
  3050                           ;incstack = 0
  3051                           ; Regs used in _Iniciar_LCD: [wreg+status,2+status,0+pclath+cstack]
  3052                           
  3053                           
  3054                           ;LCD.c: 31:     PORTDbits.RD3 = 0;
  3055  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  3056  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  3057  04D4  1188               	bcf	8,3	;volatile
  3058                           
  3059                           ;LCD.c: 32:     PORTDbits.RD4 = 0;
  3060  04D5  1208               	bcf	8,4	;volatile
  3061  04D6                     l1737:
  3062                           
  3063                           ;LCD.c: 34:     _delay((unsigned long)((14)*(8000000/4000.0)));
  3064  04D6  3025               	movlw	37
  3065  04D7  00F5               	movwf	??_Iniciar_LCD+1
  3066  04D8  305B               	movlw	91
  3067  04D9  00F4               	movwf	??_Iniciar_LCD
  3068  04DA                     u1727:
  3069  04DA  0BF4               	decfsz	??_Iniciar_LCD,f
  3070  04DB  2CDA               	goto	u1727
  3071  04DC  0BF5               	decfsz	??_Iniciar_LCD+1,f
  3072  04DD  2CDA               	goto	u1727
  3073  04DE  2CDF               	nop2
  3074  04DF                     l1739:
  3075                           
  3076                           ;LCD.c: 35:     Escribir_comandoLCD(0b00110000);
  3077  04DF  3030               	movlw	48
  3078  04E0  120A  118A  2620  120A  118A  	fcall	_Escribir_comandoLCD
  3079  04E5                     l1741:
  3080                           
  3081                           ;LCD.c: 36:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3082  04E5  300B               	movlw	11
  3083  04E6  00F5               	movwf	??_Iniciar_LCD+1
  3084  04E7  3062               	movlw	98
  3085  04E8  00F4               	movwf	??_Iniciar_LCD
  3086  04E9                     u1737:
  3087  04E9  0BF4               	decfsz	??_Iniciar_LCD,f
  3088  04EA  2CE9               	goto	u1737
  3089  04EB  0BF5               	decfsz	??_Iniciar_LCD+1,f
  3090  04EC  2CE9               	goto	u1737
  3091  04ED  0000               	nop
  3092                           
  3093                           ;LCD.c: 37:     Escribir_comandoLCD(0b00110000);
  3094  04EE  3030               	movlw	48
  3095  04EF  120A  118A  2620  120A  118A  	fcall	_Escribir_comandoLCD
  3096  04F4                     l1743:
  3097                           
  3098                           ;LCD.c: 38:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3099  04F4  3042               	movlw	66
  3100  04F5  00F4               	movwf	??_Iniciar_LCD
  3101  04F6                     u1747:
  3102  04F6  0BF4               	decfsz	??_Iniciar_LCD,f
  3103  04F7  2CF6               	goto	u1747
  3104  04F8  0000               	nop
  3105  04F9                     l1745:
  3106                           
  3107                           ;LCD.c: 39:     Escribir_comandoLCD(0b00110000);
  3108  04F9  3030               	movlw	48
  3109  04FA  120A  118A  2620  120A  118A  	fcall	_Escribir_comandoLCD
  3110                           
  3111                           ;LCD.c: 42:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3112  04FF  3042               	movlw	66
  3113  0500  00F4               	movwf	??_Iniciar_LCD
  3114  0501                     u1757:
  3115  0501  0BF4               	decfsz	??_Iniciar_LCD,f
  3116  0502  2D01               	goto	u1757
  3117  0503  0000               	nop
  3118  0504                     l1747:
  3119                           
  3120                           ;LCD.c: 43:     Escribir_comandoLCD(0b00111000);
  3121  0504  3038               	movlw	56
  3122  0505  120A  118A  2620  120A  118A  	fcall	_Escribir_comandoLCD
  3123  050A                     l1749:
  3124                           
  3125                           ;LCD.c: 44:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3126  050A  3042               	movlw	66
  3127  050B  00F4               	movwf	??_Iniciar_LCD
  3128  050C                     u1767:
  3129  050C  0BF4               	decfsz	??_Iniciar_LCD,f
  3130  050D  2D0C               	goto	u1767
  3131  050E  0000               	nop
  3132                           
  3133                           ;LCD.c: 45:     Escribir_comandoLCD(0b00001000);
  3134  050F  3008               	movlw	8
  3135  0510  120A  118A  2620  120A  118A  	fcall	_Escribir_comandoLCD
  3136  0515                     l1751:
  3137                           
  3138                           ;LCD.c: 46:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3139  0515  3042               	movlw	66
  3140  0516  00F4               	movwf	??_Iniciar_LCD
  3141  0517                     u1777:
  3142  0517  0BF4               	decfsz	??_Iniciar_LCD,f
  3143  0518  2D17               	goto	u1777
  3144  0519  0000               	nop
  3145  051A                     l1753:
  3146                           
  3147                           ;LCD.c: 47:     Escribir_comandoLCD(0b00000001);
  3148  051A  3001               	movlw	1
  3149  051B  120A  118A  2620  120A  118A  	fcall	_Escribir_comandoLCD
  3150                           
  3151                           ;LCD.c: 48:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3152  0520  3042               	movlw	66
  3153  0521  00F4               	movwf	??_Iniciar_LCD
  3154  0522                     u1787:
  3155  0522  0BF4               	decfsz	??_Iniciar_LCD,f
  3156  0523  2D22               	goto	u1787
  3157  0524  0000               	nop
  3158  0525                     l1755:
  3159                           
  3160                           ;LCD.c: 49:     Escribir_comandoLCD(0b00000110);
  3161  0525  3006               	movlw	6
  3162  0526  120A  118A  2620  120A  118A  	fcall	_Escribir_comandoLCD
  3163  052B                     l1757:
  3164                           
  3165                           ;LCD.c: 50:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3166  052B  3042               	movlw	66
  3167  052C  00F4               	movwf	??_Iniciar_LCD
  3168  052D                     u1797:
  3169  052D  0BF4               	decfsz	??_Iniciar_LCD,f
  3170  052E  2D2D               	goto	u1797
  3171  052F  0000               	nop
  3172                           
  3173                           ;LCD.c: 51:     Escribir_comandoLCD(0b00001100);
  3174  0530  300C               	movlw	12
  3175  0531  120A  118A  2620  120A  118A  	fcall	_Escribir_comandoLCD
  3176  0536                     l238:
  3177  0536  0008               	return
  3178  0537                     __end_of_Iniciar_LCD:
  3179                           
  3180                           	psect	text13
  3181  072C                     __ptext13:	
  3182 ;; *************** function _Escribir_stringLCD *****************
  3183 ;; Defined at:
  3184 ;;		line 55 in file "LCD.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;  d               1    wreg     PTR const unsigned char 
  3187 ;;		 -> STR_3(13), STR_2(15), STR_1(16), 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;  d               1    6[COMMON] PTR const unsigned char 
  3190 ;;		 -> STR_3(13), STR_2(15), STR_1(16), 
  3191 ;;  i               1    5[COMMON] unsigned char 
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      void 
  3194 ;; Registers used:
  3195 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3201 ;;      Params:         0       0       0       0       0
  3202 ;;      Locals:         2       0       0       0       0
  3203 ;;      Temps:          1       0       0       0       0
  3204 ;;      Totals:         3       0       0       0       0
  3205 ;;Total ram usage:        3 bytes
  3206 ;; Hardware stack levels used: 1
  3207 ;; Hardware stack levels required when called: 3
  3208 ;; This function calls:
  3209 ;;		_Escribir_comandoLCD
  3210 ;; This function is called by:
  3211 ;;		_main
  3212 ;;		_setup
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216                           
  3217                           ;psect for function _Escribir_stringLCD
  3218  072C                     _Escribir_stringLCD:
  3219                           
  3220                           ;incstack = 0
  3221                           ; Regs used in _Escribir_stringLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3222                           ;Escribir_stringLCD@d stored from wreg
  3223  072C  00F6               	movwf	Escribir_stringLCD@d
  3224  072D                     l1617:
  3225                           
  3226                           ;LCD.c: 56:     PORTDbits.RD3 = 1; PORTDbits.RD4 = 0;
  3227  072D  1283               	bcf	3,5	;RP0=0, select bank0
  3228  072E  1303               	bcf	3,6	;RP1=0, select bank0
  3229  072F  1588               	bsf	8,3	;volatile
  3230  0730  1208               	bcf	8,4	;volatile
  3231  0731                     l1619:
  3232                           
  3233                           ;LCD.c: 58:     for (char i=0; d[i]!='\0'; i++){
  3234  0731  01F5               	clrf	Escribir_stringLCD@i
  3235  0732  2F44               	goto	l1625
  3236  0733                     l1621:
  3237                           
  3238                           ;LCD.c: 59:         Escribir_comandoLCD(d[i]);
  3239  0733  0875               	movf	Escribir_stringLCD@i,w
  3240  0734  0776               	addwf	Escribir_stringLCD@d,w
  3241  0735  0084               	movwf	4
  3242  0736  120A  118A  26A2  120A  118A  	fcall	stringdir
  3243  073B  120A  118A  2620  120A  118A  	fcall	_Escribir_comandoLCD
  3244  0740                     l1623:
  3245                           
  3246                           ;LCD.c: 60:     }
  3247  0740  3001               	movlw	1
  3248  0741  00F4               	movwf	??_Escribir_stringLCD
  3249  0742  0874               	movf	??_Escribir_stringLCD,w
  3250  0743  07F5               	addwf	Escribir_stringLCD@i,f
  3251  0744                     l1625:
  3252  0744  0875               	movf	Escribir_stringLCD@i,w
  3253  0745  0776               	addwf	Escribir_stringLCD@d,w
  3254  0746  0084               	movwf	4
  3255  0747  120A  118A  26A2  120A  118A  	fcall	stringdir
  3256  074C  3A00               	xorlw	0
  3257  074D  1D03               	skipz
  3258  074E  2F50               	goto	u931
  3259  074F  2F51               	goto	u930
  3260  0750                     u931:
  3261  0750  2F33               	goto	l1621
  3262  0751                     u930:
  3263  0751                     l244:
  3264  0751  0008               	return
  3265  0752                     __end_of_Escribir_stringLCD:
  3266                           
  3267                           	psect	text14
  3268  0254                     __ptext14:	
  3269 ;; *************** function _Config_USART *****************
  3270 ;; Defined at:
  3271 ;;		line 13 in file "UART.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;  baud_rate       2    2[COMMON] int 
  3274 ;;  Freq            2    4[COMMON] int 
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;		None
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  1    wreg      void 
  3279 ;; Registers used:
  3280 ;;		wreg, status,2, status,0
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3286 ;;      Params:         4       0       0       0       0
  3287 ;;      Locals:         0       0       0       0       0
  3288 ;;      Temps:          0       0       0       0       0
  3289 ;;      Totals:         4       0       0       0       0
  3290 ;;Total ram usage:        4 bytes
  3291 ;; Hardware stack levels used: 1
  3292 ;; Hardware stack levels required when called: 1
  3293 ;; This function calls:
  3294 ;;		Nothing
  3295 ;; This function is called by:
  3296 ;;		_setup
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299                           
  3300                           
  3301                           ;psect for function _Config_USART
  3302  0254                     _Config_USART:
  3303  0254                     l1769:	
  3304                           ;incstack = 0
  3305                           ; Regs used in _Config_USART: [wreg+status,2+status,0]
  3306                           
  3307                           
  3308                           ;UART.c: 14:     if(baud_rate == 9600 && Freq == 4){
  3309  0254  3080               	movlw	128
  3310  0255  0672               	xorwf	Config_USART@baud_rate,w
  3311  0256  3025               	movlw	37
  3312  0257  1903               	skipnz
  3313  0258  0673               	xorwf	Config_USART@baud_rate+1,w
  3314  0259  1D03               	btfss	3,2
  3315  025A  2A5C               	goto	u1061
  3316  025B  2A5D               	goto	u1060
  3317  025C                     u1061:
  3318  025C  2A70               	goto	l1779
  3319  025D                     u1060:
  3320  025D                     l1771:
  3321  025D  3004               	movlw	4
  3322  025E  0674               	xorwf	Config_USART@Freq,w
  3323  025F  0475               	iorwf	Config_USART@Freq+1,w
  3324  0260  1D03               	btfss	3,2
  3325  0261  2A63               	goto	u1071
  3326  0262  2A64               	goto	u1070
  3327  0263                     u1071:
  3328  0263  2A70               	goto	l1779
  3329  0264                     u1070:
  3330  0264                     l1773:
  3331                           
  3332                           ;UART.c: 15:         TXSTAbits.SYNC = 0;
  3333  0264  1683               	bsf	3,5	;RP0=1, select bank1
  3334  0265  1303               	bcf	3,6	;RP1=0, select bank1
  3335  0266  1218               	bcf	24,4	;volatile
  3336                           
  3337                           ;UART.c: 16:         TXSTAbits.BRGH = 1;
  3338  0267  1518               	bsf	24,2	;volatile
  3339                           
  3340                           ;UART.c: 18:         BAUDCTLbits.BRG16 = 0;
  3341  0268  1683               	bsf	3,5	;RP0=1, select bank3
  3342  0269  1703               	bsf	3,6	;RP1=1, select bank3
  3343  026A  1187               	bcf	7,3	;volatile
  3344  026B                     l1775:
  3345                           
  3346                           ;UART.c: 20:         SPBRG = 25;
  3347  026B  3019               	movlw	25
  3348  026C  1683               	bsf	3,5	;RP0=1, select bank1
  3349  026D  1303               	bcf	3,6	;RP1=0, select bank1
  3350  026E  0099               	movwf	25	;volatile
  3351  026F                     l1777:
  3352                           
  3353                           ;UART.c: 21:         SPBRGH = 0;
  3354  026F  019A               	clrf	26	;volatile
  3355  0270                     l1779:
  3356                           
  3357                           ;UART.c: 24:     if(baud_rate == 9600 && Freq == 8){
  3358  0270  3080               	movlw	128
  3359  0271  0672               	xorwf	Config_USART@baud_rate,w
  3360  0272  3025               	movlw	37
  3361  0273  1903               	skipnz
  3362  0274  0673               	xorwf	Config_USART@baud_rate+1,w
  3363  0275  1D03               	btfss	3,2
  3364  0276  2A78               	goto	u1081
  3365  0277  2A79               	goto	u1080
  3366  0278                     u1081:
  3367  0278  2A8C               	goto	l1789
  3368  0279                     u1080:
  3369  0279                     l1781:
  3370  0279  3008               	movlw	8
  3371  027A  0674               	xorwf	Config_USART@Freq,w
  3372  027B  0475               	iorwf	Config_USART@Freq+1,w
  3373  027C  1D03               	btfss	3,2
  3374  027D  2A7F               	goto	u1091
  3375  027E  2A80               	goto	u1090
  3376  027F                     u1091:
  3377  027F  2A8C               	goto	l1789
  3378  0280                     u1090:
  3379  0280                     l1783:
  3380                           
  3381                           ;UART.c: 25:         TXSTAbits.SYNC = 0;
  3382  0280  1683               	bsf	3,5	;RP0=1, select bank1
  3383  0281  1303               	bcf	3,6	;RP1=0, select bank1
  3384  0282  1218               	bcf	24,4	;volatile
  3385                           
  3386                           ;UART.c: 26:         TXSTAbits.BRGH = 0;
  3387  0283  1118               	bcf	24,2	;volatile
  3388                           
  3389                           ;UART.c: 28:         BAUDCTLbits.BRG16 = 1;
  3390  0284  1683               	bsf	3,5	;RP0=1, select bank3
  3391  0285  1703               	bsf	3,6	;RP1=1, select bank3
  3392  0286  1587               	bsf	7,3	;volatile
  3393  0287                     l1785:
  3394                           
  3395                           ;UART.c: 30:         SPBRG = 51;
  3396  0287  3033               	movlw	51
  3397  0288  1683               	bsf	3,5	;RP0=1, select bank1
  3398  0289  1303               	bcf	3,6	;RP1=0, select bank1
  3399  028A  0099               	movwf	25	;volatile
  3400  028B                     l1787:
  3401                           
  3402                           ;UART.c: 31:         SPBRGH = 0;
  3403  028B  019A               	clrf	26	;volatile
  3404  028C                     l1789:
  3405                           
  3406                           ;UART.c: 34:     if(baud_rate == 9600 && Freq == 1){
  3407  028C  3080               	movlw	128
  3408  028D  0672               	xorwf	Config_USART@baud_rate,w
  3409  028E  3025               	movlw	37
  3410  028F  1903               	skipnz
  3411  0290  0673               	xorwf	Config_USART@baud_rate+1,w
  3412  0291  1D03               	btfss	3,2
  3413  0292  2A94               	goto	u1101
  3414  0293  2A95               	goto	u1100
  3415  0294                     u1101:
  3416  0294  2AA7               	goto	l1799
  3417  0295                     u1100:
  3418  0295                     l1791:
  3419  0295  0374               	decf	Config_USART@Freq,w
  3420  0296  0475               	iorwf	Config_USART@Freq+1,w
  3421  0297  1D03               	btfss	3,2
  3422  0298  2A9A               	goto	u1111
  3423  0299  2A9B               	goto	u1110
  3424  029A                     u1111:
  3425  029A  2AA7               	goto	l1799
  3426  029B                     u1110:
  3427  029B                     l1793:
  3428                           
  3429                           ;UART.c: 35:         TXSTAbits.SYNC = 0;
  3430  029B  1683               	bsf	3,5	;RP0=1, select bank1
  3431  029C  1303               	bcf	3,6	;RP1=0, select bank1
  3432  029D  1218               	bcf	24,4	;volatile
  3433                           
  3434                           ;UART.c: 36:         TXSTAbits.BRGH = 1;
  3435  029E  1518               	bsf	24,2	;volatile
  3436                           
  3437                           ;UART.c: 38:         BAUDCTLbits.BRG16 = 1;
  3438  029F  1683               	bsf	3,5	;RP0=1, select bank3
  3439  02A0  1703               	bsf	3,6	;RP1=1, select bank3
  3440  02A1  1587               	bsf	7,3	;volatile
  3441  02A2                     l1795:
  3442                           
  3443                           ;UART.c: 40:         SPBRG = 25;
  3444  02A2  3019               	movlw	25
  3445  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  3446  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  3447  02A5  0099               	movwf	25	;volatile
  3448  02A6                     l1797:
  3449                           
  3450                           ;UART.c: 41:         SPBRGH = 0;
  3451  02A6  019A               	clrf	26	;volatile
  3452  02A7                     l1799:
  3453                           
  3454                           ;UART.c: 44:     if(baud_rate == 10417 && Freq == 4){
  3455  02A7  30B1               	movlw	177
  3456  02A8  0672               	xorwf	Config_USART@baud_rate,w
  3457  02A9  3028               	movlw	40
  3458  02AA  1903               	skipnz
  3459  02AB  0673               	xorwf	Config_USART@baud_rate+1,w
  3460  02AC  1D03               	btfss	3,2
  3461  02AD  2AAF               	goto	u1121
  3462  02AE  2AB0               	goto	u1120
  3463  02AF                     u1121:
  3464  02AF  2AC3               	goto	l1809
  3465  02B0                     u1120:
  3466  02B0                     l1801:
  3467  02B0  3004               	movlw	4
  3468  02B1  0674               	xorwf	Config_USART@Freq,w
  3469  02B2  0475               	iorwf	Config_USART@Freq+1,w
  3470  02B3  1D03               	btfss	3,2
  3471  02B4  2AB6               	goto	u1131
  3472  02B5  2AB7               	goto	u1130
  3473  02B6                     u1131:
  3474  02B6  2AC3               	goto	l1809
  3475  02B7                     u1130:
  3476  02B7                     l1803:
  3477                           
  3478                           ;UART.c: 45:         TXSTAbits.SYNC = 0;
  3479  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  3480  02B8  1303               	bcf	3,6	;RP1=0, select bank1
  3481  02B9  1218               	bcf	24,4	;volatile
  3482                           
  3483                           ;UART.c: 46:         TXSTAbits.BRGH = 1;
  3484  02BA  1518               	bsf	24,2	;volatile
  3485                           
  3486                           ;UART.c: 48:         BAUDCTLbits.BRG16 = 1;
  3487  02BB  1683               	bsf	3,5	;RP0=1, select bank3
  3488  02BC  1703               	bsf	3,6	;RP1=1, select bank3
  3489  02BD  1587               	bsf	7,3	;volatile
  3490  02BE                     l1805:
  3491                           
  3492                           ;UART.c: 50:         SPBRG = 23;
  3493  02BE  3017               	movlw	23
  3494  02BF  1683               	bsf	3,5	;RP0=1, select bank1
  3495  02C0  1303               	bcf	3,6	;RP1=0, select bank1
  3496  02C1  0099               	movwf	25	;volatile
  3497  02C2                     l1807:
  3498                           
  3499                           ;UART.c: 51:         SPBRGH = 0;
  3500  02C2  019A               	clrf	26	;volatile
  3501  02C3                     l1809:
  3502                           
  3503                           ;UART.c: 54:     if(baud_rate == 10417 && Freq == 8){
  3504  02C3  30B1               	movlw	177
  3505  02C4  0672               	xorwf	Config_USART@baud_rate,w
  3506  02C5  3028               	movlw	40
  3507  02C6  1903               	skipnz
  3508  02C7  0673               	xorwf	Config_USART@baud_rate+1,w
  3509  02C8  1D03               	btfss	3,2
  3510  02C9  2ACB               	goto	u1141
  3511  02CA  2ACC               	goto	u1140
  3512  02CB                     u1141:
  3513  02CB  2ADF               	goto	l1819
  3514  02CC                     u1140:
  3515  02CC                     l1811:
  3516  02CC  3008               	movlw	8
  3517  02CD  0674               	xorwf	Config_USART@Freq,w
  3518  02CE  0475               	iorwf	Config_USART@Freq+1,w
  3519  02CF  1D03               	btfss	3,2
  3520  02D0  2AD2               	goto	u1151
  3521  02D1  2AD3               	goto	u1150
  3522  02D2                     u1151:
  3523  02D2  2ADF               	goto	l1819
  3524  02D3                     u1150:
  3525  02D3                     l1813:
  3526                           
  3527                           ;UART.c: 55:         TXSTAbits.SYNC = 0;
  3528  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  3529  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  3530  02D5  1218               	bcf	24,4	;volatile
  3531                           
  3532                           ;UART.c: 56:         TXSTAbits.BRGH = 0;
  3533  02D6  1118               	bcf	24,2	;volatile
  3534                           
  3535                           ;UART.c: 58:         BAUDCTLbits.BRG16 = 1;
  3536  02D7  1683               	bsf	3,5	;RP0=1, select bank3
  3537  02D8  1703               	bsf	3,6	;RP1=1, select bank3
  3538  02D9  1587               	bsf	7,3	;volatile
  3539  02DA                     l1815:
  3540                           
  3541                           ;UART.c: 60:         SPBRG = 47;
  3542  02DA  302F               	movlw	47
  3543  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  3544  02DC  1303               	bcf	3,6	;RP1=0, select bank1
  3545  02DD  0099               	movwf	25	;volatile
  3546  02DE                     l1817:
  3547                           
  3548                           ;UART.c: 61:         SPBRGH = 0;
  3549  02DE  019A               	clrf	26	;volatile
  3550  02DF                     l1819:
  3551                           
  3552                           ;UART.c: 64:     if(baud_rate == 10417 && Freq == 1){
  3553  02DF  30B1               	movlw	177
  3554  02E0  0672               	xorwf	Config_USART@baud_rate,w
  3555  02E1  3028               	movlw	40
  3556  02E2  1903               	skipnz
  3557  02E3  0673               	xorwf	Config_USART@baud_rate+1,w
  3558  02E4  1D03               	btfss	3,2
  3559  02E5  2AE7               	goto	u1161
  3560  02E6  2AE8               	goto	u1160
  3561  02E7                     u1161:
  3562  02E7  2AFA               	goto	l1829
  3563  02E8                     u1160:
  3564  02E8                     l1821:
  3565  02E8  0374               	decf	Config_USART@Freq,w
  3566  02E9  0475               	iorwf	Config_USART@Freq+1,w
  3567  02EA  1D03               	btfss	3,2
  3568  02EB  2AED               	goto	u1171
  3569  02EC  2AEE               	goto	u1170
  3570  02ED                     u1171:
  3571  02ED  2AFA               	goto	l1829
  3572  02EE                     u1170:
  3573  02EE                     l1823:
  3574                           
  3575                           ;UART.c: 65:         TXSTAbits.SYNC = 0;
  3576  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  3577  02EF  1303               	bcf	3,6	;RP1=0, select bank1
  3578  02F0  1218               	bcf	24,4	;volatile
  3579                           
  3580                           ;UART.c: 66:         TXSTAbits.BRGH = 0;
  3581  02F1  1118               	bcf	24,2	;volatile
  3582                           
  3583                           ;UART.c: 68:         BAUDCTLbits.BRG16 = 1;
  3584  02F2  1683               	bsf	3,5	;RP0=1, select bank3
  3585  02F3  1703               	bsf	3,6	;RP1=1, select bank3
  3586  02F4  1587               	bsf	7,3	;volatile
  3587  02F5                     l1825:
  3588                           
  3589                           ;UART.c: 70:         SPBRG = 5;
  3590  02F5  3005               	movlw	5
  3591  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  3592  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  3593  02F8  0099               	movwf	25	;volatile
  3594  02F9                     l1827:
  3595                           
  3596                           ;UART.c: 71:         SPBRGH = 0;
  3597  02F9  019A               	clrf	26	;volatile
  3598  02FA                     l1829:
  3599                           
  3600                           ;UART.c: 74:     RCSTAbits.SPEN = 1;
  3601  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  3602  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  3603  02FC  1798               	bsf	24,7	;volatile
  3604  02FD                     l1831:
  3605                           
  3606                           ;UART.c: 75:     RCSTAbits.RX9 = 0;
  3607  02FD  1318               	bcf	24,6	;volatile
  3608  02FE                     l1833:
  3609                           
  3610                           ;UART.c: 76:     RCSTAbits.CREN = 1;
  3611  02FE  1618               	bsf	24,4	;volatile
  3612  02FF                     l1835:
  3613                           
  3614                           ;UART.c: 78:     TXSTAbits.TXEN = 1;
  3615  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  3616  0300  1303               	bcf	3,6	;RP1=0, select bank1
  3617  0301  1698               	bsf	24,5	;volatile
  3618  0302                     l1837:
  3619                           
  3620                           ;UART.c: 79:     PIE1bits.RCIE = 0;
  3621  0302  128C               	bcf	12,5	;volatile
  3622  0303                     l290:
  3623  0303  0008               	return
  3624  0304                     __end_of_Config_USART:
  3625                           
  3626                           	psect	text15
  3627  0590                     __ptext15:	
  3628 ;; *************** function _divisor_dec *****************
  3629 ;; Defined at:
  3630 ;;		line 210 in file "Maestro I2C.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  b               2    4[BANK0 ] int 
  3633 ;;  dig1            1    6[BANK0 ] PTR unsigned char 
  3634 ;;		 -> Giro_digy(1), Giro_digx(1), 
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;  n               2    9[BANK0 ] int 
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  1    wreg      void 
  3639 ;; Registers used:
  3640 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3646 ;;      Params:         0       3       0       0       0
  3647 ;;      Locals:         0       2       0       0       0
  3648 ;;      Temps:          0       2       0       0       0
  3649 ;;      Totals:         0       7       0       0       0
  3650 ;;Total ram usage:        7 bytes
  3651 ;; Hardware stack levels used: 1
  3652 ;; Hardware stack levels required when called: 2
  3653 ;; This function calls:
  3654 ;;		___awdiv
  3655 ;;		___awmod
  3656 ;; This function is called by:
  3657 ;;		_main
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           
  3662                           ;psect for function _divisor_dec
  3663  0590                     _divisor_dec:
  3664  0590                     l2291:	
  3665                           ;incstack = 0
  3666                           ; Regs used in _divisor_dec: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3667                           
  3668                           
  3669                           ;Maestro I2C.c: 211:     for(int n = 0; n<3 ; n++){
  3670  0590  1283               	bcf	3,5	;RP0=0, select bank0
  3671  0591  1303               	bcf	3,6	;RP1=0, select bank0
  3672  0592  01C1               	clrf	divisor_dec@n
  3673  0593  01C2               	clrf	divisor_dec@n+1
  3674  0594                     l2297:
  3675                           
  3676                           ;Maestro I2C.c: 212:         dig1[n] = b % 10;
  3677  0594  300A               	movlw	10
  3678  0595  00F2               	movwf	___awmod@divisor
  3679  0596  3000               	movlw	0
  3680  0597  00F3               	movwf	___awmod@divisor+1
  3681  0598  1283               	bcf	3,5	;RP0=0, select bank0
  3682  0599  1303               	bcf	3,6	;RP1=0, select bank0
  3683  059A  083D               	movf	divisor_dec@b+1,w
  3684  059B  00F5               	movwf	___awmod@dividend+1
  3685  059C  083C               	movf	divisor_dec@b,w
  3686  059D  00F4               	movwf	___awmod@dividend
  3687  059E  120A  118A  2537  120A  118A  	fcall	___awmod
  3688  05A3  0872               	movf	?___awmod,w
  3689  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  3690  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  3691  05A6  00BF               	movwf	??_divisor_dec
  3692  05A7  0841               	movf	divisor_dec@n,w
  3693  05A8  073E               	addwf	divisor_dec@dig1,w
  3694  05A9  00C0               	movwf	??_divisor_dec+1
  3695  05AA  0840               	movf	??_divisor_dec+1,w
  3696  05AB  0084               	movwf	4
  3697  05AC  083F               	movf	??_divisor_dec,w
  3698  05AD  0080               	movwf	0
  3699                           
  3700                           ;Maestro I2C.c: 213:         b = (b - dig1[n])/10;
  3701  05AE  300A               	movlw	10
  3702  05AF  00F2               	movwf	___awdiv@divisor
  3703  05B0  3000               	movlw	0
  3704  05B1  00F3               	movwf	___awdiv@divisor+1
  3705  05B2  0841               	movf	divisor_dec@n,w
  3706  05B3  073E               	addwf	divisor_dec@dig1,w
  3707  05B4  00BF               	movwf	??_divisor_dec
  3708  05B5  083F               	movf	??_divisor_dec,w
  3709  05B6  0084               	movwf	4
  3710  05B7  0800               	movf	0,w
  3711  05B8  023C               	subwf	divisor_dec@b,w
  3712  05B9  00F4               	movwf	___awdiv@dividend
  3713  05BA  083D               	movf	divisor_dec@b+1,w
  3714  05BB  1C03               	skipc
  3715  05BC  033D               	decf	divisor_dec@b+1,w
  3716  05BD  00F5               	movwf	___awdiv@dividend+1
  3717  05BE  120A  118A  2401  120A  118A  	fcall	___awdiv
  3718  05C3  0873               	movf	?___awdiv+1,w
  3719  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  3720  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  3721  05C6  00BD               	movwf	divisor_dec@b+1
  3722  05C7  0872               	movf	?___awdiv,w
  3723  05C8  00BC               	movwf	divisor_dec@b
  3724  05C9                     l2299:
  3725                           
  3726                           ;Maestro I2C.c: 214:     }
  3727  05C9  3001               	movlw	1
  3728  05CA  07C1               	addwf	divisor_dec@n,f
  3729  05CB  1803               	skipnc
  3730  05CC  0AC2               	incf	divisor_dec@n+1,f
  3731  05CD  3000               	movlw	0
  3732  05CE  07C2               	addwf	divisor_dec@n+1,f
  3733  05CF                     l2301:
  3734  05CF  0842               	movf	divisor_dec@n+1,w
  3735  05D0  3A80               	xorlw	128
  3736  05D1  00FF               	movwf	btemp+1
  3737  05D2  3080               	movlw	128
  3738  05D3  027F               	subwf	btemp+1,w
  3739  05D4  1D03               	skipz
  3740  05D5  2DD8               	goto	u1645
  3741  05D6  3003               	movlw	3
  3742  05D7  0241               	subwf	divisor_dec@n,w
  3743  05D8                     u1645:
  3744  05D8  1C03               	skipc
  3745  05D9  2DDB               	goto	u1641
  3746  05DA  2DDC               	goto	u1640
  3747  05DB                     u1641:
  3748  05DB  2D94               	goto	l2297
  3749  05DC                     u1640:
  3750  05DC                     l123:
  3751  05DC  0008               	return
  3752  05DD                     __end_of_divisor_dec:
  3753                           
  3754                           	psect	text16
  3755  0537                     __ptext16:	
  3756 ;; *************** function ___awmod *****************
  3757 ;; Defined at:
  3758 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;  divisor         2    2[COMMON] int 
  3761 ;;  dividend        2    4[COMMON] int 
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;  sign            1    8[COMMON] unsigned char 
  3764 ;;  counter         1    7[COMMON] unsigned char 
  3765 ;; Return value:  Size  Location     Type
  3766 ;;                  2    2[COMMON] int 
  3767 ;; Registers used:
  3768 ;;		wreg, status,2, status,0
  3769 ;; Tracked objects:
  3770 ;;		On entry : 0/0
  3771 ;;		On exit  : 0/0
  3772 ;;		Unchanged: 0/0
  3773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3774 ;;      Params:         4       0       0       0       0
  3775 ;;      Locals:         2       0       0       0       0
  3776 ;;      Temps:          1       0       0       0       0
  3777 ;;      Totals:         7       0       0       0       0
  3778 ;;Total ram usage:        7 bytes
  3779 ;; Hardware stack levels used: 1
  3780 ;; Hardware stack levels required when called: 1
  3781 ;; This function calls:
  3782 ;;		Nothing
  3783 ;; This function is called by:
  3784 ;;		_divisor_dec
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788                           
  3789                           ;psect for function ___awmod
  3790  0537                     ___awmod:
  3791  0537                     l1883:	
  3792                           ;incstack = 0
  3793                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3794                           
  3795  0537  01F8               	clrf	___awmod@sign
  3796  0538                     l1885:
  3797  0538  1FF5               	btfss	___awmod@dividend+1,7
  3798  0539  2D3B               	goto	u1281
  3799  053A  2D3C               	goto	u1280
  3800  053B                     u1281:
  3801  053B  2D43               	goto	l1891
  3802  053C                     u1280:
  3803  053C                     l1887:
  3804  053C  09F4               	comf	___awmod@dividend,f
  3805  053D  09F5               	comf	___awmod@dividend+1,f
  3806  053E  0AF4               	incf	___awmod@dividend,f
  3807  053F  1903               	skipnz
  3808  0540  0AF5               	incf	___awmod@dividend+1,f
  3809  0541                     l1889:
  3810  0541  01F8               	clrf	___awmod@sign
  3811  0542  0AF8               	incf	___awmod@sign,f
  3812  0543                     l1891:
  3813  0543  1FF3               	btfss	___awmod@divisor+1,7
  3814  0544  2D46               	goto	u1291
  3815  0545  2D47               	goto	u1290
  3816  0546                     u1291:
  3817  0546  2D4C               	goto	l1895
  3818  0547                     u1290:
  3819  0547                     l1893:
  3820  0547  09F2               	comf	___awmod@divisor,f
  3821  0548  09F3               	comf	___awmod@divisor+1,f
  3822  0549  0AF2               	incf	___awmod@divisor,f
  3823  054A  1903               	skipnz
  3824  054B  0AF3               	incf	___awmod@divisor+1,f
  3825  054C                     l1895:
  3826  054C  0872               	movf	___awmod@divisor,w
  3827  054D  0473               	iorwf	___awmod@divisor+1,w
  3828  054E  1903               	btfsc	3,2
  3829  054F  2D51               	goto	u1301
  3830  0550  2D52               	goto	u1300
  3831  0551                     u1301:
  3832  0551  2D81               	goto	l1913
  3833  0552                     u1300:
  3834  0552                     l1897:
  3835  0552  01F7               	clrf	___awmod@counter
  3836  0553  0AF7               	incf	___awmod@counter,f
  3837  0554  2D60               	goto	l1903
  3838  0555                     l1899:
  3839  0555  3001               	movlw	1
  3840  0556                     u1315:
  3841  0556  1003               	clrc
  3842  0557  0DF2               	rlf	___awmod@divisor,f
  3843  0558  0DF3               	rlf	___awmod@divisor+1,f
  3844  0559  3EFF               	addlw	-1
  3845  055A  1D03               	skipz
  3846  055B  2D56               	goto	u1315
  3847  055C                     l1901:
  3848  055C  3001               	movlw	1
  3849  055D  00F6               	movwf	??___awmod
  3850  055E  0876               	movf	??___awmod,w
  3851  055F  07F7               	addwf	___awmod@counter,f
  3852  0560                     l1903:
  3853  0560  1FF3               	btfss	___awmod@divisor+1,7
  3854  0561  2D63               	goto	u1321
  3855  0562  2D64               	goto	u1320
  3856  0563                     u1321:
  3857  0563  2D55               	goto	l1899
  3858  0564                     u1320:
  3859  0564                     l1905:
  3860  0564  0873               	movf	___awmod@divisor+1,w
  3861  0565  0275               	subwf	___awmod@dividend+1,w
  3862  0566  1D03               	skipz
  3863  0567  2D6A               	goto	u1335
  3864  0568  0872               	movf	___awmod@divisor,w
  3865  0569  0274               	subwf	___awmod@dividend,w
  3866  056A                     u1335:
  3867  056A  1C03               	skipc
  3868  056B  2D6D               	goto	u1331
  3869  056C  2D6E               	goto	u1330
  3870  056D                     u1331:
  3871  056D  2D74               	goto	l1909
  3872  056E                     u1330:
  3873  056E                     l1907:
  3874  056E  0872               	movf	___awmod@divisor,w
  3875  056F  02F4               	subwf	___awmod@dividend,f
  3876  0570  0873               	movf	___awmod@divisor+1,w
  3877  0571  1C03               	skipc
  3878  0572  03F5               	decf	___awmod@dividend+1,f
  3879  0573  02F5               	subwf	___awmod@dividend+1,f
  3880  0574                     l1909:
  3881  0574  3001               	movlw	1
  3882  0575                     u1345:
  3883  0575  1003               	clrc
  3884  0576  0CF3               	rrf	___awmod@divisor+1,f
  3885  0577  0CF2               	rrf	___awmod@divisor,f
  3886  0578  3EFF               	addlw	-1
  3887  0579  1D03               	skipz
  3888  057A  2D75               	goto	u1345
  3889  057B                     l1911:
  3890  057B  3001               	movlw	1
  3891  057C  02F7               	subwf	___awmod@counter,f
  3892  057D  1D03               	btfss	3,2
  3893  057E  2D80               	goto	u1351
  3894  057F  2D81               	goto	u1350
  3895  0580                     u1351:
  3896  0580  2D64               	goto	l1905
  3897  0581                     u1350:
  3898  0581                     l1913:
  3899  0581  0878               	movf	___awmod@sign,w
  3900  0582  1903               	btfsc	3,2
  3901  0583  2D85               	goto	u1361
  3902  0584  2D86               	goto	u1360
  3903  0585                     u1361:
  3904  0585  2D8B               	goto	l1917
  3905  0586                     u1360:
  3906  0586                     l1915:
  3907  0586  09F4               	comf	___awmod@dividend,f
  3908  0587  09F5               	comf	___awmod@dividend+1,f
  3909  0588  0AF4               	incf	___awmod@dividend,f
  3910  0589  1903               	skipnz
  3911  058A  0AF5               	incf	___awmod@dividend+1,f
  3912  058B                     l1917:
  3913  058B  0875               	movf	___awmod@dividend+1,w
  3914  058C  00F3               	movwf	?___awmod+1
  3915  058D  0874               	movf	___awmod@dividend,w
  3916  058E  00F2               	movwf	?___awmod
  3917  058F                     l553:
  3918  058F  0008               	return
  3919  0590                     __end_of___awmod:
  3920                           
  3921                           	psect	text17
  3922  0401                     __ptext17:	
  3923 ;; *************** function ___awdiv *****************
  3924 ;; Defined at:
  3925 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;  divisor         2    2[COMMON] int 
  3928 ;;  dividend        2    4[COMMON] int 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;  quotient        2    2[BANK0 ] int 
  3931 ;;  sign            1    1[BANK0 ] unsigned char 
  3932 ;;  counter         1    0[BANK0 ] unsigned char 
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  2    2[COMMON] int 
  3935 ;; Registers used:
  3936 ;;		wreg, status,2, status,0
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3942 ;;      Params:         4       0       0       0       0
  3943 ;;      Locals:         0       4       0       0       0
  3944 ;;      Temps:          1       0       0       0       0
  3945 ;;      Totals:         5       4       0       0       0
  3946 ;;Total ram usage:        9 bytes
  3947 ;; Hardware stack levels used: 1
  3948 ;; Hardware stack levels required when called: 1
  3949 ;; This function calls:
  3950 ;;		Nothing
  3951 ;; This function is called by:
  3952 ;;		_divisor_dec
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           
  3957                           ;psect for function ___awdiv
  3958  0401                     ___awdiv:
  3959  0401                     l2221:	
  3960                           ;incstack = 0
  3961                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3962                           
  3963  0401  1283               	bcf	3,5	;RP0=0, select bank0
  3964  0402  1303               	bcf	3,6	;RP1=0, select bank0
  3965  0403  01B9               	clrf	___awdiv@sign
  3966  0404                     l2223:
  3967  0404  1FF3               	btfss	___awdiv@divisor+1,7
  3968  0405  2C07               	goto	u1541
  3969  0406  2C08               	goto	u1540
  3970  0407                     u1541:
  3971  0407  2C0F               	goto	l2229
  3972  0408                     u1540:
  3973  0408                     l2225:
  3974  0408  09F2               	comf	___awdiv@divisor,f
  3975  0409  09F3               	comf	___awdiv@divisor+1,f
  3976  040A  0AF2               	incf	___awdiv@divisor,f
  3977  040B  1903               	skipnz
  3978  040C  0AF3               	incf	___awdiv@divisor+1,f
  3979  040D                     l2227:
  3980  040D  01B9               	clrf	___awdiv@sign
  3981  040E  0AB9               	incf	___awdiv@sign,f
  3982  040F                     l2229:
  3983  040F  1FF5               	btfss	___awdiv@dividend+1,7
  3984  0410  2C12               	goto	u1551
  3985  0411  2C13               	goto	u1550
  3986  0412                     u1551:
  3987  0412  2C1C               	goto	l2235
  3988  0413                     u1550:
  3989  0413                     l2231:
  3990  0413  09F4               	comf	___awdiv@dividend,f
  3991  0414  09F5               	comf	___awdiv@dividend+1,f
  3992  0415  0AF4               	incf	___awdiv@dividend,f
  3993  0416  1903               	skipnz
  3994  0417  0AF5               	incf	___awdiv@dividend+1,f
  3995  0418                     l2233:
  3996  0418  3001               	movlw	1
  3997  0419  00F6               	movwf	??___awdiv
  3998  041A  0876               	movf	??___awdiv,w
  3999  041B  06B9               	xorwf	___awdiv@sign,f
  4000  041C                     l2235:
  4001  041C  01BA               	clrf	___awdiv@quotient
  4002  041D  01BB               	clrf	___awdiv@quotient+1
  4003  041E                     l2237:
  4004  041E  0872               	movf	___awdiv@divisor,w
  4005  041F  0473               	iorwf	___awdiv@divisor+1,w
  4006  0420  1903               	btfsc	3,2
  4007  0421  2C23               	goto	u1561
  4008  0422  2C24               	goto	u1560
  4009  0423                     u1561:
  4010  0423  2C5B               	goto	l2257
  4011  0424                     u1560:
  4012  0424                     l2239:
  4013  0424  01B8               	clrf	___awdiv@counter
  4014  0425  0AB8               	incf	___awdiv@counter,f
  4015  0426  2C32               	goto	l2245
  4016  0427                     l2241:
  4017  0427  3001               	movlw	1
  4018  0428                     u1575:
  4019  0428  1003               	clrc
  4020  0429  0DF2               	rlf	___awdiv@divisor,f
  4021  042A  0DF3               	rlf	___awdiv@divisor+1,f
  4022  042B  3EFF               	addlw	-1
  4023  042C  1D03               	skipz
  4024  042D  2C28               	goto	u1575
  4025  042E                     l2243:
  4026  042E  3001               	movlw	1
  4027  042F  00F6               	movwf	??___awdiv
  4028  0430  0876               	movf	??___awdiv,w
  4029  0431  07B8               	addwf	___awdiv@counter,f
  4030  0432                     l2245:
  4031  0432  1FF3               	btfss	___awdiv@divisor+1,7
  4032  0433  2C35               	goto	u1581
  4033  0434  2C36               	goto	u1580
  4034  0435                     u1581:
  4035  0435  2C27               	goto	l2241
  4036  0436                     u1580:
  4037  0436                     l2247:
  4038  0436  3001               	movlw	1
  4039  0437                     u1595:
  4040  0437  1003               	clrc
  4041  0438  0DBA               	rlf	___awdiv@quotient,f
  4042  0439  0DBB               	rlf	___awdiv@quotient+1,f
  4043  043A  3EFF               	addlw	-1
  4044  043B  1D03               	skipz
  4045  043C  2C37               	goto	u1595
  4046  043D  0873               	movf	___awdiv@divisor+1,w
  4047  043E  0275               	subwf	___awdiv@dividend+1,w
  4048  043F  1D03               	skipz
  4049  0440  2C43               	goto	u1605
  4050  0441  0872               	movf	___awdiv@divisor,w
  4051  0442  0274               	subwf	___awdiv@dividend,w
  4052  0443                     u1605:
  4053  0443  1C03               	skipc
  4054  0444  2C46               	goto	u1601
  4055  0445  2C47               	goto	u1600
  4056  0446                     u1601:
  4057  0446  2C4E               	goto	l2253
  4058  0447                     u1600:
  4059  0447                     l2249:
  4060  0447  0872               	movf	___awdiv@divisor,w
  4061  0448  02F4               	subwf	___awdiv@dividend,f
  4062  0449  0873               	movf	___awdiv@divisor+1,w
  4063  044A  1C03               	skipc
  4064  044B  03F5               	decf	___awdiv@dividend+1,f
  4065  044C  02F5               	subwf	___awdiv@dividend+1,f
  4066  044D                     l2251:
  4067  044D  143A               	bsf	___awdiv@quotient,0
  4068  044E                     l2253:
  4069  044E  3001               	movlw	1
  4070  044F                     u1615:
  4071  044F  1003               	clrc
  4072  0450  0CF3               	rrf	___awdiv@divisor+1,f
  4073  0451  0CF2               	rrf	___awdiv@divisor,f
  4074  0452  3EFF               	addlw	-1
  4075  0453  1D03               	skipz
  4076  0454  2C4F               	goto	u1615
  4077  0455                     l2255:
  4078  0455  3001               	movlw	1
  4079  0456  02B8               	subwf	___awdiv@counter,f
  4080  0457  1D03               	btfss	3,2
  4081  0458  2C5A               	goto	u1621
  4082  0459  2C5B               	goto	u1620
  4083  045A                     u1621:
  4084  045A  2C36               	goto	l2247
  4085  045B                     u1620:
  4086  045B                     l2257:
  4087  045B  0839               	movf	___awdiv@sign,w
  4088  045C  1903               	btfsc	3,2
  4089  045D  2C5F               	goto	u1631
  4090  045E  2C60               	goto	u1630
  4091  045F                     u1631:
  4092  045F  2C65               	goto	l2261
  4093  0460                     u1630:
  4094  0460                     l2259:
  4095  0460  09BA               	comf	___awdiv@quotient,f
  4096  0461  09BB               	comf	___awdiv@quotient+1,f
  4097  0462  0ABA               	incf	___awdiv@quotient,f
  4098  0463  1903               	skipnz
  4099  0464  0ABB               	incf	___awdiv@quotient+1,f
  4100  0465                     l2261:
  4101  0465  083B               	movf	___awdiv@quotient+1,w
  4102  0466  00F3               	movwf	?___awdiv+1
  4103  0467  083A               	movf	___awdiv@quotient,w
  4104  0468  00F2               	movwf	?___awdiv
  4105  0469                     l540:
  4106  0469  0008               	return
  4107  046A                     __end_of___awdiv:
  4108                           
  4109                           	psect	text18
  4110  0704                     __ptext18:	
  4111 ;; *************** function _I2CMasterRead *****************
  4112 ;; Defined at:
  4113 ;;		line 116 in file "I2C.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;  ACK             1    wreg     enum E1309
  4116 ;; Auto vars:     Size  Location     Type
  4117 ;;  ACK             1    3[COMMON] enum E1309
  4118 ;;  Datos           1    4[COMMON] unsigned char 
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  1    wreg      unsigned char 
  4121 ;; Registers used:
  4122 ;;		wreg, status,2, status,0, pclath, cstack
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4128 ;;      Params:         0       0       0       0       0
  4129 ;;      Locals:         2       0       0       0       0
  4130 ;;      Temps:          1       0       0       0       0
  4131 ;;      Totals:         3       0       0       0       0
  4132 ;;Total ram usage:        3 bytes
  4133 ;; Hardware stack levels used: 1
  4134 ;; Hardware stack levels required when called: 2
  4135 ;; This function calls:
  4136 ;;		_I2CMasterCheck
  4137 ;; This function is called by:
  4138 ;;		_main
  4139 ;; This function uses a non-reentrant model
  4140 ;;
  4141                           
  4142                           
  4143                           ;psect for function _I2CMasterRead
  4144  0704                     _I2CMasterRead:
  4145                           
  4146                           ;incstack = 0
  4147                           ; Regs used in _I2CMasterRead: [wreg+status,2+status,0+pclath+cstack]
  4148                           ;I2CMasterRead@ACK stored from wreg
  4149  0704  00F3               	movwf	I2CMasterRead@ACK
  4150  0705                     l1947:
  4151                           
  4152                           ;I2C.c: 117:     char Datos;;I2C.c: 118:     I2CMasterCheck();
  4153  0705  120A  118A  2794  120A  118A  	fcall	_I2CMasterCheck
  4154  070A                     l1949:
  4155                           
  4156                           ;I2C.c: 119:     SSPCON2bits.RCEN = 1;
  4157  070A  1683               	bsf	3,5	;RP0=1, select bank1
  4158  070B  1303               	bcf	3,6	;RP1=0, select bank1
  4159  070C  1591               	bsf	17,3	;volatile
  4160                           
  4161                           ;I2C.c: 120:     I2CMasterCheck();
  4162  070D  120A  118A  2794  120A  118A  	fcall	_I2CMasterCheck
  4163  0712                     l1951:
  4164                           
  4165                           ;I2C.c: 121:     Datos = SSPBUF;
  4166  0712  1283               	bcf	3,5	;RP0=0, select bank0
  4167  0713  1303               	bcf	3,6	;RP1=0, select bank0
  4168  0714  0813               	movf	19,w	;volatile
  4169  0715  00F2               	movwf	??_I2CMasterRead
  4170  0716  0872               	movf	??_I2CMasterRead,w
  4171  0717  00F4               	movwf	I2CMasterRead@Datos
  4172  0718                     l1953:
  4173                           
  4174                           ;I2C.c: 122:     I2CMasterCheck();
  4175  0718  120A  118A  2794  120A  118A  	fcall	_I2CMasterCheck
  4176  071D                     l1955:
  4177                           
  4178                           ;I2C.c: 123:     if (ACK == 0) SSPCON2bits.ACKDT = 0;
  4179  071D  0873               	movf	I2CMasterRead@ACK,w
  4180  071E  1D03               	btfss	3,2
  4181  071F  2F21               	goto	u1371
  4182  0720  2F22               	goto	u1370
  4183  0721                     u1371:
  4184  0721  2F26               	goto	l205
  4185  0722                     u1370:
  4186  0722                     l1957:
  4187  0722  1683               	bsf	3,5	;RP0=1, select bank1
  4188  0723  1303               	bcf	3,6	;RP1=0, select bank1
  4189  0724  1291               	bcf	17,5	;volatile
  4190  0725  2F29               	goto	l206
  4191  0726                     l205:	
  4192                           ;I2C.c: 124:     else SSPCON2bits.ACKDT = 1;
  4193                           
  4194  0726  1683               	bsf	3,5	;RP0=1, select bank1
  4195  0727  1303               	bcf	3,6	;RP1=0, select bank1
  4196  0728  1691               	bsf	17,5	;volatile
  4197  0729                     l206:
  4198                           
  4199                           ;I2C.c: 125:     SSPCON2bits.ACKEN = 1;
  4200  0729  1611               	bsf	17,4	;volatile
  4201  072A                     l1959:
  4202                           
  4203                           ;I2C.c: 126:     return Datos;
  4204  072A  0874               	movf	I2CMasterRead@Datos,w
  4205  072B                     l207:
  4206  072B  0008               	return
  4207  072C                     __end_of_I2CMasterRead:
  4208                           
  4209                           	psect	text19
  4210  0794                     __ptext19:	
  4211 ;; *************** function _I2CMasterCheck *****************
  4212 ;; Defined at:
  4213 ;;		line 91 in file "I2C.c"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;		None
  4216 ;; Auto vars:     Size  Location     Type
  4217 ;;		None
  4218 ;; Return value:  Size  Location     Type
  4219 ;;                  1    wreg      void 
  4220 ;; Registers used:
  4221 ;;		wreg, status,2
  4222 ;; Tracked objects:
  4223 ;;		On entry : 0/0
  4224 ;;		On exit  : 0/0
  4225 ;;		Unchanged: 0/0
  4226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4227 ;;      Params:         0       0       0       0       0
  4228 ;;      Locals:         0       0       0       0       0
  4229 ;;      Temps:          0       0       0       0       0
  4230 ;;      Totals:         0       0       0       0       0
  4231 ;;Total ram usage:        0 bytes
  4232 ;; Hardware stack levels used: 1
  4233 ;; Hardware stack levels required when called: 1
  4234 ;; This function calls:
  4235 ;;		Nothing
  4236 ;; This function is called by:
  4237 ;;		_I2C_Master_Start
  4238 ;;		_I2CMasterStop
  4239 ;;		_I2CMasterWrite
  4240 ;;		_I2CMasterRead
  4241 ;; This function uses a non-reentrant model
  4242 ;;
  4243                           
  4244                           
  4245                           ;psect for function _I2CMasterCheck
  4246  0794                     _I2CMasterCheck:
  4247  0794                     l1521:	
  4248                           ;incstack = 0
  4249                           ; Regs used in _I2CMasterCheck: [wreg+status,2]
  4250                           
  4251  0794                     l188:	
  4252                           ;I2C.c: 92:     while((SSPSTAT & 0x04)|| (SSPCON2 & 0x1F));
  4253                           
  4254  0794  1683               	bsf	3,5	;RP0=1, select bank1
  4255  0795  1303               	bcf	3,6	;RP1=0, select bank1
  4256  0796  1914               	btfsc	20,2	;volatile
  4257  0797  2F99               	goto	u701
  4258  0798  2F9A               	goto	u700
  4259  0799                     u701:
  4260  0799  2F94               	goto	l188
  4261  079A                     u700:
  4262  079A                     l1523:
  4263  079A  0811               	movf	17,w	;volatile
  4264  079B  391F               	andlw	31
  4265  079C  1D03               	btfss	3,2
  4266  079D  2F9F               	goto	u711
  4267  079E  2FA0               	goto	u710
  4268  079F                     u711:
  4269  079F  2F94               	goto	l188
  4270  07A0                     u710:
  4271  07A0                     l191:
  4272  07A0  0008               	return
  4273  07A1                     __end_of_I2CMasterCheck:
  4274                           
  4275                           	psect	text20
  4276  07A1                     __ptext20:	
  4277 ;; *************** function _Escribir_caracterLCD *****************
  4278 ;; Defined at:
  4279 ;;		line 63 in file "LCD.c"
  4280 ;; Parameters:    Size  Location     Type
  4281 ;;  a               1    wreg     unsigned char 
  4282 ;; Auto vars:     Size  Location     Type
  4283 ;;  a               1    4[COMMON] unsigned char 
  4284 ;; Return value:  Size  Location     Type
  4285 ;;                  1    wreg      void 
  4286 ;; Registers used:
  4287 ;;		wreg, status,2, status,0, pclath, cstack
  4288 ;; Tracked objects:
  4289 ;;		On entry : 0/0
  4290 ;;		On exit  : 0/0
  4291 ;;		Unchanged: 0/0
  4292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4293 ;;      Params:         0       0       0       0       0
  4294 ;;      Locals:         1       0       0       0       0
  4295 ;;      Temps:          0       0       0       0       0
  4296 ;;      Totals:         1       0       0       0       0
  4297 ;;Total ram usage:        1 bytes
  4298 ;; Hardware stack levels used: 1
  4299 ;; Hardware stack levels required when called: 3
  4300 ;; This function calls:
  4301 ;;		_Escribir_comandoLCD
  4302 ;; This function is called by:
  4303 ;;		_main
  4304 ;; This function uses a non-reentrant model
  4305 ;;
  4306                           
  4307                           
  4308                           ;psect for function _Escribir_caracterLCD
  4309  07A1                     _Escribir_caracterLCD:
  4310                           
  4311                           ;incstack = 0
  4312                           ; Regs used in _Escribir_caracterLCD: [wreg+status,2+status,0+pclath+cstack]
  4313                           ;Escribir_caracterLCD@a stored from wreg
  4314  07A1  00F4               	movwf	Escribir_caracterLCD@a
  4315  07A2                     l2045:
  4316                           
  4317                           ;LCD.c: 64:     PORTDbits.RD3 = 1; PORTDbits.RD4 = 0;
  4318  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  4319  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  4320  07A4  1588               	bsf	8,3	;volatile
  4321  07A5  1208               	bcf	8,4	;volatile
  4322  07A6                     l2047:
  4323                           
  4324                           ;LCD.c: 66:     Escribir_comandoLCD(a);
  4325  07A6  0874               	movf	Escribir_caracterLCD@a,w
  4326  07A7  120A  118A  2620  120A  118A  	fcall	_Escribir_comandoLCD
  4327  07AC                     l247:
  4328  07AC  0008               	return
  4329  07AD                     __end_of_Escribir_caracterLCD:
  4330                           
  4331                           	psect	text21
  4332  0620                     __ptext21:	
  4333 ;; *************** function _Escribir_comandoLCD *****************
  4334 ;; Defined at:
  4335 ;;		line 17 in file "LCD.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;  Comando         1    wreg     unsigned char 
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;  Comando         1    3[COMMON] unsigned char 
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  1    wreg      void 
  4342 ;; Registers used:
  4343 ;;		wreg, status,2, status,0, pclath, cstack
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4349 ;;      Params:         0       0       0       0       0
  4350 ;;      Locals:         1       0       0       0       0
  4351 ;;      Temps:          0       0       0       0       0
  4352 ;;      Totals:         1       0       0       0       0
  4353 ;;Total ram usage:        1 bytes
  4354 ;; Hardware stack levels used: 1
  4355 ;; Hardware stack levels required when called: 2
  4356 ;; This function calls:
  4357 ;;		_prender_ELCD
  4358 ;; This function is called by:
  4359 ;;		_Iniciar_LCD
  4360 ;;		_Escribir_stringLCD
  4361 ;;		_Escribir_caracterLCD
  4362 ;;		_Limpiar_pantallaLCD
  4363 ;;		_set_cursor
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367                           
  4368                           ;psect for function _Escribir_comandoLCD
  4369  0620                     _Escribir_comandoLCD:
  4370                           
  4371                           ;incstack = 0
  4372                           ; Regs used in _Escribir_comandoLCD: [wreg+status,2+status,0+pclath+cstack]
  4373                           ;Escribir_comandoLCD@Comando stored from wreg
  4374  0620  00F3               	movwf	Escribir_comandoLCD@Comando
  4375  0621                     l1549:
  4376                           
  4377                           ;LCD.c: 18:     if((Comando & 0b00000001) == 0b00000001){PORTDbits.RD6 = 1;} else {PORTD
      +                          bits.RD6 = 0;}
  4378  0621  1C73               	btfss	Escribir_comandoLCD@Comando,0
  4379  0622  2E24               	goto	u741
  4380  0623  2E25               	goto	u740
  4381  0624                     u741:
  4382  0624  2E29               	goto	l219
  4383  0625                     u740:
  4384  0625                     l1551:
  4385  0625  1283               	bcf	3,5	;RP0=0, select bank0
  4386  0626  1303               	bcf	3,6	;RP1=0, select bank0
  4387  0627  1708               	bsf	8,6	;volatile
  4388  0628  2E2C               	goto	l220
  4389  0629                     l219:
  4390  0629  1283               	bcf	3,5	;RP0=0, select bank0
  4391  062A  1303               	bcf	3,6	;RP1=0, select bank0
  4392  062B  1308               	bcf	8,6	;volatile
  4393  062C                     l220:
  4394                           
  4395                           ;LCD.c: 19:     if((Comando & 0b00000010) == 0b00000010){PORTDbits.RD7 = 1;} else {PORTD
      +                          bits.RD7 = 0;}
  4396  062C  1CF3               	btfss	Escribir_comandoLCD@Comando,1
  4397  062D  2E2F               	goto	u751
  4398  062E  2E30               	goto	u750
  4399  062F                     u751:
  4400  062F  2E32               	goto	l221
  4401  0630                     u750:
  4402  0630                     l1553:
  4403  0630  1788               	bsf	8,7	;volatile
  4404  0631  2E33               	goto	l222
  4405  0632                     l221:
  4406  0632  1388               	bcf	8,7	;volatile
  4407  0633                     l222:
  4408                           
  4409                           ;LCD.c: 20:     if((Comando & 0b00000100) == 0b00000100){PORTBbits.RB0 = 1;} else {PORTB
      +                          bits.RB0 = 0;}
  4410  0633  1D73               	btfss	Escribir_comandoLCD@Comando,2
  4411  0634  2E36               	goto	u761
  4412  0635  2E37               	goto	u760
  4413  0636                     u761:
  4414  0636  2E39               	goto	l223
  4415  0637                     u760:
  4416  0637                     l1555:
  4417  0637  1406               	bsf	6,0	;volatile
  4418  0638  2E3A               	goto	l224
  4419  0639                     l223:
  4420  0639  1006               	bcf	6,0	;volatile
  4421  063A                     l224:
  4422                           
  4423                           ;LCD.c: 21:     if((Comando & 0b00001000) == 0b00001000){PORTBbits.RB1 = 1;} else {PORTB
      +                          bits.RB1 = 0;}
  4424  063A  1DF3               	btfss	Escribir_comandoLCD@Comando,3
  4425  063B  2E3D               	goto	u771
  4426  063C  2E3E               	goto	u770
  4427  063D                     u771:
  4428  063D  2E40               	goto	l225
  4429  063E                     u770:
  4430  063E                     l1557:
  4431  063E  1486               	bsf	6,1	;volatile
  4432  063F  2E41               	goto	l226
  4433  0640                     l225:
  4434  0640  1086               	bcf	6,1	;volatile
  4435  0641                     l226:
  4436                           
  4437                           ;LCD.c: 22:     if((Comando & 0b00010000) == 0b00010000){PORTBbits.RB2 = 1;} else {PORTB
      +                          bits.RB2 = 0;}
  4438  0641  1E73               	btfss	Escribir_comandoLCD@Comando,4
  4439  0642  2E44               	goto	u781
  4440  0643  2E45               	goto	u780
  4441  0644                     u781:
  4442  0644  2E47               	goto	l227
  4443  0645                     u780:
  4444  0645                     l1559:
  4445  0645  1506               	bsf	6,2	;volatile
  4446  0646  2E48               	goto	l228
  4447  0647                     l227:
  4448  0647  1106               	bcf	6,2	;volatile
  4449  0648                     l228:
  4450                           
  4451                           ;LCD.c: 23:     if((Comando & 0b00100000) == 0b00100000){PORTBbits.RB3 = 1;} else {PORTB
      +                          bits.RB3 = 0;}
  4452  0648  1EF3               	btfss	Escribir_comandoLCD@Comando,5
  4453  0649  2E4B               	goto	u791
  4454  064A  2E4C               	goto	u790
  4455  064B                     u791:
  4456  064B  2E4E               	goto	l229
  4457  064C                     u790:
  4458  064C                     l1561:
  4459  064C  1586               	bsf	6,3	;volatile
  4460  064D  2E4F               	goto	l230
  4461  064E                     l229:
  4462  064E  1186               	bcf	6,3	;volatile
  4463  064F                     l230:
  4464                           
  4465                           ;LCD.c: 24:     if((Comando & 0b01000000) == 0b01000000){PORTBbits.RB4 = 1;} else {PORTB
      +                          bits.RB4 = 0;}
  4466  064F  1F73               	btfss	Escribir_comandoLCD@Comando,6
  4467  0650  2E52               	goto	u801
  4468  0651  2E53               	goto	u800
  4469  0652                     u801:
  4470  0652  2E55               	goto	l231
  4471  0653                     u800:
  4472  0653                     l1563:
  4473  0653  1606               	bsf	6,4	;volatile
  4474  0654  2E56               	goto	l232
  4475  0655                     l231:
  4476  0655  1206               	bcf	6,4	;volatile
  4477  0656                     l232:
  4478                           
  4479                           ;LCD.c: 25:     if((Comando & 0b10000000) == 0b10000000){PORTBbits.RB5 = 1;} else {PORTB
      +                          bits.RB5 = 0;}
  4480  0656  1FF3               	btfss	Escribir_comandoLCD@Comando,7
  4481  0657  2E59               	goto	u811
  4482  0658  2E5A               	goto	u810
  4483  0659                     u811:
  4484  0659  2E5C               	goto	l233
  4485  065A                     u810:
  4486  065A                     l1565:
  4487  065A  1686               	bsf	6,5	;volatile
  4488  065B  2E5D               	goto	l1567
  4489  065C                     l233:
  4490  065C  1286               	bcf	6,5	;volatile
  4491  065D                     l1567:
  4492                           
  4493                           ;LCD.c: 27:     prender_ELCD();
  4494  065D  120A  118A  2786  120A  118A  	fcall	_prender_ELCD
  4495  0662                     l235:
  4496  0662  0008               	return
  4497  0663                     __end_of_Escribir_comandoLCD:
  4498                           
  4499                           	psect	text22
  4500  0786                     __ptext22:	
  4501 ;; *************** function _prender_ELCD *****************
  4502 ;; Defined at:
  4503 ;;		line 11 in file "LCD.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;		None
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;		None
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  1    wreg      void 
  4510 ;; Registers used:
  4511 ;;		wreg
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4517 ;;      Params:         0       0       0       0       0
  4518 ;;      Locals:         0       0       0       0       0
  4519 ;;      Temps:          1       0       0       0       0
  4520 ;;      Totals:         1       0       0       0       0
  4521 ;;Total ram usage:        1 bytes
  4522 ;; Hardware stack levels used: 1
  4523 ;; Hardware stack levels required when called: 1
  4524 ;; This function calls:
  4525 ;;		Nothing
  4526 ;; This function is called by:
  4527 ;;		_Escribir_comandoLCD
  4528 ;; This function uses a non-reentrant model
  4529 ;;
  4530                           
  4531                           
  4532                           ;psect for function _prender_ELCD
  4533  0786                     _prender_ELCD:
  4534  0786                     l1525:	
  4535                           ;incstack = 0
  4536                           ; Regs used in _prender_ELCD: [wreg]
  4537                           
  4538                           
  4539                           ;LCD.c: 12:     PORTDbits.RD5 = 1;
  4540  0786  1283               	bcf	3,5	;RP0=0, select bank0
  4541  0787  1303               	bcf	3,6	;RP1=0, select bank0
  4542  0788  1688               	bsf	8,5	;volatile
  4543  0789                     l1527:
  4544                           
  4545                           ;LCD.c: 13:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  4546  0789  30C7               	movlw	199
  4547  078A  00F2               	movwf	??_prender_ELCD
  4548  078B                     u1807:
  4549  078B  2F8C               	nop2
  4550  078C  0BF2               	decfsz	??_prender_ELCD,f
  4551  078D  2F8B               	goto	u1807
  4552  078E  2F8F               	nop2
  4553  078F  2F90               	nop2
  4554  0790                     l1529:
  4555                           
  4556                           ;LCD.c: 14:     PORTDbits.RD5 = 0;
  4557  0790  1283               	bcf	3,5	;RP0=0, select bank0
  4558  0791  1303               	bcf	3,6	;RP1=0, select bank0
  4559  0792  1288               	bcf	8,5	;volatile
  4560  0793                     l216:
  4561  0793  0008               	return
  4562  0794                     __end_of_prender_ELCD:
  4563                           
  4564                           	psect	text23
  4565  07C9                     __ptext23:	
  4566 ;; *************** function _isr *****************
  4567 ;; Defined at:
  4568 ;;		line 93 in file "Maestro I2C.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;		None
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;		None
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  1    wreg      void 
  4575 ;; Registers used:
  4576 ;;		None
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4582 ;;      Params:         0       0       0       0       0
  4583 ;;      Locals:         0       0       0       0       0
  4584 ;;      Temps:          2       0       0       0       0
  4585 ;;      Totals:         2       0       0       0       0
  4586 ;;Total ram usage:        2 bytes
  4587 ;; Hardware stack levels used: 1
  4588 ;; This function calls:
  4589 ;;		Nothing
  4590 ;; This function is called by:
  4591 ;;		Interrupt level 1
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           
  4596                           ;psect for function _isr
  4597  07C9                     _isr:
  4598  07C9                     i1l107:
  4599  07C9  0871               	movf	??_isr+1,w
  4600  07CA  008A               	movwf	10
  4601  07CB  0E70               	swapf	??_isr,w
  4602  07CC  0083               	movwf	3
  4603  07CD  0EFE               	swapf	btemp,f
  4604  07CE  0E7E               	swapf	btemp,w
  4605  07CF  0009               	retfie
  4606  07D0                     __end_of_isr:
  4607  007E                     btemp	set	126	;btemp
  4608  007E                     wtemp0	set	126
  4609                           
  4610                           	psect	intentry
  4611  0004                     __pintentry:	
  4612                           ;incstack = 0
  4613                           ; Regs used in _isr: []
  4614                           
  4615  0004                     interrupt_function:
  4616  007E                     saved_w	set	btemp
  4617  0004  00FE               	movwf	btemp
  4618  0005  0E03               	swapf	3,w
  4619  0006  00F0               	movwf	??_isr
  4620  0007  080A               	movf	10,w
  4621  0008  00F1               	movwf	??_isr+1
  4622  0009  120A  118A  2FC9   	ljmp	_isr
  4623                           
  4624                           	psect	config
  4625                           
  4626                           ;Config register CONFIG1 @ 0x2007
  4627                           ;	Oscillator Selection bits
  4628                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4629                           ;	Watchdog Timer Enable bit
  4630                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4631                           ;	Power-up Timer Enable bit
  4632                           ;	PWRTE = OFF, PWRT disabled
  4633                           ;	RE3/MCLR pin function select bit
  4634                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4635                           ;	Code Protection bit
  4636                           ;	CP = OFF, Program memory code protection is disabled
  4637                           ;	Data Code Protection bit
  4638                           ;	CPD = OFF, Data memory code protection is disabled
  4639                           ;	Brown Out Reset Selection bits
  4640                           ;	BOREN = OFF, BOR disabled
  4641                           ;	Internal External Switchover bit
  4642                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4643                           ;	Fail-Safe Clock Monitor Enabled bit
  4644                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4645                           ;	Low Voltage Programming Enable bit
  4646                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4647                           ;	In-Circuit Debugger Mode bit
  4648                           ;	DEBUG = 0x1, unprogrammed default
  4649  2007                     	org	8199
  4650  2007  20D4               	dw	8404
  4651                           
  4652                           ;Config register CONFIG2 @ 0x2008
  4653                           ;	Brown-out Reset Selection bit
  4654                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4655                           ;	Flash Program Memory Self Write Enable bits
  4656                           ;	WRT = OFF, Write protection off
  4657  2008                     	org	8200
  4658  2008  3FFF               	dw	16383

Data Sizes:
    Strings     44
    Constant    0
    Data        0
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     21      45
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Escribir_stringLCD@d	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_3(CODE[13]), STR_2(CODE[15]), STR_1(CODE[16]), 

    divisor_dec@dig1	PTR unsigned char  size(1) Largest target is 1
		 -> Giro_digy(COMMON[1]), Giro_digx(COMMON[1]), 


Critical Paths under _main in COMMON

    _set_cursor->_Escribir_comandoLCD
    _Limpiar_pantallaLCD->_Escribir_comandoLCD
    _InitMSSP->___lldiv
    _InitMPU6050->_I2CMasterWrite
    _InitMPU6050->_I2C_Master_Start
    _Iniciar_LCD->_Escribir_comandoLCD
    _Escribir_stringLCD->_Escribir_comandoLCD
    _divisor_dec->___awmod
    _Escribir_caracterLCD->_Escribir_comandoLCD
    _Escribir_comandoLCD->_prender_ELCD

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_setup
    _setup->_InitMSSP
    _InitMSSP->___lldiv
    _divisor_dec->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5784
                                             18 BANK0      3     3      0
               _Escribir_caracterLCD
                 _Escribir_stringLCD
                      _I2CMasterRead
                      _I2CMasterStop
                     _I2CMasterWrite
                   _I2C_Master_Start
                        _divisor_dec
                         _set_cursor
                              _setup
                     _tabla_numASCII
 ---------------------------------------------------------------------------------
 (1) _tabla_numASCII                                       3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                3     3      0    2753
                                             15 BANK0      3     3      0
                       _Config_USART
                 _Escribir_stringLCD
                        _Iniciar_LCD
                        _InitMPU6050
                           _InitMSSP
                _Limpiar_pantallaLCD
                            _initOsc
                         _set_cursor
 ---------------------------------------------------------------------------------
 (2) _set_cursor                                           4     3      1     645
                                              4 COMMON     4     3      1
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Limpiar_pantallaLCD                                  2     2      0     176
                                              4 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _InitMSSP                                             9     5      4     821
                                              6 BANK0      9     5      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _InitMPU6050                                          3     3      0      66
                                              3 COMMON     3     3      0
                      _I2CMasterStop
                     _I2CMasterWrite
                   _I2C_Master_Start
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     1     1      0      44
                                              2 COMMON     1     1      0
                     _I2CMasterCheck
 ---------------------------------------------------------------------------------
 (3) _I2CMasterWrite                                       1     1      0      22
                                              2 COMMON     1     1      0
                     _I2CMasterCheck
 ---------------------------------------------------------------------------------
 (3) _I2CMasterStop                                        0     0      0       0
                     _I2CMasterCheck
 ---------------------------------------------------------------------------------
 (2) _Iniciar_LCD                                          2     2      0     176
                                              4 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Escribir_stringLCD                                   3     3      0     365
                                              4 COMMON     3     3      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Config_USART                                         4     0      4     416
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _divisor_dec                                          7     4      3    1690
                                              4 BANK0      7     4      3
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     625
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _I2CMasterRead                                        3     3      0      45
                                              2 COMMON     3     3      0
                     _I2CMasterCheck
 ---------------------------------------------------------------------------------
 (4) _I2CMasterCheck                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Escribir_caracterLCD                                 1     1      0     198
                                              4 COMMON     1     1      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (3) _Escribir_comandoLCD                                  1     1      0     176
                                              3 COMMON     1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (4) _prender_ELCD                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_caracterLCD
     _Escribir_comandoLCD
       _prender_ELCD
   _Escribir_stringLCD
     _Escribir_comandoLCD
   _I2CMasterRead
     _I2CMasterCheck
   _I2CMasterStop
     _I2CMasterCheck
   _I2CMasterWrite
     _I2CMasterCheck
   _I2C_Master_Start
     _I2CMasterCheck
   _divisor_dec
     ___awdiv
     ___awmod
   _set_cursor
     _Escribir_comandoLCD
   _setup
     _Config_USART
     _Escribir_stringLCD
     _Iniciar_LCD
       _Escribir_comandoLCD
     _InitMPU6050
       _I2CMasterStop
       _I2CMasterWrite
       _I2C_Master_Start
     _InitMSSP
       ___lldiv
     _Limpiar_pantallaLCD
       _Escribir_comandoLCD
     _initOsc
     _set_cursor
   _tabla_numASCII

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      39       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      2D       5       56.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      39      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Mar 06 23:06:00 2022

                            pc 0002                    _SSPSTATbits 0094                             _T1 0031  
                           _T2 0030                             _UA 04A1                   ___awdiv@sign 0039  
                           fsr 0004                set_cursor@linea 0077                   ?_divisor_dec 003C  
                          l202 07B7                            l123 05DC                            l220 062C  
                          l221 0632                            l205 0726                            l301 038D  
                          l230 064F                            l222 0633                            l206 0729  
                          l118 0400                            l231 0655                            l223 0639  
                          l207 072B                            l216 0793                            l232 0656  
                          l224 063A                            l128 06A1                            l233 065C  
                          l225 0640                            l226 0641                            l250 076B  
                          l235 0662                            l227 0647                            l219 0629  
                          l228 0648                            l244 0751                            l260 061F  
                          l229 064E                            l238 0536                            l182 01FD  
                          l247 07AC                            l191 07A0                            l423 04D1  
                          l183 023B                            l175 01CB                            l185 0253  
                          l177 01D9                            l290 0303                            l195 0782  
                          l188 0794                            l540 0469                            l196 0785  
                          l268 0700                            l269 0703                            l199 07C0  
                          l553 058F                            _CKP 00A4                            u700 079A  
                          u701 0799                            u710 07A0                            u711 079F  
                          u800 0653                            u720 0777                            u801 0652  
                          u721 0776                            u810 065A                            u730 077F  
                          u811 0659                            u731 077E                            u740 0625  
                          u900 05F4                            u741 0624                            u901 05F3  
                          _Ax1 0037                            u750 0630                            u910 0608  
                          _Ax2 0036                            u751 062F                            u911 0607  
                          _Ay1 0035                            u760 0637                            u920 0616  
                          _Ay2 0034                            u761 0636                            u921 0615  
                          _Az1 0033                            u770 063E                            u930 0751  
                          _Az2 0032                            u771 063D                            u931 0750  
                          u780 0645                            u940 06DB                            u781 0644  
                          u941 06DA                            u790 064C                            u950 06E6  
                          u791 064B                            u951 06E5                            u960 06F1  
                          u961 06F0                            u970 06FB                            u890 05E7  
                          u971 06FA                            u891 05E6                            _Gx1 002F  
                          _Gx2 002E                            _Gy1 002D                            _Gy2 002C  
                          _Gz1 002B                            _Gz2 002A                            _isr 07C9  
                          fsr0 0004                            indf 0000                   ___awmod@sign 0078  
                ??_InitMPU6050 0073                           l2001 066D                           l2013 0671  
                         l2031 0677                           l2007 066F                           l2201 0208  
                         l2025 0675                           l2211 0247                           l2203 020C  
                         l2019 0673                           l2045 07A2                           l2221 0401  
                         l2301 05CF                           l2213 0248                           l2205 0239  
                         l2047 07A6                           l2231 0413                           l2223 0404  
                         l2151 047C                           l2215 0249                           l2207 0240  
                         l2039 0679                           l2311 0035                           l2303 001E  
                         l1521 0794                           l2241 0427                           l2233 0418  
                         l2225 0408                           l2161 04AB                           l2153 047F  
                         l2209 0246                           l2217 024C                           l1601 05F4  
                         l2321 0062                           l2313 003B                           l2305 0023  
                         l1523 079A                           l2251 044D                           l2243 042E  
                         l2235 041C                           l2227 040D                           l1531 076D  
                         l2163 04B9                           l2155 048C                           l2219 0250  
                         l1611 060F                           l1603 05FA                           l2403 0681  
                         l2331 0099                           l2323 006D                           l2315 0041  
                         l2307 0029                           l1525 0786                           l2261 0465  
                         l2253 044E                           l2245 0432                           l2237 041E  
                         l2229 040F                           l1621 0733                           l1541 07AE  
                         l1533 0772                           l1701 0328                           l2165 04BA  
                         l2157 0490                           l2149 046A                           l2181 01BF  
                         l2173 01A6                           l1613 0611                           l1605 0603  
                         l2341 00D0                           l2333 00A4                           l2325 0078  
                         l2317 004C                           l2309 002F                           l1527 0789  
                         l1551 0625                           l2255 0455                           l2247 0436  
                         l2239 0424                           l1623 0740                           l1543 07B3  
                         l1535 0777                           l1711 0346                           l1703 032E  
                         l2167 04C3                           l2159 0499                           l2191 01E5  
                         l2183 01C7                           l2175 01A7                           l1631 06E0  
                         l1615 0616                           l2271 03B2                           l2351 0108  
                         l2343 00DB                           l2335 00AF                           l2327 0083  
                         l2319 0057                           l1529 0790                           l1561 064C  
                         l1553 0630                           l2249 0447                           l2257 045B  
                         l1801 02B0                           l1625 0744                           l1617 072D  
                         l1545 07B8                           l1537 077A                           l1721 0364  
                         l1713 034C                           l1705 0334                           l2169 04C9  
                         l2193 01EF                           l2185 01CE                           l2177 01B2  
                         l1641 06FB                           l1633 06E6                           l1609 0609  
                         l2281 03CE                           l2273 03B7                           l2265 038E  
                         l2361 0132                           l2353 0113                           l2345 00E0  
                         l2337 00BA                           l2329 008E                           l1563 0653  
                         l1555 0637                           l2259 0460                           l2291 0590  
                         l1811 02CC                           l1803 02B7                           l1619 0731  
                         l1547 07BD                           l1539 077F                           l1731 0382  
                         l1723 036A                           l1715 0352                           l1707 033A  
                         l2195 01F7                           l2187 01D6                           l2179 01BB  
                         l1635 06EB                           l1627 06D5                           l2283 03DA  
                         l2275 03BC                           l2267 039C                           l2371 0167  
                         l2363 013A                           l2355 011E                           l2347 00EB  
                         l2339 00C5                           l1565 065A                           l1557 063E  
                         l1549 0621                           l1901 055C                           l1821 02E8  
                         l1813 02D3                           l1805 02BE                           l1741 04E5  
                         l1733 0388                           l1725 0370                           l1717 0358  
                         l1709 0340                           l2197 0200                           l2189 01DF  
                         l1637 06F1                           l1629 06DB                           l2285 03E0  
                         l2277 03C1                           l2269 03A2                           l2381 0197  
                         l2373 0172                           l2365 0142                           l2357 0125  
                         l2349 00FD                           l1567 065D                           l1559 0645  
                         l1911 057B                           l1903 0560                           l1831 02FD  
                         l1823 02EE                           l1815 02DA                           l1807 02C2  
                         l1751 0515                           l1743 04F4                           l1735 04D2  
                         l1727 0376                           l1719 035E                           l2199 0207  
                         l1639 06F6                           l2287 03EE                           l2279 03C8  
                         l2375 017D                           l2367 014A                           l2359 012B  
                         l1905 0564                           l1913 0581                           l2297 0594  
                         l1833 02FE                           l1825 02F5                           l1817 02DE  
                         l1809 02C3                           l1753 051A                           l1745 04F9  
                         l1737 04D6                           l1729 037C                           l1761 0752  
                         l1593 05DE                           l2289 03F3                           l2377 0187  
                         l2369 015C                           l1915 0586                           l1907 056E  
                         l2299 05C9                           l1835 02FF                           l1827 02F9  
                         l1819 02DF                           l1771 025D                           l1755 0525  
                         l1747 0504                           l1739 04DF                           l1691 0304  
                         l1763 0756                           l1595 05E2                           l2379 018F  
                         l1917 058B                           l1909 0574                           l1837 0302  
                         l1829 02FA                           l1781 0279                           l1773 0264  
                         l1757 052B                           l1749 050A                           l1693 0310  
                         l1765 075C                           l1597 05E7                           l1951 0712  
                         l1791 0295                           l1783 0280                           l1775 026B  
                         l1695 0316                           l1767 0765                           l1599 05EE  
                         l1953 0718                           l1793 029B                           l1785 0287  
                         l1777 026F                           l1769 0254                           l1697 031C  
                         l1955 071D                           l1947 0705                           l1891 0543  
                         l1883 0537                           l1795 02A2                           l1787 028B  
                         l1779 0270                           l1699 0322                           l1957 0722  
                         l1949 070A                           l1893 0547                           l1885 0538  
                         l1797 02A6                           l1789 028C                           l1959 072A  
                         l1895 054C                           l1887 053C                           l1799 02A7  
                         l1983 0667                           l1975 0664                           l1897 0552  
                         l1889 0541                           l1977 0665                           l1899 0555  
                         l1995 066B                           l1989 0669                           ?_isr 0070  
                         STR_1 06A8                           STR_2 06B8                           STR_3 06C7  
                         u1100 0295                           u1101 0294                           u1110 029B  
                         u1111 029A                           u1120 02B0                           u1121 02AF  
                         u1130 02B7                           u1131 02B6                           u1300 0552  
                         u1140 02CC                           u1060 025D                           u1301 0551  
                         u1141 02CB                           u1061 025C                           u1150 02D3  
                         u1070 0264                           u1151 02D2                           u1071 0263  
                         u1320 0564                           u1160 02E8                           u1080 0279  
                         u1321 0563                           u1161 02E7                           u1081 0278  
                         u1330 056E                           u1170 02EE                           u1090 0280  
                         u1410 0490                           u1331 056D                           u1315 0556  
                         u1171 02ED                           u1091 027F                           u1411 048F  
                         u1500 01F7                           u1405 0481                           u1501 01F6  
                         u1350 0581                           u1430 04AB                           u1510 01FD  
                         u1351 0580                           u1335 056A                           u1431 04AA  
                         u1511 01FC                           u1600 0447                           u1360 0586  
                         u1280 053C                           u1520 0207                           u1601 0446  
                         u1361 0585                           u1345 0575                           u1281 053B  
                         u1425 0492                           u1521 0206                           u1370 0722  
                         u1290 0547                           u1450 04C9                           u1530 021C  
                         u1371 0721                           u1291 0546                           u1451 04C8  
                         u1435 04A7                           u1620 045B                           u1540 0408  
                         u1460 01BB                           u1621 045A                           u1605 0443  
                         u1541 0407                           u1445 04BB                           u1461 01BA  
                         u1630 0460                           u1550 0413                           u1390 047C  
                         u1470 01C7                           u1631 045F                           u1615 044F  
                         u1551 0412                           u1391 047B                           u1535 0217  
                         u1471 01C6                           u1560 0424                           u1640 05DC  
                         u1480 01D6                           u1561 0423                           u1641 05DB  
                         u1481 01D5                           u1490 01E5                           u1491 01E4  
                         u1707 01AD                           u1580 0436                           u1581 0435  
                         u1645 05D8                           u1717 030A                           u1807 078B  
                         u1575 0428                           u1727 04DA                           u1737 04E9  
                         u1657 00E6                           u1595 0437                           u1747 04F6  
                         u1667 03E8                           u1757 0501                           u1677 05FE  
                         u1767 050C                           u1687 061A                           u1777 0517  
                         u1697 0760                           u1787 0522                           u1797 052D  
                ??_Iniciar_LCD 0074                           _main 001E                           btemp 007E  
                         start 000C           _Escribir_caracterLCD 07A1         __size_of_I2CMasterRead 0028  
       __size_of_I2CMasterStop 0009                          ??_isr 0070     __end_of_Escribir_stringLCD 0752  
                        ?_main 0070                __end_of___awdiv 046A                __end_of___awmod 0590  
                        _ANSEL 0188                __end_of___lldiv 04D2                ___awdiv@divisor 0072  
                        i1l107 07C9                ___awdiv@counter 0038                          _SPBRG 0099  
                        _PORTA 0005                          _PORTB 0006                          _PORTD 0008  
                        _TRISA 0085                          _TRISB 0086                          _TRISD 0088  
                        _SSPIF 0063                   InitMSSP@Dato 003E                   InitMSSP@Modo 0046  
                        _dec_x 0028                          _dec_y 0025                          _dec_z 0021  
                        _cen_x 0027                          _cen_y 0024                          _cen_z 0020  
              __end_of_initOsc 0704                          _setup 038E                          _uni_x 0029  
                        _uni_y 0026                          _uni_z 0022            _Limpiar_pantallaLCD 0752  
                        pclath 000A            __end_of_InitMPU6050 038E                          status 0003  
                        wtemp0 007E          ?_Escribir_caracterLCD 0070           __end_of_Config_USART 0304  
              __initialization 000F            __end_of_Iniciar_LCD 0537                   __end_of_main 01A3  
      __size_of_I2CMasterCheck 000D               __end_of_InitMSSP 0254           ?_Limpiar_pantallaLCD 0070  
      __size_of_I2CMasterWrite 000B                         ??_main 004A                   divisor_dec@b 003C  
                 divisor_dec@n 0041              ?_I2C_Master_Start 0070                  _I2CMasterRead 0704  
           ??_I2C_Master_Start 0072                  _I2CMasterStop 07B8             set_cursor@posicion 0074  
             ___awdiv@dividend 0074                         ?_setup 0070                         _ANSELH 0189  
                       _SPBRGH 009A                         _SSPADD 0093                         _SSPCON 0014  
                       _SSPBUF 0013               ??_tabla_numASCII 0072          ??_Limpiar_pantallaLCD 0074  
                    ??___awdiv 0076                      ??___awmod 0076                      ??___lldiv 0038  
             ___awdiv@quotient 003A                ___awmod@divisor 0072                ___awmod@counter 0077  
                    ??_initOsc 0072           __size_of_divisor_dec 004D                         saved_w 007E  
                  _InitMPU6050 0304                 ?_I2CMasterRead 0070                 ?_I2CMasterStop 0070  
              divisor_dec@dig1 003E        __end_of__initialization 001A                    _Iniciar_LCD 04D2  
       ??_Escribir_caracterLCD 0074                 __pcstackCOMMON 0070                  __end_of_setup 0401  
                      ??_setup 0047                     __pbssBANK0 0020                      ?_InitMSSP 003E  
        __size_of_Config_USART 00B0                     __pmaintext 001E                 _I2CMasterCheck 0794  
                   __pintentry 0004                 _I2CMasterWrite 07AD   __size_of_Escribir_comandoLCD 0043  
          I2CMasterWrite@Datos 0072                   initOsc@Valor 0072                ??_I2CMasterRead 0072  
              ??_I2CMasterStop 0072                   _Config_USART 0254                        _SSPCON2 0091  
                      _SSPSTAT 0094             _Escribir_stringLCD 072C                     __stringtab 06A2  
                   ??_InitMSSP 0042                tabla_numASCII@a 0074            ?_Escribir_stringLCD 0070  
       __end_of_I2CMasterCheck 07A1          Escribir_caracterLCD@a 0074         __end_of_I2CMasterWrite 07B8  
                      ___awdiv 0401                        ___awmod 0537                        ___lldiv 046A  
                      __ptext1 0663                        __ptext2 038E                        __ptext3 05DD  
                      __ptext4 06D4                        __ptext5 0752                        __ptext6 01A3  
                      __ptext7 046A                        __ptext8 0304                        __ptext9 076C  
         ??_Escribir_stringLCD 0074                        _initOsc 06D4                   __size_of_isr 0007  
             ___awmod@dividend 0074                  ?_prender_ELCD 0070                        clrloop0 07C2  
         end_of_initialization 001A      __size_of_I2C_Master_Start 001A                ___lldiv@divisor 0072  
              ___lldiv@counter 003D                ?_I2CMasterCheck 0070                     _set_cursor 05DD  
                    _RCSTAbits 0018                ?_I2CMasterWrite 0070                      _PORTBbits 0006  
                    _PORTDbits 0008                 ??_prender_ELCD 0072                      _TRISAbits 0085  
                    _TRISCbits 0087                   ?_InitMPU6050 0070                   ?_Iniciar_LCD 0070  
                    _TXSTAbits 0098    __end_of_Limpiar_pantallaLCD 076C             I2CMasterRead@Datos 0074  
                  _BAUDCTLbits 0187                  ??_divisor_dec 003F                      _Giro_digx 007B  
                    _Giro_digy 007A                      _Giro_digz 0023            start_initialization 000F  
                  __end_of_isr 07D0            _Escribir_comandoLCD 0620     Escribir_comandoLCD@Comando 0073  
            __size_of_InitMSSP 00B1  __size_of_Escribir_caracterLCD 000C                    ?_set_cursor 0074  
         ?_Escribir_comandoLCD 0070                    __pbssCOMMON 007A        __size_of_tabla_numASCII 003F  
                    ___latbits 0002                  __pcstackBANK0 0038            __end_of_divisor_dec 05DD  
             _I2C_Master_Start 076C           __end_of_prender_ELCD 0794                       ?___awdiv 0072  
                     ?___awmod 0072                       ?___lldiv 0072          ??_Escribir_comandoLCD 0073  
                    __pstrings 06A2                       ?_initOsc 0070          __end_of_I2CMasterRead 072C  
        __end_of_I2CMasterStop 07C1            __size_of_set_cursor 0043           __size_of_InitMPU6050 008A  
               __size_of_setup 0073               ??_I2CMasterCheck 0072              interrupt_function 0004  
  I2C_Master_Start@Modo_Inicio 0072               ??_I2CMasterWrite 0072                      clear_ram0 07C1  
                     _PIE1bits 008C           __size_of_Iniciar_LCD 0065                    __stringbase 06A7  
                  _divisor_dec 0590    __size_of_Escribir_stringLCD 0026                       _InitMSSP 01A3  
          Escribir_stringLCD@d 0076            Escribir_stringLCD@i 0075               __size_of___awdiv 0069  
             __size_of___awmod 0059               __size_of___lldiv 0068             __end_of__stringtab 06A8  
               _tabla_numASCII 0663               __size_of_initOsc 0030                       __ptext10 07AD  
                     __ptext11 07B8                       __ptext20 07A1                       __ptext12 04D2  
                     __ptext21 0620                       __ptext13 072C                       __ptext22 0786  
                     __ptext14 0254                       __ptext23 07C9                       __ptext15 0590  
                     __ptext16 0537                       __ptext17 0401                       __ptext18 0704  
                     __ptext19 0794          __size_of_prender_ELCD 000E                  __size_of_main 0185  
                 ??_set_cursor 0075   __size_of_Limpiar_pantallaLCD 001A               I2CMasterRead@ACK 0073  
       __end_of_tabla_numASCII 06A2       __end_of_I2C_Master_Start 0786                     _INTCONbits 000B  
 __end_of_Escribir_caracterLCD 07AD                   _prender_ELCD 0786                  ?_Config_USART 0072  
             Config_USART@Freq 0074             __end_of_set_cursor 0620                       intlevel1 0000  
             ___lldiv@dividend 0076                      stringcode 06A2                     _OSCCONbits 008F  
              ?_tabla_numASCII 0070               ___lldiv@quotient 0039                 ??_Config_USART 0076  
                     stringdir 06A2                       stringtab 06A2                    _SSPCON2bits 0091  
        Config_USART@baud_rate 0072                     _SSPCONbits 0014    __end_of_Escribir_comandoLCD 0663  
