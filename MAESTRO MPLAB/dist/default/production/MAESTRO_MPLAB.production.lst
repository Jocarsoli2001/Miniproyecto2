

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Mar 07 13:11:07 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.20
    43                           ; Generated 12/02/2020 GMT
    44                           ; 
    45                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F887 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0088                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  008F                     	;# 
   121  0090                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  0105                     	;# 
   140  0107                     	;# 
   141  0108                     	;# 
   142  0109                     	;# 
   143  010C                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  010F                     	;# 
   148  0185                     	;# 
   149  0187                     	;# 
   150  0188                     	;# 
   151  0189                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  0000                     	;# 
   155  0001                     	;# 
   156  0002                     	;# 
   157  0003                     	;# 
   158  0004                     	;# 
   159  0005                     	;# 
   160  0006                     	;# 
   161  0007                     	;# 
   162  0008                     	;# 
   163  0009                     	;# 
   164  000A                     	;# 
   165  000B                     	;# 
   166  000C                     	;# 
   167  000D                     	;# 
   168  000E                     	;# 
   169  000E                     	;# 
   170  000F                     	;# 
   171  0010                     	;# 
   172  0011                     	;# 
   173  0012                     	;# 
   174  0013                     	;# 
   175  0014                     	;# 
   176  0015                     	;# 
   177  0015                     	;# 
   178  0016                     	;# 
   179  0017                     	;# 
   180  0018                     	;# 
   181  0019                     	;# 
   182  001A                     	;# 
   183  001B                     	;# 
   184  001B                     	;# 
   185  001C                     	;# 
   186  001D                     	;# 
   187  001E                     	;# 
   188  001F                     	;# 
   189  0081                     	;# 
   190  0085                     	;# 
   191  0086                     	;# 
   192  0087                     	;# 
   193  0088                     	;# 
   194  0089                     	;# 
   195  008C                     	;# 
   196  008D                     	;# 
   197  008E                     	;# 
   198  008F                     	;# 
   199  0090                     	;# 
   200  0091                     	;# 
   201  0092                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0093                     	;# 
   205  0094                     	;# 
   206  0095                     	;# 
   207  0096                     	;# 
   208  0097                     	;# 
   209  0098                     	;# 
   210  0099                     	;# 
   211  009A                     	;# 
   212  009B                     	;# 
   213  009C                     	;# 
   214  009D                     	;# 
   215  009E                     	;# 
   216  009F                     	;# 
   217  0105                     	;# 
   218  0107                     	;# 
   219  0108                     	;# 
   220  0109                     	;# 
   221  010C                     	;# 
   222  010C                     	;# 
   223  010D                     	;# 
   224  010E                     	;# 
   225  010F                     	;# 
   226  0185                     	;# 
   227  0187                     	;# 
   228  0188                     	;# 
   229  0189                     	;# 
   230  018C                     	;# 
   231  018D                     	;# 
   232  0000                     	;# 
   233  0001                     	;# 
   234  0002                     	;# 
   235  0003                     	;# 
   236  0004                     	;# 
   237  0005                     	;# 
   238  0006                     	;# 
   239  0007                     	;# 
   240  0008                     	;# 
   241  0009                     	;# 
   242  000A                     	;# 
   243  000B                     	;# 
   244  000C                     	;# 
   245  000D                     	;# 
   246  000E                     	;# 
   247  000E                     	;# 
   248  000F                     	;# 
   249  0010                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0013                     	;# 
   253  0014                     	;# 
   254  0015                     	;# 
   255  0015                     	;# 
   256  0016                     	;# 
   257  0017                     	;# 
   258  0018                     	;# 
   259  0019                     	;# 
   260  001A                     	;# 
   261  001B                     	;# 
   262  001B                     	;# 
   263  001C                     	;# 
   264  001D                     	;# 
   265  001E                     	;# 
   266  001F                     	;# 
   267  0081                     	;# 
   268  0085                     	;# 
   269  0086                     	;# 
   270  0087                     	;# 
   271  0088                     	;# 
   272  0089                     	;# 
   273  008C                     	;# 
   274  008D                     	;# 
   275  008E                     	;# 
   276  008F                     	;# 
   277  0090                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0093                     	;# 
   283  0094                     	;# 
   284  0095                     	;# 
   285  0096                     	;# 
   286  0097                     	;# 
   287  0098                     	;# 
   288  0099                     	;# 
   289  009A                     	;# 
   290  009B                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  0105                     	;# 
   296  0107                     	;# 
   297  0108                     	;# 
   298  0109                     	;# 
   299  010C                     	;# 
   300  010C                     	;# 
   301  010D                     	;# 
   302  010E                     	;# 
   303  010F                     	;# 
   304  0185                     	;# 
   305  0187                     	;# 
   306  0188                     	;# 
   307  0189                     	;# 
   308  018C                     	;# 
   309  018D                     	;# 
   310  0000                     	;# 
   311  0001                     	;# 
   312  0002                     	;# 
   313  0003                     	;# 
   314  0004                     	;# 
   315  0005                     	;# 
   316  0006                     	;# 
   317  0007                     	;# 
   318  0008                     	;# 
   319  0009                     	;# 
   320  000A                     	;# 
   321  000B                     	;# 
   322  000C                     	;# 
   323  000D                     	;# 
   324  000E                     	;# 
   325  000E                     	;# 
   326  000F                     	;# 
   327  0010                     	;# 
   328  0011                     	;# 
   329  0012                     	;# 
   330  0013                     	;# 
   331  0014                     	;# 
   332  0015                     	;# 
   333  0015                     	;# 
   334  0016                     	;# 
   335  0017                     	;# 
   336  0018                     	;# 
   337  0019                     	;# 
   338  001A                     	;# 
   339  001B                     	;# 
   340  001B                     	;# 
   341  001C                     	;# 
   342  001D                     	;# 
   343  001E                     	;# 
   344  001F                     	;# 
   345  0081                     	;# 
   346  0085                     	;# 
   347  0086                     	;# 
   348  0087                     	;# 
   349  0088                     	;# 
   350  0089                     	;# 
   351  008C                     	;# 
   352  008D                     	;# 
   353  008E                     	;# 
   354  008F                     	;# 
   355  0090                     	;# 
   356  0091                     	;# 
   357  0092                     	;# 
   358  0093                     	;# 
   359  0093                     	;# 
   360  0093                     	;# 
   361  0094                     	;# 
   362  0095                     	;# 
   363  0096                     	;# 
   364  0097                     	;# 
   365  0098                     	;# 
   366  0099                     	;# 
   367  009A                     	;# 
   368  009B                     	;# 
   369  009C                     	;# 
   370  009D                     	;# 
   371  009E                     	;# 
   372  009F                     	;# 
   373  0105                     	;# 
   374  0107                     	;# 
   375  0108                     	;# 
   376  0109                     	;# 
   377  010C                     	;# 
   378  010C                     	;# 
   379  010D                     	;# 
   380  010E                     	;# 
   381  010F                     	;# 
   382  0185                     	;# 
   383  0187                     	;# 
   384  0188                     	;# 
   385  0189                     	;# 
   386  018C                     	;# 
   387  018D                     	;# 
   388  0000                     	;# 
   389  0001                     	;# 
   390  0002                     	;# 
   391  0003                     	;# 
   392  0004                     	;# 
   393  0005                     	;# 
   394  0006                     	;# 
   395  0007                     	;# 
   396  0008                     	;# 
   397  0009                     	;# 
   398  000A                     	;# 
   399  000B                     	;# 
   400  000C                     	;# 
   401  000D                     	;# 
   402  000E                     	;# 
   403  000E                     	;# 
   404  000F                     	;# 
   405  0010                     	;# 
   406  0011                     	;# 
   407  0012                     	;# 
   408  0013                     	;# 
   409  0014                     	;# 
   410  0015                     	;# 
   411  0015                     	;# 
   412  0016                     	;# 
   413  0017                     	;# 
   414  0018                     	;# 
   415  0019                     	;# 
   416  001A                     	;# 
   417  001B                     	;# 
   418  001B                     	;# 
   419  001C                     	;# 
   420  001D                     	;# 
   421  001E                     	;# 
   422  001F                     	;# 
   423  0081                     	;# 
   424  0085                     	;# 
   425  0086                     	;# 
   426  0087                     	;# 
   427  0088                     	;# 
   428  0089                     	;# 
   429  008C                     	;# 
   430  008D                     	;# 
   431  008E                     	;# 
   432  008F                     	;# 
   433  0090                     	;# 
   434  0091                     	;# 
   435  0092                     	;# 
   436  0093                     	;# 
   437  0093                     	;# 
   438  0093                     	;# 
   439  0094                     	;# 
   440  0095                     	;# 
   441  0096                     	;# 
   442  0097                     	;# 
   443  0098                     	;# 
   444  0099                     	;# 
   445  009A                     	;# 
   446  009B                     	;# 
   447  009C                     	;# 
   448  009D                     	;# 
   449  009E                     	;# 
   450  009F                     	;# 
   451  0105                     	;# 
   452  0107                     	;# 
   453  0108                     	;# 
   454  0109                     	;# 
   455  010C                     	;# 
   456  010C                     	;# 
   457  010D                     	;# 
   458  010E                     	;# 
   459  010F                     	;# 
   460  0185                     	;# 
   461  0187                     	;# 
   462  0188                     	;# 
   463  0189                     	;# 
   464  018C                     	;# 
   465  018D                     	;# 
   466  0000                     	;# 
   467  0001                     	;# 
   468  0002                     	;# 
   469  0003                     	;# 
   470  0004                     	;# 
   471  0005                     	;# 
   472  0006                     	;# 
   473  0007                     	;# 
   474  0008                     	;# 
   475  0009                     	;# 
   476  000A                     	;# 
   477  000B                     	;# 
   478  000C                     	;# 
   479  000D                     	;# 
   480  000E                     	;# 
   481  000E                     	;# 
   482  000F                     	;# 
   483  0010                     	;# 
   484  0011                     	;# 
   485  0012                     	;# 
   486  0013                     	;# 
   487  0014                     	;# 
   488  0015                     	;# 
   489  0015                     	;# 
   490  0016                     	;# 
   491  0017                     	;# 
   492  0018                     	;# 
   493  0019                     	;# 
   494  001A                     	;# 
   495  001B                     	;# 
   496  001B                     	;# 
   497  001C                     	;# 
   498  001D                     	;# 
   499  001E                     	;# 
   500  001F                     	;# 
   501  0081                     	;# 
   502  0085                     	;# 
   503  0086                     	;# 
   504  0087                     	;# 
   505  0088                     	;# 
   506  0089                     	;# 
   507  008C                     	;# 
   508  008D                     	;# 
   509  008E                     	;# 
   510  008F                     	;# 
   511  0090                     	;# 
   512  0091                     	;# 
   513  0092                     	;# 
   514  0093                     	;# 
   515  0093                     	;# 
   516  0093                     	;# 
   517  0094                     	;# 
   518  0095                     	;# 
   519  0096                     	;# 
   520  0097                     	;# 
   521  0098                     	;# 
   522  0099                     	;# 
   523  009A                     	;# 
   524  009B                     	;# 
   525  009C                     	;# 
   526  009D                     	;# 
   527  009E                     	;# 
   528  009F                     	;# 
   529  0105                     	;# 
   530  0107                     	;# 
   531  0108                     	;# 
   532  0109                     	;# 
   533  010C                     	;# 
   534  010C                     	;# 
   535  010D                     	;# 
   536  010E                     	;# 
   537  010F                     	;# 
   538  0185                     	;# 
   539  0187                     	;# 
   540  0188                     	;# 
   541  0189                     	;# 
   542  018C                     	;# 
   543  018D                     	;# 
   544  0000                     	;# 
   545  0001                     	;# 
   546  0002                     	;# 
   547  0003                     	;# 
   548  0004                     	;# 
   549  0005                     	;# 
   550  0006                     	;# 
   551  0007                     	;# 
   552  0008                     	;# 
   553  0009                     	;# 
   554  000A                     	;# 
   555  000B                     	;# 
   556  000C                     	;# 
   557  000D                     	;# 
   558  000E                     	;# 
   559  000E                     	;# 
   560  000F                     	;# 
   561  0010                     	;# 
   562  0011                     	;# 
   563  0012                     	;# 
   564  0013                     	;# 
   565  0014                     	;# 
   566  0015                     	;# 
   567  0015                     	;# 
   568  0016                     	;# 
   569  0017                     	;# 
   570  0018                     	;# 
   571  0019                     	;# 
   572  001A                     	;# 
   573  001B                     	;# 
   574  001B                     	;# 
   575  001C                     	;# 
   576  001D                     	;# 
   577  001E                     	;# 
   578  001F                     	;# 
   579  0081                     	;# 
   580  0085                     	;# 
   581  0086                     	;# 
   582  0087                     	;# 
   583  0088                     	;# 
   584  0089                     	;# 
   585  008C                     	;# 
   586  008D                     	;# 
   587  008E                     	;# 
   588  008F                     	;# 
   589  0090                     	;# 
   590  0091                     	;# 
   591  0092                     	;# 
   592  0093                     	;# 
   593  0093                     	;# 
   594  0093                     	;# 
   595  0094                     	;# 
   596  0095                     	;# 
   597  0096                     	;# 
   598  0097                     	;# 
   599  0098                     	;# 
   600  0099                     	;# 
   601  009A                     	;# 
   602  009B                     	;# 
   603  009C                     	;# 
   604  009D                     	;# 
   605  009E                     	;# 
   606  009F                     	;# 
   607  0105                     	;# 
   608  0107                     	;# 
   609  0108                     	;# 
   610  0109                     	;# 
   611  010C                     	;# 
   612  010C                     	;# 
   613  010D                     	;# 
   614  010E                     	;# 
   615  010F                     	;# 
   616  0185                     	;# 
   617  0187                     	;# 
   618  0188                     	;# 
   619  0189                     	;# 
   620  018C                     	;# 
   621  018D                     	;# 
   622  0000                     	;# 
   623  0001                     	;# 
   624  0002                     	;# 
   625  0003                     	;# 
   626  0004                     	;# 
   627  0005                     	;# 
   628  0006                     	;# 
   629  0007                     	;# 
   630  0008                     	;# 
   631  0009                     	;# 
   632  000A                     	;# 
   633  000B                     	;# 
   634  000C                     	;# 
   635  000D                     	;# 
   636  000E                     	;# 
   637  000E                     	;# 
   638  000F                     	;# 
   639  0010                     	;# 
   640  0011                     	;# 
   641  0012                     	;# 
   642  0013                     	;# 
   643  0014                     	;# 
   644  0015                     	;# 
   645  0015                     	;# 
   646  0016                     	;# 
   647  0017                     	;# 
   648  0018                     	;# 
   649  0019                     	;# 
   650  001A                     	;# 
   651  001B                     	;# 
   652  001B                     	;# 
   653  001C                     	;# 
   654  001D                     	;# 
   655  001E                     	;# 
   656  001F                     	;# 
   657  0081                     	;# 
   658  0085                     	;# 
   659  0086                     	;# 
   660  0087                     	;# 
   661  0088                     	;# 
   662  0089                     	;# 
   663  008C                     	;# 
   664  008D                     	;# 
   665  008E                     	;# 
   666  008F                     	;# 
   667  0090                     	;# 
   668  0091                     	;# 
   669  0092                     	;# 
   670  0093                     	;# 
   671  0093                     	;# 
   672  0093                     	;# 
   673  0094                     	;# 
   674  0095                     	;# 
   675  0096                     	;# 
   676  0097                     	;# 
   677  0098                     	;# 
   678  0099                     	;# 
   679  009A                     	;# 
   680  009B                     	;# 
   681  009C                     	;# 
   682  009D                     	;# 
   683  009E                     	;# 
   684  009F                     	;# 
   685  0105                     	;# 
   686  0107                     	;# 
   687  0108                     	;# 
   688  0109                     	;# 
   689  010C                     	;# 
   690  010C                     	;# 
   691  010D                     	;# 
   692  010E                     	;# 
   693  010F                     	;# 
   694  0185                     	;# 
   695  0187                     	;# 
   696  0188                     	;# 
   697  0189                     	;# 
   698  018C                     	;# 
   699  018D                     	;# 
   700                           
   701                           	psect	idataBANK0
   702  07FE                     __pidataBANK0:
   703                           
   704                           ;initializer for _bandera
   705  07FE  3401               	retlw	1
   706  07FF  3400               	retlw	0
   707  0019                     _TXREG	set	25
   708  0018                     _RCSTAbits	set	24
   709  0006                     _PORTBbits	set	6
   710  0008                     _PORTDbits	set	8
   711  0013                     _SSPBUF	set	19
   712  0014                     _SSPCON	set	20
   713  000B                     _INTCONbits	set	11
   714  0014                     _SSPCONbits	set	20
   715  0008                     _PORTD	set	8
   716  0006                     _PORTB	set	6
   717  0005                     _PORTA	set	5
   718  001A                     _RCREG	set	26
   719  000C                     _PIR1bits	set	12
   720  005E                     _PEIE	set	94
   721  005F                     _GIE	set	95
   722  0064                     _TXIF	set	100
   723  0063                     _SSPIF	set	99
   724  00A4                     _CKP	set	164
   725  009A                     _SPBRGH	set	154
   726  0099                     _SPBRG	set	153
   727  0098                     _TXSTAbits	set	152
   728  008F                     _OSCCONbits	set	143
   729  0091                     _SSPCON2bits	set	145
   730  008C                     _PIE1bits	set	140
   731  0093                     _SSPADD	set	147
   732  0094                     _SSPSTAT	set	148
   733  0091                     _SSPCON2	set	145
   734  0094                     _SSPSTATbits	set	148
   735  0085                     _TRISAbits	set	133
   736  0087                     _TRISCbits	set	135
   737  0088                     _TRISD	set	136
   738  0086                     _TRISB	set	134
   739  0085                     _TRISA	set	133
   740  0463                     _SSPIE	set	1123
   741  043C                     _TRISC4	set	1084
   742  043B                     _TRISC3	set	1083
   743  04A1                     _UA	set	1185
   744  0187                     _BAUDCTLbits	set	391
   745  0189                     _ANSELH	set	393
   746  0188                     _ANSEL	set	392
   747                           
   748                           	psect	strings
   749  06CD                     __pstrings:
   750  06CD                     stringtab:
   751  06CD                     __stringtab:
   752  06CD                     stringcode:	
   753                           ;	String table - string pointers are 1 byte each
   754                           
   755  06CD                     stringdir:
   756  06CD  3006               	movlw	high stringdir
   757  06CE  008A               	movwf	10
   758  06CF  0804               	movf	4,w
   759  06D0  0A84               	incf	4,f
   760  06D1  0782               	addwf	2,f
   761  06D2                     __stringbase:
   762  06D2  3400               	retlw	0
   763  06D3                     __end_of__stringtab:
   764  06D3                     STR_1:
   765  06D3  3458               	retlw	88	;'X'
   766  06D4  343A               	retlw	58	;':'
   767  06D5  3420               	retlw	32	;' '
   768  06D6  3420               	retlw	32	;' '
   769  06D7  3420               	retlw	32	;' '
   770  06D8  3420               	retlw	32	;' '
   771  06D9  3459               	retlw	89	;'Y'
   772  06DA  343A               	retlw	58	;':'
   773  06DB  3420               	retlw	32	;' '
   774  06DC  3420               	retlw	32	;' '
   775  06DD  3420               	retlw	32	;' '
   776  06DE  3420               	retlw	32	;' '
   777  06DF  3420               	retlw	32	;' '
   778  06E0  3453               	retlw	83	;'S'
   779  06E1  343A               	retlw	58	;':'
   780  06E2  3400               	retlw	0
   781  06E3                     STR_2:
   782  06E3  344D               	retlw	77	;'M'
   783  06E4  3469               	retlw	105	;'i'
   784  06E5  346E               	retlw	110	;'n'
   785  06E6  3469               	retlw	105	;'i'
   786  06E7  3470               	retlw	112	;'p'
   787  06E8  3472               	retlw	114	;'r'
   788  06E9  346F               	retlw	111	;'o'
   789  06EA  3479               	retlw	121	;'y'
   790  06EB  3465               	retlw	101	;'e'
   791  06EC  3463               	retlw	99	;'c'
   792  06ED  3474               	retlw	116	;'t'
   793  06EE  346F               	retlw	111	;'o'
   794  06EF  3420               	retlw	32	;' '
   795  06F0  3432               	retlw	50	;'2'
   796  06F1  3400               	retlw	0
   797  06F2                     STR_3:
   798  06F2  344A               	retlw	74	;'J'
   799  06F3  346F               	retlw	111	;'o'
   800  06F4  3473               	retlw	115	;'s'
   801  06F5  3465               	retlw	101	;'e'
   802  06F6  3420               	retlw	32	;' '
   803  06F7  3453               	retlw	83	;'S'
   804  06F8  3461               	retlw	97	;'a'
   805  06F9  346E               	retlw	110	;'n'
   806  06FA  3474               	retlw	116	;'t'
   807  06FB  3469               	retlw	105	;'i'
   808  06FC  347A               	retlw	122	;'z'
   809  06FD  346F               	retlw	111	;'o'
   810  06FE  3400               	retlw	0
   811                           
   812                           	psect	cinit
   813  000F                     start_initialization:	
   814                           ; #config settings
   815                           
   816  000F                     __initialization:
   817                           
   818                           ; Initialize objects allocated to BANK0
   819  000F  120A  118A  27FE  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   820  0014  00D1               	movwf	__pdataBANK0& (0+127)
   821  0015  120A  118A  27FF  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   822  001A  00D2               	movwf	(__pdataBANK0+1)& (0+127)
   823                           
   824                           ; Clear objects allocated to BANK0
   825  001B  1383               	bcf	3,7	;select IRP bank0
   826  001C  3020               	movlw	low __pbssBANK0
   827  001D  0084               	movwf	4
   828  001E  3039               	movlw	low (__pbssBANK0+25)
   829  001F  120A  158A  27EF  120A  118A  	fcall	clear_ram0
   830                           
   831                           ; Clear objects allocated to COMMON
   832  0024  01F8               	clrf	__pbssCOMMON& (0+127)
   833  0025  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   834  0026  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   835  0027                     end_of_initialization:	
   836                           ;End of C runtime variable initialization code
   837                           
   838  0027                     __end_of__initialization:
   839  0027  0183               	clrf	3
   840  0028  120A  118A  282B   	ljmp	_main	;jump to C main() function
   841                           
   842                           	psect	bssCOMMON
   843  0078                     __pbssCOMMON:
   844  0078                     _Gx1:
   845  0078                     	ds	1
   846  0079                     _Giro_digy:
   847  0079                     	ds	1
   848  007A                     _Giro_digx:
   849  007A                     	ds	1
   850                           
   851                           	psect	bssBANK0
   852  0020                     __pbssBANK0:
   853  0020                     _estado_sem:
   854  0020                     	ds	1
   855  0021                     _dato:
   856  0021                     	ds	1
   857  0022                     _cen_z:
   858  0022                     	ds	1
   859  0023                     _dec_z:
   860  0023                     	ds	1
   861  0024                     _uni_z:
   862  0024                     	ds	1
   863  0025                     _Giro_digz:
   864  0025                     	ds	1
   865  0026                     _cen_y:
   866  0026                     	ds	1
   867  0027                     _dec_y:
   868  0027                     	ds	1
   869  0028                     _uni_y:
   870  0028                     	ds	1
   871  0029                     _cen_x:
   872  0029                     	ds	1
   873  002A                     _dec_x:
   874  002A                     	ds	1
   875  002B                     _uni_x:
   876  002B                     	ds	1
   877  002C                     _Gz2:
   878  002C                     	ds	1
   879  002D                     _Gz1:
   880  002D                     	ds	1
   881  002E                     _Gy2:
   882  002E                     	ds	1
   883  002F                     _Gy1:
   884  002F                     	ds	1
   885  0030                     _Gx2:
   886  0030                     	ds	1
   887  0031                     _T2:
   888  0031                     	ds	1
   889  0032                     _T1:
   890  0032                     	ds	1
   891  0033                     _Az2:
   892  0033                     	ds	1
   893  0034                     _Az1:
   894  0034                     	ds	1
   895  0035                     _Ay2:
   896  0035                     	ds	1
   897  0036                     _Ay1:
   898  0036                     	ds	1
   899  0037                     _Ax2:
   900  0037                     	ds	1
   901  0038                     _Ax1:
   902  0038                     	ds	1
   903                           
   904                           	psect	dataBANK0
   905  0051                     __pdataBANK0:
   906  0051                     _bandera:
   907  0051                     	ds	2
   908                           
   909                           	psect	clrtext
   910  0FEF                     clear_ram0:	
   911                           ;	Called with FSR containing the base address, and
   912                           ;	W with the last address+1
   913                           
   914  0FEF  0064               	clrwdt	;clear the watchdog before getting into this loop
   915  0FF0                     clrloop0:
   916  0FF0  0180               	clrf	0	;clear RAM location pointed to by FSR
   917  0FF1  0A84               	incf	4,f	;increment pointer
   918  0FF2  0604               	xorwf	4,w	;XOR with final address
   919  0FF3  1903               	btfsc	3,2	;have we reached the end yet?
   920  0FF4  3400               	retlw	0	;all done for this memory range, return
   921  0FF5  0604               	xorwf	4,w	;XOR again to restore value
   922  0FF6  2FF0               	goto	clrloop0	;do the next byte
   923                           
   924                           	psect	cstackCOMMON
   925  0070                     __pcstackCOMMON:
   926  0070                     ?_setup:
   927  0070                     ?_I2C_Master_Start:	
   928                           ; 1 bytes @ 0x0
   929                           
   930  0070                     ?_I2CMasterWrite:	
   931                           ; 1 bytes @ 0x0
   932                           
   933  0070                     ?_I2CMasterRead:	
   934                           ; 1 bytes @ 0x0
   935                           
   936  0070                     ?_I2CMasterStop:	
   937                           ; 1 bytes @ 0x0
   938                           
   939  0070                     ?_UART_Write:	
   940                           ; 1 bytes @ 0x0
   941                           
   942  0070                     ?_tabla_numASCII:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  0070                     ?_Escribir_stringLCD:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  0070                     ?_Escribir_caracterLCD:	
   949                           ; 1 bytes @ 0x0
   950                           
   951  0070                     ?_initOsc:	
   952                           ; 1 bytes @ 0x0
   953                           
   954  0070                     ?_InitMPU6050:	
   955                           ; 1 bytes @ 0x0
   956                           
   957  0070                     ?_Iniciar_LCD:	
   958                           ; 1 bytes @ 0x0
   959                           
   960  0070                     ?_Limpiar_pantallaLCD:	
   961                           ; 1 bytes @ 0x0
   962                           
   963  0070                     ?_isr:	
   964                           ; 1 bytes @ 0x0
   965                           
   966  0070                     ??_isr:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  0070                     ?_main:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0070                     ?_I2CMasterCheck:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0070                     ?_prender_ELCD:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0070                     ?_Escribir_comandoLCD:	
   979                           ; 1 bytes @ 0x0
   980                           
   981                           
   982                           ; 1 bytes @ 0x0
   983  0070                     	ds	3
   984  0073                     ??_I2C_Master_Start:
   985  0073                     ??_I2CMasterWrite:	
   986                           ; 1 bytes @ 0x3
   987                           
   988  0073                     ??_I2CMasterRead:	
   989                           ; 1 bytes @ 0x3
   990                           
   991  0073                     ??_I2CMasterStop:	
   992                           ; 1 bytes @ 0x3
   993                           
   994  0073                     ??_UART_Write:	
   995                           ; 1 bytes @ 0x3
   996                           
   997  0073                     ??_tabla_numASCII:	
   998                           ; 1 bytes @ 0x3
   999                           
  1000  0073                     ??_initOsc:	
  1001                           ; 1 bytes @ 0x3
  1002                           
  1003  0073                     ?_Config_USART:	
  1004                           ; 1 bytes @ 0x3
  1005                           
  1006  0073                     ??_I2CMasterCheck:	
  1007                           ; 1 bytes @ 0x3
  1008                           
  1009  0073                     ??_prender_ELCD:	
  1010                           ; 1 bytes @ 0x3
  1011                           
  1012  0073                     ??___lldiv:	
  1013                           ; 1 bytes @ 0x3
  1014                           
  1015  0073                     ?___awdiv:	
  1016                           ; 1 bytes @ 0x3
  1017                           
  1018  0073                     ?___awmod:	
  1019                           ; 2 bytes @ 0x3
  1020                           
  1021  0073                     I2C_Master_Start@Modo_Inicio:	
  1022                           ; 2 bytes @ 0x3
  1023                           
  1024  0073                     I2CMasterWrite@Datos:	
  1025                           ; 1 bytes @ 0x3
  1026                           
  1027  0073                     initOsc@Valor:	
  1028                           ; 1 bytes @ 0x3
  1029                           
  1030  0073                     UART_Write@data:	
  1031                           ; 1 bytes @ 0x3
  1032                           
  1033  0073                     Config_USART@baud_rate:	
  1034                           ; 1 bytes @ 0x3
  1035                           
  1036  0073                     ___awdiv@divisor:	
  1037                           ; 2 bytes @ 0x3
  1038                           
  1039  0073                     ___awmod@divisor:	
  1040                           ; 2 bytes @ 0x3
  1041                           
  1042                           
  1043                           ; 2 bytes @ 0x3
  1044  0073                     	ds	1
  1045  0074                     ??_InitMSSP:
  1046  0074                     ??_InitMPU6050:	
  1047                           ; 1 bytes @ 0x4
  1048                           
  1049  0074                     ??_Escribir_comandoLCD:	
  1050                           ; 1 bytes @ 0x4
  1051                           
  1052  0074                     I2CMasterRead@ACK:	
  1053                           ; 1 bytes @ 0x4
  1054                           
  1055  0074                     Escribir_comandoLCD@Comando:	
  1056                           ; 1 bytes @ 0x4
  1057                           
  1058                           
  1059                           ; 1 bytes @ 0x4
  1060  0074                     	ds	1
  1061  0075                     ?_set_cursor:
  1062  0075                     ??_Escribir_stringLCD:	
  1063                           ; 1 bytes @ 0x5
  1064                           
  1065  0075                     ??_Escribir_caracterLCD:	
  1066                           ; 1 bytes @ 0x5
  1067                           
  1068  0075                     ??_Iniciar_LCD:	
  1069                           ; 1 bytes @ 0x5
  1070                           
  1071  0075                     ??_Limpiar_pantallaLCD:	
  1072                           ; 1 bytes @ 0x5
  1073                           
  1074  0075                     tabla_numASCII@a:	
  1075                           ; 1 bytes @ 0x5
  1076                           
  1077  0075                     I2CMasterRead@Datos:	
  1078                           ; 1 bytes @ 0x5
  1079                           
  1080  0075                     Escribir_caracterLCD@a:	
  1081                           ; 1 bytes @ 0x5
  1082                           
  1083  0075                     set_cursor@posicion:	
  1084                           ; 1 bytes @ 0x5
  1085                           
  1086  0075                     Config_USART@Freq:	
  1087                           ; 1 bytes @ 0x5
  1088                           
  1089  0075                     ___awdiv@dividend:	
  1090                           ; 2 bytes @ 0x5
  1091                           
  1092  0075                     ___awmod@dividend:	
  1093                           ; 2 bytes @ 0x5
  1094                           
  1095                           
  1096                           ; 2 bytes @ 0x5
  1097  0075                     	ds	1
  1098  0076                     ??_set_cursor:
  1099  0076                     Escribir_stringLCD@i:	
  1100                           ; 1 bytes @ 0x6
  1101                           
  1102                           
  1103                           ; 1 bytes @ 0x6
  1104  0076                     	ds	1
  1105  0077                     ??_Config_USART:
  1106  0077                     ??___awdiv:	
  1107                           ; 1 bytes @ 0x7
  1108                           
  1109  0077                     ??___awmod:	
  1110                           ; 1 bytes @ 0x7
  1111                           
  1112  0077                     Escribir_stringLCD@d:	
  1113                           ; 1 bytes @ 0x7
  1114                           
  1115                           
  1116                           ; 1 bytes @ 0x7
  1117  0077                     	ds	1
  1118                           
  1119                           	psect	cstackBANK0
  1120  0039                     __pcstackBANK0:
  1121  0039                     ?___lldiv:
  1122  0039                     set_cursor@linea:	
  1123                           ; 4 bytes @ 0x0
  1124                           
  1125  0039                     ___awdiv@counter:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128  0039                     ___awmod@counter:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131  0039                     ___lldiv@divisor:	
  1132                           ; 1 bytes @ 0x0
  1133                           
  1134                           
  1135                           ; 4 bytes @ 0x0
  1136  0039                     	ds	1
  1137  003A                     ___awdiv@sign:
  1138  003A                     ___awmod@sign:	
  1139                           ; 1 bytes @ 0x1
  1140                           
  1141                           
  1142                           ; 1 bytes @ 0x1
  1143  003A                     	ds	1
  1144  003B                     ___awdiv@quotient:
  1145                           
  1146                           ; 2 bytes @ 0x2
  1147  003B                     	ds	2
  1148  003D                     ?_divisor_dec:
  1149  003D                     divisor_dec@b:	
  1150                           ; 1 bytes @ 0x4
  1151                           
  1152  003D                     ___lldiv@dividend:	
  1153                           ; 2 bytes @ 0x4
  1154                           
  1155                           
  1156                           ; 4 bytes @ 0x4
  1157  003D                     	ds	2
  1158  003F                     divisor_dec@dig1:
  1159                           
  1160                           ; 1 bytes @ 0x6
  1161  003F                     	ds	1
  1162  0040                     ??_divisor_dec:
  1163                           
  1164                           ; 1 bytes @ 0x7
  1165  0040                     	ds	1
  1166  0041                     ___lldiv@quotient:
  1167                           
  1168                           ; 4 bytes @ 0x8
  1169  0041                     	ds	1
  1170  0042                     divisor_dec@n:
  1171                           
  1172                           ; 2 bytes @ 0x9
  1173  0042                     	ds	3
  1174  0045                     ___lldiv@counter:
  1175                           
  1176                           ; 1 bytes @ 0xC
  1177  0045                     	ds	1
  1178  0046                     ?_InitMSSP:
  1179  0046                     InitMSSP@Dato:	
  1180                           ; 1 bytes @ 0xD
  1181                           
  1182                           
  1183                           ; 4 bytes @ 0xD
  1184  0046                     	ds	4
  1185  004A                     InitMSSP@Modo:
  1186                           
  1187                           ; 1 bytes @ 0x11
  1188  004A                     	ds	1
  1189  004B                     ??_setup:
  1190                           
  1191                           ; 1 bytes @ 0x12
  1192  004B                     	ds	3
  1193  004E                     ??_main:
  1194                           
  1195                           ; 1 bytes @ 0x15
  1196  004E                     	ds	3
  1197                           
  1198                           	psect	maintext
  1199  002B                     __pmaintext:	
  1200 ;;
  1201 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1202 ;;
  1203 ;; *************** function _main *****************
  1204 ;; Defined at:
  1205 ;;		line 110 in file "Maestro I2C.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;		None
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;		None
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  1    wreg      void 
  1212 ;; Registers used:
  1213 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1214 ;; Tracked objects:
  1215 ;;		On entry : B00/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1219 ;;      Params:         0       0       0       0       0
  1220 ;;      Locals:         0       0       0       0       0
  1221 ;;      Temps:          0       3       0       0       0
  1222 ;;      Totals:         0       3       0       0       0
  1223 ;;Total ram usage:        3 bytes
  1224 ;; Hardware stack levels required when called: 5
  1225 ;; This function calls:
  1226 ;;		_Escribir_caracterLCD
  1227 ;;		_Escribir_stringLCD
  1228 ;;		_I2CMasterRead
  1229 ;;		_I2CMasterStop
  1230 ;;		_I2CMasterWrite
  1231 ;;		_I2C_Master_Start
  1232 ;;		_UART_Write
  1233 ;;		_divisor_dec
  1234 ;;		_set_cursor
  1235 ;;		_setup
  1236 ;;		_tabla_numASCII
  1237 ;; This function is called by:
  1238 ;;		Startup code after reset
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242                           
  1243                           ;psect for function _main
  1244  002B                     _main:
  1245  002B                     l2579:	
  1246                           ;incstack = 0
  1247                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1248                           
  1249                           
  1250                           ;Maestro I2C.c: 111:     setup();
  1251  002B  120A  118A  23B7  120A  118A  	fcall	_setup
  1252  0030                     l2581:
  1253                           
  1254                           ;Maestro I2C.c: 117:         I2C_Master_Start(Standard);
  1255  0030  3001               	movlw	1
  1256  0031  120A  118A  2797  120A  118A  	fcall	_I2C_Master_Start
  1257  0036                     l2583:
  1258                           
  1259                           ;Maestro I2C.c: 118:         I2CMasterWrite(0b11010010 +0);
  1260  0036  30D2               	movlw	210
  1261  0037  120A  118A  27E9  120A  118A  	fcall	_I2CMasterWrite
  1262  003C                     l2585:
  1263                           
  1264                           ;Maestro I2C.c: 119:         I2CMasterWrite(0x3B);
  1265  003C  303B               	movlw	59
  1266  003D  120A  118A  27E9  120A  118A  	fcall	_I2CMasterWrite
  1267  0042                     l2587:
  1268                           
  1269                           ;Maestro I2C.c: 121:         I2C_Master_Start(Repeated);
  1270  0042  3000               	movlw	0
  1271  0043  120A  118A  2797  120A  118A  	fcall	_I2C_Master_Start
  1272  0048                     l2589:
  1273                           
  1274                           ;Maestro I2C.c: 122:         I2CMasterWrite(0b11010010 +1);
  1275  0048  30D3               	movlw	211
  1276  0049  120A  118A  27E9  120A  118A  	fcall	_I2CMasterWrite
  1277  004E                     l2591:
  1278                           
  1279                           ;Maestro I2C.c: 134:         Ax1 = I2CMasterRead(ACK); Ax2 = I2CMasterRead(ACK);
  1280  004E  3000               	movlw	0
  1281  004F  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1282  0054  1283               	bcf	3,5	;RP0=0, select bank0
  1283  0055  1303               	bcf	3,6	;RP1=0, select bank0
  1284  0056  00CE               	movwf	??_main
  1285  0057  084E               	movf	??_main,w
  1286  0058  00B8               	movwf	_Ax1
  1287  0059                     l2593:
  1288  0059  3000               	movlw	0
  1289  005A  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1290  005F  1283               	bcf	3,5	;RP0=0, select bank0
  1291  0060  1303               	bcf	3,6	;RP1=0, select bank0
  1292  0061  00CE               	movwf	??_main
  1293  0062  084E               	movf	??_main,w
  1294  0063  00B7               	movwf	_Ax2
  1295  0064                     l2595:
  1296                           
  1297                           ;Maestro I2C.c: 135:         Ay1 = I2CMasterRead(ACK); Ay2 = I2CMasterRead(ACK);
  1298  0064  3000               	movlw	0
  1299  0065  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1300  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1301  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1302  006C  00CE               	movwf	??_main
  1303  006D  084E               	movf	??_main,w
  1304  006E  00B6               	movwf	_Ay1
  1305  006F                     l2597:
  1306  006F  3000               	movlw	0
  1307  0070  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1308  0075  1283               	bcf	3,5	;RP0=0, select bank0
  1309  0076  1303               	bcf	3,6	;RP1=0, select bank0
  1310  0077  00CE               	movwf	??_main
  1311  0078  084E               	movf	??_main,w
  1312  0079  00B5               	movwf	_Ay2
  1313  007A                     l2599:
  1314                           
  1315                           ;Maestro I2C.c: 136:         Az1 = I2CMasterRead(ACK); Az2 = I2CMasterRead(ACK);
  1316  007A  3000               	movlw	0
  1317  007B  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1318  0080  1283               	bcf	3,5	;RP0=0, select bank0
  1319  0081  1303               	bcf	3,6	;RP1=0, select bank0
  1320  0082  00CE               	movwf	??_main
  1321  0083  084E               	movf	??_main,w
  1322  0084  00B4               	movwf	_Az1
  1323  0085                     l2601:
  1324  0085  3000               	movlw	0
  1325  0086  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1326  008B  1283               	bcf	3,5	;RP0=0, select bank0
  1327  008C  1303               	bcf	3,6	;RP1=0, select bank0
  1328  008D  00CE               	movwf	??_main
  1329  008E  084E               	movf	??_main,w
  1330  008F  00B3               	movwf	_Az2
  1331  0090                     l2603:
  1332                           
  1333                           ;Maestro I2C.c: 137:         T1 = I2CMasterRead(ACK); T2 = I2CMasterRead(ACK);
  1334  0090  3000               	movlw	0
  1335  0091  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1336  0096  1283               	bcf	3,5	;RP0=0, select bank0
  1337  0097  1303               	bcf	3,6	;RP1=0, select bank0
  1338  0098  00CE               	movwf	??_main
  1339  0099  084E               	movf	??_main,w
  1340  009A  00B2               	movwf	_T1
  1341  009B                     l2605:
  1342  009B  3000               	movlw	0
  1343  009C  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1344  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1345  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1346  00A3  00CE               	movwf	??_main
  1347  00A4  084E               	movf	??_main,w
  1348  00A5  00B1               	movwf	_T2
  1349  00A6                     l2607:
  1350                           
  1351                           ;Maestro I2C.c: 138:         Gx1 = I2CMasterRead(ACK); Gx2 = I2CMasterRead(ACK);
  1352  00A6  3000               	movlw	0
  1353  00A7  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1354  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  1355  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  1356  00AE  00CE               	movwf	??_main
  1357  00AF  084E               	movf	??_main,w
  1358  00B0  00F8               	movwf	_Gx1
  1359  00B1                     l2609:
  1360  00B1  3000               	movlw	0
  1361  00B2  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1362  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1363  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1364  00B9  00CE               	movwf	??_main
  1365  00BA  084E               	movf	??_main,w
  1366  00BB  00B0               	movwf	_Gx2
  1367  00BC                     l2611:
  1368                           
  1369                           ;Maestro I2C.c: 139:         Gy1 = I2CMasterRead(ACK); Gy2 = I2CMasterRead(ACK);
  1370  00BC  3000               	movlw	0
  1371  00BD  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1372  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1373  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1374  00C4  00CE               	movwf	??_main
  1375  00C5  084E               	movf	??_main,w
  1376  00C6  00AF               	movwf	_Gy1
  1377  00C7                     l2613:
  1378  00C7  3000               	movlw	0
  1379  00C8  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1380  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1381  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1382  00CF  00CE               	movwf	??_main
  1383  00D0  084E               	movf	??_main,w
  1384  00D1  00AE               	movwf	_Gy2
  1385  00D2                     l2615:
  1386                           
  1387                           ;Maestro I2C.c: 140:         Gz1 = I2CMasterRead(ACK); Gz2 = I2CMasterRead(NACK);
  1388  00D2  3000               	movlw	0
  1389  00D3  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1390  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1391  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1392  00DA  00CE               	movwf	??_main
  1393  00DB  084E               	movf	??_main,w
  1394  00DC  00AD               	movwf	_Gz1
  1395  00DD                     l2617:
  1396  00DD  3001               	movlw	1
  1397  00DE  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1398  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1399  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1400  00E5  00CE               	movwf	??_main
  1401  00E6  084E               	movf	??_main,w
  1402  00E7  00AC               	movwf	_Gz2
  1403  00E8                     l2619:
  1404                           
  1405                           ;Maestro I2C.c: 142:         I2CMasterStop();
  1406  00E8  120A  158A  27F7  120A  118A  	fcall	_I2CMasterStop
  1407  00ED                     l2621:
  1408                           
  1409                           ;Maestro I2C.c: 148:         UART_Write(Gx1);
  1410  00ED  0878               	movf	_Gx1,w
  1411  00EE  120A  118A  27F4  120A  118A  	fcall	_UART_Write
  1412  00F3                     l2623:
  1413                           
  1414                           ;Maestro I2C.c: 149:         _delay((unsigned long)((20)*(8000000/4000.0)));
  1415  00F3  3034               	movlw	52
  1416  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1417  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1418  00F6  00CF               	movwf	??_main+1
  1419  00F7  30F1               	movlw	241
  1420  00F8  00CE               	movwf	??_main
  1421  00F9                     u1877:
  1422  00F9  0BCE               	decfsz	??_main,f
  1423  00FA  28F9               	goto	u1877
  1424  00FB  0BCF               	decfsz	??_main+1,f
  1425  00FC  28F9               	goto	u1877
  1426  00FD                     l2625:
  1427                           
  1428                           ;Maestro I2C.c: 155:         I2C_Master_Start(Standard);
  1429  00FD  3001               	movlw	1
  1430  00FE  120A  118A  2797  120A  118A  	fcall	_I2C_Master_Start
  1431  0103                     l2627:
  1432                           
  1433                           ;Maestro I2C.c: 156:         I2CMasterWrite(0x50);
  1434  0103  3050               	movlw	80
  1435  0104  120A  118A  27E9  120A  118A  	fcall	_I2CMasterWrite
  1436  0109                     l2629:
  1437                           
  1438                           ;Maestro I2C.c: 157:         I2CMasterWrite(2);
  1439  0109  3002               	movlw	2
  1440  010A  120A  118A  27E9  120A  118A  	fcall	_I2CMasterWrite
  1441  010F                     l2631:
  1442                           
  1443                           ;Maestro I2C.c: 159:         I2CMasterStop();
  1444  010F  120A  158A  27F7  120A  118A  	fcall	_I2CMasterStop
  1445  0114                     l2633:
  1446                           
  1447                           ;Maestro I2C.c: 166:         divisor_dec(Gx1,Giro_digx);
  1448  0114  0878               	movf	_Gx1,w
  1449  0115  1283               	bcf	3,5	;RP0=0, select bank0
  1450  0116  1303               	bcf	3,6	;RP1=0, select bank0
  1451  0117  00CE               	movwf	??_main
  1452  0118  01CF               	clrf	??_main+1
  1453  0119  084E               	movf	??_main,w
  1454  011A  00BD               	movwf	divisor_dec@b
  1455  011B  084F               	movf	??_main+1,w
  1456  011C  00BE               	movwf	divisor_dec@b+1
  1457  011D  307A               	movlw	(low (_Giro_digx| 0))& (0+255)
  1458  011E  00D0               	movwf	??_main+2
  1459  011F  0850               	movf	??_main+2,w
  1460  0120  00BF               	movwf	divisor_dec@dig1
  1461  0121  120A  118A  25BB  120A  118A  	fcall	_divisor_dec
  1462  0126                     l2635:
  1463                           
  1464                           ;Maestro I2C.c: 169:         uni_x = tabla_numASCII(Giro_digx[0]);
  1465  0126  087A               	movf	_Giro_digx,w
  1466  0127  120A  118A  268E  120A  118A  	fcall	_tabla_numASCII
  1467  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1468  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1469  012E  00CE               	movwf	??_main
  1470  012F  084E               	movf	??_main,w
  1471  0130  00AB               	movwf	_uni_x
  1472  0131                     l2637:
  1473                           
  1474                           ;Maestro I2C.c: 170:         dec_x = tabla_numASCII(Giro_digx[1]);
  1475  0131  087B               	movf	_Giro_digx+1,w
  1476  0132  120A  118A  268E  120A  118A  	fcall	_tabla_numASCII
  1477  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1478  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1479  0139  00CE               	movwf	??_main
  1480  013A  084E               	movf	??_main,w
  1481  013B  00AA               	movwf	_dec_x
  1482  013C                     l2639:
  1483                           
  1484                           ;Maestro I2C.c: 171:         cen_x = tabla_numASCII(Giro_digx[2]);
  1485  013C  087C               	movf	_Giro_digx+2,w
  1486  013D  120A  118A  268E  120A  118A  	fcall	_tabla_numASCII
  1487  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1488  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1489  0144  00CE               	movwf	??_main
  1490  0145  084E               	movf	??_main,w
  1491  0146  00A9               	movwf	_cen_x
  1492  0147                     l2641:
  1493                           
  1494                           ;Maestro I2C.c: 174:         set_cursor(1,0);
  1495  0147  01F5               	clrf	set_cursor@posicion
  1496  0148  3001               	movlw	1
  1497  0149  120A  118A  2608  120A  118A  	fcall	_set_cursor
  1498  014E                     l2643:
  1499                           
  1500                           ;Maestro I2C.c: 175:         Escribir_stringLCD("X:    Y:     S:");
  1501  014E  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1502  014F  120A  118A  2757  120A  118A  	fcall	_Escribir_stringLCD
  1503  0154                     l2645:
  1504                           
  1505                           ;Maestro I2C.c: 177:         set_cursor(2,0);
  1506  0154  01F5               	clrf	set_cursor@posicion
  1507  0155  3002               	movlw	2
  1508  0156  120A  118A  2608  120A  118A  	fcall	_set_cursor
  1509  015B                     l2647:
  1510                           
  1511                           ;Maestro I2C.c: 178:         Escribir_caracterLCD(cen_x);
  1512  015B  1283               	bcf	3,5	;RP0=0, select bank0
  1513  015C  1303               	bcf	3,6	;RP1=0, select bank0
  1514  015D  0829               	movf	_cen_x,w
  1515  015E  120A  118A  27DD  120A  118A  	fcall	_Escribir_caracterLCD
  1516  0163                     l2649:
  1517                           
  1518                           ;Maestro I2C.c: 179:         Escribir_caracterLCD(dec_x);
  1519  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1520  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1521  0165  082A               	movf	_dec_x,w
  1522  0166  120A  118A  27DD  120A  118A  	fcall	_Escribir_caracterLCD
  1523  016B                     l2651:
  1524                           
  1525                           ;Maestro I2C.c: 180:         Escribir_caracterLCD(uni_x);
  1526  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1527  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1528  016D  082B               	movf	_uni_x,w
  1529  016E  120A  118A  27DD  120A  118A  	fcall	_Escribir_caracterLCD
  1530  0173                     l2653:
  1531                           
  1532                           ;Maestro I2C.c: 183:         divisor_dec(Gy1,Giro_digy);
  1533  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1534  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1535  0175  082F               	movf	_Gy1,w
  1536  0176  00CE               	movwf	??_main
  1537  0177  01CF               	clrf	??_main+1
  1538  0178  084E               	movf	??_main,w
  1539  0179  00BD               	movwf	divisor_dec@b
  1540  017A  084F               	movf	??_main+1,w
  1541  017B  00BE               	movwf	divisor_dec@b+1
  1542  017C  3079               	movlw	(low (_Giro_digy| 0))& (0+255)
  1543  017D  00D0               	movwf	??_main+2
  1544  017E  0850               	movf	??_main+2,w
  1545  017F  00BF               	movwf	divisor_dec@dig1
  1546  0180  120A  118A  25BB  120A  118A  	fcall	_divisor_dec
  1547  0185                     l2655:
  1548                           
  1549                           ;Maestro I2C.c: 186:         uni_y = tabla_numASCII(Giro_digy[0]);
  1550  0185  0879               	movf	_Giro_digy,w
  1551  0186  120A  118A  268E  120A  118A  	fcall	_tabla_numASCII
  1552  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1553  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1554  018D  00CE               	movwf	??_main
  1555  018E  084E               	movf	??_main,w
  1556  018F  00A8               	movwf	_uni_y
  1557  0190                     l2657:
  1558                           
  1559                           ;Maestro I2C.c: 187:         dec_y = tabla_numASCII(Giro_digy[1]);
  1560  0190  087A               	movf	_Giro_digy+1,w
  1561  0191  120A  118A  268E  120A  118A  	fcall	_tabla_numASCII
  1562  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1563  0197  1303               	bcf	3,6	;RP1=0, select bank0
  1564  0198  00CE               	movwf	??_main
  1565  0199  084E               	movf	??_main,w
  1566  019A  00A7               	movwf	_dec_y
  1567  019B                     l2659:
  1568                           
  1569                           ;Maestro I2C.c: 188:         cen_y = tabla_numASCII(Giro_digy[2]);
  1570  019B  087B               	movf	_Giro_digy+2,w
  1571  019C  120A  118A  268E  120A  118A  	fcall	_tabla_numASCII
  1572  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1573  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1574  01A3  00CE               	movwf	??_main
  1575  01A4  084E               	movf	??_main,w
  1576  01A5  00A6               	movwf	_cen_y
  1577  01A6                     l2661:
  1578                           
  1579                           ;Maestro I2C.c: 190:         set_cursor(2,6);
  1580  01A6  3006               	movlw	6
  1581  01A7  00CE               	movwf	??_main
  1582  01A8  084E               	movf	??_main,w
  1583  01A9  00F5               	movwf	set_cursor@posicion
  1584  01AA  3002               	movlw	2
  1585  01AB  120A  118A  2608  120A  118A  	fcall	_set_cursor
  1586  01B0                     l2663:
  1587                           
  1588                           ;Maestro I2C.c: 191:         Escribir_caracterLCD(cen_y);
  1589  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1590  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1591  01B2  0826               	movf	_cen_y,w
  1592  01B3  120A  118A  27DD  120A  118A  	fcall	_Escribir_caracterLCD
  1593  01B8                     l2665:
  1594                           
  1595                           ;Maestro I2C.c: 192:         Escribir_caracterLCD(dec_y);
  1596  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  1597  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  1598  01BA  0827               	movf	_dec_y,w
  1599  01BB  120A  118A  27DD  120A  118A  	fcall	_Escribir_caracterLCD
  1600  01C0                     l2667:
  1601                           
  1602                           ;Maestro I2C.c: 193:         Escribir_caracterLCD(uni_y);
  1603  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  1604  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  1605  01C2  0828               	movf	_uni_y,w
  1606  01C3  120A  118A  27DD  120A  118A  	fcall	_Escribir_caracterLCD
  1607  01C8  2830               	goto	l2581
  1608  01C9  120A  118A  280C   	ljmp	start
  1609  01CC                     __end_of_main:
  1610                           
  1611                           	psect	text1
  1612  068E                     __ptext1:	
  1613 ;; *************** function _tabla_numASCII *****************
  1614 ;; Defined at:
  1615 ;;		line 255 in file "Maestro I2C.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;  a               1    wreg     unsigned char 
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;  a               1    5[COMMON] unsigned char 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      unsigned char 
  1622 ;; Registers used:
  1623 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1629 ;;      Params:         0       0       0       0       0
  1630 ;;      Locals:         1       0       0       0       0
  1631 ;;      Temps:          2       0       0       0       0
  1632 ;;      Totals:         3       0       0       0       0
  1633 ;;Total ram usage:        3 bytes
  1634 ;; Hardware stack levels used: 1
  1635 ;; Hardware stack levels required when called: 1
  1636 ;; This function calls:
  1637 ;;		Nothing
  1638 ;; This function is called by:
  1639 ;;		_main
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           
  1644                           ;psect for function _tabla_numASCII
  1645  068E                     _tabla_numASCII:
  1646                           
  1647                           ;incstack = 0
  1648                           ; Regs used in _tabla_numASCII: [wreg-fsr0h+status,2+status,0]
  1649                           ;tabla_numASCII@a stored from wreg
  1650  068E  00F5               	movwf	tabla_numASCII@a
  1651  068F                     l2133:
  1652                           
  1653                           ;Maestro I2C.c: 256:     switch(a){
  1654  068F  2EA4               	goto	l2197
  1655  0690                     l2135:
  1656                           
  1657                           ;Maestro I2C.c: 258:             return 48;
  1658  0690  3030               	movlw	48
  1659  0691  2ECC               	goto	l141
  1660  0692                     l2141:
  1661                           
  1662                           ;Maestro I2C.c: 261:             return 49;
  1663  0692  3031               	movlw	49
  1664  0693  2ECC               	goto	l141
  1665  0694                     l2147:
  1666                           
  1667                           ;Maestro I2C.c: 264:             return 50;
  1668  0694  3032               	movlw	50
  1669  0695  2ECC               	goto	l141
  1670  0696                     l2153:
  1671                           
  1672                           ;Maestro I2C.c: 267:             return 51;
  1673  0696  3033               	movlw	51
  1674  0697  2ECC               	goto	l141
  1675  0698                     l2159:
  1676                           
  1677                           ;Maestro I2C.c: 270:             return 52;
  1678  0698  3034               	movlw	52
  1679  0699  2ECC               	goto	l141
  1680  069A                     l2165:
  1681                           
  1682                           ;Maestro I2C.c: 273:             return 53;
  1683  069A  3035               	movlw	53
  1684  069B  2ECC               	goto	l141
  1685  069C                     l2171:
  1686                           
  1687                           ;Maestro I2C.c: 276:             return 54;
  1688  069C  3036               	movlw	54
  1689  069D  2ECC               	goto	l141
  1690  069E                     l2177:
  1691                           
  1692                           ;Maestro I2C.c: 279:             return 55;
  1693  069E  3037               	movlw	55
  1694  069F  2ECC               	goto	l141
  1695  06A0                     l2183:
  1696                           
  1697                           ;Maestro I2C.c: 282:             return 56;
  1698  06A0  3038               	movlw	56
  1699  06A1  2ECC               	goto	l141
  1700  06A2                     l2189:
  1701                           
  1702                           ;Maestro I2C.c: 285:             return 57;
  1703  06A2  3039               	movlw	57
  1704  06A3  2ECC               	goto	l141
  1705  06A4                     l2197:
  1706  06A4  0875               	movf	tabla_numASCII@a,w
  1707  06A5  00F3               	movwf	??_tabla_numASCII
  1708  06A6  01F4               	clrf	??_tabla_numASCII+1
  1709                           
  1710                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1711                           ; Switch size 1, requested type "simple"
  1712                           ; Number of cases is 1, Range of values is 0 to 0
  1713                           ; switch strategies available:
  1714                           ; Name         Instructions Cycles
  1715                           ; simple_byte            4     3 (average)
  1716                           ; direct_byte           11     8 (fixed)
  1717                           ; jumptable            260     6 (fixed)
  1718                           ;	Chosen strategy is simple_byte
  1719  06A7  0874               	movf	??_tabla_numASCII+1,w
  1720  06A8  3A00               	xorlw	0	; case 0
  1721  06A9  1903               	skipnz
  1722  06AA  2EAC               	goto	l2701
  1723  06AB  2ECC               	goto	l141
  1724  06AC                     l2701:
  1725                           
  1726                           ; Switch size 1, requested type "simple"
  1727                           ; Number of cases is 10, Range of values is 0 to 9
  1728                           ; switch strategies available:
  1729                           ; Name         Instructions Cycles
  1730                           ; simple_byte           31    16 (average)
  1731                           ; direct_byte           38     8 (fixed)
  1732                           ; jumptable            260     6 (fixed)
  1733                           ;	Chosen strategy is simple_byte
  1734  06AC  0873               	movf	??_tabla_numASCII,w
  1735  06AD  3A00               	xorlw	0	; case 0
  1736  06AE  1903               	skipnz
  1737  06AF  2E90               	goto	l2135
  1738  06B0  3A01               	xorlw	1	; case 1
  1739  06B1  1903               	skipnz
  1740  06B2  2E92               	goto	l2141
  1741  06B3  3A03               	xorlw	3	; case 2
  1742  06B4  1903               	skipnz
  1743  06B5  2E94               	goto	l2147
  1744  06B6  3A01               	xorlw	1	; case 3
  1745  06B7  1903               	skipnz
  1746  06B8  2E96               	goto	l2153
  1747  06B9  3A07               	xorlw	7	; case 4
  1748  06BA  1903               	skipnz
  1749  06BB  2E98               	goto	l2159
  1750  06BC  3A01               	xorlw	1	; case 5
  1751  06BD  1903               	skipnz
  1752  06BE  2E9A               	goto	l2165
  1753  06BF  3A03               	xorlw	3	; case 6
  1754  06C0  1903               	skipnz
  1755  06C1  2E9C               	goto	l2171
  1756  06C2  3A01               	xorlw	1	; case 7
  1757  06C3  1903               	skipnz
  1758  06C4  2E9E               	goto	l2177
  1759  06C5  3A0F               	xorlw	15	; case 8
  1760  06C6  1903               	skipnz
  1761  06C7  2EA0               	goto	l2183
  1762  06C8  3A01               	xorlw	1	; case 9
  1763  06C9  1903               	skipnz
  1764  06CA  2EA2               	goto	l2189
  1765  06CB  2ECC               	goto	l141
  1766  06CC                     l141:
  1767  06CC  0008               	return
  1768  06CD                     __end_of_tabla_numASCII:
  1769                           
  1770                           	psect	text2
  1771  03B7                     __ptext2:	
  1772 ;; *************** function _setup *****************
  1773 ;; Defined at:
  1774 ;;		line 207 in file "Maestro I2C.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;		None
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;		None
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      void 
  1781 ;; Registers used:
  1782 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1788 ;;      Params:         0       0       0       0       0
  1789 ;;      Locals:         0       0       0       0       0
  1790 ;;      Temps:          0       3       0       0       0
  1791 ;;      Totals:         0       3       0       0       0
  1792 ;;Total ram usage:        3 bytes
  1793 ;; Hardware stack levels used: 1
  1794 ;; Hardware stack levels required when called: 4
  1795 ;; This function calls:
  1796 ;;		_Config_USART
  1797 ;;		_Escribir_stringLCD
  1798 ;;		_Iniciar_LCD
  1799 ;;		_InitMPU6050
  1800 ;;		_InitMSSP
  1801 ;;		_Limpiar_pantallaLCD
  1802 ;;		_initOsc
  1803 ;;		_set_cursor
  1804 ;; This function is called by:
  1805 ;;		_main
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           
  1810                           ;psect for function _setup
  1811  03B7                     _setup:
  1812  03B7                     l2537:	
  1813                           ;incstack = 0
  1814                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1815                           
  1816                           
  1817                           ;Maestro I2C.c: 210:     ANSEL = 0;
  1818  03B7  1683               	bsf	3,5	;RP0=1, select bank3
  1819  03B8  1703               	bsf	3,6	;RP1=1, select bank3
  1820  03B9  0188               	clrf	8	;volatile
  1821                           
  1822                           ;Maestro I2C.c: 211:     ANSELH = 0;
  1823  03BA  0189               	clrf	9	;volatile
  1824                           
  1825                           ;Maestro I2C.c: 213:     TRISA = 0;
  1826  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  1827  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  1828  03BD  0185               	clrf	5	;volatile
  1829                           
  1830                           ;Maestro I2C.c: 214:     TRISB = 0;
  1831  03BE  0186               	clrf	6	;volatile
  1832                           
  1833                           ;Maestro I2C.c: 215:     TRISD = 0;
  1834  03BF  0188               	clrf	8	;volatile
  1835                           
  1836                           ;Maestro I2C.c: 217:     PORTA = 0;
  1837  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  1838  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  1839  03C2  0185               	clrf	5	;volatile
  1840                           
  1841                           ;Maestro I2C.c: 218:     PORTB = 0;
  1842  03C3  0186               	clrf	6	;volatile
  1843                           
  1844                           ;Maestro I2C.c: 219:     PORTD = 0;
  1845  03C4  0188               	clrf	8	;volatile
  1846  03C5                     l2539:
  1847                           
  1848                           ;Maestro I2C.c: 222:     initOsc(4);
  1849  03C5  3004               	movlw	4
  1850  03C6  120A  118A  26FF  120A  118A  	fcall	_initOsc
  1851  03CB                     l2541:
  1852                           
  1853                           ;Maestro I2C.c: 226:     InitMSSP(I2C_MASTER_FOSC, 100000);
  1854  03CB  3000               	movlw	0
  1855  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  1856  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  1857  03CE  00C9               	movwf	InitMSSP@Dato+3
  1858  03CF  3001               	movlw	1
  1859  03D0  00C8               	movwf	InitMSSP@Dato+2
  1860  03D1  3086               	movlw	134
  1861  03D2  00C7               	movwf	InitMSSP@Dato+1
  1862  03D3  30A0               	movlw	160
  1863  03D4  00C6               	movwf	InitMSSP@Dato
  1864  03D5  3008               	movlw	8
  1865  03D6  120A  118A  21CC  120A  118A  	fcall	_InitMSSP
  1866  03DB                     l2543:
  1867                           
  1868                           ;Maestro I2C.c: 231:     InitMPU6050();
  1869  03DB  120A  118A  232D  120A  118A  	fcall	_InitMPU6050
  1870  03E0                     l2545:
  1871                           
  1872                           ;Maestro I2C.c: 234:     Iniciar_LCD();
  1873  03E0  120A  118A  24FB  120A  118A  	fcall	_Iniciar_LCD
  1874  03E5                     l2547:
  1875                           
  1876                           ;Maestro I2C.c: 235:     Limpiar_pantallaLCD();
  1877  03E5  120A  118A  277D  120A  118A  	fcall	_Limpiar_pantallaLCD
  1878  03EA                     l2549:
  1879                           
  1880                           ;Maestro I2C.c: 236:     set_cursor(1,0);
  1881  03EA  01F5               	clrf	set_cursor@posicion
  1882  03EB  3001               	movlw	1
  1883  03EC  120A  118A  2608  120A  118A  	fcall	_set_cursor
  1884  03F1                     l2551:
  1885                           
  1886                           ;Maestro I2C.c: 237:     Escribir_stringLCD("Miniproyecto 2");
  1887  03F1  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1888  03F2  120A  118A  2757  120A  118A  	fcall	_Escribir_stringLCD
  1889  03F7                     l2553:
  1890                           
  1891                           ;Maestro I2C.c: 238:     set_cursor(2,2);
  1892  03F7  3002               	movlw	2
  1893  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  1894  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  1895  03FA  00CB               	movwf	??_setup
  1896  03FB  084B               	movf	??_setup,w
  1897  03FC  00F5               	movwf	set_cursor@posicion
  1898  03FD  3002               	movlw	2
  1899  03FE  120A  118A  2608  120A  118A  	fcall	_set_cursor
  1900  0403                     l2555:
  1901                           
  1902                           ;Maestro I2C.c: 239:     Escribir_stringLCD("Jose Santizo");
  1903  0403  3020               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1904  0404  120A  118A  2757  120A  118A  	fcall	_Escribir_stringLCD
  1905  0409                     l2557:
  1906                           
  1907                           ;Maestro I2C.c: 240:     _delay((unsigned long)((5000)*(8000000/4000.0)));
  1908  0409  3033               	movlw	51
  1909  040A  1283               	bcf	3,5	;RP0=0, select bank0
  1910  040B  1303               	bcf	3,6	;RP1=0, select bank0
  1911  040C  00CD               	movwf	??_setup+2
  1912  040D  30BB               	movlw	187
  1913  040E  00CC               	movwf	??_setup+1
  1914  040F  30DF               	movlw	223
  1915  0410  00CB               	movwf	??_setup
  1916  0411                     u1887:
  1917  0411  0BCB               	decfsz	??_setup,f
  1918  0412  2C11               	goto	u1887
  1919  0413  0BCC               	decfsz	??_setup+1,f
  1920  0414  2C11               	goto	u1887
  1921  0415  0BCD               	decfsz	??_setup+2,f
  1922  0416  2C11               	goto	u1887
  1923  0417                     l2559:
  1924                           
  1925                           ;Maestro I2C.c: 241:     Limpiar_pantallaLCD();
  1926  0417  120A  118A  277D  120A  118A  	fcall	_Limpiar_pantallaLCD
  1927  041C                     l2561:
  1928                           
  1929                           ;Maestro I2C.c: 244:     Config_USART(9600,4);
  1930  041C  3080               	movlw	128
  1931  041D  00F3               	movwf	Config_USART@baud_rate
  1932  041E  3025               	movlw	37
  1933  041F  00F4               	movwf	Config_USART@baud_rate+1
  1934  0420  3004               	movlw	4
  1935  0421  00F5               	movwf	Config_USART@Freq
  1936  0422  3000               	movlw	0
  1937  0423  00F6               	movwf	Config_USART@Freq+1
  1938  0424  120A  118A  227D  120A  118A  	fcall	_Config_USART
  1939  0429                     l131:
  1940  0429  0008               	return
  1941  042A                     __end_of_setup:
  1942                           
  1943                           	psect	text3
  1944  0608                     __ptext3:	
  1945 ;; *************** function _set_cursor *****************
  1946 ;; Defined at:
  1947 ;;		line 77 in file "LCD.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;  linea           1    wreg     unsigned char 
  1950 ;;  posicion        1    5[COMMON] unsigned char 
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;  linea           1    0[BANK0 ] unsigned char 
  1953 ;; Return value:  Size  Location     Type
  1954 ;;                  1    wreg      void 
  1955 ;; Registers used:
  1956 ;;		wreg, status,2, status,0, pclath, cstack
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1962 ;;      Params:         1       0       0       0       0
  1963 ;;      Locals:         0       1       0       0       0
  1964 ;;      Temps:          2       0       0       0       0
  1965 ;;      Totals:         3       1       0       0       0
  1966 ;;Total ram usage:        4 bytes
  1967 ;; Hardware stack levels used: 1
  1968 ;; Hardware stack levels required when called: 3
  1969 ;; This function calls:
  1970 ;;		_Escribir_comandoLCD
  1971 ;; This function is called by:
  1972 ;;		_main
  1973 ;;		_setup
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           
  1978                           ;psect for function _set_cursor
  1979  0608                     _set_cursor:
  1980                           
  1981                           ;incstack = 0
  1982                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1983                           ;set_cursor@linea stored from wreg
  1984  0608  1283               	bcf	3,5	;RP0=0, select bank0
  1985  0609  1303               	bcf	3,6	;RP1=0, select bank0
  1986  060A  00B9               	movwf	set_cursor@linea
  1987  060B                     l2383:
  1988                           
  1989                           ;LCD.c: 78:     PORTDbits.RD3 = 0; PORTDbits.RD4 = 0;
  1990  060B  1188               	bcf	8,3	;volatile
  1991  060C  1208               	bcf	8,4	;volatile
  1992  060D                     l2385:
  1993                           
  1994                           ;LCD.c: 81:     if (linea == 1){ Escribir_comandoLCD(0b10000000);}
  1995  060D  0339               	decf	set_cursor@linea,w
  1996  060E  1D03               	btfss	3,2
  1997  060F  2E11               	goto	u1631
  1998  0610  2E12               	goto	u1630
  1999  0611                     u1631:
  2000  0611  2E19               	goto	l2389
  2001  0612                     u1630:
  2002  0612                     l2387:
  2003  0612  3080               	movlw	128
  2004  0613  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  2005  0618  2E25               	goto	l2393
  2006  0619                     l2389:
  2007  0619  3002               	movlw	2
  2008  061A  0639               	xorwf	set_cursor@linea,w
  2009  061B  1D03               	btfss	3,2
  2010  061C  2E1E               	goto	u1641
  2011  061D  2E1F               	goto	u1640
  2012  061E                     u1641:
  2013  061E  2E25               	goto	l2393
  2014  061F                     u1640:
  2015  061F                     l2391:
  2016  061F  30C0               	movlw	192
  2017  0620  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  2018  0625                     l2393:
  2019                           
  2020                           ;LCD.c: 84:     _delay((unsigned long)((40)*(8000000/4000.0)));
  2021  0625  3068               	movlw	104
  2022  0626  00F7               	movwf	??_set_cursor+1
  2023  0627  30E4               	movlw	228
  2024  0628  00F6               	movwf	??_set_cursor
  2025  0629                     u1897:
  2026  0629  0BF6               	decfsz	??_set_cursor,f
  2027  062A  2E29               	goto	u1897
  2028  062B  0BF7               	decfsz	??_set_cursor+1,f
  2029  062C  2E29               	goto	u1897
  2030  062D  0000               	nop
  2031  062E                     l2395:
  2032                           
  2033                           ;LCD.c: 86:     if (posicion != 0){
  2034  062E  0875               	movf	set_cursor@posicion,w
  2035  062F  1903               	btfsc	3,2
  2036  0630  2E32               	goto	u1651
  2037  0631  2E33               	goto	u1650
  2038  0632                     u1651:
  2039  0632  2E4A               	goto	l273
  2040  0633                     u1650:
  2041  0633  2E3C               	goto	l2403
  2042  0634                     l2399:
  2043                           
  2044                           ;LCD.c: 88:             Escribir_comandoLCD(0b00010100);
  2045  0634  3014               	movlw	20
  2046  0635  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  2047  063A                     l2401:
  2048                           
  2049                           ;LCD.c: 89:             posicion--;
  2050  063A  3001               	movlw	1
  2051  063B  02F5               	subwf	set_cursor@posicion,f
  2052  063C                     l2403:
  2053                           
  2054                           ;LCD.c: 87:         while(posicion > 0){
  2055  063C  0875               	movf	set_cursor@posicion,w
  2056  063D  1D03               	btfss	3,2
  2057  063E  2E40               	goto	u1661
  2058  063F  2E41               	goto	u1660
  2059  0640                     u1661:
  2060  0640  2E34               	goto	l2399
  2061  0641                     u1660:
  2062  0641                     l2405:
  2063                           
  2064                           ;LCD.c: 92:         _delay((unsigned long)((40)*(8000000/4000.0)));
  2065  0641  3068               	movlw	104
  2066  0642  00F7               	movwf	??_set_cursor+1
  2067  0643  30E4               	movlw	228
  2068  0644  00F6               	movwf	??_set_cursor
  2069  0645                     u1907:
  2070  0645  0BF6               	decfsz	??_set_cursor,f
  2071  0646  2E45               	goto	u1907
  2072  0647  0BF7               	decfsz	??_set_cursor+1,f
  2073  0648  2E45               	goto	u1907
  2074  0649  0000               	nop
  2075  064A                     l273:
  2076  064A  0008               	return
  2077  064B                     __end_of_set_cursor:
  2078                           
  2079                           	psect	text4
  2080  06FF                     __ptext4:	
  2081 ;; *************** function _initOsc *****************
  2082 ;; Defined at:
  2083 ;;		line 12 in file "Oscilador.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;  Valor           1    wreg     unsigned char 
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;  Valor           1    3[COMMON] unsigned char 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  1    wreg      void 
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, status,0
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2097 ;;      Params:         0       0       0       0       0
  2098 ;;      Locals:         1       0       0       0       0
  2099 ;;      Temps:          0       0       0       0       0
  2100 ;;      Totals:         1       0       0       0       0
  2101 ;;Total ram usage:        1 bytes
  2102 ;; Hardware stack levels used: 1
  2103 ;; Hardware stack levels required when called: 1
  2104 ;; This function calls:
  2105 ;;		Nothing
  2106 ;; This function is called by:
  2107 ;;		_setup
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           
  2112                           ;psect for function _initOsc
  2113  06FF                     _initOsc:
  2114                           
  2115                           ;incstack = 0
  2116                           ; Regs used in _initOsc: [wreg+status,2+status,0]
  2117                           ;initOsc@Valor stored from wreg
  2118  06FF  00F3               	movwf	initOsc@Valor
  2119  0700                     l1781:
  2120                           
  2121                           ;Oscilador.c: 14:     if(Valor == 8){
  2122  0700  3008               	movlw	8
  2123  0701  0673               	xorwf	initOsc@Valor,w
  2124  0702  1D03               	btfss	3,2
  2125  0703  2F05               	goto	u1001
  2126  0704  2F06               	goto	u1000
  2127  0705                     u1001:
  2128  0705  2F0B               	goto	l1785
  2129  0706                     u1000:
  2130  0706                     l1783:
  2131                           
  2132                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
  2133  0706  1683               	bsf	3,5	;RP0=1, select bank1
  2134  0707  1303               	bcf	3,6	;RP1=0, select bank1
  2135  0708  160F               	bsf	15,4	;volatile
  2136                           
  2137                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
  2138  0709  168F               	bsf	15,5	;volatile
  2139                           
  2140                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
  2141  070A  170F               	bsf	15,6	;volatile
  2142  070B                     l1785:
  2143                           
  2144                           ;Oscilador.c: 19:     if(Valor == 4){
  2145  070B  3004               	movlw	4
  2146  070C  0673               	xorwf	initOsc@Valor,w
  2147  070D  1D03               	btfss	3,2
  2148  070E  2F10               	goto	u1011
  2149  070F  2F11               	goto	u1010
  2150  0710                     u1011:
  2151  0710  2F16               	goto	l1789
  2152  0711                     u1010:
  2153  0711                     l1787:
  2154                           
  2155                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
  2156  0711  1683               	bsf	3,5	;RP0=1, select bank1
  2157  0712  1303               	bcf	3,6	;RP1=0, select bank1
  2158  0713  120F               	bcf	15,4	;volatile
  2159                           
  2160                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
  2161  0714  168F               	bsf	15,5	;volatile
  2162                           
  2163                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
  2164  0715  170F               	bsf	15,6	;volatile
  2165  0716                     l1789:
  2166                           
  2167                           ;Oscilador.c: 24:     if(Valor == 2){
  2168  0716  3002               	movlw	2
  2169  0717  0673               	xorwf	initOsc@Valor,w
  2170  0718  1D03               	btfss	3,2
  2171  0719  2F1B               	goto	u1021
  2172  071A  2F1C               	goto	u1020
  2173  071B                     u1021:
  2174  071B  2F21               	goto	l1793
  2175  071C                     u1020:
  2176  071C                     l1791:
  2177                           
  2178                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
  2179  071C  1683               	bsf	3,5	;RP0=1, select bank1
  2180  071D  1303               	bcf	3,6	;RP1=0, select bank1
  2181  071E  160F               	bsf	15,4	;volatile
  2182                           
  2183                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
  2184  071F  128F               	bcf	15,5	;volatile
  2185                           
  2186                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
  2187  0720  170F               	bsf	15,6	;volatile
  2188  0721                     l1793:
  2189                           
  2190                           ;Oscilador.c: 29:     if(Valor == 1){
  2191  0721  0373               	decf	initOsc@Valor,w
  2192  0722  1D03               	btfss	3,2
  2193  0723  2F25               	goto	u1031
  2194  0724  2F26               	goto	u1030
  2195  0725                     u1031:
  2196  0725  2F2B               	goto	l281
  2197  0726                     u1030:
  2198  0726                     l1795:
  2199                           
  2200                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
  2201  0726  1683               	bsf	3,5	;RP0=1, select bank1
  2202  0727  1303               	bcf	3,6	;RP1=0, select bank1
  2203  0728  120F               	bcf	15,4	;volatile
  2204                           
  2205                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
  2206  0729  128F               	bcf	15,5	;volatile
  2207                           
  2208                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
  2209  072A  170F               	bsf	15,6	;volatile
  2210  072B                     l281:	
  2211                           ;Oscilador.c: 33:     }
  2212                           
  2213                           
  2214                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
  2215  072B  1683               	bsf	3,5	;RP0=1, select bank1
  2216  072C  1303               	bcf	3,6	;RP1=0, select bank1
  2217  072D  140F               	bsf	15,0	;volatile
  2218  072E                     l282:
  2219  072E  0008               	return
  2220  072F                     __end_of_initOsc:
  2221                           
  2222                           	psect	text5
  2223  077D                     __ptext5:	
  2224 ;; *************** function _Limpiar_pantallaLCD *****************
  2225 ;; Defined at:
  2226 ;;		line 69 in file "LCD.c"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;		None
  2229 ;; Auto vars:     Size  Location     Type
  2230 ;;		None
  2231 ;; Return value:  Size  Location     Type
  2232 ;;                  1    wreg      void 
  2233 ;; Registers used:
  2234 ;;		wreg, status,2, status,0, pclath, cstack
  2235 ;; Tracked objects:
  2236 ;;		On entry : 0/0
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2240 ;;      Params:         0       0       0       0       0
  2241 ;;      Locals:         0       0       0       0       0
  2242 ;;      Temps:          2       0       0       0       0
  2243 ;;      Totals:         2       0       0       0       0
  2244 ;;Total ram usage:        2 bytes
  2245 ;; Hardware stack levels used: 1
  2246 ;; Hardware stack levels required when called: 3
  2247 ;; This function calls:
  2248 ;;		_Escribir_comandoLCD
  2249 ;; This function is called by:
  2250 ;;		_setup
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           
  2255                           ;psect for function _Limpiar_pantallaLCD
  2256  077D                     _Limpiar_pantallaLCD:
  2257  077D                     l2491:	
  2258                           ;incstack = 0
  2259                           ; Regs used in _Limpiar_pantallaLCD: [wreg+status,2+status,0+pclath+cstack]
  2260                           
  2261                           
  2262                           ;LCD.c: 70:     PORTDbits.RD3 = 0; PORTDbits.RD4 = 0;
  2263  077D  1283               	bcf	3,5	;RP0=0, select bank0
  2264  077E  1303               	bcf	3,6	;RP1=0, select bank0
  2265  077F  1188               	bcf	8,3	;volatile
  2266  0780  1208               	bcf	8,4	;volatile
  2267  0781                     l2493:
  2268                           
  2269                           ;LCD.c: 72:     Escribir_comandoLCD(0b00000001);
  2270  0781  3001               	movlw	1
  2271  0782  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  2272  0787                     l2495:
  2273                           
  2274                           ;LCD.c: 73:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2275  0787  301A               	movlw	26
  2276  0788  00F6               	movwf	??_Limpiar_pantallaLCD+1
  2277  0789  30F8               	movlw	248
  2278  078A  00F5               	movwf	??_Limpiar_pantallaLCD
  2279  078B                     u1917:
  2280  078B  0BF5               	decfsz	??_Limpiar_pantallaLCD,f
  2281  078C  2F8B               	goto	u1917
  2282  078D  0BF6               	decfsz	??_Limpiar_pantallaLCD+1,f
  2283  078E  2F8B               	goto	u1917
  2284  078F  0000               	nop
  2285  0790                     l2497:
  2286                           
  2287                           ;LCD.c: 74:     Escribir_comandoLCD(0b00000010);
  2288  0790  3002               	movlw	2
  2289  0791  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  2290  0796                     l263:
  2291  0796  0008               	return
  2292  0797                     __end_of_Limpiar_pantallaLCD:
  2293                           
  2294                           	psect	text6
  2295  01CC                     __ptext6:	
  2296 ;; *************** function _InitMSSP *****************
  2297 ;; Defined at:
  2298 ;;		line 5 in file "I2C.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;  Modo            1    wreg     enum E1292
  2301 ;;  Dato            4   13[BANK0 ] unsigned long 
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;  Modo            1   17[BANK0 ] enum E1292
  2304 ;; Return value:  Size  Location     Type
  2305 ;;                  1    wreg      void 
  2306 ;; Registers used:
  2307 ;;		wreg, status,2, status,0, pclath, cstack
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2313 ;;      Params:         0       4       0       0       0
  2314 ;;      Locals:         0       1       0       0       0
  2315 ;;      Temps:          4       0       0       0       0
  2316 ;;      Totals:         4       5       0       0       0
  2317 ;;Total ram usage:        9 bytes
  2318 ;; Hardware stack levels used: 1
  2319 ;; Hardware stack levels required when called: 2
  2320 ;; This function calls:
  2321 ;;		___lldiv
  2322 ;; This function is called by:
  2323 ;;		_setup
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           
  2328                           ;psect for function _InitMSSP
  2329  01CC                     _InitMSSP:
  2330                           
  2331                           ;incstack = 0
  2332                           ; Regs used in _InitMSSP: [wreg+status,2+status,0+pclath+cstack]
  2333                           ;InitMSSP@Modo stored from wreg
  2334  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  2335  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  2336  01CE  00CA               	movwf	InitMSSP@Modo
  2337  01CF                     l2417:
  2338                           
  2339                           ;I2C.c: 9:     SSPCONbits.SSPEN = 0;
  2340  01CF  1294               	bcf	20,5	;volatile
  2341  01D0                     l2419:
  2342                           
  2343                           ;I2C.c: 10:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2344  01D0  301A               	movlw	26
  2345  01D1  00F5               	movwf	??_InitMSSP+1
  2346  01D2  30F8               	movlw	248
  2347  01D3  00F4               	movwf	??_InitMSSP
  2348  01D4                     u1927:
  2349  01D4  0BF4               	decfsz	??_InitMSSP,f
  2350  01D5  29D4               	goto	u1927
  2351  01D6  0BF5               	decfsz	??_InitMSSP+1,f
  2352  01D7  29D4               	goto	u1927
  2353  01D8  0000               	nop
  2354  01D9                     l2421:
  2355                           
  2356                           ;I2C.c: 11:     SSPCONbits.SSPEN = 1;
  2357  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  2358  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  2359  01DB  1694               	bsf	20,5	;volatile
  2360                           
  2361                           ;I2C.c: 14:     if (Modo < 0b00000110){
  2362  01DC  3006               	movlw	6
  2363  01DD  024A               	subwf	InitMSSP@Modo,w
  2364  01DE  1803               	skipnc
  2365  01DF  29E1               	goto	u1681
  2366  01E0  29E2               	goto	u1680
  2367  01E1                     u1681:
  2368  01E1  2A06               	goto	l2433
  2369  01E2                     u1680:
  2370  01E2                     l2423:
  2371                           
  2372                           ;I2C.c: 17:         TRISCbits.TRISC5 = 0;
  2373  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  2374  01E3  1303               	bcf	3,6	;RP1=0, select bank1
  2375  01E4  1287               	bcf	7,5	;volatile
  2376                           
  2377                           ;I2C.c: 18:         TRISCbits.TRISC4 = 1;
  2378  01E5  1607               	bsf	7,4	;volatile
  2379  01E6                     l2425:
  2380                           
  2381                           ;I2C.c: 20:         if (Modo < 0b00000100){
  2382  01E6  3004               	movlw	4
  2383  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  2384  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  2385  01E9  024A               	subwf	InitMSSP@Modo,w
  2386  01EA  1803               	skipnc
  2387  01EB  29ED               	goto	u1691
  2388  01EC  29EE               	goto	u1690
  2389  01ED                     u1691:
  2390  01ED  29F2               	goto	l188
  2391  01EE                     u1690:
  2392  01EE                     l2427:
  2393                           
  2394                           ;I2C.c: 21:             TRISCbits.TRISC3 = 0;
  2395  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  2396  01EF  1303               	bcf	3,6	;RP1=0, select bank1
  2397  01F0  1187               	bcf	7,3	;volatile
  2398                           
  2399                           ;I2C.c: 22:         }
  2400  01F1  29F5               	goto	l2429
  2401  01F2                     l188:	
  2402                           ;I2C.c: 23:         else {
  2403                           
  2404                           
  2405                           ;I2C.c: 24:             TRISCbits.TRISC3 = 1;
  2406  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  2407  01F3  1303               	bcf	3,6	;RP1=0, select bank1
  2408  01F4  1587               	bsf	7,3	;volatile
  2409  01F5                     l2429:
  2410                           
  2411                           ;I2C.c: 27:         if (Modo == 0b00000100){ TRISAbits.TRISA5 = 1;}
  2412  01F5  3004               	movlw	4
  2413  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  2414  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  2415  01F8  064A               	xorwf	InitMSSP@Modo,w
  2416  01F9  1D03               	btfss	3,2
  2417  01FA  29FC               	goto	u1701
  2418  01FB  29FD               	goto	u1700
  2419  01FC                     u1701:
  2420  01FC  2A00               	goto	l190
  2421  01FD                     u1700:
  2422  01FD                     l2431:
  2423  01FD  1683               	bsf	3,5	;RP0=1, select bank1
  2424  01FE  1303               	bcf	3,6	;RP1=0, select bank1
  2425  01FF  1685               	bsf	5,5	;volatile
  2426  0200                     l190:
  2427                           
  2428                           ;I2C.c: 31:         SSPCONbits.CKP = 0;
  2429  0200  1283               	bcf	3,5	;RP0=0, select bank0
  2430  0201  1214               	bcf	20,4	;volatile
  2431                           
  2432                           ;I2C.c: 36:         SSPSTATbits.SMP = 1;
  2433  0202  1683               	bsf	3,5	;RP0=1, select bank1
  2434  0203  1303               	bcf	3,6	;RP1=0, select bank1
  2435  0204  1794               	bsf	20,7	;volatile
  2436                           
  2437                           ;I2C.c: 38:     }
  2438  0205  2A75               	goto	l2461
  2439  0206                     l2433:
  2440  0206  3006               	movlw	6
  2441  0207  024A               	subwf	InitMSSP@Modo,w
  2442  0208  1C03               	skipc
  2443  0209  2A0B               	goto	u1711
  2444  020A  2A0C               	goto	u1710
  2445  020B                     u1711:
  2446  020B  2A75               	goto	l2461
  2447  020C                     u1710:
  2448  020C                     l2435:
  2449                           
  2450                           ;I2C.c: 42:         TRISCbits.TRISC3 = 1;
  2451  020C  1683               	bsf	3,5	;RP0=1, select bank1
  2452  020D  1303               	bcf	3,6	;RP1=0, select bank1
  2453  020E  1587               	bsf	7,3	;volatile
  2454                           
  2455                           ;I2C.c: 43:         TRISCbits.TRISC4 = 1;
  2456  020F  1607               	bsf	7,4	;volatile
  2457                           
  2458                           ;I2C.c: 44:         SSPCONbits.SSPEN = 1;
  2459  0210  1283               	bcf	3,5	;RP0=0, select bank0
  2460  0211  1303               	bcf	3,6	;RP1=0, select bank0
  2461  0212  1694               	bsf	20,5	;volatile
  2462                           
  2463                           ;I2C.c: 45:         SSPSTATbits.SMP = 1;
  2464  0213  1683               	bsf	3,5	;RP0=1, select bank1
  2465  0214  1303               	bcf	3,6	;RP1=0, select bank1
  2466  0215  1794               	bsf	20,7	;volatile
  2467  0216                     l2437:
  2468                           
  2469                           ;I2C.c: 46:         if (Modo == 0b00000111 || Modo == 0b00001111){
  2470  0216  3007               	movlw	7
  2471  0217  1283               	bcf	3,5	;RP0=0, select bank0
  2472  0218  1303               	bcf	3,6	;RP1=0, select bank0
  2473  0219  064A               	xorwf	InitMSSP@Modo,w
  2474  021A  1903               	btfsc	3,2
  2475  021B  2A1D               	goto	u1721
  2476  021C  2A1E               	goto	u1720
  2477  021D                     u1721:
  2478  021D  2A24               	goto	l195
  2479  021E                     u1720:
  2480  021E                     l2439:
  2481  021E  300F               	movlw	15
  2482  021F  064A               	xorwf	InitMSSP@Modo,w
  2483  0220  1D03               	btfss	3,2
  2484  0221  2A23               	goto	u1731
  2485  0222  2A24               	goto	u1730
  2486  0223                     u1731:
  2487  0223  2A27               	goto	l2441
  2488  0224                     u1730:
  2489  0224                     l195:
  2490                           
  2491                           ;I2C.c: 47:             UA = 0;
  2492  0224  1683               	bsf	3,5	;RP0=1, select bank1
  2493  0225  1303               	bcf	3,6	;RP1=0, select bank1
  2494  0226  1094               	bcf	20,1	;volatile
  2495  0227                     l2441:
  2496                           
  2497                           ;I2C.c: 50:         if (Modo == 0b00001000){
  2498  0227  3008               	movlw	8
  2499  0228  1283               	bcf	3,5	;RP0=0, select bank0
  2500  0229  064A               	xorwf	InitMSSP@Modo,w
  2501  022A  1D03               	btfss	3,2
  2502  022B  2A2D               	goto	u1741
  2503  022C  2A2E               	goto	u1740
  2504  022D                     u1741:
  2505  022D  2A64               	goto	l196
  2506  022E                     u1740:
  2507  022E                     l2443:
  2508                           
  2509                           ;I2C.c: 51:             CKP = 0;
  2510  022E  1214               	bcf	20,4	;volatile
  2511  022F                     l2445:
  2512                           
  2513                           ;I2C.c: 52:             SSPCON2 = 0;
  2514  022F  1683               	bsf	3,5	;RP0=1, select bank1
  2515  0230  1303               	bcf	3,6	;RP1=0, select bank1
  2516  0231  0191               	clrf	17	;volatile
  2517                           
  2518                           ;I2C.c: 53:             SSPSTAT = 0;
  2519  0232  0194               	clrf	20	;volatile
  2520  0233                     l2447:
  2521                           
  2522                           ;I2C.c: 54:             SSPADD = (8000000/(Dato*4))-1;
  2523  0233  1283               	bcf	3,5	;RP0=0, select bank0
  2524  0234  1303               	bcf	3,6	;RP1=0, select bank0
  2525  0235  0846               	movf	InitMSSP@Dato,w
  2526  0236  00F4               	movwf	??_InitMSSP
  2527  0237  0847               	movf	InitMSSP@Dato+1,w
  2528  0238  00F5               	movwf	??_InitMSSP+1
  2529  0239  0848               	movf	InitMSSP@Dato+2,w
  2530  023A  00F6               	movwf	??_InitMSSP+2
  2531  023B  0849               	movf	InitMSSP@Dato+3,w
  2532  023C  00F7               	movwf	??_InitMSSP+3
  2533  023D  3002               	movlw	2
  2534  023E                     u1755:
  2535  023E  1003               	clrc
  2536  023F  0DF4               	rlf	??_InitMSSP,f
  2537  0240  0DF5               	rlf	??_InitMSSP+1,f
  2538  0241  0DF6               	rlf	??_InitMSSP+2,f
  2539  0242  0DF7               	rlf	??_InitMSSP+3,f
  2540  0243                     u1750:
  2541  0243  3EFF               	addlw	-1
  2542  0244  1D03               	skipz
  2543  0245  2A3E               	goto	u1755
  2544  0246  0877               	movf	??_InitMSSP+3,w
  2545  0247  00BC               	movwf	___lldiv@divisor+3
  2546  0248  0876               	movf	??_InitMSSP+2,w
  2547  0249  00BB               	movwf	___lldiv@divisor+2
  2548  024A  0875               	movf	??_InitMSSP+1,w
  2549  024B  00BA               	movwf	___lldiv@divisor+1
  2550  024C  0874               	movf	??_InitMSSP,w
  2551  024D  00B9               	movwf	___lldiv@divisor
  2552  024E  3000               	movlw	0
  2553  024F  00C0               	movwf	___lldiv@dividend+3
  2554  0250  307A               	movlw	122
  2555  0251  00BF               	movwf	___lldiv@dividend+2
  2556  0252  3012               	movlw	18
  2557  0253  00BE               	movwf	___lldiv@dividend+1
  2558  0254  3000               	movlw	0
  2559  0255  00BD               	movwf	___lldiv@dividend
  2560  0256  120A  118A  2493  120A  118A  	fcall	___lldiv
  2561  025B  1283               	bcf	3,5	;RP0=0, select bank0
  2562  025C  1303               	bcf	3,6	;RP1=0, select bank0
  2563  025D  0839               	movf	?___lldiv,w
  2564  025E  3EFF               	addlw	255
  2565  025F  1683               	bsf	3,5	;RP0=1, select bank1
  2566  0260  1303               	bcf	3,6	;RP1=0, select bank1
  2567  0261  0093               	movwf	19	;volatile
  2568  0262                     l2449:
  2569                           
  2570                           ;I2C.c: 55:             PIE1bits.SSPIE = 0;
  2571  0262  118C               	bcf	12,3	;volatile
  2572                           
  2573                           ;I2C.c: 56:         }
  2574  0263  2A75               	goto	l2461
  2575  0264                     l196:	
  2576                           ;I2C.c: 57:         else {
  2577                           
  2578                           
  2579                           ;I2C.c: 58:             CKP = 1;
  2580  0264  1614               	bsf	20,4	;volatile
  2581                           
  2582                           ;I2C.c: 59:             SSPCON2bits.GCEN = 0;
  2583  0265  1683               	bsf	3,5	;RP0=1, select bank1
  2584  0266  1303               	bcf	3,6	;RP1=0, select bank1
  2585  0267  1391               	bcf	17,7	;volatile
  2586                           
  2587                           ;I2C.c: 60:             SSPCON2bits.SEN = 1;
  2588  0268  1411               	bsf	17,0	;volatile
  2589  0269                     l2451:
  2590                           
  2591                           ;I2C.c: 61:             SSPADD = Dato;
  2592  0269  1283               	bcf	3,5	;RP0=0, select bank0
  2593  026A  1303               	bcf	3,6	;RP1=0, select bank0
  2594  026B  0846               	movf	InitMSSP@Dato,w
  2595  026C  1683               	bsf	3,5	;RP0=1, select bank1
  2596  026D  1303               	bcf	3,6	;RP1=0, select bank1
  2597  026E  0093               	movwf	19	;volatile
  2598  026F                     l2453:
  2599                           
  2600                           ;I2C.c: 62:             INTCONbits.GIE = 1;
  2601  026F  178B               	bsf	11,7	;volatile
  2602  0270                     l2455:
  2603                           
  2604                           ;I2C.c: 63:             INTCONbits.PEIE = 1;
  2605  0270  170B               	bsf	11,6	;volatile
  2606  0271                     l2457:
  2607                           
  2608                           ;I2C.c: 64:             PIE1bits.SSPIE = 1;
  2609  0271  158C               	bsf	12,3	;volatile
  2610  0272                     l2459:
  2611                           
  2612                           ;I2C.c: 65:             SSPIF = 0;
  2613  0272  1283               	bcf	3,5	;RP0=0, select bank0
  2614  0273  1303               	bcf	3,6	;RP1=0, select bank0
  2615  0274  118C               	bcf	12,3	;volatile
  2616  0275                     l2461:
  2617                           
  2618                           ;I2C.c: 72:     SSPCON = SSPCON | Modo;
  2619  0275  1283               	bcf	3,5	;RP0=0, select bank0
  2620  0276  0814               	movf	20,w	;volatile
  2621  0277  044A               	iorwf	InitMSSP@Modo,w	;volatile
  2622  0278  0094               	movwf	20	;volatile
  2623  0279                     l2463:
  2624                           
  2625                           ;I2C.c: 77:     SSPSTATbits.CKE = 0;
  2626  0279  1683               	bsf	3,5	;RP0=1, select bank1
  2627  027A  1303               	bcf	3,6	;RP1=0, select bank1
  2628  027B  1314               	bcf	20,6	;volatile
  2629  027C                     l198:
  2630  027C  0008               	return
  2631  027D                     __end_of_InitMSSP:
  2632                           
  2633                           	psect	text7
  2634  0493                     __ptext7:	
  2635 ;; *************** function ___lldiv *****************
  2636 ;; Defined at:
  2637 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;  divisor         4    0[BANK0 ] unsigned long 
  2640 ;;  dividend        4    4[BANK0 ] unsigned long 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  quotient        4    8[BANK0 ] unsigned long 
  2643 ;;  counter         1   12[BANK0 ] unsigned char 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  4    0[BANK0 ] unsigned long 
  2646 ;; Registers used:
  2647 ;;		wreg, status,2, status,0
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2653 ;;      Params:         0       8       0       0       0
  2654 ;;      Locals:         0       5       0       0       0
  2655 ;;      Temps:          1       0       0       0       0
  2656 ;;      Totals:         1      13       0       0       0
  2657 ;;Total ram usage:       14 bytes
  2658 ;; Hardware stack levels used: 1
  2659 ;; Hardware stack levels required when called: 1
  2660 ;; This function calls:
  2661 ;;		Nothing
  2662 ;; This function is called by:
  2663 ;;		_InitMSSP
  2664 ;;		_I2C_Master_Init
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           
  2669                           ;psect for function ___lldiv
  2670  0493                     ___lldiv:
  2671  0493                     l2359:	
  2672                           ;incstack = 0
  2673                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2674                           
  2675  0493  3000               	movlw	0
  2676  0494  1283               	bcf	3,5	;RP0=0, select bank0
  2677  0495  1303               	bcf	3,6	;RP1=0, select bank0
  2678  0496  00C4               	movwf	___lldiv@quotient+3
  2679  0497  3000               	movlw	0
  2680  0498  00C3               	movwf	___lldiv@quotient+2
  2681  0499  3000               	movlw	0
  2682  049A  00C2               	movwf	___lldiv@quotient+1
  2683  049B  3000               	movlw	0
  2684  049C  00C1               	movwf	___lldiv@quotient
  2685  049D  083C               	movf	___lldiv@divisor+3,w
  2686  049E  043B               	iorwf	___lldiv@divisor+2,w
  2687  049F  043A               	iorwf	___lldiv@divisor+1,w
  2688  04A0  0439               	iorwf	___lldiv@divisor,w
  2689  04A1  1903               	skipnz
  2690  04A2  2CA4               	goto	u1561
  2691  04A3  2CA5               	goto	u1560
  2692  04A4                     u1561:
  2693  04A4  2CF2               	goto	l2379
  2694  04A5                     u1560:
  2695  04A5                     l2361:
  2696  04A5  01C5               	clrf	___lldiv@counter
  2697  04A6  0AC5               	incf	___lldiv@counter,f
  2698  04A7  2CB5               	goto	l2365
  2699  04A8                     l2363:
  2700  04A8  3001               	movlw	1
  2701  04A9  00F3               	movwf	??___lldiv
  2702  04AA                     u1575:
  2703  04AA  1003               	clrc
  2704  04AB  0DB9               	rlf	___lldiv@divisor,f
  2705  04AC  0DBA               	rlf	___lldiv@divisor+1,f
  2706  04AD  0DBB               	rlf	___lldiv@divisor+2,f
  2707  04AE  0DBC               	rlf	___lldiv@divisor+3,f
  2708  04AF  0BF3               	decfsz	??___lldiv,f
  2709  04B0  2CAA               	goto	u1575
  2710  04B1  3001               	movlw	1
  2711  04B2  00F3               	movwf	??___lldiv
  2712  04B3  0873               	movf	??___lldiv,w
  2713  04B4  07C5               	addwf	___lldiv@counter,f
  2714  04B5                     l2365:
  2715  04B5  1FBC               	btfss	___lldiv@divisor+3,7
  2716  04B6  2CB8               	goto	u1581
  2717  04B7  2CB9               	goto	u1580
  2718  04B8                     u1581:
  2719  04B8  2CA8               	goto	l2363
  2720  04B9                     u1580:
  2721  04B9                     l2367:
  2722  04B9  3001               	movlw	1
  2723  04BA  00F3               	movwf	??___lldiv
  2724  04BB                     u1595:
  2725  04BB  1003               	clrc
  2726  04BC  0DC1               	rlf	___lldiv@quotient,f
  2727  04BD  0DC2               	rlf	___lldiv@quotient+1,f
  2728  04BE  0DC3               	rlf	___lldiv@quotient+2,f
  2729  04BF  0DC4               	rlf	___lldiv@quotient+3,f
  2730  04C0  0BF3               	decfsz	??___lldiv,f
  2731  04C1  2CBB               	goto	u1595
  2732  04C2                     l2369:
  2733  04C2  083C               	movf	___lldiv@divisor+3,w
  2734  04C3  0240               	subwf	___lldiv@dividend+3,w
  2735  04C4  1D03               	skipz
  2736  04C5  2CD0               	goto	u1605
  2737  04C6  083B               	movf	___lldiv@divisor+2,w
  2738  04C7  023F               	subwf	___lldiv@dividend+2,w
  2739  04C8  1D03               	skipz
  2740  04C9  2CD0               	goto	u1605
  2741  04CA  083A               	movf	___lldiv@divisor+1,w
  2742  04CB  023E               	subwf	___lldiv@dividend+1,w
  2743  04CC  1D03               	skipz
  2744  04CD  2CD0               	goto	u1605
  2745  04CE  0839               	movf	___lldiv@divisor,w
  2746  04CF  023D               	subwf	___lldiv@dividend,w
  2747  04D0                     u1605:
  2748  04D0  1C03               	skipc
  2749  04D1  2CD3               	goto	u1601
  2750  04D2  2CD4               	goto	u1600
  2751  04D3                     u1601:
  2752  04D3  2CE3               	goto	l2375
  2753  04D4                     u1600:
  2754  04D4                     l2371:
  2755  04D4  0839               	movf	___lldiv@divisor,w
  2756  04D5  02BD               	subwf	___lldiv@dividend,f
  2757  04D6  083A               	movf	___lldiv@divisor+1,w
  2758  04D7  1C03               	skipc
  2759  04D8  0F3A               	incfsz	___lldiv@divisor+1,w
  2760  04D9  02BE               	subwf	___lldiv@dividend+1,f
  2761  04DA  083B               	movf	___lldiv@divisor+2,w
  2762  04DB  1C03               	skipc
  2763  04DC  0F3B               	incfsz	___lldiv@divisor+2,w
  2764  04DD  02BF               	subwf	___lldiv@dividend+2,f
  2765  04DE  083C               	movf	___lldiv@divisor+3,w
  2766  04DF  1C03               	skipc
  2767  04E0  0F3C               	incfsz	___lldiv@divisor+3,w
  2768  04E1  02C0               	subwf	___lldiv@dividend+3,f
  2769  04E2                     l2373:
  2770  04E2  1441               	bsf	___lldiv@quotient,0
  2771  04E3                     l2375:
  2772  04E3  3001               	movlw	1
  2773  04E4                     u1615:
  2774  04E4  1003               	clrc
  2775  04E5  0CBC               	rrf	___lldiv@divisor+3,f
  2776  04E6  0CBB               	rrf	___lldiv@divisor+2,f
  2777  04E7  0CBA               	rrf	___lldiv@divisor+1,f
  2778  04E8  0CB9               	rrf	___lldiv@divisor,f
  2779  04E9  3EFF               	addlw	-1
  2780  04EA  1D03               	skipz
  2781  04EB  2CE4               	goto	u1615
  2782  04EC                     l2377:
  2783  04EC  3001               	movlw	1
  2784  04ED  02C5               	subwf	___lldiv@counter,f
  2785  04EE  1D03               	btfss	3,2
  2786  04EF  2CF1               	goto	u1621
  2787  04F0  2CF2               	goto	u1620
  2788  04F1                     u1621:
  2789  04F1  2CB9               	goto	l2367
  2790  04F2                     u1620:
  2791  04F2                     l2379:
  2792  04F2  0844               	movf	___lldiv@quotient+3,w
  2793  04F3  00BC               	movwf	?___lldiv+3
  2794  04F4  0843               	movf	___lldiv@quotient+2,w
  2795  04F5  00BB               	movwf	?___lldiv+2
  2796  04F6  0842               	movf	___lldiv@quotient+1,w
  2797  04F7  00BA               	movwf	?___lldiv+1
  2798  04F8  0841               	movf	___lldiv@quotient,w
  2799  04F9  00B9               	movwf	?___lldiv
  2800  04FA                     l501:
  2801  04FA  0008               	return
  2802  04FB                     __end_of___lldiv:
  2803                           
  2804                           	psect	text8
  2805  032D                     __ptext8:	
  2806 ;; *************** function _InitMPU6050 *****************
  2807 ;; Defined at:
  2808 ;;		line 13 in file "MPU.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;		None
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;		None
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  1    wreg      void 
  2815 ;; Registers used:
  2816 ;;		wreg, status,2, status,0, pclath, cstack
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2822 ;;      Params:         0       0       0       0       0
  2823 ;;      Locals:         0       0       0       0       0
  2824 ;;      Temps:          3       0       0       0       0
  2825 ;;      Totals:         3       0       0       0       0
  2826 ;;Total ram usage:        3 bytes
  2827 ;; Hardware stack levels used: 1
  2828 ;; Hardware stack levels required when called: 3
  2829 ;; This function calls:
  2830 ;;		_I2CMasterStop
  2831 ;;		_I2CMasterWrite
  2832 ;;		_I2C_Master_Start
  2833 ;; This function is called by:
  2834 ;;		_setup
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           
  2839                           ;psect for function _InitMPU6050
  2840  032D                     _InitMPU6050:
  2841  032D                     l1845:	
  2842                           ;incstack = 0
  2843                           ; Regs used in _InitMPU6050: [wreg+status,2+status,0+pclath+cstack]
  2844                           
  2845                           
  2846                           ;MPU.c: 14:     _delay((unsigned long)((150)*(8000000/4000.0)));
  2847  032D  3002               	movlw	2
  2848  032E  00F6               	movwf	??_InitMPU6050+2
  2849  032F  3086               	movlw	134
  2850  0330  00F5               	movwf	??_InitMPU6050+1
  2851  0331  3099               	movlw	153
  2852  0332  00F4               	movwf	??_InitMPU6050
  2853  0333                     u1937:
  2854  0333  0BF4               	decfsz	??_InitMPU6050,f
  2855  0334  2B33               	goto	u1937
  2856  0335  0BF5               	decfsz	??_InitMPU6050+1,f
  2857  0336  2B33               	goto	u1937
  2858  0337  0BF6               	decfsz	??_InitMPU6050+2,f
  2859  0338  2B33               	goto	u1937
  2860  0339                     l1847:
  2861                           
  2862                           ;MPU.c: 17:     I2C_Master_Start(Standard);
  2863  0339  3001               	movlw	1
  2864  033A  120A  118A  2797  120A  118A  	fcall	_I2C_Master_Start
  2865  033F                     l1849:
  2866                           
  2867                           ;MPU.c: 18:     I2CMasterWrite(0b11010010 +0);
  2868  033F  30D2               	movlw	210
  2869  0340  120A  118A  27E9  120A  118A  	fcall	_I2CMasterWrite
  2870  0345                     l1851:
  2871                           
  2872                           ;MPU.c: 19:     I2CMasterWrite(0x6B);
  2873  0345  306B               	movlw	107
  2874  0346  120A  118A  27E9  120A  118A  	fcall	_I2CMasterWrite
  2875  034B                     l1853:
  2876                           
  2877                           ;MPU.c: 20:     I2CMasterWrite(0b00000001);
  2878  034B  3001               	movlw	1
  2879  034C  120A  118A  27E9  120A  118A  	fcall	_I2CMasterWrite
  2880  0351                     l1855:
  2881                           
  2882                           ;MPU.c: 24:     I2C_Master_Start(Repeated);
  2883  0351  3000               	movlw	0
  2884  0352  120A  118A  2797  120A  118A  	fcall	_I2C_Master_Start
  2885  0357                     l1857:
  2886                           
  2887                           ;MPU.c: 25:     I2CMasterWrite(0b11010010 +0);
  2888  0357  30D2               	movlw	210
  2889  0358  120A  118A  27E9  120A  118A  	fcall	_I2CMasterWrite
  2890  035D                     l1859:
  2891                           
  2892                           ;MPU.c: 26:     I2CMasterWrite(0x1B);
  2893  035D  301B               	movlw	27
  2894  035E  120A  118A  27E9  120A  118A  	fcall	_I2CMasterWrite
  2895  0363                     l1861:
  2896                           
  2897                           ;MPU.c: 27:     I2CMasterWrite(0b00000000);
  2898  0363  3000               	movlw	0
  2899  0364  120A  118A  27E9  120A  118A  	fcall	_I2CMasterWrite
  2900  0369                     l1863:
  2901                           
  2902                           ;MPU.c: 31:     I2C_Master_Start(Repeated);
  2903  0369  3000               	movlw	0
  2904  036A  120A  118A  2797  120A  118A  	fcall	_I2C_Master_Start
  2905  036F                     l1865:
  2906                           
  2907                           ;MPU.c: 32:     I2CMasterWrite(0b11010010 +0);
  2908  036F  30D2               	movlw	210
  2909  0370  120A  118A  27E9  120A  118A  	fcall	_I2CMasterWrite
  2910  0375                     l1867:
  2911                           
  2912                           ;MPU.c: 33:     I2CMasterWrite(0x1C);
  2913  0375  301C               	movlw	28
  2914  0376  120A  118A  27E9  120A  118A  	fcall	_I2CMasterWrite
  2915  037B                     l1869:
  2916                           
  2917                           ;MPU.c: 34:     I2CMasterWrite(0b00000000);
  2918  037B  3000               	movlw	0
  2919  037C  120A  118A  27E9  120A  118A  	fcall	_I2CMasterWrite
  2920  0381                     l1871:
  2921                           
  2922                           ;MPU.c: 37:     I2C_Master_Start(Repeated);
  2923  0381  3000               	movlw	0
  2924  0382  120A  118A  2797  120A  118A  	fcall	_I2C_Master_Start
  2925  0387                     l1873:
  2926                           
  2927                           ;MPU.c: 38:     I2CMasterWrite(0b11010010 +0);
  2928  0387  30D2               	movlw	210
  2929  0388  120A  118A  27E9  120A  118A  	fcall	_I2CMasterWrite
  2930  038D                     l1875:
  2931                           
  2932                           ;MPU.c: 39:     I2CMasterWrite(0x1A);
  2933  038D  301A               	movlw	26
  2934  038E  120A  118A  27E9  120A  118A  	fcall	_I2CMasterWrite
  2935  0393                     l1877:
  2936                           
  2937                           ;MPU.c: 40:     I2CMasterWrite(0b00000000);
  2938  0393  3000               	movlw	0
  2939  0394  120A  118A  27E9  120A  118A  	fcall	_I2CMasterWrite
  2940  0399                     l1879:
  2941                           
  2942                           ;MPU.c: 43:     I2C_Master_Start(Repeated);
  2943  0399  3000               	movlw	0
  2944  039A  120A  118A  2797  120A  118A  	fcall	_I2C_Master_Start
  2945  039F                     l1881:
  2946                           
  2947                           ;MPU.c: 44:     I2CMasterWrite(0b11010010 +0);
  2948  039F  30D2               	movlw	210
  2949  03A0  120A  118A  27E9  120A  118A  	fcall	_I2CMasterWrite
  2950  03A5                     l1883:
  2951                           
  2952                           ;MPU.c: 45:     I2CMasterWrite(0x19);
  2953  03A5  3019               	movlw	25
  2954  03A6  120A  118A  27E9  120A  118A  	fcall	_I2CMasterWrite
  2955  03AB                     l1885:
  2956                           
  2957                           ;MPU.c: 46:     I2CMasterWrite(0b00000111);
  2958  03AB  3007               	movlw	7
  2959  03AC  120A  118A  27E9  120A  118A  	fcall	_I2CMasterWrite
  2960  03B1                     l1887:
  2961                           
  2962                           ;MPU.c: 48:     I2CMasterStop();
  2963  03B1  120A  158A  27F7  120A  118A  	fcall	_I2CMasterStop
  2964  03B6                     l324:
  2965  03B6  0008               	return
  2966  03B7                     __end_of_InitMPU6050:
  2967                           
  2968                           	psect	text9
  2969  0797                     __ptext9:	
  2970 ;; *************** function _I2C_Master_Start *****************
  2971 ;; Defined at:
  2972 ;;		line 96 in file "I2C.c"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;  Modo_Inicio     1    wreg     enum E1305
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;  Modo_Inicio     1    3[COMMON] enum E1305
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  1    wreg      void 
  2979 ;; Registers used:
  2980 ;;		wreg, status,2, status,0, pclath, cstack
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2986 ;;      Params:         0       0       0       0       0
  2987 ;;      Locals:         1       0       0       0       0
  2988 ;;      Temps:          0       0       0       0       0
  2989 ;;      Totals:         1       0       0       0       0
  2990 ;;Total ram usage:        1 bytes
  2991 ;; Hardware stack levels used: 1
  2992 ;; Hardware stack levels required when called: 2
  2993 ;; This function calls:
  2994 ;;		_I2CMasterCheck
  2995 ;; This function is called by:
  2996 ;;		_main
  2997 ;;		_InitMPU6050
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           
  3002                           ;psect for function _I2C_Master_Start
  3003  0797                     _I2C_Master_Start:
  3004                           
  3005                           ;incstack = 0
  3006                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3007                           ;I2C_Master_Start@Modo_Inicio stored from wreg
  3008  0797  00F3               	movwf	I2C_Master_Start@Modo_Inicio
  3009  0798                     l1685:
  3010                           
  3011                           ;I2C.c: 97:     I2CMasterCheck();
  3012  0798  120A  118A  27D0  120A  118A  	fcall	_I2CMasterCheck
  3013  079D                     l1687:
  3014                           
  3015                           ;I2C.c: 98:     if (Modo_Inicio == 1) SSPCON2bits.SEN = 1;
  3016  079D  0373               	decf	I2C_Master_Start@Modo_Inicio,w
  3017  079E  1D03               	btfss	3,2
  3018  079F  2FA1               	goto	u781
  3019  07A0  2FA2               	goto	u780
  3020  07A1                     u781:
  3021  07A1  2FA5               	goto	l1691
  3022  07A2                     u780:
  3023  07A2                     l1689:
  3024  07A2  1683               	bsf	3,5	;RP0=1, select bank1
  3025  07A3  1303               	bcf	3,6	;RP1=0, select bank1
  3026  07A4  1411               	bsf	17,0	;volatile
  3027  07A5                     l1691:
  3028                           
  3029                           ;I2C.c: 99:     if (Modo_Inicio == 0) SSPCON2bits.RSEN = 1;
  3030  07A5  0873               	movf	I2C_Master_Start@Modo_Inicio,w
  3031  07A6  1D03               	btfss	3,2
  3032  07A7  2FA9               	goto	u791
  3033  07A8  2FAA               	goto	u790
  3034  07A9                     u791:
  3035  07A9  2FAD               	goto	l208
  3036  07AA                     u790:
  3037  07AA                     l1693:
  3038  07AA  1683               	bsf	3,5	;RP0=1, select bank1
  3039  07AB  1303               	bcf	3,6	;RP1=0, select bank1
  3040  07AC  1491               	bsf	17,1	;volatile
  3041  07AD                     l208:
  3042                           
  3043                           ;I2C.c: 100:     SSPIF = 0;
  3044  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  3045  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  3046  07AF  118C               	bcf	12,3	;volatile
  3047  07B0                     l209:
  3048  07B0  0008               	return
  3049  07B1                     __end_of_I2C_Master_Start:
  3050                           
  3051                           	psect	text10
  3052  07E9                     __ptext10:	
  3053 ;; *************** function _I2CMasterWrite *****************
  3054 ;; Defined at:
  3055 ;;		line 110 in file "I2C.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  Datos           1    wreg     unsigned char 
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;  Datos           1    3[COMMON] unsigned char 
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  1    wreg      void 
  3062 ;; Registers used:
  3063 ;;		wreg, status,2, status,0, pclath, cstack
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3069 ;;      Params:         0       0       0       0       0
  3070 ;;      Locals:         1       0       0       0       0
  3071 ;;      Temps:          0       0       0       0       0
  3072 ;;      Totals:         1       0       0       0       0
  3073 ;;Total ram usage:        1 bytes
  3074 ;; Hardware stack levels used: 1
  3075 ;; Hardware stack levels required when called: 2
  3076 ;; This function calls:
  3077 ;;		_I2CMasterCheck
  3078 ;; This function is called by:
  3079 ;;		_main
  3080 ;;		_InitMPU6050
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           
  3085                           ;psect for function _I2CMasterWrite
  3086  07E9                     _I2CMasterWrite:
  3087                           
  3088                           ;incstack = 0
  3089                           ; Regs used in _I2CMasterWrite: [wreg+status,2+status,0+pclath+cstack]
  3090                           ;I2CMasterWrite@Datos stored from wreg
  3091  07E9  00F3               	movwf	I2CMasterWrite@Datos
  3092  07EA                     l1695:
  3093                           
  3094                           ;I2C.c: 111:     I2CMasterCheck();
  3095  07EA  120A  118A  27D0  120A  118A  	fcall	_I2CMasterCheck
  3096  07EF                     l1697:
  3097                           
  3098                           ;I2C.c: 112:     SSPBUF = Datos;
  3099  07EF  0873               	movf	I2CMasterWrite@Datos,w
  3100  07F0  1283               	bcf	3,5	;RP0=0, select bank0
  3101  07F1  1303               	bcf	3,6	;RP1=0, select bank0
  3102  07F2  0093               	movwf	19	;volatile
  3103  07F3                     l215:
  3104  07F3  0008               	return
  3105  07F4                     __end_of_I2CMasterWrite:
  3106                           
  3107                           	psect	text11
  3108  0FF7                     __ptext11:	
  3109 ;; *************** function _I2CMasterStop *****************
  3110 ;; Defined at:
  3111 ;;		line 104 in file "I2C.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;		None
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;		None
  3116 ;; Return value:  Size  Location     Type
  3117 ;;                  1    wreg      void 
  3118 ;; Registers used:
  3119 ;;		wreg, status,2, status,0, pclath, cstack
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3125 ;;      Params:         0       0       0       0       0
  3126 ;;      Locals:         0       0       0       0       0
  3127 ;;      Temps:          0       0       0       0       0
  3128 ;;      Totals:         0       0       0       0       0
  3129 ;;Total ram usage:        0 bytes
  3130 ;; Hardware stack levels used: 1
  3131 ;; Hardware stack levels required when called: 2
  3132 ;; This function calls:
  3133 ;;		_I2CMasterCheck
  3134 ;; This function is called by:
  3135 ;;		_main
  3136 ;;		_InitMPU6050
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           
  3141                           ;psect for function _I2CMasterStop
  3142  0FF7                     _I2CMasterStop:
  3143  0FF7                     l1699:	
  3144                           ;incstack = 0
  3145                           ; Regs used in _I2CMasterStop: [wreg+status,2+status,0+pclath+cstack]
  3146                           
  3147                           
  3148                           ;I2C.c: 105:     I2CMasterCheck();
  3149  0FF7  120A  118A  27D0  120A  158A  	fcall	_I2CMasterCheck
  3150  0FFC                     l1701:
  3151                           
  3152                           ;I2C.c: 106:     SSPCON2bits.PEN = 1;
  3153  0FFC  1683               	bsf	3,5	;RP0=1, select bank1
  3154  0FFD  1303               	bcf	3,6	;RP1=0, select bank1
  3155  0FFE  1511               	bsf	17,2	;volatile
  3156  0FFF                     l212:
  3157  0FFF  0008               	return
  3158  1000                     __end_of_I2CMasterStop:
  3159                           
  3160                           	psect	text12
  3161  04FB                     __ptext12:	
  3162 ;; *************** function _Iniciar_LCD *****************
  3163 ;; Defined at:
  3164 ;;		line 30 in file "LCD.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;		None
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;		None
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  1    wreg      void 
  3171 ;; Registers used:
  3172 ;;		wreg, status,2, status,0, pclath, cstack
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3178 ;;      Params:         0       0       0       0       0
  3179 ;;      Locals:         0       0       0       0       0
  3180 ;;      Temps:          2       0       0       0       0
  3181 ;;      Totals:         2       0       0       0       0
  3182 ;;Total ram usage:        2 bytes
  3183 ;; Hardware stack levels used: 1
  3184 ;; Hardware stack levels required when called: 3
  3185 ;; This function calls:
  3186 ;;		_Escribir_comandoLCD
  3187 ;; This function is called by:
  3188 ;;		_setup
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           
  3193                           ;psect for function _Iniciar_LCD
  3194  04FB                     _Iniciar_LCD:
  3195  04FB                     l2465:	
  3196                           ;incstack = 0
  3197                           ; Regs used in _Iniciar_LCD: [wreg+status,2+status,0+pclath+cstack]
  3198                           
  3199                           
  3200                           ;LCD.c: 31:     PORTDbits.RD3 = 0;
  3201  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  3202  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  3203  04FD  1188               	bcf	8,3	;volatile
  3204                           
  3205                           ;LCD.c: 32:     PORTDbits.RD4 = 0;
  3206  04FE  1208               	bcf	8,4	;volatile
  3207  04FF                     l2467:
  3208                           
  3209                           ;LCD.c: 34:     _delay((unsigned long)((14)*(8000000/4000.0)));
  3210  04FF  3025               	movlw	37
  3211  0500  00F6               	movwf	??_Iniciar_LCD+1
  3212  0501  305B               	movlw	91
  3213  0502  00F5               	movwf	??_Iniciar_LCD
  3214  0503                     u1947:
  3215  0503  0BF5               	decfsz	??_Iniciar_LCD,f
  3216  0504  2D03               	goto	u1947
  3217  0505  0BF6               	decfsz	??_Iniciar_LCD+1,f
  3218  0506  2D03               	goto	u1947
  3219  0507  2D08               	nop2
  3220  0508                     l2469:
  3221                           
  3222                           ;LCD.c: 35:     Escribir_comandoLCD(0b00110000);
  3223  0508  3030               	movlw	48
  3224  0509  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  3225  050E                     l2471:
  3226                           
  3227                           ;LCD.c: 36:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3228  050E  300B               	movlw	11
  3229  050F  00F6               	movwf	??_Iniciar_LCD+1
  3230  0510  3062               	movlw	98
  3231  0511  00F5               	movwf	??_Iniciar_LCD
  3232  0512                     u1957:
  3233  0512  0BF5               	decfsz	??_Iniciar_LCD,f
  3234  0513  2D12               	goto	u1957
  3235  0514  0BF6               	decfsz	??_Iniciar_LCD+1,f
  3236  0515  2D12               	goto	u1957
  3237  0516  0000               	nop
  3238                           
  3239                           ;LCD.c: 37:     Escribir_comandoLCD(0b00110000);
  3240  0517  3030               	movlw	48
  3241  0518  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  3242  051D                     l2473:
  3243                           
  3244                           ;LCD.c: 38:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3245  051D  3042               	movlw	66
  3246  051E  00F5               	movwf	??_Iniciar_LCD
  3247  051F                     u1967:
  3248  051F  0BF5               	decfsz	??_Iniciar_LCD,f
  3249  0520  2D1F               	goto	u1967
  3250  0521  0000               	nop
  3251  0522                     l2475:
  3252                           
  3253                           ;LCD.c: 39:     Escribir_comandoLCD(0b00110000);
  3254  0522  3030               	movlw	48
  3255  0523  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  3256                           
  3257                           ;LCD.c: 42:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3258  0528  3042               	movlw	66
  3259  0529  00F5               	movwf	??_Iniciar_LCD
  3260  052A                     u1977:
  3261  052A  0BF5               	decfsz	??_Iniciar_LCD,f
  3262  052B  2D2A               	goto	u1977
  3263  052C  0000               	nop
  3264  052D                     l2477:
  3265                           
  3266                           ;LCD.c: 43:     Escribir_comandoLCD(0b00111000);
  3267  052D  3038               	movlw	56
  3268  052E  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  3269  0533                     l2479:
  3270                           
  3271                           ;LCD.c: 44:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3272  0533  3042               	movlw	66
  3273  0534  00F5               	movwf	??_Iniciar_LCD
  3274  0535                     u1987:
  3275  0535  0BF5               	decfsz	??_Iniciar_LCD,f
  3276  0536  2D35               	goto	u1987
  3277  0537  0000               	nop
  3278                           
  3279                           ;LCD.c: 45:     Escribir_comandoLCD(0b00001000);
  3280  0538  3008               	movlw	8
  3281  0539  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  3282  053E                     l2481:
  3283                           
  3284                           ;LCD.c: 46:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3285  053E  3042               	movlw	66
  3286  053F  00F5               	movwf	??_Iniciar_LCD
  3287  0540                     u1997:
  3288  0540  0BF5               	decfsz	??_Iniciar_LCD,f
  3289  0541  2D40               	goto	u1997
  3290  0542  0000               	nop
  3291  0543                     l2483:
  3292                           
  3293                           ;LCD.c: 47:     Escribir_comandoLCD(0b00000001);
  3294  0543  3001               	movlw	1
  3295  0544  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  3296                           
  3297                           ;LCD.c: 48:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3298  0549  3042               	movlw	66
  3299  054A  00F5               	movwf	??_Iniciar_LCD
  3300  054B                     u2007:
  3301  054B  0BF5               	decfsz	??_Iniciar_LCD,f
  3302  054C  2D4B               	goto	u2007
  3303  054D  0000               	nop
  3304  054E                     l2485:
  3305                           
  3306                           ;LCD.c: 49:     Escribir_comandoLCD(0b00000110);
  3307  054E  3006               	movlw	6
  3308  054F  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  3309  0554                     l2487:
  3310                           
  3311                           ;LCD.c: 50:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3312  0554  3042               	movlw	66
  3313  0555  00F5               	movwf	??_Iniciar_LCD
  3314  0556                     u2017:
  3315  0556  0BF5               	decfsz	??_Iniciar_LCD,f
  3316  0557  2D56               	goto	u2017
  3317  0558  0000               	nop
  3318                           
  3319                           ;LCD.c: 51:     Escribir_comandoLCD(0b00001100);
  3320  0559  300C               	movlw	12
  3321  055A  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  3322  055F                     l251:
  3323  055F  0008               	return
  3324  0560                     __end_of_Iniciar_LCD:
  3325                           
  3326                           	psect	text13
  3327  0757                     __ptext13:	
  3328 ;; *************** function _Escribir_stringLCD *****************
  3329 ;; Defined at:
  3330 ;;		line 55 in file "LCD.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;  d               1    wreg     PTR const unsigned char 
  3333 ;;		 -> STR_3(13), STR_2(15), STR_1(16), 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;  d               1    7[COMMON] PTR const unsigned char 
  3336 ;;		 -> STR_3(13), STR_2(15), STR_1(16), 
  3337 ;;  i               1    6[COMMON] unsigned char 
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      void 
  3340 ;; Registers used:
  3341 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3347 ;;      Params:         0       0       0       0       0
  3348 ;;      Locals:         2       0       0       0       0
  3349 ;;      Temps:          1       0       0       0       0
  3350 ;;      Totals:         3       0       0       0       0
  3351 ;;Total ram usage:        3 bytes
  3352 ;; Hardware stack levels used: 1
  3353 ;; Hardware stack levels required when called: 3
  3354 ;; This function calls:
  3355 ;;		_Escribir_comandoLCD
  3356 ;; This function is called by:
  3357 ;;		_main
  3358 ;;		_setup
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           
  3363                           ;psect for function _Escribir_stringLCD
  3364  0757                     _Escribir_stringLCD:
  3365                           
  3366                           ;incstack = 0
  3367                           ; Regs used in _Escribir_stringLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3368                           ;Escribir_stringLCD@d stored from wreg
  3369  0757  00F7               	movwf	Escribir_stringLCD@d
  3370  0758                     l2407:
  3371                           
  3372                           ;LCD.c: 56:     PORTDbits.RD3 = 1; PORTDbits.RD4 = 0;
  3373  0758  1283               	bcf	3,5	;RP0=0, select bank0
  3374  0759  1303               	bcf	3,6	;RP1=0, select bank0
  3375  075A  1588               	bsf	8,3	;volatile
  3376  075B  1208               	bcf	8,4	;volatile
  3377  075C                     l2409:
  3378                           
  3379                           ;LCD.c: 58:     for (char i=0; d[i]!='\0'; i++){
  3380  075C  01F6               	clrf	Escribir_stringLCD@i
  3381  075D  2F6F               	goto	l2415
  3382  075E                     l2411:
  3383                           
  3384                           ;LCD.c: 59:         Escribir_comandoLCD(d[i]);
  3385  075E  0876               	movf	Escribir_stringLCD@i,w
  3386  075F  0777               	addwf	Escribir_stringLCD@d,w
  3387  0760  0084               	movwf	4
  3388  0761  120A  118A  26CD  120A  118A  	fcall	stringdir
  3389  0766  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  3390  076B                     l2413:
  3391                           
  3392                           ;LCD.c: 60:     }
  3393  076B  3001               	movlw	1
  3394  076C  00F5               	movwf	??_Escribir_stringLCD
  3395  076D  0875               	movf	??_Escribir_stringLCD,w
  3396  076E  07F6               	addwf	Escribir_stringLCD@i,f
  3397  076F                     l2415:
  3398  076F  0876               	movf	Escribir_stringLCD@i,w
  3399  0770  0777               	addwf	Escribir_stringLCD@d,w
  3400  0771  0084               	movwf	4
  3401  0772  120A  118A  26CD  120A  118A  	fcall	stringdir
  3402  0777  3A00               	xorlw	0
  3403  0778  1D03               	skipz
  3404  0779  2F7B               	goto	u1671
  3405  077A  2F7C               	goto	u1670
  3406  077B                     u1671:
  3407  077B  2F5E               	goto	l2411
  3408  077C                     u1670:
  3409  077C                     l257:
  3410  077C  0008               	return
  3411  077D                     __end_of_Escribir_stringLCD:
  3412                           
  3413                           	psect	text14
  3414  027D                     __ptext14:	
  3415 ;; *************** function _Config_USART *****************
  3416 ;; Defined at:
  3417 ;;		line 13 in file "UART.c"
  3418 ;; Parameters:    Size  Location     Type
  3419 ;;  baud_rate       2    3[COMMON] int 
  3420 ;;  Freq            2    5[COMMON] int 
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      void 
  3425 ;; Registers used:
  3426 ;;		wreg, status,2, status,0
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3432 ;;      Params:         4       0       0       0       0
  3433 ;;      Locals:         0       0       0       0       0
  3434 ;;      Temps:          0       0       0       0       0
  3435 ;;      Totals:         4       0       0       0       0
  3436 ;;Total ram usage:        4 bytes
  3437 ;; Hardware stack levels used: 1
  3438 ;; Hardware stack levels required when called: 1
  3439 ;; This function calls:
  3440 ;;		Nothing
  3441 ;; This function is called by:
  3442 ;;		_setup
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           
  3447                           ;psect for function _Config_USART
  3448  027D                     _Config_USART:
  3449  027D                     l1923:	
  3450                           ;incstack = 0
  3451                           ; Regs used in _Config_USART: [wreg+status,2+status,0]
  3452                           
  3453                           
  3454                           ;UART.c: 14:     if(baud_rate == 9600 && Freq == 4){
  3455  027D  3080               	movlw	128
  3456  027E  0673               	xorwf	Config_USART@baud_rate,w
  3457  027F  3025               	movlw	37
  3458  0280  1903               	skipnz
  3459  0281  0674               	xorwf	Config_USART@baud_rate+1,w
  3460  0282  1D03               	btfss	3,2
  3461  0283  2A85               	goto	u1121
  3462  0284  2A86               	goto	u1120
  3463  0285                     u1121:
  3464  0285  2A99               	goto	l1933
  3465  0286                     u1120:
  3466  0286                     l1925:
  3467  0286  3004               	movlw	4
  3468  0287  0675               	xorwf	Config_USART@Freq,w
  3469  0288  0476               	iorwf	Config_USART@Freq+1,w
  3470  0289  1D03               	btfss	3,2
  3471  028A  2A8C               	goto	u1131
  3472  028B  2A8D               	goto	u1130
  3473  028C                     u1131:
  3474  028C  2A99               	goto	l1933
  3475  028D                     u1130:
  3476  028D                     l1927:
  3477                           
  3478                           ;UART.c: 15:         TXSTAbits.SYNC = 0;
  3479  028D  1683               	bsf	3,5	;RP0=1, select bank1
  3480  028E  1303               	bcf	3,6	;RP1=0, select bank1
  3481  028F  1218               	bcf	24,4	;volatile
  3482                           
  3483                           ;UART.c: 16:         TXSTAbits.BRGH = 1;
  3484  0290  1518               	bsf	24,2	;volatile
  3485                           
  3486                           ;UART.c: 18:         BAUDCTLbits.BRG16 = 0;
  3487  0291  1683               	bsf	3,5	;RP0=1, select bank3
  3488  0292  1703               	bsf	3,6	;RP1=1, select bank3
  3489  0293  1187               	bcf	7,3	;volatile
  3490  0294                     l1929:
  3491                           
  3492                           ;UART.c: 20:         SPBRG = 25;
  3493  0294  3019               	movlw	25
  3494  0295  1683               	bsf	3,5	;RP0=1, select bank1
  3495  0296  1303               	bcf	3,6	;RP1=0, select bank1
  3496  0297  0099               	movwf	25	;volatile
  3497  0298                     l1931:
  3498                           
  3499                           ;UART.c: 21:         SPBRGH = 0;
  3500  0298  019A               	clrf	26	;volatile
  3501  0299                     l1933:
  3502                           
  3503                           ;UART.c: 24:     if(baud_rate == 9600 && Freq == 8){
  3504  0299  3080               	movlw	128
  3505  029A  0673               	xorwf	Config_USART@baud_rate,w
  3506  029B  3025               	movlw	37
  3507  029C  1903               	skipnz
  3508  029D  0674               	xorwf	Config_USART@baud_rate+1,w
  3509  029E  1D03               	btfss	3,2
  3510  029F  2AA1               	goto	u1141
  3511  02A0  2AA2               	goto	u1140
  3512  02A1                     u1141:
  3513  02A1  2AB5               	goto	l1943
  3514  02A2                     u1140:
  3515  02A2                     l1935:
  3516  02A2  3008               	movlw	8
  3517  02A3  0675               	xorwf	Config_USART@Freq,w
  3518  02A4  0476               	iorwf	Config_USART@Freq+1,w
  3519  02A5  1D03               	btfss	3,2
  3520  02A6  2AA8               	goto	u1151
  3521  02A7  2AA9               	goto	u1150
  3522  02A8                     u1151:
  3523  02A8  2AB5               	goto	l1943
  3524  02A9                     u1150:
  3525  02A9                     l1937:
  3526                           
  3527                           ;UART.c: 25:         TXSTAbits.SYNC = 0;
  3528  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  3529  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  3530  02AB  1218               	bcf	24,4	;volatile
  3531                           
  3532                           ;UART.c: 26:         TXSTAbits.BRGH = 0;
  3533  02AC  1118               	bcf	24,2	;volatile
  3534                           
  3535                           ;UART.c: 28:         BAUDCTLbits.BRG16 = 1;
  3536  02AD  1683               	bsf	3,5	;RP0=1, select bank3
  3537  02AE  1703               	bsf	3,6	;RP1=1, select bank3
  3538  02AF  1587               	bsf	7,3	;volatile
  3539  02B0                     l1939:
  3540                           
  3541                           ;UART.c: 30:         SPBRG = 51;
  3542  02B0  3033               	movlw	51
  3543  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  3544  02B2  1303               	bcf	3,6	;RP1=0, select bank1
  3545  02B3  0099               	movwf	25	;volatile
  3546  02B4                     l1941:
  3547                           
  3548                           ;UART.c: 31:         SPBRGH = 0;
  3549  02B4  019A               	clrf	26	;volatile
  3550  02B5                     l1943:
  3551                           
  3552                           ;UART.c: 34:     if(baud_rate == 9600 && Freq == 1){
  3553  02B5  3080               	movlw	128
  3554  02B6  0673               	xorwf	Config_USART@baud_rate,w
  3555  02B7  3025               	movlw	37
  3556  02B8  1903               	skipnz
  3557  02B9  0674               	xorwf	Config_USART@baud_rate+1,w
  3558  02BA  1D03               	btfss	3,2
  3559  02BB  2ABD               	goto	u1161
  3560  02BC  2ABE               	goto	u1160
  3561  02BD                     u1161:
  3562  02BD  2AD0               	goto	l1953
  3563  02BE                     u1160:
  3564  02BE                     l1945:
  3565  02BE  0375               	decf	Config_USART@Freq,w
  3566  02BF  0476               	iorwf	Config_USART@Freq+1,w
  3567  02C0  1D03               	btfss	3,2
  3568  02C1  2AC3               	goto	u1171
  3569  02C2  2AC4               	goto	u1170
  3570  02C3                     u1171:
  3571  02C3  2AD0               	goto	l1953
  3572  02C4                     u1170:
  3573  02C4                     l1947:
  3574                           
  3575                           ;UART.c: 35:         TXSTAbits.SYNC = 0;
  3576  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  3577  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  3578  02C6  1218               	bcf	24,4	;volatile
  3579                           
  3580                           ;UART.c: 36:         TXSTAbits.BRGH = 1;
  3581  02C7  1518               	bsf	24,2	;volatile
  3582                           
  3583                           ;UART.c: 38:         BAUDCTLbits.BRG16 = 1;
  3584  02C8  1683               	bsf	3,5	;RP0=1, select bank3
  3585  02C9  1703               	bsf	3,6	;RP1=1, select bank3
  3586  02CA  1587               	bsf	7,3	;volatile
  3587  02CB                     l1949:
  3588                           
  3589                           ;UART.c: 40:         SPBRG = 25;
  3590  02CB  3019               	movlw	25
  3591  02CC  1683               	bsf	3,5	;RP0=1, select bank1
  3592  02CD  1303               	bcf	3,6	;RP1=0, select bank1
  3593  02CE  0099               	movwf	25	;volatile
  3594  02CF                     l1951:
  3595                           
  3596                           ;UART.c: 41:         SPBRGH = 0;
  3597  02CF  019A               	clrf	26	;volatile
  3598  02D0                     l1953:
  3599                           
  3600                           ;UART.c: 44:     if(baud_rate == 10417 && Freq == 4){
  3601  02D0  30B1               	movlw	177
  3602  02D1  0673               	xorwf	Config_USART@baud_rate,w
  3603  02D2  3028               	movlw	40
  3604  02D3  1903               	skipnz
  3605  02D4  0674               	xorwf	Config_USART@baud_rate+1,w
  3606  02D5  1D03               	btfss	3,2
  3607  02D6  2AD8               	goto	u1181
  3608  02D7  2AD9               	goto	u1180
  3609  02D8                     u1181:
  3610  02D8  2AEC               	goto	l1963
  3611  02D9                     u1180:
  3612  02D9                     l1955:
  3613  02D9  3004               	movlw	4
  3614  02DA  0675               	xorwf	Config_USART@Freq,w
  3615  02DB  0476               	iorwf	Config_USART@Freq+1,w
  3616  02DC  1D03               	btfss	3,2
  3617  02DD  2ADF               	goto	u1191
  3618  02DE  2AE0               	goto	u1190
  3619  02DF                     u1191:
  3620  02DF  2AEC               	goto	l1963
  3621  02E0                     u1190:
  3622  02E0                     l1957:
  3623                           
  3624                           ;UART.c: 45:         TXSTAbits.SYNC = 0;
  3625  02E0  1683               	bsf	3,5	;RP0=1, select bank1
  3626  02E1  1303               	bcf	3,6	;RP1=0, select bank1
  3627  02E2  1218               	bcf	24,4	;volatile
  3628                           
  3629                           ;UART.c: 46:         TXSTAbits.BRGH = 1;
  3630  02E3  1518               	bsf	24,2	;volatile
  3631                           
  3632                           ;UART.c: 48:         BAUDCTLbits.BRG16 = 1;
  3633  02E4  1683               	bsf	3,5	;RP0=1, select bank3
  3634  02E5  1703               	bsf	3,6	;RP1=1, select bank3
  3635  02E6  1587               	bsf	7,3	;volatile
  3636  02E7                     l1959:
  3637                           
  3638                           ;UART.c: 50:         SPBRG = 23;
  3639  02E7  3017               	movlw	23
  3640  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  3641  02E9  1303               	bcf	3,6	;RP1=0, select bank1
  3642  02EA  0099               	movwf	25	;volatile
  3643  02EB                     l1961:
  3644                           
  3645                           ;UART.c: 51:         SPBRGH = 0;
  3646  02EB  019A               	clrf	26	;volatile
  3647  02EC                     l1963:
  3648                           
  3649                           ;UART.c: 54:     if(baud_rate == 10417 && Freq == 8){
  3650  02EC  30B1               	movlw	177
  3651  02ED  0673               	xorwf	Config_USART@baud_rate,w
  3652  02EE  3028               	movlw	40
  3653  02EF  1903               	skipnz
  3654  02F0  0674               	xorwf	Config_USART@baud_rate+1,w
  3655  02F1  1D03               	btfss	3,2
  3656  02F2  2AF4               	goto	u1201
  3657  02F3  2AF5               	goto	u1200
  3658  02F4                     u1201:
  3659  02F4  2B08               	goto	l1973
  3660  02F5                     u1200:
  3661  02F5                     l1965:
  3662  02F5  3008               	movlw	8
  3663  02F6  0675               	xorwf	Config_USART@Freq,w
  3664  02F7  0476               	iorwf	Config_USART@Freq+1,w
  3665  02F8  1D03               	btfss	3,2
  3666  02F9  2AFB               	goto	u1211
  3667  02FA  2AFC               	goto	u1210
  3668  02FB                     u1211:
  3669  02FB  2B08               	goto	l1973
  3670  02FC                     u1210:
  3671  02FC                     l1967:
  3672                           
  3673                           ;UART.c: 55:         TXSTAbits.SYNC = 0;
  3674  02FC  1683               	bsf	3,5	;RP0=1, select bank1
  3675  02FD  1303               	bcf	3,6	;RP1=0, select bank1
  3676  02FE  1218               	bcf	24,4	;volatile
  3677                           
  3678                           ;UART.c: 56:         TXSTAbits.BRGH = 0;
  3679  02FF  1118               	bcf	24,2	;volatile
  3680                           
  3681                           ;UART.c: 58:         BAUDCTLbits.BRG16 = 1;
  3682  0300  1683               	bsf	3,5	;RP0=1, select bank3
  3683  0301  1703               	bsf	3,6	;RP1=1, select bank3
  3684  0302  1587               	bsf	7,3	;volatile
  3685  0303                     l1969:
  3686                           
  3687                           ;UART.c: 60:         SPBRG = 47;
  3688  0303  302F               	movlw	47
  3689  0304  1683               	bsf	3,5	;RP0=1, select bank1
  3690  0305  1303               	bcf	3,6	;RP1=0, select bank1
  3691  0306  0099               	movwf	25	;volatile
  3692  0307                     l1971:
  3693                           
  3694                           ;UART.c: 61:         SPBRGH = 0;
  3695  0307  019A               	clrf	26	;volatile
  3696  0308                     l1973:
  3697                           
  3698                           ;UART.c: 64:     if(baud_rate == 10417 && Freq == 1){
  3699  0308  30B1               	movlw	177
  3700  0309  0673               	xorwf	Config_USART@baud_rate,w
  3701  030A  3028               	movlw	40
  3702  030B  1903               	skipnz
  3703  030C  0674               	xorwf	Config_USART@baud_rate+1,w
  3704  030D  1D03               	btfss	3,2
  3705  030E  2B10               	goto	u1221
  3706  030F  2B11               	goto	u1220
  3707  0310                     u1221:
  3708  0310  2B23               	goto	l1983
  3709  0311                     u1220:
  3710  0311                     l1975:
  3711  0311  0375               	decf	Config_USART@Freq,w
  3712  0312  0476               	iorwf	Config_USART@Freq+1,w
  3713  0313  1D03               	btfss	3,2
  3714  0314  2B16               	goto	u1231
  3715  0315  2B17               	goto	u1230
  3716  0316                     u1231:
  3717  0316  2B23               	goto	l1983
  3718  0317                     u1230:
  3719  0317                     l1977:
  3720                           
  3721                           ;UART.c: 65:         TXSTAbits.SYNC = 0;
  3722  0317  1683               	bsf	3,5	;RP0=1, select bank1
  3723  0318  1303               	bcf	3,6	;RP1=0, select bank1
  3724  0319  1218               	bcf	24,4	;volatile
  3725                           
  3726                           ;UART.c: 66:         TXSTAbits.BRGH = 0;
  3727  031A  1118               	bcf	24,2	;volatile
  3728                           
  3729                           ;UART.c: 68:         BAUDCTLbits.BRG16 = 1;
  3730  031B  1683               	bsf	3,5	;RP0=1, select bank3
  3731  031C  1703               	bsf	3,6	;RP1=1, select bank3
  3732  031D  1587               	bsf	7,3	;volatile
  3733  031E                     l1979:
  3734                           
  3735                           ;UART.c: 70:         SPBRG = 5;
  3736  031E  3005               	movlw	5
  3737  031F  1683               	bsf	3,5	;RP0=1, select bank1
  3738  0320  1303               	bcf	3,6	;RP1=0, select bank1
  3739  0321  0099               	movwf	25	;volatile
  3740  0322                     l1981:
  3741                           
  3742                           ;UART.c: 71:         SPBRGH = 0;
  3743  0322  019A               	clrf	26	;volatile
  3744  0323                     l1983:
  3745                           
  3746                           ;UART.c: 74:     RCSTAbits.SPEN = 1;
  3747  0323  1283               	bcf	3,5	;RP0=0, select bank0
  3748  0324  1303               	bcf	3,6	;RP1=0, select bank0
  3749  0325  1798               	bsf	24,7	;volatile
  3750  0326                     l1985:
  3751                           
  3752                           ;UART.c: 75:     RCSTAbits.RX9 = 0;
  3753  0326  1318               	bcf	24,6	;volatile
  3754  0327                     l1987:
  3755                           
  3756                           ;UART.c: 76:     RCSTAbits.CREN = 1;
  3757  0327  1618               	bsf	24,4	;volatile
  3758  0328                     l1989:
  3759                           
  3760                           ;UART.c: 78:     TXSTAbits.TXEN = 1;
  3761  0328  1683               	bsf	3,5	;RP0=1, select bank1
  3762  0329  1303               	bcf	3,6	;RP1=0, select bank1
  3763  032A  1698               	bsf	24,5	;volatile
  3764  032B                     l1991:
  3765                           
  3766                           ;UART.c: 79:     PIE1bits.RCIE = 0;
  3767  032B  128C               	bcf	12,5	;volatile
  3768  032C                     l307:
  3769  032C  0008               	return
  3770  032D                     __end_of_Config_USART:
  3771                           
  3772                           	psect	text15
  3773  05BB                     __ptext15:	
  3774 ;; *************** function _divisor_dec *****************
  3775 ;; Defined at:
  3776 ;;		line 248 in file "Maestro I2C.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;  b               2    4[BANK0 ] int 
  3779 ;;  dig1            1    6[BANK0 ] PTR unsigned char 
  3780 ;;		 -> Giro_digy(1), Giro_digx(1), 
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;  n               2    9[BANK0 ] int 
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  1    wreg      void 
  3785 ;; Registers used:
  3786 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3792 ;;      Params:         0       3       0       0       0
  3793 ;;      Locals:         0       2       0       0       0
  3794 ;;      Temps:          0       2       0       0       0
  3795 ;;      Totals:         0       7       0       0       0
  3796 ;;Total ram usage:        7 bytes
  3797 ;; Hardware stack levels used: 1
  3798 ;; Hardware stack levels required when called: 2
  3799 ;; This function calls:
  3800 ;;		___awdiv
  3801 ;;		___awmod
  3802 ;; This function is called by:
  3803 ;;		_main
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           
  3808                           ;psect for function _divisor_dec
  3809  05BB                     _divisor_dec:
  3810  05BB                     l2563:	
  3811                           ;incstack = 0
  3812                           ; Regs used in _divisor_dec: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3813                           
  3814                           
  3815                           ;Maestro I2C.c: 249:     for(int n = 0; n<3 ; n++){
  3816  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  3817  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  3818  05BD  01C2               	clrf	divisor_dec@n
  3819  05BE  01C3               	clrf	divisor_dec@n+1
  3820  05BF                     l2569:
  3821                           
  3822                           ;Maestro I2C.c: 250:         dig1[n] = b % 10;
  3823  05BF  300A               	movlw	10
  3824  05C0  00F3               	movwf	___awmod@divisor
  3825  05C1  3000               	movlw	0
  3826  05C2  00F4               	movwf	___awmod@divisor+1
  3827  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  3828  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  3829  05C5  083E               	movf	divisor_dec@b+1,w
  3830  05C6  00F6               	movwf	___awmod@dividend+1
  3831  05C7  083D               	movf	divisor_dec@b,w
  3832  05C8  00F5               	movwf	___awmod@dividend
  3833  05C9  120A  118A  2560  120A  118A  	fcall	___awmod
  3834  05CE  0873               	movf	?___awmod,w
  3835  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  3836  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  3837  05D1  00C0               	movwf	??_divisor_dec
  3838  05D2  0842               	movf	divisor_dec@n,w
  3839  05D3  073F               	addwf	divisor_dec@dig1,w
  3840  05D4  00C1               	movwf	??_divisor_dec+1
  3841  05D5  0841               	movf	??_divisor_dec+1,w
  3842  05D6  0084               	movwf	4
  3843  05D7  0840               	movf	??_divisor_dec,w
  3844  05D8  0080               	movwf	0
  3845                           
  3846                           ;Maestro I2C.c: 251:         b = (b - dig1[n])/10;
  3847  05D9  300A               	movlw	10
  3848  05DA  00F3               	movwf	___awdiv@divisor
  3849  05DB  3000               	movlw	0
  3850  05DC  00F4               	movwf	___awdiv@divisor+1
  3851  05DD  0842               	movf	divisor_dec@n,w
  3852  05DE  073F               	addwf	divisor_dec@dig1,w
  3853  05DF  00C0               	movwf	??_divisor_dec
  3854  05E0  0840               	movf	??_divisor_dec,w
  3855  05E1  0084               	movwf	4
  3856  05E2  0800               	movf	0,w
  3857  05E3  023D               	subwf	divisor_dec@b,w
  3858  05E4  00F5               	movwf	___awdiv@dividend
  3859  05E5  083E               	movf	divisor_dec@b+1,w
  3860  05E6  1C03               	skipc
  3861  05E7  033E               	decf	divisor_dec@b+1,w
  3862  05E8  00F6               	movwf	___awdiv@dividend+1
  3863  05E9  120A  118A  242A  120A  118A  	fcall	___awdiv
  3864  05EE  0874               	movf	?___awdiv+1,w
  3865  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  3866  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  3867  05F1  00BE               	movwf	divisor_dec@b+1
  3868  05F2  0873               	movf	?___awdiv,w
  3869  05F3  00BD               	movwf	divisor_dec@b
  3870  05F4                     l2571:
  3871                           
  3872                           ;Maestro I2C.c: 252:     }
  3873  05F4  3001               	movlw	1
  3874  05F5  07C2               	addwf	divisor_dec@n,f
  3875  05F6  1803               	skipnc
  3876  05F7  0AC3               	incf	divisor_dec@n+1,f
  3877  05F8  3000               	movlw	0
  3878  05F9  07C3               	addwf	divisor_dec@n+1,f
  3879  05FA                     l2573:
  3880  05FA  0843               	movf	divisor_dec@n+1,w
  3881  05FB  3A80               	xorlw	128
  3882  05FC  00FF               	movwf	btemp+1
  3883  05FD  3080               	movlw	128
  3884  05FE  027F               	subwf	btemp+1,w
  3885  05FF  1D03               	skipz
  3886  0600  2E03               	goto	u1855
  3887  0601  3003               	movlw	3
  3888  0602  0242               	subwf	divisor_dec@n,w
  3889  0603                     u1855:
  3890  0603  1C03               	skipc
  3891  0604  2E06               	goto	u1851
  3892  0605  2E07               	goto	u1850
  3893  0606                     u1851:
  3894  0606  2DBF               	goto	l2569
  3895  0607                     u1850:
  3896  0607                     l136:
  3897  0607  0008               	return
  3898  0608                     __end_of_divisor_dec:
  3899                           
  3900                           	psect	text16
  3901  0560                     __ptext16:	
  3902 ;; *************** function ___awmod *****************
  3903 ;; Defined at:
  3904 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  3905 ;; Parameters:    Size  Location     Type
  3906 ;;  divisor         2    3[COMMON] int 
  3907 ;;  dividend        2    5[COMMON] int 
  3908 ;; Auto vars:     Size  Location     Type
  3909 ;;  sign            1    1[BANK0 ] unsigned char 
  3910 ;;  counter         1    0[BANK0 ] unsigned char 
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  2    3[COMMON] int 
  3913 ;; Registers used:
  3914 ;;		wreg, status,2, status,0
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3920 ;;      Params:         4       0       0       0       0
  3921 ;;      Locals:         0       2       0       0       0
  3922 ;;      Temps:          1       0       0       0       0
  3923 ;;      Totals:         5       2       0       0       0
  3924 ;;Total ram usage:        7 bytes
  3925 ;; Hardware stack levels used: 1
  3926 ;; Hardware stack levels required when called: 1
  3927 ;; This function calls:
  3928 ;;		Nothing
  3929 ;; This function is called by:
  3930 ;;		_divisor_dec
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934                           
  3935                           ;psect for function ___awmod
  3936  0560                     ___awmod:
  3937  0560                     l2499:	
  3938                           ;incstack = 0
  3939                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3940                           
  3941  0560  1283               	bcf	3,5	;RP0=0, select bank0
  3942  0561  1303               	bcf	3,6	;RP1=0, select bank0
  3943  0562  01BA               	clrf	___awmod@sign
  3944  0563                     l2501:
  3945  0563  1FF6               	btfss	___awmod@dividend+1,7
  3946  0564  2D66               	goto	u1761
  3947  0565  2D67               	goto	u1760
  3948  0566                     u1761:
  3949  0566  2D6E               	goto	l2507
  3950  0567                     u1760:
  3951  0567                     l2503:
  3952  0567  09F5               	comf	___awmod@dividend,f
  3953  0568  09F6               	comf	___awmod@dividend+1,f
  3954  0569  0AF5               	incf	___awmod@dividend,f
  3955  056A  1903               	skipnz
  3956  056B  0AF6               	incf	___awmod@dividend+1,f
  3957  056C                     l2505:
  3958  056C  01BA               	clrf	___awmod@sign
  3959  056D  0ABA               	incf	___awmod@sign,f
  3960  056E                     l2507:
  3961  056E  1FF4               	btfss	___awmod@divisor+1,7
  3962  056F  2D71               	goto	u1771
  3963  0570  2D72               	goto	u1770
  3964  0571                     u1771:
  3965  0571  2D77               	goto	l2511
  3966  0572                     u1770:
  3967  0572                     l2509:
  3968  0572  09F3               	comf	___awmod@divisor,f
  3969  0573  09F4               	comf	___awmod@divisor+1,f
  3970  0574  0AF3               	incf	___awmod@divisor,f
  3971  0575  1903               	skipnz
  3972  0576  0AF4               	incf	___awmod@divisor+1,f
  3973  0577                     l2511:
  3974  0577  0873               	movf	___awmod@divisor,w
  3975  0578  0474               	iorwf	___awmod@divisor+1,w
  3976  0579  1903               	btfsc	3,2
  3977  057A  2D7C               	goto	u1781
  3978  057B  2D7D               	goto	u1780
  3979  057C                     u1781:
  3980  057C  2DAC               	goto	l2529
  3981  057D                     u1780:
  3982  057D                     l2513:
  3983  057D  01B9               	clrf	___awmod@counter
  3984  057E  0AB9               	incf	___awmod@counter,f
  3985  057F  2D8B               	goto	l2519
  3986  0580                     l2515:
  3987  0580  3001               	movlw	1
  3988  0581                     u1795:
  3989  0581  1003               	clrc
  3990  0582  0DF3               	rlf	___awmod@divisor,f
  3991  0583  0DF4               	rlf	___awmod@divisor+1,f
  3992  0584  3EFF               	addlw	-1
  3993  0585  1D03               	skipz
  3994  0586  2D81               	goto	u1795
  3995  0587                     l2517:
  3996  0587  3001               	movlw	1
  3997  0588  00F7               	movwf	??___awmod
  3998  0589  0877               	movf	??___awmod,w
  3999  058A  07B9               	addwf	___awmod@counter,f
  4000  058B                     l2519:
  4001  058B  1FF4               	btfss	___awmod@divisor+1,7
  4002  058C  2D8E               	goto	u1801
  4003  058D  2D8F               	goto	u1800
  4004  058E                     u1801:
  4005  058E  2D80               	goto	l2515
  4006  058F                     u1800:
  4007  058F                     l2521:
  4008  058F  0874               	movf	___awmod@divisor+1,w
  4009  0590  0276               	subwf	___awmod@dividend+1,w
  4010  0591  1D03               	skipz
  4011  0592  2D95               	goto	u1815
  4012  0593  0873               	movf	___awmod@divisor,w
  4013  0594  0275               	subwf	___awmod@dividend,w
  4014  0595                     u1815:
  4015  0595  1C03               	skipc
  4016  0596  2D98               	goto	u1811
  4017  0597  2D99               	goto	u1810
  4018  0598                     u1811:
  4019  0598  2D9F               	goto	l2525
  4020  0599                     u1810:
  4021  0599                     l2523:
  4022  0599  0873               	movf	___awmod@divisor,w
  4023  059A  02F5               	subwf	___awmod@dividend,f
  4024  059B  0874               	movf	___awmod@divisor+1,w
  4025  059C  1C03               	skipc
  4026  059D  03F6               	decf	___awmod@dividend+1,f
  4027  059E  02F6               	subwf	___awmod@dividend+1,f
  4028  059F                     l2525:
  4029  059F  3001               	movlw	1
  4030  05A0                     u1825:
  4031  05A0  1003               	clrc
  4032  05A1  0CF4               	rrf	___awmod@divisor+1,f
  4033  05A2  0CF3               	rrf	___awmod@divisor,f
  4034  05A3  3EFF               	addlw	-1
  4035  05A4  1D03               	skipz
  4036  05A5  2DA0               	goto	u1825
  4037  05A6                     l2527:
  4038  05A6  3001               	movlw	1
  4039  05A7  02B9               	subwf	___awmod@counter,f
  4040  05A8  1D03               	btfss	3,2
  4041  05A9  2DAB               	goto	u1831
  4042  05AA  2DAC               	goto	u1830
  4043  05AB                     u1831:
  4044  05AB  2D8F               	goto	l2521
  4045  05AC                     u1830:
  4046  05AC                     l2529:
  4047  05AC  083A               	movf	___awmod@sign,w
  4048  05AD  1903               	btfsc	3,2
  4049  05AE  2DB0               	goto	u1841
  4050  05AF  2DB1               	goto	u1840
  4051  05B0                     u1841:
  4052  05B0  2DB6               	goto	l2533
  4053  05B1                     u1840:
  4054  05B1                     l2531:
  4055  05B1  09F5               	comf	___awmod@dividend,f
  4056  05B2  09F6               	comf	___awmod@dividend+1,f
  4057  05B3  0AF5               	incf	___awmod@dividend,f
  4058  05B4  1903               	skipnz
  4059  05B5  0AF6               	incf	___awmod@dividend+1,f
  4060  05B6                     l2533:
  4061  05B6  0876               	movf	___awmod@dividend+1,w
  4062  05B7  00F4               	movwf	?___awmod+1
  4063  05B8  0875               	movf	___awmod@dividend,w
  4064  05B9  00F3               	movwf	?___awmod
  4065  05BA                     l631:
  4066  05BA  0008               	return
  4067  05BB                     __end_of___awmod:
  4068                           
  4069                           	psect	text17
  4070  042A                     __ptext17:	
  4071 ;; *************** function ___awdiv *****************
  4072 ;; Defined at:
  4073 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;  divisor         2    3[COMMON] int 
  4076 ;;  dividend        2    5[COMMON] int 
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;  quotient        2    2[BANK0 ] int 
  4079 ;;  sign            1    1[BANK0 ] unsigned char 
  4080 ;;  counter         1    0[BANK0 ] unsigned char 
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  2    3[COMMON] int 
  4083 ;; Registers used:
  4084 ;;		wreg, status,2, status,0
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4090 ;;      Params:         4       0       0       0       0
  4091 ;;      Locals:         0       4       0       0       0
  4092 ;;      Temps:          1       0       0       0       0
  4093 ;;      Totals:         5       4       0       0       0
  4094 ;;Total ram usage:        9 bytes
  4095 ;; Hardware stack levels used: 1
  4096 ;; Hardware stack levels required when called: 1
  4097 ;; This function calls:
  4098 ;;		Nothing
  4099 ;; This function is called by:
  4100 ;;		_divisor_dec
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104                           
  4105                           ;psect for function ___awdiv
  4106  042A                     ___awdiv:
  4107  042A                     l1993:	
  4108                           ;incstack = 0
  4109                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4110                           
  4111  042A  1283               	bcf	3,5	;RP0=0, select bank0
  4112  042B  1303               	bcf	3,6	;RP1=0, select bank0
  4113  042C  01BA               	clrf	___awdiv@sign
  4114  042D                     l1995:
  4115  042D  1FF4               	btfss	___awdiv@divisor+1,7
  4116  042E  2C30               	goto	u1241
  4117  042F  2C31               	goto	u1240
  4118  0430                     u1241:
  4119  0430  2C38               	goto	l2001
  4120  0431                     u1240:
  4121  0431                     l1997:
  4122  0431  09F3               	comf	___awdiv@divisor,f
  4123  0432  09F4               	comf	___awdiv@divisor+1,f
  4124  0433  0AF3               	incf	___awdiv@divisor,f
  4125  0434  1903               	skipnz
  4126  0435  0AF4               	incf	___awdiv@divisor+1,f
  4127  0436                     l1999:
  4128  0436  01BA               	clrf	___awdiv@sign
  4129  0437  0ABA               	incf	___awdiv@sign,f
  4130  0438                     l2001:
  4131  0438  1FF6               	btfss	___awdiv@dividend+1,7
  4132  0439  2C3B               	goto	u1251
  4133  043A  2C3C               	goto	u1250
  4134  043B                     u1251:
  4135  043B  2C45               	goto	l2007
  4136  043C                     u1250:
  4137  043C                     l2003:
  4138  043C  09F5               	comf	___awdiv@dividend,f
  4139  043D  09F6               	comf	___awdiv@dividend+1,f
  4140  043E  0AF5               	incf	___awdiv@dividend,f
  4141  043F  1903               	skipnz
  4142  0440  0AF6               	incf	___awdiv@dividend+1,f
  4143  0441                     l2005:
  4144  0441  3001               	movlw	1
  4145  0442  00F7               	movwf	??___awdiv
  4146  0443  0877               	movf	??___awdiv,w
  4147  0444  06BA               	xorwf	___awdiv@sign,f
  4148  0445                     l2007:
  4149  0445  01BB               	clrf	___awdiv@quotient
  4150  0446  01BC               	clrf	___awdiv@quotient+1
  4151  0447                     l2009:
  4152  0447  0873               	movf	___awdiv@divisor,w
  4153  0448  0474               	iorwf	___awdiv@divisor+1,w
  4154  0449  1903               	btfsc	3,2
  4155  044A  2C4C               	goto	u1261
  4156  044B  2C4D               	goto	u1260
  4157  044C                     u1261:
  4158  044C  2C84               	goto	l2029
  4159  044D                     u1260:
  4160  044D                     l2011:
  4161  044D  01B9               	clrf	___awdiv@counter
  4162  044E  0AB9               	incf	___awdiv@counter,f
  4163  044F  2C5B               	goto	l2017
  4164  0450                     l2013:
  4165  0450  3001               	movlw	1
  4166  0451                     u1275:
  4167  0451  1003               	clrc
  4168  0452  0DF3               	rlf	___awdiv@divisor,f
  4169  0453  0DF4               	rlf	___awdiv@divisor+1,f
  4170  0454  3EFF               	addlw	-1
  4171  0455  1D03               	skipz
  4172  0456  2C51               	goto	u1275
  4173  0457                     l2015:
  4174  0457  3001               	movlw	1
  4175  0458  00F7               	movwf	??___awdiv
  4176  0459  0877               	movf	??___awdiv,w
  4177  045A  07B9               	addwf	___awdiv@counter,f
  4178  045B                     l2017:
  4179  045B  1FF4               	btfss	___awdiv@divisor+1,7
  4180  045C  2C5E               	goto	u1281
  4181  045D  2C5F               	goto	u1280
  4182  045E                     u1281:
  4183  045E  2C50               	goto	l2013
  4184  045F                     u1280:
  4185  045F                     l2019:
  4186  045F  3001               	movlw	1
  4187  0460                     u1295:
  4188  0460  1003               	clrc
  4189  0461  0DBB               	rlf	___awdiv@quotient,f
  4190  0462  0DBC               	rlf	___awdiv@quotient+1,f
  4191  0463  3EFF               	addlw	-1
  4192  0464  1D03               	skipz
  4193  0465  2C60               	goto	u1295
  4194  0466  0874               	movf	___awdiv@divisor+1,w
  4195  0467  0276               	subwf	___awdiv@dividend+1,w
  4196  0468  1D03               	skipz
  4197  0469  2C6C               	goto	u1305
  4198  046A  0873               	movf	___awdiv@divisor,w
  4199  046B  0275               	subwf	___awdiv@dividend,w
  4200  046C                     u1305:
  4201  046C  1C03               	skipc
  4202  046D  2C6F               	goto	u1301
  4203  046E  2C70               	goto	u1300
  4204  046F                     u1301:
  4205  046F  2C77               	goto	l2025
  4206  0470                     u1300:
  4207  0470                     l2021:
  4208  0470  0873               	movf	___awdiv@divisor,w
  4209  0471  02F5               	subwf	___awdiv@dividend,f
  4210  0472  0874               	movf	___awdiv@divisor+1,w
  4211  0473  1C03               	skipc
  4212  0474  03F6               	decf	___awdiv@dividend+1,f
  4213  0475  02F6               	subwf	___awdiv@dividend+1,f
  4214  0476                     l2023:
  4215  0476  143B               	bsf	___awdiv@quotient,0
  4216  0477                     l2025:
  4217  0477  3001               	movlw	1
  4218  0478                     u1315:
  4219  0478  1003               	clrc
  4220  0479  0CF4               	rrf	___awdiv@divisor+1,f
  4221  047A  0CF3               	rrf	___awdiv@divisor,f
  4222  047B  3EFF               	addlw	-1
  4223  047C  1D03               	skipz
  4224  047D  2C78               	goto	u1315
  4225  047E                     l2027:
  4226  047E  3001               	movlw	1
  4227  047F  02B9               	subwf	___awdiv@counter,f
  4228  0480  1D03               	btfss	3,2
  4229  0481  2C83               	goto	u1321
  4230  0482  2C84               	goto	u1320
  4231  0483                     u1321:
  4232  0483  2C5F               	goto	l2019
  4233  0484                     u1320:
  4234  0484                     l2029:
  4235  0484  083A               	movf	___awdiv@sign,w
  4236  0485  1903               	btfsc	3,2
  4237  0486  2C88               	goto	u1331
  4238  0487  2C89               	goto	u1330
  4239  0488                     u1331:
  4240  0488  2C8E               	goto	l2033
  4241  0489                     u1330:
  4242  0489                     l2031:
  4243  0489  09BB               	comf	___awdiv@quotient,f
  4244  048A  09BC               	comf	___awdiv@quotient+1,f
  4245  048B  0ABB               	incf	___awdiv@quotient,f
  4246  048C  1903               	skipnz
  4247  048D  0ABC               	incf	___awdiv@quotient+1,f
  4248  048E                     l2033:
  4249  048E  083C               	movf	___awdiv@quotient+1,w
  4250  048F  00F4               	movwf	?___awdiv+1
  4251  0490  083B               	movf	___awdiv@quotient,w
  4252  0491  00F3               	movwf	?___awdiv
  4253  0492                     l618:
  4254  0492  0008               	return
  4255  0493                     __end_of___awdiv:
  4256                           
  4257                           	psect	text18
  4258  07F4                     __ptext18:	
  4259 ;; *************** function _UART_Write *****************
  4260 ;; Defined at:
  4261 ;;		line 82 in file "UART.c"
  4262 ;; Parameters:    Size  Location     Type
  4263 ;;  data            1    wreg     unsigned char 
  4264 ;; Auto vars:     Size  Location     Type
  4265 ;;  data            1    3[COMMON] unsigned char 
  4266 ;; Return value:  Size  Location     Type
  4267 ;;                  1    wreg      void 
  4268 ;; Registers used:
  4269 ;;		wreg
  4270 ;; Tracked objects:
  4271 ;;		On entry : 0/0
  4272 ;;		On exit  : 0/0
  4273 ;;		Unchanged: 0/0
  4274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4275 ;;      Params:         0       0       0       0       0
  4276 ;;      Locals:         1       0       0       0       0
  4277 ;;      Temps:          0       0       0       0       0
  4278 ;;      Totals:         1       0       0       0       0
  4279 ;;Total ram usage:        1 bytes
  4280 ;; Hardware stack levels used: 1
  4281 ;; Hardware stack levels required when called: 1
  4282 ;; This function calls:
  4283 ;;		Nothing
  4284 ;; This function is called by:
  4285 ;;		_main
  4286 ;; This function uses a non-reentrant model
  4287 ;;
  4288                           
  4289                           
  4290                           ;psect for function _UART_Write
  4291  07F4                     _UART_Write:
  4292                           
  4293                           ;incstack = 0
  4294                           ; Regs used in _UART_Write: [wreg]
  4295                           ;UART_Write@data stored from wreg
  4296  07F4  00F3               	movwf	UART_Write@data
  4297  07F5                     l2117:
  4298  07F5                     l310:	
  4299                           ;UART.c: 83:   while(!TXIF);
  4300                           
  4301  07F5  1283               	bcf	3,5	;RP0=0, select bank0
  4302  07F6  1303               	bcf	3,6	;RP1=0, select bank0
  4303  07F7  1E0C               	btfss	12,4	;volatile
  4304  07F8  2FFA               	goto	u1441
  4305  07F9  2FFB               	goto	u1440
  4306  07FA                     u1441:
  4307  07FA  2FF5               	goto	l310
  4308  07FB                     u1440:
  4309  07FB                     l2119:
  4310                           
  4311                           ;UART.c: 84:   TXREG = data;
  4312  07FB  0873               	movf	UART_Write@data,w
  4313  07FC  0099               	movwf	25	;volatile
  4314  07FD                     l313:
  4315  07FD  0008               	return
  4316  07FE                     __end_of_UART_Write:
  4317                           
  4318                           	psect	text19
  4319  072F                     __ptext19:	
  4320 ;; *************** function _I2CMasterRead *****************
  4321 ;; Defined at:
  4322 ;;		line 116 in file "I2C.c"
  4323 ;; Parameters:    Size  Location     Type
  4324 ;;  ACK             1    wreg     enum E1309
  4325 ;; Auto vars:     Size  Location     Type
  4326 ;;  ACK             1    4[COMMON] enum E1309
  4327 ;;  Datos           1    5[COMMON] unsigned char 
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  1    wreg      unsigned char 
  4330 ;; Registers used:
  4331 ;;		wreg, status,2, status,0, pclath, cstack
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4337 ;;      Params:         0       0       0       0       0
  4338 ;;      Locals:         2       0       0       0       0
  4339 ;;      Temps:          1       0       0       0       0
  4340 ;;      Totals:         3       0       0       0       0
  4341 ;;Total ram usage:        3 bytes
  4342 ;; Hardware stack levels used: 1
  4343 ;; Hardware stack levels required when called: 2
  4344 ;; This function calls:
  4345 ;;		_I2CMasterCheck
  4346 ;; This function is called by:
  4347 ;;		_main
  4348 ;; This function uses a non-reentrant model
  4349 ;;
  4350                           
  4351                           
  4352                           ;psect for function _I2CMasterRead
  4353  072F                     _I2CMasterRead:
  4354                           
  4355                           ;incstack = 0
  4356                           ; Regs used in _I2CMasterRead: [wreg+status,2+status,0+pclath+cstack]
  4357                           ;I2CMasterRead@ACK stored from wreg
  4358  072F  00F4               	movwf	I2CMasterRead@ACK
  4359  0730                     l2101:
  4360                           
  4361                           ;I2C.c: 117:     char Datos;;I2C.c: 118:     I2CMasterCheck();
  4362  0730  120A  118A  27D0  120A  118A  	fcall	_I2CMasterCheck
  4363  0735                     l2103:
  4364                           
  4365                           ;I2C.c: 119:     SSPCON2bits.RCEN = 1;
  4366  0735  1683               	bsf	3,5	;RP0=1, select bank1
  4367  0736  1303               	bcf	3,6	;RP1=0, select bank1
  4368  0737  1591               	bsf	17,3	;volatile
  4369                           
  4370                           ;I2C.c: 120:     I2CMasterCheck();
  4371  0738  120A  118A  27D0  120A  118A  	fcall	_I2CMasterCheck
  4372  073D                     l2105:
  4373                           
  4374                           ;I2C.c: 121:     Datos = SSPBUF;
  4375  073D  1283               	bcf	3,5	;RP0=0, select bank0
  4376  073E  1303               	bcf	3,6	;RP1=0, select bank0
  4377  073F  0813               	movf	19,w	;volatile
  4378  0740  00F3               	movwf	??_I2CMasterRead
  4379  0741  0873               	movf	??_I2CMasterRead,w
  4380  0742  00F5               	movwf	I2CMasterRead@Datos
  4381  0743                     l2107:
  4382                           
  4383                           ;I2C.c: 122:     I2CMasterCheck();
  4384  0743  120A  118A  27D0  120A  118A  	fcall	_I2CMasterCheck
  4385  0748                     l2109:
  4386                           
  4387                           ;I2C.c: 123:     if (ACK == 0) {
  4388  0748  0874               	movf	I2CMasterRead@ACK,w
  4389  0749  1D03               	btfss	3,2
  4390  074A  2F4C               	goto	u1431
  4391  074B  2F4D               	goto	u1430
  4392  074C                     u1431:
  4393  074C  2F51               	goto	l218
  4394  074D                     u1430:
  4395  074D                     l2111:
  4396                           
  4397                           ;I2C.c: 124:       SSPCON2bits.ACKDT = 0;
  4398  074D  1683               	bsf	3,5	;RP0=1, select bank1
  4399  074E  1303               	bcf	3,6	;RP1=0, select bank1
  4400  074F  1291               	bcf	17,5	;volatile
  4401                           
  4402                           ;I2C.c: 125:     }
  4403  0750  2F54               	goto	l219
  4404  0751                     l218:	
  4405                           ;I2C.c: 126:     else {
  4406                           
  4407                           
  4408                           ;I2C.c: 127:       SSPCON2bits.ACKDT = 1;
  4409  0751  1683               	bsf	3,5	;RP0=1, select bank1
  4410  0752  1303               	bcf	3,6	;RP1=0, select bank1
  4411  0753  1691               	bsf	17,5	;volatile
  4412  0754                     l219:	
  4413                           ;I2C.c: 128:     }
  4414                           
  4415                           
  4416                           ;I2C.c: 129:     SSPCON2bits.ACKEN = 1;
  4417  0754  1611               	bsf	17,4	;volatile
  4418  0755                     l2113:
  4419                           
  4420                           ;I2C.c: 130:     return Datos;
  4421  0755  0875               	movf	I2CMasterRead@Datos,w
  4422  0756                     l220:
  4423  0756  0008               	return
  4424  0757                     __end_of_I2CMasterRead:
  4425                           
  4426                           	psect	text20
  4427  07D0                     __ptext20:	
  4428 ;; *************** function _I2CMasterCheck *****************
  4429 ;; Defined at:
  4430 ;;		line 91 in file "I2C.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;		None
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;		None
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  1    wreg      void 
  4437 ;; Registers used:
  4438 ;;		wreg, status,2
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4444 ;;      Params:         0       0       0       0       0
  4445 ;;      Locals:         0       0       0       0       0
  4446 ;;      Temps:          0       0       0       0       0
  4447 ;;      Totals:         0       0       0       0       0
  4448 ;;Total ram usage:        0 bytes
  4449 ;; Hardware stack levels used: 1
  4450 ;; Hardware stack levels required when called: 1
  4451 ;; This function calls:
  4452 ;;		Nothing
  4453 ;; This function is called by:
  4454 ;;		_I2C_Master_Start
  4455 ;;		_I2CMasterStop
  4456 ;;		_I2CMasterWrite
  4457 ;;		_I2CMasterRead
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           
  4461                           
  4462                           ;psect for function _I2CMasterCheck
  4463  07D0                     _I2CMasterCheck:
  4464  07D0                     l1675:	
  4465                           ;incstack = 0
  4466                           ; Regs used in _I2CMasterCheck: [wreg+status,2]
  4467                           
  4468  07D0                     l201:	
  4469                           ;I2C.c: 92:     while((SSPSTAT & 0x04)|| (SSPCON2 & 0x1F));
  4470                           
  4471  07D0  1683               	bsf	3,5	;RP0=1, select bank1
  4472  07D1  1303               	bcf	3,6	;RP1=0, select bank1
  4473  07D2  1914               	btfsc	20,2	;volatile
  4474  07D3  2FD5               	goto	u761
  4475  07D4  2FD6               	goto	u760
  4476  07D5                     u761:
  4477  07D5  2FD0               	goto	l201
  4478  07D6                     u760:
  4479  07D6                     l1677:
  4480  07D6  0811               	movf	17,w	;volatile
  4481  07D7  391F               	andlw	31
  4482  07D8  1D03               	btfss	3,2
  4483  07D9  2FDB               	goto	u771
  4484  07DA  2FDC               	goto	u770
  4485  07DB                     u771:
  4486  07DB  2FD0               	goto	l201
  4487  07DC                     u770:
  4488  07DC                     l204:
  4489  07DC  0008               	return
  4490  07DD                     __end_of_I2CMasterCheck:
  4491                           
  4492                           	psect	text21
  4493  07DD                     __ptext21:	
  4494 ;; *************** function _Escribir_caracterLCD *****************
  4495 ;; Defined at:
  4496 ;;		line 63 in file "LCD.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;  a               1    wreg     unsigned char 
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;  a               1    5[COMMON] unsigned char 
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  1    wreg      void 
  4503 ;; Registers used:
  4504 ;;		wreg, status,2, status,0, pclath, cstack
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4510 ;;      Params:         0       0       0       0       0
  4511 ;;      Locals:         1       0       0       0       0
  4512 ;;      Temps:          0       0       0       0       0
  4513 ;;      Totals:         1       0       0       0       0
  4514 ;;Total ram usage:        1 bytes
  4515 ;; Hardware stack levels used: 1
  4516 ;; Hardware stack levels required when called: 3
  4517 ;; This function calls:
  4518 ;;		_Escribir_comandoLCD
  4519 ;; This function is called by:
  4520 ;;		_main
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           
  4525                           ;psect for function _Escribir_caracterLCD
  4526  07DD                     _Escribir_caracterLCD:
  4527                           
  4528                           ;incstack = 0
  4529                           ; Regs used in _Escribir_caracterLCD: [wreg+status,2+status,0+pclath+cstack]
  4530                           ;Escribir_caracterLCD@a stored from wreg
  4531  07DD  00F5               	movwf	Escribir_caracterLCD@a
  4532  07DE                     l2575:
  4533                           
  4534                           ;LCD.c: 64:     PORTDbits.RD3 = 1; PORTDbits.RD4 = 0;
  4535  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  4536  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  4537  07E0  1588               	bsf	8,3	;volatile
  4538  07E1  1208               	bcf	8,4	;volatile
  4539  07E2                     l2577:
  4540                           
  4541                           ;LCD.c: 66:     Escribir_comandoLCD(a);
  4542  07E2  0875               	movf	Escribir_caracterLCD@a,w
  4543  07E3  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  4544  07E8                     l260:
  4545  07E8  0008               	return
  4546  07E9                     __end_of_Escribir_caracterLCD:
  4547                           
  4548                           	psect	text22
  4549  064B                     __ptext22:	
  4550 ;; *************** function _Escribir_comandoLCD *****************
  4551 ;; Defined at:
  4552 ;;		line 17 in file "LCD.c"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;  Comando         1    wreg     unsigned char 
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;  Comando         1    4[COMMON] unsigned char 
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  1    wreg      void 
  4559 ;; Registers used:
  4560 ;;		wreg, status,2, status,0, pclath, cstack
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4566 ;;      Params:         0       0       0       0       0
  4567 ;;      Locals:         1       0       0       0       0
  4568 ;;      Temps:          0       0       0       0       0
  4569 ;;      Totals:         1       0       0       0       0
  4570 ;;Total ram usage:        1 bytes
  4571 ;; Hardware stack levels used: 1
  4572 ;; Hardware stack levels required when called: 2
  4573 ;; This function calls:
  4574 ;;		_prender_ELCD
  4575 ;; This function is called by:
  4576 ;;		_Iniciar_LCD
  4577 ;;		_Escribir_stringLCD
  4578 ;;		_Escribir_caracterLCD
  4579 ;;		_Limpiar_pantallaLCD
  4580 ;;		_set_cursor
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           
  4584                           
  4585                           ;psect for function _Escribir_comandoLCD
  4586  064B                     _Escribir_comandoLCD:
  4587                           
  4588                           ;incstack = 0
  4589                           ; Regs used in _Escribir_comandoLCD: [wreg+status,2+status,0+pclath+cstack]
  4590                           ;Escribir_comandoLCD@Comando stored from wreg
  4591  064B  00F4               	movwf	Escribir_comandoLCD@Comando
  4592  064C                     l2339:
  4593                           
  4594                           ;LCD.c: 18:     if((Comando & 0b00000001) == 0b00000001){PORTDbits.RD6 = 1;} else {PORTD
      +                          bits.RD6 = 0;}
  4595  064C  1C74               	btfss	Escribir_comandoLCD@Comando,0
  4596  064D  2E4F               	goto	u1481
  4597  064E  2E50               	goto	u1480
  4598  064F                     u1481:
  4599  064F  2E54               	goto	l232
  4600  0650                     u1480:
  4601  0650                     l2341:
  4602  0650  1283               	bcf	3,5	;RP0=0, select bank0
  4603  0651  1303               	bcf	3,6	;RP1=0, select bank0
  4604  0652  1708               	bsf	8,6	;volatile
  4605  0653  2E57               	goto	l233
  4606  0654                     l232:
  4607  0654  1283               	bcf	3,5	;RP0=0, select bank0
  4608  0655  1303               	bcf	3,6	;RP1=0, select bank0
  4609  0656  1308               	bcf	8,6	;volatile
  4610  0657                     l233:
  4611                           
  4612                           ;LCD.c: 19:     if((Comando & 0b00000010) == 0b00000010){PORTDbits.RD7 = 1;} else {PORTD
      +                          bits.RD7 = 0;}
  4613  0657  1CF4               	btfss	Escribir_comandoLCD@Comando,1
  4614  0658  2E5A               	goto	u1491
  4615  0659  2E5B               	goto	u1490
  4616  065A                     u1491:
  4617  065A  2E5D               	goto	l234
  4618  065B                     u1490:
  4619  065B                     l2343:
  4620  065B  1788               	bsf	8,7	;volatile
  4621  065C  2E5E               	goto	l235
  4622  065D                     l234:
  4623  065D  1388               	bcf	8,7	;volatile
  4624  065E                     l235:
  4625                           
  4626                           ;LCD.c: 20:     if((Comando & 0b00000100) == 0b00000100){PORTBbits.RB0 = 1;} else {PORTB
      +                          bits.RB0 = 0;}
  4627  065E  1D74               	btfss	Escribir_comandoLCD@Comando,2
  4628  065F  2E61               	goto	u1501
  4629  0660  2E62               	goto	u1500
  4630  0661                     u1501:
  4631  0661  2E64               	goto	l236
  4632  0662                     u1500:
  4633  0662                     l2345:
  4634  0662  1406               	bsf	6,0	;volatile
  4635  0663  2E65               	goto	l237
  4636  0664                     l236:
  4637  0664  1006               	bcf	6,0	;volatile
  4638  0665                     l237:
  4639                           
  4640                           ;LCD.c: 21:     if((Comando & 0b00001000) == 0b00001000){PORTBbits.RB1 = 1;} else {PORTB
      +                          bits.RB1 = 0;}
  4641  0665  1DF4               	btfss	Escribir_comandoLCD@Comando,3
  4642  0666  2E68               	goto	u1511
  4643  0667  2E69               	goto	u1510
  4644  0668                     u1511:
  4645  0668  2E6B               	goto	l238
  4646  0669                     u1510:
  4647  0669                     l2347:
  4648  0669  1486               	bsf	6,1	;volatile
  4649  066A  2E6C               	goto	l239
  4650  066B                     l238:
  4651  066B  1086               	bcf	6,1	;volatile
  4652  066C                     l239:
  4653                           
  4654                           ;LCD.c: 22:     if((Comando & 0b00010000) == 0b00010000){PORTBbits.RB2 = 1;} else {PORTB
      +                          bits.RB2 = 0;}
  4655  066C  1E74               	btfss	Escribir_comandoLCD@Comando,4
  4656  066D  2E6F               	goto	u1521
  4657  066E  2E70               	goto	u1520
  4658  066F                     u1521:
  4659  066F  2E72               	goto	l240
  4660  0670                     u1520:
  4661  0670                     l2349:
  4662  0670  1506               	bsf	6,2	;volatile
  4663  0671  2E73               	goto	l241
  4664  0672                     l240:
  4665  0672  1106               	bcf	6,2	;volatile
  4666  0673                     l241:
  4667                           
  4668                           ;LCD.c: 23:     if((Comando & 0b00100000) == 0b00100000){PORTBbits.RB3 = 1;} else {PORTB
      +                          bits.RB3 = 0;}
  4669  0673  1EF4               	btfss	Escribir_comandoLCD@Comando,5
  4670  0674  2E76               	goto	u1531
  4671  0675  2E77               	goto	u1530
  4672  0676                     u1531:
  4673  0676  2E79               	goto	l242
  4674  0677                     u1530:
  4675  0677                     l2351:
  4676  0677  1586               	bsf	6,3	;volatile
  4677  0678  2E7A               	goto	l243
  4678  0679                     l242:
  4679  0679  1186               	bcf	6,3	;volatile
  4680  067A                     l243:
  4681                           
  4682                           ;LCD.c: 24:     if((Comando & 0b01000000) == 0b01000000){PORTBbits.RB4 = 1;} else {PORTB
      +                          bits.RB4 = 0;}
  4683  067A  1F74               	btfss	Escribir_comandoLCD@Comando,6
  4684  067B  2E7D               	goto	u1541
  4685  067C  2E7E               	goto	u1540
  4686  067D                     u1541:
  4687  067D  2E80               	goto	l244
  4688  067E                     u1540:
  4689  067E                     l2353:
  4690  067E  1606               	bsf	6,4	;volatile
  4691  067F  2E81               	goto	l245
  4692  0680                     l244:
  4693  0680  1206               	bcf	6,4	;volatile
  4694  0681                     l245:
  4695                           
  4696                           ;LCD.c: 25:     if((Comando & 0b10000000) == 0b10000000){PORTBbits.RB5 = 1;} else {PORTB
      +                          bits.RB5 = 0;}
  4697  0681  1FF4               	btfss	Escribir_comandoLCD@Comando,7
  4698  0682  2E84               	goto	u1551
  4699  0683  2E85               	goto	u1550
  4700  0684                     u1551:
  4701  0684  2E87               	goto	l246
  4702  0685                     u1550:
  4703  0685                     l2355:
  4704  0685  1686               	bsf	6,5	;volatile
  4705  0686  2E88               	goto	l2357
  4706  0687                     l246:
  4707  0687  1286               	bcf	6,5	;volatile
  4708  0688                     l2357:
  4709                           
  4710                           ;LCD.c: 27:     prender_ELCD();
  4711  0688  120A  118A  27C2  120A  118A  	fcall	_prender_ELCD
  4712  068D                     l248:
  4713  068D  0008               	return
  4714  068E                     __end_of_Escribir_comandoLCD:
  4715                           
  4716                           	psect	text23
  4717  07C2                     __ptext23:	
  4718 ;; *************** function _prender_ELCD *****************
  4719 ;; Defined at:
  4720 ;;		line 11 in file "LCD.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;		None
  4723 ;; Auto vars:     Size  Location     Type
  4724 ;;		None
  4725 ;; Return value:  Size  Location     Type
  4726 ;;                  1    wreg      void 
  4727 ;; Registers used:
  4728 ;;		wreg
  4729 ;; Tracked objects:
  4730 ;;		On entry : 0/0
  4731 ;;		On exit  : 0/0
  4732 ;;		Unchanged: 0/0
  4733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4734 ;;      Params:         0       0       0       0       0
  4735 ;;      Locals:         0       0       0       0       0
  4736 ;;      Temps:          1       0       0       0       0
  4737 ;;      Totals:         1       0       0       0       0
  4738 ;;Total ram usage:        1 bytes
  4739 ;; Hardware stack levels used: 1
  4740 ;; Hardware stack levels required when called: 1
  4741 ;; This function calls:
  4742 ;;		Nothing
  4743 ;; This function is called by:
  4744 ;;		_Escribir_comandoLCD
  4745 ;; This function uses a non-reentrant model
  4746 ;;
  4747                           
  4748                           
  4749                           ;psect for function _prender_ELCD
  4750  07C2                     _prender_ELCD:
  4751  07C2                     l2333:	
  4752                           ;incstack = 0
  4753                           ; Regs used in _prender_ELCD: [wreg]
  4754                           
  4755                           
  4756                           ;LCD.c: 12:     PORTDbits.RD5 = 1;
  4757  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  4758  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  4759  07C4  1688               	bsf	8,5	;volatile
  4760  07C5                     l2335:
  4761                           
  4762                           ;LCD.c: 13:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  4763  07C5  30C7               	movlw	199
  4764  07C6  00F3               	movwf	??_prender_ELCD
  4765  07C7                     u2027:
  4766  07C7  2FC8               	nop2
  4767  07C8  0BF3               	decfsz	??_prender_ELCD,f
  4768  07C9  2FC7               	goto	u2027
  4769  07CA  2FCB               	nop2
  4770  07CB  2FCC               	nop2
  4771  07CC                     l2337:
  4772                           
  4773                           ;LCD.c: 14:     PORTDbits.RD5 = 0;
  4774  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  4775  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  4776  07CE  1288               	bcf	8,5	;volatile
  4777  07CF                     l229:
  4778  07CF  0008               	return
  4779  07D0                     __end_of_prender_ELCD:
  4780                           
  4781                           	psect	text24
  4782  07B1                     __ptext24:	
  4783 ;; *************** function _isr *****************
  4784 ;; Defined at:
  4785 ;;		line 101 in file "Maestro I2C.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;		None
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;		None
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1    wreg      void 
  4792 ;; Registers used:
  4793 ;;		wreg
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4799 ;;      Params:         0       0       0       0       0
  4800 ;;      Locals:         0       0       0       0       0
  4801 ;;      Temps:          3       0       0       0       0
  4802 ;;      Totals:         3       0       0       0       0
  4803 ;;Total ram usage:        3 bytes
  4804 ;; Hardware stack levels used: 1
  4805 ;; This function calls:
  4806 ;;		Nothing
  4807 ;; This function is called by:
  4808 ;;		Interrupt level 1
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812                           
  4813                           ;psect for function _isr
  4814  07B1                     _isr:
  4815  07B1                     i1l2207:
  4816                           
  4817                           ;Maestro I2C.c: 102:     if(PIR1bits.RCIF){
  4818  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  4819  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  4820  07B3  1E8C               	btfss	12,5	;volatile
  4821  07B4  2FB6               	goto	u146_21
  4822  07B5  2FB7               	goto	u146_20
  4823  07B6                     u146_21:
  4824  07B6  2FBB               	goto	i1l120
  4825  07B7                     u146_20:
  4826  07B7                     i1l2209:
  4827                           
  4828                           ;Maestro I2C.c: 103:         dato = RCREG;
  4829  07B7  081A               	movf	26,w	;volatile
  4830  07B8  00F0               	movwf	??_isr
  4831  07B9  0870               	movf	??_isr,w
  4832  07BA  00A1               	movwf	_dato
  4833  07BB                     i1l120:
  4834  07BB  0872               	movf	??_isr+2,w
  4835  07BC  008A               	movwf	10
  4836  07BD  0E71               	swapf	??_isr+1,w
  4837  07BE  0083               	movwf	3
  4838  07BF  0EFE               	swapf	btemp,f
  4839  07C0  0E7E               	swapf	btemp,w
  4840  07C1  0009               	retfie
  4841  07C2                     __end_of_isr:
  4842  007E                     btemp	set	126	;btemp
  4843  007E                     wtemp0	set	126
  4844                           
  4845                           	psect	intentry
  4846  0004                     __pintentry:	
  4847                           ;incstack = 0
  4848                           ; Regs used in _isr: [wreg]
  4849                           
  4850  0004                     interrupt_function:
  4851  007E                     saved_w	set	btemp
  4852  0004  00FE               	movwf	btemp
  4853  0005  0E03               	swapf	3,w
  4854  0006  00F1               	movwf	??_isr+1
  4855  0007  080A               	movf	10,w
  4856  0008  00F2               	movwf	??_isr+2
  4857  0009  120A  118A  2FB1   	ljmp	_isr
  4858                           
  4859                           	psect	config
  4860                           
  4861                           ;Config register CONFIG1 @ 0x2007
  4862                           ;	Oscillator Selection bits
  4863                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4864                           ;	Watchdog Timer Enable bit
  4865                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4866                           ;	Power-up Timer Enable bit
  4867                           ;	PWRTE = OFF, PWRT disabled
  4868                           ;	RE3/MCLR pin function select bit
  4869                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4870                           ;	Code Protection bit
  4871                           ;	CP = OFF, Program memory code protection is disabled
  4872                           ;	Data Code Protection bit
  4873                           ;	CPD = OFF, Data memory code protection is disabled
  4874                           ;	Brown Out Reset Selection bits
  4875                           ;	BOREN = OFF, BOR disabled
  4876                           ;	Internal External Switchover bit
  4877                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4878                           ;	Fail-Safe Clock Monitor Enabled bit
  4879                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4880                           ;	Low Voltage Programming Enable bit
  4881                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4882                           ;	In-Circuit Debugger Mode bit
  4883                           ;	DEBUG = 0x1, unprogrammed default
  4884  2007                     	org	8199
  4885  2007  20D4               	dw	8404
  4886                           
  4887                           ;Config register CONFIG2 @ 0x2008
  4888                           ;	Brown-out Reset Selection bit
  4889                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4890                           ;	Flash Program Memory Self Write Enable bits
  4891                           ;	WRT = OFF, Write protection off
  4892  2008                     	org	8200
  4893  2008  3FFF               	dw	16383

Data Sizes:
    Strings     44
    Constant    0
    Data        2
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     24      51
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Escribir_stringLCD@d	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_3(CODE[13]), STR_2(CODE[15]), STR_1(CODE[16]), 

    divisor_dec@dig1	PTR unsigned char  size(1) Largest target is 1
		 -> Giro_digy(COMMON[1]), Giro_digx(COMMON[1]), 


Critical Paths under _main in COMMON

    _main->_Escribir_stringLCD
    _main->_set_cursor
    _setup->_Escribir_stringLCD
    _setup->_InitMSSP
    _setup->_set_cursor
    _set_cursor->_Escribir_comandoLCD
    _Limpiar_pantallaLCD->_Escribir_comandoLCD
    _InitMSSP->___lldiv
    _InitMPU6050->_I2CMasterWrite
    _InitMPU6050->_I2C_Master_Start
    _Iniciar_LCD->_Escribir_comandoLCD
    _Escribir_stringLCD->_Escribir_comandoLCD
    _divisor_dec->___awdiv
    _divisor_dec->___awmod
    _Escribir_caracterLCD->_Escribir_comandoLCD
    _Escribir_comandoLCD->_prender_ELCD

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_setup
    _setup->_InitMSSP
    _InitMSSP->___lldiv
    _divisor_dec->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6805
                                             21 BANK0      3     3      0
               _Escribir_caracterLCD
                 _Escribir_stringLCD
                      _I2CMasterRead
                      _I2CMasterStop
                     _I2CMasterWrite
                   _I2C_Master_Start
                         _UART_Write
                        _divisor_dec
                         _set_cursor
                              _setup
                     _tabla_numASCII
 ---------------------------------------------------------------------------------
 (1) _tabla_numASCII                                       3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                3     3      0    3378
                                             18 BANK0      3     3      0
                       _Config_USART
                 _Escribir_stringLCD
                        _Iniciar_LCD
                        _InitMPU6050
                           _InitMSSP
                _Limpiar_pantallaLCD
                            _initOsc
                         _set_cursor
 ---------------------------------------------------------------------------------
 (2) _set_cursor                                           4     3      1     825
                                              5 COMMON     3     2      1
                                              0 BANK0      1     1      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      88
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Limpiar_pantallaLCD                                  2     2      0     248
                                              5 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _InitMSSP                                             9     5      4    1001
                                              4 COMMON     4     4      0
                                             13 BANK0      5     1      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     601
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _InitMPU6050                                          3     3      0      66
                                              4 COMMON     3     3      0
                      _I2CMasterStop
                     _I2CMasterWrite
                   _I2C_Master_Start
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     1     1      0      44
                                              3 COMMON     1     1      0
                     _I2CMasterCheck
 ---------------------------------------------------------------------------------
 (3) _I2CMasterWrite                                       1     1      0      22
                                              3 COMMON     1     1      0
                     _I2CMasterCheck
 ---------------------------------------------------------------------------------
 (3) _I2CMasterStop                                        0     0      0       0
                     _I2CMasterCheck
 ---------------------------------------------------------------------------------
 (2) _Iniciar_LCD                                          2     2      0     248
                                              5 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Escribir_stringLCD                                   3     3      0     486
                                              5 COMMON     3     3      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Config_USART                                         4     0      4     416
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _divisor_dec                                          7     4      3    1682
                                              4 BANK0      7     4      3
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     613
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2CMasterRead                                        3     3      0      45
                                              3 COMMON     3     3      0
                     _I2CMasterCheck
 ---------------------------------------------------------------------------------
 (4) _I2CMasterCheck                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Escribir_caracterLCD                                 1     1      0     279
                                              5 COMMON     1     1      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (3) _Escribir_comandoLCD                                  1     1      0     248
                                              4 COMMON     1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (4) _prender_ELCD                                         1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_caracterLCD
     _Escribir_comandoLCD
       _prender_ELCD
   _Escribir_stringLCD
     _Escribir_comandoLCD
   _I2CMasterRead
     _I2CMasterCheck
   _I2CMasterStop
     _I2CMasterCheck
   _I2CMasterWrite
     _I2CMasterCheck
   _I2C_Master_Start
     _I2CMasterCheck
   _UART_Write
   _divisor_dec
     ___awdiv
     ___awmod
   _set_cursor
     _Escribir_comandoLCD
   _setup
     _Config_USART
     _Escribir_stringLCD
     _Iniciar_LCD
       _Escribir_comandoLCD
     _InitMPU6050
       _I2CMasterStop
       _I2CMasterWrite
       _I2C_Master_Start
     _InitMSSP
       ___lldiv
     _Limpiar_pantallaLCD
       _Escribir_comandoLCD
     _initOsc
     _set_cursor
   _tabla_numASCII

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     18      33       5       63.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3E      12        0.0%
ABS                  0      0      3E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Mar 07 13:11:07 2022

                            pc 0002                    _SSPSTATbits 0094                             _T1 0032  
                           _T2 0031                             _UA 04A1                   ___awdiv@sign 003A  
                           fsr 0004                set_cursor@linea 0039                   ?_divisor_dec 003D  
                          l201 07D0                            l131 0429                            l204 07DC  
                          l220 0756                            l212 0FFF                            l141 06CC  
                          l310 07F5                            l215 07F3                            l240 0672  
                          l232 0654                            l136 0607                            l208 07AD  
                          l241 0673                            l233 0657                            l313 07FD  
                          l209 07B0                            l242 0679                            l234 065D  
                          l218 0751                            l243 067A                            l235 065E  
                          l219 0754                            l307 032C                            l251 055F  
                          l244 0680                            l236 0664                            l260 07E8  
                          l324 03B6                            l229 07CF                            l245 0681  
                          l237 0665                            l501 04FA                            l246 0687  
                          l238 066B                            l190 0200                            l239 066C  
                          l263 0796                            l248 068D                            l257 077C  
                          l281 072B                            l273 064A                            l282 072E  
                          l195 0224                            l196 0264                            l188 01F2  
                          l198 027C                            l631 05BA                            l618 0492  
                          _CKP 00A4                            _GIE 005F                            _Ax1 0038  
                          _Ax2 0037                            _Ay1 0036                            u760 07D6  
                          _Ay2 0035                            u761 07D5                            _Az1 0034  
                          u770 07DC                            _Az2 0033                            u771 07DB  
                          u780 07A2                            u781 07A1                            u790 07AA  
                          u791 07A9                            _Gx1 0078                            _Gx2 0030  
                          _Gy1 002F                            _Gy2 002E                            _Gz1 002D  
                          _Gz2 002C                            _isr 07B1                            fsr0 0004  
                          indf 0000                   ___awmod@sign 003A                  ??_InitMPU6050 0074  
                         l2001 0438                           l2011 044D                           l2003 043C  
                         l2101 0730                           l2021 0470                           l2013 0450  
                         l2005 0441                           l2111 074D                           l2103 0735  
                         l2031 0489                           l2023 0476                           l2015 0457  
                         l2007 0445                           l2113 0755                           l2105 073D  
                         l2033 048E                           l2025 0477                           l2017 045B  
                         l2009 0447                           l2107 0743                           l2027 047E  
                         l2019 045F                           l2109 0748                           l2117 07F5  
                         l2029 0484                           l2141 0692                           l2133 068F  
                         l2119 07FB                           l2135 0690                           l2401 063A  
                         l2153 0696                           l2411 075E                           l2403 063C  
                         l2171 069C                           l2147 0694                           l2333 07C2  
                         l2341 0650                           l2501 0563                           l2413 076B  
                         l1701 0FFC                           l2421 01D9                           l2405 0641  
                         l2165 069A                           l2335 07C5                           l2351 0677  
                         l2343 065B                           l2511 0577                           l2503 0567  
                         l2415 076F                           l2407 0758                           l2431 01FD  
                         l2423 01E2                           l2183 06A0                           l2159 0698  
                         l2337 07CC                           l2353 067E                           l2345 0662  
                         l2521 058F                           l2513 057D                           l2505 056C  
                         l2409 075C                           l2361 04A5                           l2441 0227  
                         l2425 01E6                           l2433 0206                           l2417 01CF  
                         l2177 069E                           l2601 0085                           l2355 0685  
                         l2347 0669                           l2339 064C                           l2531 05B1  
                         l2523 0599                           l2515 0580                           l2507 056E  
                         l2371 04D4                           l2363 04A8                           l2451 0269  
                         l2443 022E                           l2435 020C                           l2427 01EE  
                         l2419 01D0                           l2611 00BC                           l2603 0090  
                         l2357 0688                           l2349 0670                           l2533 05B6  
                         l2525 059F                           l2517 0587                           l2509 0572  
                         l2373 04E2                           l2365 04B5                           l2453 026F  
                         l2445 022F                           l2437 0216                           l2461 0275  
                         l2429 01F5                           l2541 03CB                           l2701 06AC  
                         l2189 06A2                           l2197 06A4                           l2621 00ED  
                         l2613 00C7                           l2605 009B                           l2527 05A6  
                         l2519 058B                           l2471 050E                           l2375 04E3  
                         l2367 04B9                           l2359 0493                           l2463 0279  
                         l2455 0270                           l2447 0233                           l2439 021E  
                         l2391 061F                           l2383 060B                           l2551 03F1  
                         l2543 03DB                           l2631 010F                           l2623 00F3  
                         l2615 00D2                           l2607 00A6                           l2529 05AC  
                         l2481 053E                           l2473 051D                           l2465 04FB  
                         l2377 04EC                           l2369 04C2                           l2457 0271  
                         l2449 0262                           l2393 0625                           l2385 060D  
                         l2561 041C                           l2553 03F7                           l2545 03E0  
                         l2537 03B7                           l2641 0147                           l2633 0114  
                         l2625 00FD                           l2617 00DD                           l2609 00B1  
                         l1675 07D0                           l2571 05F4                           l2563 05BB  
                         l1931 0298                           l1923 027D                           l2483 0543  
                         l2475 0522                           l2467 04FF                           l1691 07A5  
                         l1851 0345                           l2379 04F2                           l2459 0272  
                         l2491 077D                           l2395 062E                           l2387 0612  
                         l2555 0403                           l2547 03E5                           l2539 03C5  
                         l2651 016B                           l2643 014E                           l2635 0126  
                         l2627 0103                           l2619 00E8                           l1677 07D6  
                         l2573 05FA                           l1941 02B4                           l1925 0286  
                         l1933 0299                           l2485 054E                           l2477 052D  
                         l2469 0508                           l1693 07AA                           l1685 0798  
                         l1861 0363                           l1853 034B                           l1845 032D  
                         l2493 0781                           l1781 0700                           l2389 0619  
                         l2557 0409                           l2549 03EA                           l2661 01A6  
                         l2653 0173                           l2645 0154                           l2637 0131  
                         l2629 0109                           l2581 0030                           l2575 07DE  
                         l1951 02CF                           l1935 02A2                           l1943 02B5  
                         l1927 028D                           l2487 0554                           l2479 0533  
                         l1695 07EA                           l1687 079D                           l1871 0381  
                         l1863 0369                           l1855 0351                           l1847 0339  
                         l2495 0787                           l1791 071C                           l1783 0706  
                         l2399 0634                           l2559 0417                           l2663 01B0  
                         l2655 0185                           l2647 015B                           l2639 013C  
                         l2591 004E                           l2583 0036                           l2577 07E2  
                         l2569 05BF                           l1961 02EB                           l1945 02BE  
                         l1953 02D0                           l1937 02A9                           l1929 0294  
                         l1697 07EF                           l1689 07A2                           l1881 039F  
                         l1873 0387                           l1865 036F                           l1857 0357  
                         l1849 033F                           l2497 0790                           l1793 0721  
                         l1785 070B                           l2665 01B8                           l2657 0190  
                         l2649 0163                           l2593 0059                           l2585 003C  
                         l2499 0560                           l1971 0307                           l1955 02D9  
                         l1963 02EC                           l1947 02C4                           l1939 02B0  
                         l1699 0FF7                           l1883 03A5                           l1875 038D  
                         l1867 0375                           l1859 035D                           l1795 0726  
                         l1787 0711                           l2667 01C0                           l2659 019B  
                         l2595 0064                           l2587 0042                           l2579 002B  
                         l1981 0322                           l1965 02F5                           l1973 0308  
                         l1957 02E0                           l1949 02CB                           l1885 03AB  
                         l1877 0393                           l1869 037B                           l1789 0716  
                         l2597 006F                           l2589 0048                           l1991 032B  
                         l1975 0311                           l1983 0323                           l1967 02FC  
                         l1959 02E7                           l1887 03B1                           l1879 0399  
                         l2599 007A                           l1993 042A                           l1985 0326  
                         l1977 0317                           l1969 0303                           l1995 042D  
                         l1987 0327                           l1979 031E                           l1997 0431  
                         l1989 0328                           l1999 0436                           ?_isr 0070  
                         STR_1 06D3                           STR_2 06E3                           STR_3 06F2  
                         u1000 0706                           u1001 0705                           u1010 0711  
                         u1011 0710                           u1020 071C                           u1021 071B  
                         u1030 0726                           u1031 0725                           u1200 02F5  
                         u1120 0286                           u1201 02F4                           u1121 0285  
                         u1210 02FC                           u1130 028D                           u1211 02FB  
                         u1131 028C                           u1300 0470                           u1220 0311  
                         u1140 02A2                           u1301 046F                           u1221 0310  
                         u1141 02A1                           u1230 0317                           u1150 02A9  
                         u1231 0316                           u1151 02A8                           u2007 054B  
                         u1320 0484                           u1240 0431                           u1160 02BE  
                         u1321 0483                           u1305 046C                           u1241 0430  
                         u1161 02BD                           u2017 0556                           u1330 0489  
                         u1250 043C                           u1170 02C4                           u2027 07C7  
                         u1331 0488                           u1315 0478                           u1251 043B  
                         u1171 02C3                           u1500 0662                           u1260 044D  
                         u1180 02D9                           u1501 0661                           u1261 044C  
                         u1181 02D8                           u1510 0669                           u1430 074D  
                         u1190 02E0                           u1511 0668                           u1431 074C  
                         u1191 02DF                           u1520 0670                           u1440 07FB  
                         u1280 045F                           u1600 04D4                           u1521 066F  
                         u1441 07FA                           u1281 045E                           u1601 04D3  
                         u1530 0677                           u1531 0676                           u1275 0451  
                         u1540 067E                           u1620 04F2                           u1700 01FD  
                         u1541 067D                           u1621 04F1                           u1605 04D0  
                         u1701 01FC                           u1550 0685                           u1710 020C  
                         u1630 0612                           u1551 0684                           u1295 0460  
                         u1615 04E4                           u1711 020B                           u1631 0611  
                         u1480 0650                           u1800 058F                           u1560 04A5  
                         u1720 021E                           u1640 061F                           u1481 064F  
                         u1801 058E                           u1561 04A4                           u1721 021D  
                         u1641 061E                           u1490 065B                           u1810 0599  
                         u1730 0224                           u1650 0633                           u1491 065A  
                         u1811 0598                           u1731 0223                           u1651 0632  
                         u1580 04B9                           u1740 022E                           u1660 0641  
                         u1581 04B8                           u1741 022D                           u1661 0640  
                         u1830 05AC                           u1670 077C                           u1750 0243  
                         u1831 05AB                           u1815 0595                           u1671 077B  
                         u1575 04AA                           u1840 05B1                           u1760 0567  
                         u1680 01E2                           u1841 05B0                           u1825 05A0  
                         u1761 0566                           u1681 01E1                           u1770 0572  
                         u1850 0607                           u1690 01EE                           u1771 0571  
                         u1851 0606                           u1595 04BB                           u1755 023E  
                         u1691 01ED                           u1907 0645                           u1780 057D  
                         u1781 057C                           u1917 078B                           u1855 0603  
                         u1927 01D4                           u1937 0333                           u1795 0581  
                         u1947 0503                           _PEIE 005E                           u1957 0512  
                         u1877 00F9                           u1967 051F                           u1887 0411  
                         u1977 052A                           u1897 0629                           u1987 0535  
                         u1997 0540                           _TXIF 0064                  ??_Iniciar_LCD 0075  
                         _dato 0021                           _main 002B                           btemp 007E  
                         start 000C           _Escribir_caracterLCD 07DD         __size_of_I2CMasterRead 0028  
       __size_of_I2CMasterStop 0009                          ??_isr 0070     __end_of_Escribir_stringLCD 077D  
                        ?_main 0070                __end_of___awdiv 0493                __end_of___awmod 05BB  
                        _ANSEL 0188                __end_of___lldiv 04FB                ___awdiv@divisor 0073  
                        i1l120 07BB                ___awdiv@counter 0039                          _RCREG 001A  
                        _SPBRG 0099                          _PORTA 0005                          _PORTB 0006  
                        _PORTD 0008                          _TRISA 0085                          _TRISB 0086  
                        _TRISD 0088                          _SSPIE 0463                          _SSPIF 0063  
                        _TXREG 0019                   InitMSSP@Dato 0046                   InitMSSP@Modo 004A  
                  ?_UART_Write 0070                          _dec_x 002A                          _dec_y 0027  
                        _dec_z 0023                          _cen_x 0029                          _cen_y 0026  
                        _cen_z 0022                __end_of_initOsc 072F                          _setup 03B7  
                        _uni_x 002B                          _uni_y 0028                          _uni_z 0024  
          _Limpiar_pantallaLCD 077D                          pclath 000A            __end_of_InitMPU6050 03B7  
                        status 0003                          wtemp0 007E          ?_Escribir_caracterLCD 0070  
         __end_of_Config_USART 032D                __initialization 000F            __end_of_Iniciar_LCD 0560  
                 __end_of_main 01CC        __size_of_I2CMasterCheck 000D               __end_of_InitMSSP 027D  
         ?_Limpiar_pantallaLCD 0070        __size_of_I2CMasterWrite 000B                         ??_main 004E  
                 divisor_dec@b 003D                   divisor_dec@n 0042              ?_I2C_Master_Start 0070  
                _I2CMasterRead 072F             ??_I2C_Master_Start 0073                  _I2CMasterStop 0FF7  
           set_cursor@posicion 0075               ___awdiv@dividend 0075                         ?_setup 0070  
                       _ANSELH 0189                         i1l2207 07B1                         i1l2209 07B7  
                       u146_20 07B7                         u146_21 07B6                         _SPBRGH 009A  
                       _SSPADD 0093                         _TRISC3 043B                         _TRISC4 043C  
                       _SSPCON 0014                         _SSPBUF 0013            __size_of_UART_Write 000A  
             ??_tabla_numASCII 0073          ??_Limpiar_pantallaLCD 0075                      ??___awdiv 0077  
                    ??___awmod 0077                      ??___lldiv 0073               ___awdiv@quotient 003B  
              ___awmod@divisor 0073                ___awmod@counter 0039                      ??_initOsc 0073  
         __size_of_divisor_dec 004D                         saved_w 007E                    _InitMPU6050 032D  
               ?_I2CMasterRead 0070                 ?_I2CMasterStop 0070                divisor_dec@dig1 003F  
      __end_of__initialization 0027                    _Iniciar_LCD 04FB         ??_Escribir_caracterLCD 0075  
               __pcstackCOMMON 0070                   __pidataBANK0 07FE                  __end_of_setup 042A  
                      ??_setup 004B                     __pbssBANK0 0020                      ?_InitMSSP 0046  
        __size_of_Config_USART 00B0                     __pmaintext 002B                 _I2CMasterCheck 07D0  
                   __pintentry 0004                 _I2CMasterWrite 07E9   __size_of_Escribir_comandoLCD 0043  
          I2CMasterWrite@Datos 0073                   initOsc@Valor 0073                ??_I2CMasterRead 0073  
              ??_I2CMasterStop 0073                   ??_UART_Write 0073                   _Config_USART 027D  
                      _SSPCON2 0091                        _SSPSTAT 0094             _Escribir_stringLCD 0757  
                   __stringtab 06CD                     ??_InitMSSP 0074                tabla_numASCII@a 0075  
          ?_Escribir_stringLCD 0070         __end_of_I2CMasterCheck 07DD          Escribir_caracterLCD@a 0075  
       __end_of_I2CMasterWrite 07F4                        ___awdiv 042A                     _estado_sem 0020  
                      ___awmod 0560                        ___lldiv 0493             __end_of_UART_Write 07FE  
                      _bandera 0051                        __ptext1 068E                        __ptext2 03B7  
                      __ptext3 0608                        __ptext4 06FF                        __ptext5 077D  
                      __ptext6 01CC                        __ptext7 0493                        __ptext8 032D  
                      __ptext9 0797           ??_Escribir_stringLCD 0075                        _initOsc 06FF  
                 __size_of_isr 0011               ___awmod@dividend 0075                  ?_prender_ELCD 0070  
                      clrloop0 0FF0           end_of_initialization 0027      __size_of_I2C_Master_Start 001A  
              ___lldiv@divisor 0039                ___lldiv@counter 0045                ?_I2CMasterCheck 0070  
                   _set_cursor 0608                      _RCSTAbits 0018                ?_I2CMasterWrite 0070  
                    _PORTBbits 0006                      _PORTDbits 0008                 UART_Write@data 0073  
               ??_prender_ELCD 0073                      _TRISAbits 0085                      _TRISCbits 0087  
                 ?_InitMPU6050 0070                   ?_Iniciar_LCD 0070                      _TXSTAbits 0098  
  __end_of_Limpiar_pantallaLCD 0797             I2CMasterRead@Datos 0075                    _BAUDCTLbits 0187  
                ??_divisor_dec 0040                      _Giro_digx 007A                      _Giro_digy 0079  
                    _Giro_digz 0025            start_initialization 000F                    __end_of_isr 07C2  
          _Escribir_comandoLCD 064B     Escribir_comandoLCD@Comando 0074              __size_of_InitMSSP 00B1  
__size_of_Escribir_caracterLCD 000C                    ?_set_cursor 0075                    __pdataBANK0 0051  
         ?_Escribir_comandoLCD 0070                    __pbssCOMMON 0078        __size_of_tabla_numASCII 003F  
                    ___latbits 0002                  __pcstackBANK0 0039            __end_of_divisor_dec 0608  
             _I2C_Master_Start 0797           __end_of_prender_ELCD 07D0                       ?___awdiv 0073  
                     ?___awmod 0073                       ?___lldiv 0039          ??_Escribir_comandoLCD 0074  
                    __pstrings 06CD                       ?_initOsc 0070          __end_of_I2CMasterRead 0757  
        __end_of_I2CMasterStop 1000            __size_of_set_cursor 0043           __size_of_InitMPU6050 008A  
               __size_of_setup 0073               ??_I2CMasterCheck 0073              interrupt_function 0004  
  I2C_Master_Start@Modo_Inicio 0073               ??_I2CMasterWrite 0073                      clear_ram0 0FEF  
                     _PIE1bits 008C           __size_of_Iniciar_LCD 0065                       _PIR1bits 000C  
                  __stringbase 06D2                    _divisor_dec 05BB    __size_of_Escribir_stringLCD 0026  
                     _InitMSSP 01CC            Escribir_stringLCD@d 0077            Escribir_stringLCD@i 0076  
             __size_of___awdiv 0069               __size_of___awmod 005B               __size_of___lldiv 0068  
           __end_of__stringtab 06D3                 _tabla_numASCII 068E               __size_of_initOsc 0030  
                     __ptext10 07E9                       __ptext11 0FF7                       __ptext20 07D0  
                     __ptext12 04FB                       __ptext21 07DD                       __ptext13 0757  
                     __ptext22 064B                       __ptext14 027D                       __ptext23 07C2  
                     __ptext15 05BB                       __ptext24 07B1                       __ptext16 0560  
                     __ptext17 042A                       __ptext18 07F4                       __ptext19 072F  
        __size_of_prender_ELCD 000E                  __size_of_main 01A1                   ??_set_cursor 0076  
 __size_of_Limpiar_pantallaLCD 001A               I2CMasterRead@ACK 0074         __end_of_tabla_numASCII 06CD  
     __end_of_I2C_Master_Start 07B1                     _INTCONbits 000B   __end_of_Escribir_caracterLCD 07E9  
                 _prender_ELCD 07C2                  ?_Config_USART 0073               Config_USART@Freq 0075  
           __end_of_set_cursor 064B                       intlevel1 0000               ___lldiv@dividend 003D  
                    stringcode 06CD                     _OSCCONbits 008F                ?_tabla_numASCII 0070  
             ___lldiv@quotient 0041                 ??_Config_USART 0077                       stringdir 06CD  
                     stringtab 06CD                     _UART_Write 07F4                    _SSPCON2bits 0091  
        Config_USART@baud_rate 0073                     _SSPCONbits 0014    __end_of_Escribir_comandoLCD 068E  
