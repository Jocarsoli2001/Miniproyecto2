

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Feb 28 17:53:49 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0088                     	;# 
   262  0089                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  008F                     	;# 
   267  0090                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285  0105                     	;# 
   286  0107                     	;# 
   287  0108                     	;# 
   288  0109                     	;# 
   289  010C                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  0185                     	;# 
   295  0187                     	;# 
   296  0188                     	;# 
   297  0189                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  000D                     	;# 
   392  000E                     	;# 
   393  000E                     	;# 
   394  000F                     	;# 
   395  0010                     	;# 
   396  0011                     	;# 
   397  0012                     	;# 
   398  0013                     	;# 
   399  0014                     	;# 
   400  0015                     	;# 
   401  0015                     	;# 
   402  0016                     	;# 
   403  0017                     	;# 
   404  0018                     	;# 
   405  0019                     	;# 
   406  001A                     	;# 
   407  001B                     	;# 
   408  001B                     	;# 
   409  001C                     	;# 
   410  001D                     	;# 
   411  001E                     	;# 
   412  001F                     	;# 
   413  0081                     	;# 
   414  0085                     	;# 
   415  0086                     	;# 
   416  0087                     	;# 
   417  0088                     	;# 
   418  0089                     	;# 
   419  008C                     	;# 
   420  008D                     	;# 
   421  008E                     	;# 
   422  008F                     	;# 
   423  0090                     	;# 
   424  0091                     	;# 
   425  0092                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0094                     	;# 
   430  0095                     	;# 
   431  0096                     	;# 
   432  0097                     	;# 
   433  0098                     	;# 
   434  0099                     	;# 
   435  009A                     	;# 
   436  009B                     	;# 
   437  009C                     	;# 
   438  009D                     	;# 
   439  009E                     	;# 
   440  009F                     	;# 
   441  0105                     	;# 
   442  0107                     	;# 
   443  0108                     	;# 
   444  0109                     	;# 
   445  010C                     	;# 
   446  010C                     	;# 
   447  010D                     	;# 
   448  010E                     	;# 
   449  010F                     	;# 
   450  0185                     	;# 
   451  0187                     	;# 
   452  0188                     	;# 
   453  0189                     	;# 
   454  018C                     	;# 
   455  018D                     	;# 
   456  0000                     	;# 
   457  0001                     	;# 
   458  0002                     	;# 
   459  0003                     	;# 
   460  0004                     	;# 
   461  0005                     	;# 
   462  0006                     	;# 
   463  0007                     	;# 
   464  0008                     	;# 
   465  0009                     	;# 
   466  000A                     	;# 
   467  000B                     	;# 
   468  000C                     	;# 
   469  000D                     	;# 
   470  000E                     	;# 
   471  000E                     	;# 
   472  000F                     	;# 
   473  0010                     	;# 
   474  0011                     	;# 
   475  0012                     	;# 
   476  0013                     	;# 
   477  0014                     	;# 
   478  0015                     	;# 
   479  0015                     	;# 
   480  0016                     	;# 
   481  0017                     	;# 
   482  0018                     	;# 
   483  0019                     	;# 
   484  001A                     	;# 
   485  001B                     	;# 
   486  001B                     	;# 
   487  001C                     	;# 
   488  001D                     	;# 
   489  001E                     	;# 
   490  001F                     	;# 
   491  0081                     	;# 
   492  0085                     	;# 
   493  0086                     	;# 
   494  0087                     	;# 
   495  0088                     	;# 
   496  0089                     	;# 
   497  008C                     	;# 
   498  008D                     	;# 
   499  008E                     	;# 
   500  008F                     	;# 
   501  0090                     	;# 
   502  0091                     	;# 
   503  0092                     	;# 
   504  0093                     	;# 
   505  0093                     	;# 
   506  0093                     	;# 
   507  0094                     	;# 
   508  0095                     	;# 
   509  0096                     	;# 
   510  0097                     	;# 
   511  0098                     	;# 
   512  0099                     	;# 
   513  009A                     	;# 
   514  009B                     	;# 
   515  009C                     	;# 
   516  009D                     	;# 
   517  009E                     	;# 
   518  009F                     	;# 
   519  0105                     	;# 
   520  0107                     	;# 
   521  0108                     	;# 
   522  0109                     	;# 
   523  010C                     	;# 
   524  010C                     	;# 
   525  010D                     	;# 
   526  010E                     	;# 
   527  010F                     	;# 
   528  0185                     	;# 
   529  0187                     	;# 
   530  0188                     	;# 
   531  0189                     	;# 
   532  018C                     	;# 
   533  018D                     	;# 
   534  0018                     _RCSTAbits	set	24
   535  0006                     _PORTBbits	set	6
   536  0008                     _PORTDbits	set	8
   537  0013                     _SSPBUF	set	19
   538  0014                     _SSPCON	set	20
   539  0007                     _PORTCbits	set	7
   540  0007                     _PORTC	set	7
   541  0006                     _PORTB	set	6
   542  0009                     _PORTE	set	9
   543  0008                     _PORTD	set	8
   544  0005                     _PORTA	set	5
   545  0063                     _SSPIF	set	99
   546  005E                     _PEIE	set	94
   547  005F                     _GIE	set	95
   548  008C                     _PIE1bits	set	140
   549  009A                     _SPBRGH	set	154
   550  0099                     _SPBRG	set	153
   551  0098                     _TXSTAbits	set	152
   552  008F                     _OSCCONbits	set	143
   553  0091                     _SSPCON2bits	set	145
   554  0087                     _TRISCbits	set	135
   555  0094                     _SSPSTAT	set	148
   556  0093                     _SSPADD	set	147
   557  0091                     _SSPCON2	set	145
   558  0089                     _TRISE	set	137
   559  0088                     _TRISD	set	136
   560  0086                     _TRISB	set	134
   561  0085                     _TRISA	set	133
   562  0463                     _SSPIE	set	1123
   563  043C                     _TRISC4	set	1084
   564  043B                     _TRISC3	set	1083
   565  0438                     _TRISC0	set	1080
   566  0439                     _TRISC1	set	1081
   567  043A                     _TRISC2	set	1082
   568  0187                     _BAUDCTLbits	set	391
   569  0189                     _ANSELH	set	393
   570  0188                     _ANSEL	set	392
   571                           
   572                           	psect	strings
   573  03B1                     __pstrings:
   574  03B1                     stringtab:
   575  03B1                     __stringtab:
   576  03B1                     stringcode:	
   577                           ;	String table - string pointers are 1 byte each
   578                           
   579  03B1                     stringdir:
   580  03B1  3003               	movlw	high stringdir
   581  03B2  008A               	movwf	10
   582  03B3  0804               	movf	4,w
   583  03B4  0A84               	incf	4,f
   584  03B5  0782               	addwf	2,f
   585  03B6                     __stringbase:
   586  03B6  3400               	retlw	0
   587  03B7                     __end_of__stringtab:
   588  03B7                     STR_2:
   589  03B7  344A               	retlw	74	;'J'
   590  03B8  346F               	retlw	111	;'o'
   591  03B9  3473               	retlw	115	;'s'
   592  03BA  3465               	retlw	101	;'e'
   593  03BB  3420               	retlw	32	;' '
   594  03BC  3453               	retlw	83	;'S'
   595  03BD  3461               	retlw	97	;'a'
   596  03BE  346E               	retlw	110	;'n'
   597  03BF  3474               	retlw	116	;'t'
   598  03C0  3469               	retlw	105	;'i'
   599  03C1  347A               	retlw	122	;'z'
   600  03C2  346F               	retlw	111	;'o'
   601  03C3  3400               	retlw	0
   602  03C4                     STR_1:
   603  03C4  3448               	retlw	72	;'H'
   604  03C5  346F               	retlw	111	;'o'
   605  03C6  346C               	retlw	108	;'l'
   606  03C7  3461               	retlw	97	;'a'
   607  03C8  3400               	retlw	0
   608                           
   609                           	psect	cinit
   610  000F                     start_initialization:	
   611                           ; #config settings
   612                           
   613  000F                     __initialization:
   614                           
   615                           ; Clear objects allocated to COMMON
   616  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   617  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   618  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   619                           
   620                           ; Clear objects allocated to BANK0
   621  0012  1283               	bcf	3,5	;RP0=0, select bank0
   622  0013  1303               	bcf	3,6	;RP1=0, select bank0
   623  0014  01B6               	clrf	__pbssBANK0& (0+127)
   624  0015  01B7               	clrf	(__pbssBANK0+1)& (0+127)
   625  0016                     end_of_initialization:	
   626                           ;End of C runtime variable initialization code
   627                           
   628  0016                     __end_of__initialization:
   629  0016  0183               	clrf	3
   630  0017  120A  118A  2ADA   	ljmp	_main	;jump to C main() function
   631                           
   632                           	psect	bssCOMMON
   633  0078                     __pbssCOMMON:
   634  0078                     _uni_giro:
   635  0078                     	ds	1
   636  0079                     _val_giro1:
   637  0079                     	ds	1
   638  007A                     _val_giro:
   639  007A                     	ds	1
   640                           
   641                           	psect	bssBANK0
   642  0036                     __pbssBANK0:
   643  0036                     _cen_giro:
   644  0036                     	ds	1
   645  0037                     _dec_giro:
   646  0037                     	ds	1
   647                           
   648                           	psect	cstackCOMMON
   649  0070                     __pcstackCOMMON:
   650  0070                     ?_setup:
   651  0070                     ?_I2C_Master_Start:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?_I2C_Master_Stop:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_initOsc:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_Iniciar_LCD:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_Limpiar_pantallaLCD:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_Escribir_stringLCD:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_isr:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ??_isr:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_main:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_I2C_Master_Wait:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_prender_ELCD:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_Escribir_comandoLCD:	
   685                           ; 1 bytes @ 0x0
   686                           
   687                           
   688                           ; 1 bytes @ 0x0
   689  0070                     	ds	2
   690  0072                     ??_I2C_Master_Start:
   691  0072                     ?_I2C_Master_Write:	
   692                           ; 1 bytes @ 0x2
   693                           
   694  0072                     ??_I2C_Master_Stop:	
   695                           ; 1 bytes @ 0x2
   696                           
   697  0072                     ??_initOsc:	
   698                           ; 1 bytes @ 0x2
   699                           
   700  0072                     ?_Config_USART:	
   701                           ; 1 bytes @ 0x2
   702                           
   703  0072                     ??_I2C_Master_Wait:	
   704                           ; 1 bytes @ 0x2
   705                           
   706  0072                     ??_prender_ELCD:	
   707                           ; 1 bytes @ 0x2
   708                           
   709  0072                     ??___lldiv:	
   710                           ; 1 bytes @ 0x2
   711                           
   712  0072                     ?_I2C_Master_Read:	
   713                           ; 1 bytes @ 0x2
   714                           
   715  0072                     initOsc@Valor:	
   716                           ; 2 bytes @ 0x2
   717                           
   718  0072                     I2C_Master_Write@d:	
   719                           ; 1 bytes @ 0x2
   720                           
   721  0072                     I2C_Master_Read@a:	
   722                           ; 2 bytes @ 0x2
   723                           
   724  0072                     Config_USART@baud_rate:	
   725                           ; 2 bytes @ 0x2
   726                           
   727                           
   728                           ; 2 bytes @ 0x2
   729  0072                     	ds	1
   730  0073                     ??_Escribir_comandoLCD:
   731  0073                     Escribir_comandoLCD@Comando:	
   732                           ; 1 bytes @ 0x3
   733                           
   734  0073                     ___lldiv@quotient:	
   735                           ; 1 bytes @ 0x3
   736                           
   737                           
   738                           ; 4 bytes @ 0x3
   739  0073                     	ds	1
   740  0074                     ??_I2C_Master_Write:
   741  0074                     ??_I2C_Master_Read:	
   742                           ; 1 bytes @ 0x4
   743                           
   744  0074                     ??_Iniciar_LCD:	
   745                           ; 1 bytes @ 0x4
   746                           
   747  0074                     ??_Limpiar_pantallaLCD:	
   748                           ; 1 bytes @ 0x4
   749                           
   750  0074                     ?_set_cursor:	
   751                           ; 1 bytes @ 0x4
   752                           
   753  0074                     ??_Escribir_stringLCD:	
   754                           ; 1 bytes @ 0x4
   755                           
   756  0074                     set_cursor@posicion:	
   757                           ; 1 bytes @ 0x4
   758                           
   759  0074                     Config_USART@Freq:	
   760                           ; 1 bytes @ 0x4
   761                           
   762                           
   763                           ; 2 bytes @ 0x4
   764  0074                     	ds	1
   765  0075                     ??_set_cursor:
   766  0075                     Escribir_stringLCD@i:	
   767                           ; 1 bytes @ 0x5
   768                           
   769                           
   770                           ; 1 bytes @ 0x5
   771  0075                     	ds	1
   772  0076                     ??_Config_USART:
   773  0076                     Escribir_stringLCD@d:	
   774                           ; 1 bytes @ 0x6
   775                           
   776  0076                     I2C_Master_Read@temp:	
   777                           ; 1 bytes @ 0x6
   778                           
   779                           
   780                           ; 2 bytes @ 0x6
   781  0076                     	ds	1
   782  0077                     set_cursor@linea:
   783  0077                     ___lldiv@counter:	
   784                           ; 1 bytes @ 0x7
   785                           
   786                           
   787                           ; 1 bytes @ 0x7
   788  0077                     	ds	1
   789                           
   790                           	psect	cstackBANK0
   791  0020                     __pcstackBANK0:
   792  0020                     ?___lldiv:
   793  0020                     ___lldiv@divisor:	
   794                           ; 4 bytes @ 0x0
   795                           
   796                           
   797                           ; 4 bytes @ 0x0
   798  0020                     	ds	4
   799  0024                     ___lldiv@dividend:
   800                           
   801                           ; 4 bytes @ 0x4
   802  0024                     	ds	4
   803  0028                     ?_I2C_Master_Init:
   804  0028                     I2C_Master_Init@c:	
   805                           ; 1 bytes @ 0x8
   806                           
   807                           
   808                           ; 4 bytes @ 0x8
   809  0028                     	ds	4
   810  002C                     ??_I2C_Master_Init:
   811                           
   812                           ; 1 bytes @ 0xC
   813  002C                     	ds	4
   814  0030                     ??_setup:
   815                           
   816                           ; 1 bytes @ 0x10
   817  0030                     	ds	3
   818  0033                     ??_main:
   819                           
   820                           ; 1 bytes @ 0x13
   821  0033                     	ds	3
   822                           
   823                           	psect	maintext
   824  02DA                     __pmaintext:	
   825 ;;
   826 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   827 ;;
   828 ;; *************** function _main *****************
   829 ;; Defined at:
   830 ;;		line 71 in file "Maestro I2C.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;		None
   833 ;; Auto vars:     Size  Location     Type
   834 ;;		None
   835 ;; Return value:  Size  Location     Type
   836 ;;                  1    wreg      void 
   837 ;; Registers used:
   838 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   839 ;; Tracked objects:
   840 ;;		On entry : B00/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   844 ;;      Params:         0       0       0       0       0
   845 ;;      Locals:         0       0       0       0       0
   846 ;;      Temps:          0       3       0       0       0
   847 ;;      Totals:         0       3       0       0       0
   848 ;;Total ram usage:        3 bytes
   849 ;; Hardware stack levels required when called: 5
   850 ;; This function calls:
   851 ;;		_I2C_Master_Read
   852 ;;		_I2C_Master_Start
   853 ;;		_I2C_Master_Stop
   854 ;;		_I2C_Master_Write
   855 ;;		_setup
   856 ;; This function is called by:
   857 ;;		Startup code after reset
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861                           
   862                           ;psect for function _main
   863  02DA                     _main:
   864  02DA                     l1456:	
   865                           ;incstack = 0
   866                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   867                           
   868                           
   869                           ;Maestro I2C.c: 72:     setup();
   870  02DA  120A  118A  20CA  120A  118A  	fcall	_setup
   871  02DF                     l1458:
   872                           
   873                           ;Maestro I2C.c: 78:         I2C_Master_Start();
   874  02DF  120A  118A  23F7  120A  118A  	fcall	_I2C_Master_Start
   875  02E4                     l1460:
   876                           
   877                           ;Maestro I2C.c: 79:         I2C_Master_Write(0x68);
   878  02E4  3068               	movlw	104
   879  02E5  00F2               	movwf	I2C_Master_Write@d
   880  02E6  3000               	movlw	0
   881  02E7  00F3               	movwf	I2C_Master_Write@d+1
   882  02E8  120A  118A  23E4  120A  118A  	fcall	_I2C_Master_Write
   883  02ED                     l1462:
   884                           
   885                           ;Maestro I2C.c: 80:         val_giro = I2C_Master_Read(0);
   886  02ED  3000               	movlw	0
   887  02EE  00F2               	movwf	I2C_Master_Read@a
   888  02EF  00F3               	movwf	I2C_Master_Read@a+1
   889  02F0  120A  118A  2343  120A  118A  	fcall	_I2C_Master_Read
   890  02F5  0872               	movf	?_I2C_Master_Read,w
   891  02F6  1283               	bcf	3,5	;RP0=0, select bank0
   892  02F7  1303               	bcf	3,6	;RP1=0, select bank0
   893  02F8  00B3               	movwf	??_main
   894  02F9  0833               	movf	??_main,w
   895  02FA  00FA               	movwf	_val_giro
   896  02FB                     l1464:
   897                           
   898                           ;Maestro I2C.c: 81:         I2C_Master_Stop();
   899  02FB  120A  118A  23EE  120A  118A  	fcall	_I2C_Master_Stop
   900  0300                     l1466:
   901                           
   902                           ;Maestro I2C.c: 82:         _delay((unsigned long)((200)*(4000000/4000.0)));
   903  0300  3002               	movlw	2
   904  0301  1283               	bcf	3,5	;RP0=0, select bank0
   905  0302  1303               	bcf	3,6	;RP1=0, select bank0
   906  0303  00B5               	movwf	??_main+2
   907  0304  3004               	movlw	4
   908  0305  00B4               	movwf	??_main+1
   909  0306  30B9               	movlw	185
   910  0307  00B3               	movwf	??_main
   911  0308                     u757:
   912  0308  0BB3               	decfsz	??_main,f
   913  0309  2B08               	goto	u757
   914  030A  0BB4               	decfsz	??_main+1,f
   915  030B  2B08               	goto	u757
   916  030C  0BB5               	decfsz	??_main+2,f
   917  030D  2B08               	goto	u757
   918  030E  2B0F               	nop2
   919  030F  2ADF               	goto	l1458
   920  0310  120A  118A  280C   	ljmp	start
   921  0313                     __end_of_main:
   922                           
   923                           	psect	text1
   924  00CA                     __ptext1:	
   925 ;; *************** function _setup *****************
   926 ;; Defined at:
   927 ;;		line 92 in file "Maestro I2C.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;		None
   930 ;; Auto vars:     Size  Location     Type
   931 ;;		None
   932 ;; Return value:  Size  Location     Type
   933 ;;                  1    wreg      void 
   934 ;; Registers used:
   935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   941 ;;      Params:         0       0       0       0       0
   942 ;;      Locals:         0       0       0       0       0
   943 ;;      Temps:          0       3       0       0       0
   944 ;;      Totals:         0       3       0       0       0
   945 ;;Total ram usage:        3 bytes
   946 ;; Hardware stack levels used: 1
   947 ;; Hardware stack levels required when called: 4
   948 ;; This function calls:
   949 ;;		_Config_USART
   950 ;;		_Escribir_stringLCD
   951 ;;		_I2C_Master_Init
   952 ;;		_Iniciar_LCD
   953 ;;		_Limpiar_pantallaLCD
   954 ;;		_initOsc
   955 ;;		_set_cursor
   956 ;; This function is called by:
   957 ;;		_main
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           
   962                           ;psect for function _setup
   963  00CA                     _setup:
   964  00CA                     l1420:	
   965                           ;incstack = 0
   966                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   967                           
   968                           
   969                           ;Maestro I2C.c: 95:     ANSEL = 0;
   970  00CA  1683               	bsf	3,5	;RP0=1, select bank3
   971  00CB  1703               	bsf	3,6	;RP1=1, select bank3
   972  00CC  0188               	clrf	8	;volatile
   973                           
   974                           ;Maestro I2C.c: 96:     ANSELH = 0;
   975  00CD  0189               	clrf	9	;volatile
   976                           
   977                           ;Maestro I2C.c: 98:     TRISA = 0;
   978  00CE  1683               	bsf	3,5	;RP0=1, select bank1
   979  00CF  1303               	bcf	3,6	;RP1=0, select bank1
   980  00D0  0185               	clrf	5	;volatile
   981                           
   982                           ;Maestro I2C.c: 99:     TRISB = 0;
   983  00D1  0186               	clrf	6	;volatile
   984                           
   985                           ;Maestro I2C.c: 100:     TRISD = 0;
   986  00D2  0188               	clrf	8	;volatile
   987                           
   988                           ;Maestro I2C.c: 101:     TRISE = 0;
   989  00D3  0189               	clrf	9	;volatile
   990                           
   991                           ;Maestro I2C.c: 103:     PORTA = 0;
   992  00D4  1283               	bcf	3,5	;RP0=0, select bank0
   993  00D5  1303               	bcf	3,6	;RP1=0, select bank0
   994  00D6  0185               	clrf	5	;volatile
   995                           
   996                           ;Maestro I2C.c: 104:     PORTD = 0;
   997  00D7  0188               	clrf	8	;volatile
   998                           
   999                           ;Maestro I2C.c: 105:     PORTE = 0;
  1000  00D8  0189               	clrf	9	;volatile
  1001                           
  1002                           ;Maestro I2C.c: 106:     PORTB = 0;
  1003  00D9  0186               	clrf	6	;volatile
  1004                           
  1005                           ;Maestro I2C.c: 107:     PORTC = 0;
  1006  00DA  0187               	clrf	7	;volatile
  1007  00DB                     l1422:
  1008                           
  1009                           ;Maestro I2C.c: 110:     TRISC2 = 0;
  1010  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  1011  00DC  1303               	bcf	3,6	;RP1=0, select bank1
  1012  00DD  1107               	bcf	7,2	;volatile
  1013  00DE                     l1424:
  1014                           
  1015                           ;Maestro I2C.c: 111:     PORTCbits.RC2 = 1;
  1016  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1017  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1018  00E0  1507               	bsf	7,2	;volatile
  1019  00E1                     l1426:
  1020                           
  1021                           ;Maestro I2C.c: 113:     TRISC1 = 0;
  1022  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  1023  00E2  1303               	bcf	3,6	;RP1=0, select bank1
  1024  00E3  1087               	bcf	7,1	;volatile
  1025  00E4                     l1428:
  1026                           
  1027                           ;Maestro I2C.c: 114:     PORTCbits.RC1 = 1;
  1028  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1029  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1030  00E6  1487               	bsf	7,1	;volatile
  1031  00E7                     l1430:
  1032                           
  1033                           ;Maestro I2C.c: 116:     TRISC0 = 0;
  1034  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  1035  00E8  1303               	bcf	3,6	;RP1=0, select bank1
  1036  00E9  1007               	bcf	7,0	;volatile
  1037  00EA                     l1432:
  1038                           
  1039                           ;Maestro I2C.c: 117:     PORTCbits.RC0 = 1;
  1040  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1041  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1042  00EC  1407               	bsf	7,0	;volatile
  1043  00ED                     l1434:
  1044                           
  1045                           ;Maestro I2C.c: 120:     initOsc(4);
  1046  00ED  3004               	movlw	4
  1047  00EE  120A  118A  2313  120A  118A  	fcall	_initOsc
  1048  00F3                     l1436:
  1049                           
  1050                           ;Maestro I2C.c: 123:     I2C_Master_Init(100000);
  1051  00F3  3000               	movlw	0
  1052  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1053  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1054  00F6  00AB               	movwf	I2C_Master_Init@c+3
  1055  00F7  3001               	movlw	1
  1056  00F8  00AA               	movwf	I2C_Master_Init@c+2
  1057  00F9  3086               	movlw	134
  1058  00FA  00A9               	movwf	I2C_Master_Init@c+1
  1059  00FB  30A0               	movlw	160
  1060  00FC  00A8               	movwf	I2C_Master_Init@c
  1061  00FD  120A  118A  22A0  120A  118A  	fcall	_I2C_Master_Init
  1062  0102                     l1438:
  1063                           
  1064                           ;Maestro I2C.c: 126:     Iniciar_LCD();
  1065  0102  120A  118A  21B5  120A  118A  	fcall	_Iniciar_LCD
  1066  0107                     l1440:
  1067                           
  1068                           ;Maestro I2C.c: 127:     Limpiar_pantallaLCD();
  1069  0107  120A  118A  2397  120A  118A  	fcall	_Limpiar_pantallaLCD
  1070  010C                     l1442:
  1071                           
  1072                           ;Maestro I2C.c: 128:     set_cursor(1,0);
  1073  010C  01F4               	clrf	set_cursor@posicion
  1074  010D  3001               	movlw	1
  1075  010E  120A  118A  221A  120A  118A  	fcall	_set_cursor
  1076  0113                     l1444:
  1077                           
  1078                           ;Maestro I2C.c: 129:     Escribir_stringLCD("Hola");
  1079  0113  300E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1080  0114  120A  118A  2371  120A  118A  	fcall	_Escribir_stringLCD
  1081  0119                     l1446:
  1082                           
  1083                           ;Maestro I2C.c: 130:     set_cursor(2,2);
  1084  0119  3002               	movlw	2
  1085  011A  1283               	bcf	3,5	;RP0=0, select bank0
  1086  011B  1303               	bcf	3,6	;RP1=0, select bank0
  1087  011C  00B0               	movwf	??_setup
  1088  011D  0830               	movf	??_setup,w
  1089  011E  00F4               	movwf	set_cursor@posicion
  1090  011F  3002               	movlw	2
  1091  0120  120A  118A  221A  120A  118A  	fcall	_set_cursor
  1092  0125                     l1448:
  1093                           
  1094                           ;Maestro I2C.c: 131:     Escribir_stringLCD("Jose Santizo");
  1095  0125  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1096  0126  120A  118A  2371  120A  118A  	fcall	_Escribir_stringLCD
  1097  012B                     l1450:
  1098                           
  1099                           ;Maestro I2C.c: 132:     _delay((unsigned long)((5000)*(4000000/4000.0)));
  1100  012B  301A               	movlw	26
  1101  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1102  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1103  012E  00B2               	movwf	??_setup+2
  1104  012F  305E               	movlw	94
  1105  0130  00B1               	movwf	??_setup+1
  1106  0131  306D               	movlw	109
  1107  0132  00B0               	movwf	??_setup
  1108  0133                     u767:
  1109  0133  0BB0               	decfsz	??_setup,f
  1110  0134  2933               	goto	u767
  1111  0135  0BB1               	decfsz	??_setup+1,f
  1112  0136  2933               	goto	u767
  1113  0137  0BB2               	decfsz	??_setup+2,f
  1114  0138  2933               	goto	u767
  1115  0139  293A               	nop2
  1116  013A                     l1452:
  1117                           
  1118                           ;Maestro I2C.c: 133:     Limpiar_pantallaLCD();
  1119  013A  120A  118A  2397  120A  118A  	fcall	_Limpiar_pantallaLCD
  1120  013F                     l1454:
  1121                           
  1122                           ;Maestro I2C.c: 136:     Config_USART(9600,4);
  1123  013F  3080               	movlw	128
  1124  0140  00F2               	movwf	Config_USART@baud_rate
  1125  0141  3025               	movlw	37
  1126  0142  00F3               	movwf	Config_USART@baud_rate+1
  1127  0143  3004               	movlw	4
  1128  0144  00F4               	movwf	Config_USART@Freq
  1129  0145  3000               	movlw	0
  1130  0146  00F5               	movwf	Config_USART@Freq+1
  1131  0147  120A  118A  201A  120A  118A  	fcall	_Config_USART
  1132  014C                     l82:
  1133  014C  0008               	return
  1134  014D                     __end_of_setup:
  1135                           
  1136                           	psect	text2
  1137  021A                     __ptext2:	
  1138 ;; *************** function _set_cursor *****************
  1139 ;; Defined at:
  1140 ;;		line 77 in file "LCD.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;  linea           1    wreg     unsigned char 
  1143 ;;  posicion        1    4[COMMON] unsigned char 
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;  linea           1    7[COMMON] unsigned char 
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  1    wreg      void 
  1148 ;; Registers used:
  1149 ;;		wreg, status,2, status,0, pclath, cstack
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1155 ;;      Params:         1       0       0       0       0
  1156 ;;      Locals:         1       0       0       0       0
  1157 ;;      Temps:          2       0       0       0       0
  1158 ;;      Totals:         4       0       0       0       0
  1159 ;;Total ram usage:        4 bytes
  1160 ;; Hardware stack levels used: 1
  1161 ;; Hardware stack levels required when called: 3
  1162 ;; This function calls:
  1163 ;;		_Escribir_comandoLCD
  1164 ;; This function is called by:
  1165 ;;		_setup
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           
  1170                           ;psect for function _set_cursor
  1171  021A                     _set_cursor:
  1172                           
  1173                           ;incstack = 0
  1174                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1175                           ;set_cursor@linea stored from wreg
  1176  021A  00F7               	movwf	set_cursor@linea
  1177  021B                     l1212:
  1178                           
  1179                           ;LCD.c: 78:     PORTDbits.RD3 = 0; PORTDbits.RD4 = 0;
  1180  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1181  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1182  021D  1188               	bcf	8,3	;volatile
  1183  021E  1208               	bcf	8,4	;volatile
  1184  021F                     l1214:
  1185                           
  1186                           ;LCD.c: 81:     if (linea == 1){ Escribir_comandoLCD(0b10000000);}
  1187  021F  0377               	decf	set_cursor@linea,w
  1188  0220  1D03               	btfss	3,2
  1189  0221  2A23               	goto	u491
  1190  0222  2A24               	goto	u490
  1191  0223                     u491:
  1192  0223  2A2B               	goto	l1218
  1193  0224                     u490:
  1194  0224                     l1216:
  1195  0224  3080               	movlw	128
  1196  0225  120A  118A  225D  120A  118A  	fcall	_Escribir_comandoLCD
  1197  022A  2A37               	goto	l1222
  1198  022B                     l1218:
  1199  022B  3002               	movlw	2
  1200  022C  0677               	xorwf	set_cursor@linea,w
  1201  022D  1D03               	btfss	3,2
  1202  022E  2A30               	goto	u501
  1203  022F  2A31               	goto	u500
  1204  0230                     u501:
  1205  0230  2A37               	goto	l1222
  1206  0231                     u500:
  1207  0231                     l1220:
  1208  0231  30C0               	movlw	192
  1209  0232  120A  118A  225D  120A  118A  	fcall	_Escribir_comandoLCD
  1210  0237                     l1222:
  1211                           
  1212                           ;LCD.c: 84:     _delay((unsigned long)((40)*(8000000/4000.0)));
  1213  0237  3068               	movlw	104
  1214  0238  00F6               	movwf	??_set_cursor+1
  1215  0239  30E4               	movlw	228
  1216  023A  00F5               	movwf	??_set_cursor
  1217  023B                     u777:
  1218  023B  0BF5               	decfsz	??_set_cursor,f
  1219  023C  2A3B               	goto	u777
  1220  023D  0BF6               	decfsz	??_set_cursor+1,f
  1221  023E  2A3B               	goto	u777
  1222  023F  0000               	nop
  1223  0240                     l1224:
  1224                           
  1225                           ;LCD.c: 86:     if (posicion != 0){
  1226  0240  0874               	movf	set_cursor@posicion,w
  1227  0241  1903               	btfsc	3,2
  1228  0242  2A44               	goto	u511
  1229  0243  2A45               	goto	u510
  1230  0244                     u511:
  1231  0244  2A5C               	goto	l206
  1232  0245                     u510:
  1233  0245  2A4E               	goto	l1232
  1234  0246                     l1228:
  1235                           
  1236                           ;LCD.c: 88:             Escribir_comandoLCD(0b00010100);
  1237  0246  3014               	movlw	20
  1238  0247  120A  118A  225D  120A  118A  	fcall	_Escribir_comandoLCD
  1239  024C                     l1230:
  1240                           
  1241                           ;LCD.c: 89:             posicion--;
  1242  024C  3001               	movlw	1
  1243  024D  02F4               	subwf	set_cursor@posicion,f
  1244  024E                     l1232:
  1245                           
  1246                           ;LCD.c: 87:         while(posicion > 0){
  1247  024E  0874               	movf	set_cursor@posicion,w
  1248  024F  1D03               	btfss	3,2
  1249  0250  2A52               	goto	u521
  1250  0251  2A53               	goto	u520
  1251  0252                     u521:
  1252  0252  2A46               	goto	l1228
  1253  0253                     u520:
  1254  0253                     l1234:
  1255                           
  1256                           ;LCD.c: 92:         _delay((unsigned long)((40)*(8000000/4000.0)));
  1257  0253  3068               	movlw	104
  1258  0254  00F6               	movwf	??_set_cursor+1
  1259  0255  30E4               	movlw	228
  1260  0256  00F5               	movwf	??_set_cursor
  1261  0257                     u787:
  1262  0257  0BF5               	decfsz	??_set_cursor,f
  1263  0258  2A57               	goto	u787
  1264  0259  0BF6               	decfsz	??_set_cursor+1,f
  1265  025A  2A57               	goto	u787
  1266  025B  0000               	nop
  1267  025C                     l206:
  1268  025C  0008               	return
  1269  025D                     __end_of_set_cursor:
  1270                           
  1271                           	psect	text3
  1272  0313                     __ptext3:	
  1273 ;; *************** function _initOsc *****************
  1274 ;; Defined at:
  1275 ;;		line 12 in file "Oscilador.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;  Valor           1    wreg     unsigned char 
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;  Valor           1    2[COMMON] unsigned char 
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  1    wreg      void 
  1282 ;; Registers used:
  1283 ;;		wreg, status,2, status,0
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1289 ;;      Params:         0       0       0       0       0
  1290 ;;      Locals:         1       0       0       0       0
  1291 ;;      Temps:          0       0       0       0       0
  1292 ;;      Totals:         1       0       0       0       0
  1293 ;;Total ram usage:        1 bytes
  1294 ;; Hardware stack levels used: 1
  1295 ;; Hardware stack levels required when called: 1
  1296 ;; This function calls:
  1297 ;;		Nothing
  1298 ;; This function is called by:
  1299 ;;		_setup
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           
  1304                           ;psect for function _initOsc
  1305  0313                     _initOsc:
  1306                           
  1307                           ;incstack = 0
  1308                           ; Regs used in _initOsc: [wreg+status,2+status,0]
  1309                           ;initOsc@Valor stored from wreg
  1310  0313  00F2               	movwf	initOsc@Valor
  1311  0314                     l878:
  1312                           
  1313                           ;Oscilador.c: 14:     if(Valor == 8){
  1314  0314  3008               	movlw	8
  1315  0315  0672               	xorwf	initOsc@Valor,w
  1316  0316  1D03               	btfss	3,2
  1317  0317  2B19               	goto	u161
  1318  0318  2B1A               	goto	u160
  1319  0319                     u161:
  1320  0319  2B1F               	goto	l882
  1321  031A                     u160:
  1322  031A                     l880:
  1323                           
  1324                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
  1325  031A  1683               	bsf	3,5	;RP0=1, select bank1
  1326  031B  1303               	bcf	3,6	;RP1=0, select bank1
  1327  031C  160F               	bsf	15,4	;volatile
  1328                           
  1329                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
  1330  031D  168F               	bsf	15,5	;volatile
  1331                           
  1332                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
  1333  031E  170F               	bsf	15,6	;volatile
  1334  031F                     l882:
  1335                           
  1336                           ;Oscilador.c: 19:     if(Valor == 4){
  1337  031F  3004               	movlw	4
  1338  0320  0672               	xorwf	initOsc@Valor,w
  1339  0321  1D03               	btfss	3,2
  1340  0322  2B24               	goto	u171
  1341  0323  2B25               	goto	u170
  1342  0324                     u171:
  1343  0324  2B2A               	goto	l886
  1344  0325                     u170:
  1345  0325                     l884:
  1346                           
  1347                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
  1348  0325  1683               	bsf	3,5	;RP0=1, select bank1
  1349  0326  1303               	bcf	3,6	;RP1=0, select bank1
  1350  0327  120F               	bcf	15,4	;volatile
  1351                           
  1352                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
  1353  0328  168F               	bsf	15,5	;volatile
  1354                           
  1355                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
  1356  0329  170F               	bsf	15,6	;volatile
  1357  032A                     l886:
  1358                           
  1359                           ;Oscilador.c: 24:     if(Valor == 2){
  1360  032A  3002               	movlw	2
  1361  032B  0672               	xorwf	initOsc@Valor,w
  1362  032C  1D03               	btfss	3,2
  1363  032D  2B2F               	goto	u181
  1364  032E  2B30               	goto	u180
  1365  032F                     u181:
  1366  032F  2B35               	goto	l890
  1367  0330                     u180:
  1368  0330                     l888:
  1369                           
  1370                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
  1371  0330  1683               	bsf	3,5	;RP0=1, select bank1
  1372  0331  1303               	bcf	3,6	;RP1=0, select bank1
  1373  0332  160F               	bsf	15,4	;volatile
  1374                           
  1375                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
  1376  0333  128F               	bcf	15,5	;volatile
  1377                           
  1378                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
  1379  0334  170F               	bsf	15,6	;volatile
  1380  0335                     l890:
  1381                           
  1382                           ;Oscilador.c: 29:     if(Valor == 1){
  1383  0335  0372               	decf	initOsc@Valor,w
  1384  0336  1D03               	btfss	3,2
  1385  0337  2B39               	goto	u191
  1386  0338  2B3A               	goto	u190
  1387  0339                     u191:
  1388  0339  2B3F               	goto	l214
  1389  033A                     u190:
  1390  033A                     l892:
  1391                           
  1392                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
  1393  033A  1683               	bsf	3,5	;RP0=1, select bank1
  1394  033B  1303               	bcf	3,6	;RP1=0, select bank1
  1395  033C  120F               	bcf	15,4	;volatile
  1396                           
  1397                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
  1398  033D  128F               	bcf	15,5	;volatile
  1399                           
  1400                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
  1401  033E  170F               	bsf	15,6	;volatile
  1402  033F                     l214:	
  1403                           ;Oscilador.c: 33:     }
  1404                           
  1405                           
  1406                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
  1407  033F  1683               	bsf	3,5	;RP0=1, select bank1
  1408  0340  1303               	bcf	3,6	;RP1=0, select bank1
  1409  0341  140F               	bsf	15,0	;volatile
  1410  0342                     l215:
  1411  0342  0008               	return
  1412  0343                     __end_of_initOsc:
  1413                           
  1414                           	psect	text4
  1415  0397                     __ptext4:	
  1416 ;; *************** function _Limpiar_pantallaLCD *****************
  1417 ;; Defined at:
  1418 ;;		line 69 in file "LCD.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;		None
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;		None
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  1    wreg      void 
  1425 ;; Registers used:
  1426 ;;		wreg, status,2, status,0, pclath, cstack
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1432 ;;      Params:         0       0       0       0       0
  1433 ;;      Locals:         0       0       0       0       0
  1434 ;;      Temps:          2       0       0       0       0
  1435 ;;      Totals:         2       0       0       0       0
  1436 ;;Total ram usage:        2 bytes
  1437 ;; Hardware stack levels used: 1
  1438 ;; Hardware stack levels required when called: 3
  1439 ;; This function calls:
  1440 ;;		_Escribir_comandoLCD
  1441 ;; This function is called by:
  1442 ;;		_setup
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           
  1447                           ;psect for function _Limpiar_pantallaLCD
  1448  0397                     _Limpiar_pantallaLCD:
  1449  0397                     l932:	
  1450                           ;incstack = 0
  1451                           ; Regs used in _Limpiar_pantallaLCD: [wreg+status,2+status,0+pclath+cstack]
  1452                           
  1453                           
  1454                           ;LCD.c: 70:     PORTDbits.RD3 = 0; PORTDbits.RD4 = 0;
  1455  0397  1283               	bcf	3,5	;RP0=0, select bank0
  1456  0398  1303               	bcf	3,6	;RP1=0, select bank0
  1457  0399  1188               	bcf	8,3	;volatile
  1458  039A  1208               	bcf	8,4	;volatile
  1459  039B                     l934:
  1460                           
  1461                           ;LCD.c: 72:     Escribir_comandoLCD(0b00000001);
  1462  039B  3001               	movlw	1
  1463  039C  120A  118A  225D  120A  118A  	fcall	_Escribir_comandoLCD
  1464  03A1                     l936:
  1465                           
  1466                           ;LCD.c: 73:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1467  03A1  301A               	movlw	26
  1468  03A2  00F5               	movwf	??_Limpiar_pantallaLCD+1
  1469  03A3  30F8               	movlw	248
  1470  03A4  00F4               	movwf	??_Limpiar_pantallaLCD
  1471  03A5                     u797:
  1472  03A5  0BF4               	decfsz	??_Limpiar_pantallaLCD,f
  1473  03A6  2BA5               	goto	u797
  1474  03A7  0BF5               	decfsz	??_Limpiar_pantallaLCD+1,f
  1475  03A8  2BA5               	goto	u797
  1476  03A9  0000               	nop
  1477  03AA                     l938:
  1478                           
  1479                           ;LCD.c: 74:     Escribir_comandoLCD(0b00000010);
  1480  03AA  3002               	movlw	2
  1481  03AB  120A  118A  225D  120A  118A  	fcall	_Escribir_comandoLCD
  1482  03B0                     l196:
  1483  03B0  0008               	return
  1484  03B1                     __end_of_Limpiar_pantallaLCD:
  1485                           
  1486                           	psect	text5
  1487  01B5                     __ptext5:	
  1488 ;; *************** function _Iniciar_LCD *****************
  1489 ;; Defined at:
  1490 ;;		line 30 in file "LCD.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;		None
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;		None
  1495 ;; Return value:  Size  Location     Type
  1496 ;;                  1    wreg      void 
  1497 ;; Registers used:
  1498 ;;		wreg, status,2, status,0, pclath, cstack
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1504 ;;      Params:         0       0       0       0       0
  1505 ;;      Locals:         0       0       0       0       0
  1506 ;;      Temps:          2       0       0       0       0
  1507 ;;      Totals:         2       0       0       0       0
  1508 ;;Total ram usage:        2 bytes
  1509 ;; Hardware stack levels used: 1
  1510 ;; Hardware stack levels required when called: 3
  1511 ;; This function calls:
  1512 ;;		_Escribir_comandoLCD
  1513 ;; This function is called by:
  1514 ;;		_setup
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518                           
  1519                           ;psect for function _Iniciar_LCD
  1520  01B5                     _Iniciar_LCD:
  1521  01B5                     l906:	
  1522                           ;incstack = 0
  1523                           ; Regs used in _Iniciar_LCD: [wreg+status,2+status,0+pclath+cstack]
  1524                           
  1525                           
  1526                           ;LCD.c: 31:     PORTDbits.RD3 = 0;
  1527  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  1528  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  1529  01B7  1188               	bcf	8,3	;volatile
  1530                           
  1531                           ;LCD.c: 32:     PORTDbits.RD4 = 0;
  1532  01B8  1208               	bcf	8,4	;volatile
  1533  01B9                     l908:
  1534                           
  1535                           ;LCD.c: 34:     _delay((unsigned long)((14)*(8000000/4000.0)));
  1536  01B9  3025               	movlw	37
  1537  01BA  00F5               	movwf	??_Iniciar_LCD+1
  1538  01BB  305B               	movlw	91
  1539  01BC  00F4               	movwf	??_Iniciar_LCD
  1540  01BD                     u807:
  1541  01BD  0BF4               	decfsz	??_Iniciar_LCD,f
  1542  01BE  29BD               	goto	u807
  1543  01BF  0BF5               	decfsz	??_Iniciar_LCD+1,f
  1544  01C0  29BD               	goto	u807
  1545  01C1  29C2               	nop2
  1546  01C2                     l910:
  1547                           
  1548                           ;LCD.c: 35:     Escribir_comandoLCD(0b00110000);
  1549  01C2  3030               	movlw	48
  1550  01C3  120A  118A  225D  120A  118A  	fcall	_Escribir_comandoLCD
  1551  01C8                     l912:
  1552                           
  1553                           ;LCD.c: 36:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1554  01C8  300B               	movlw	11
  1555  01C9  00F5               	movwf	??_Iniciar_LCD+1
  1556  01CA  3062               	movlw	98
  1557  01CB  00F4               	movwf	??_Iniciar_LCD
  1558  01CC                     u817:
  1559  01CC  0BF4               	decfsz	??_Iniciar_LCD,f
  1560  01CD  29CC               	goto	u817
  1561  01CE  0BF5               	decfsz	??_Iniciar_LCD+1,f
  1562  01CF  29CC               	goto	u817
  1563  01D0  0000               	nop
  1564                           
  1565                           ;LCD.c: 37:     Escribir_comandoLCD(0b00110000);
  1566  01D1  3030               	movlw	48
  1567  01D2  120A  118A  225D  120A  118A  	fcall	_Escribir_comandoLCD
  1568  01D7                     l914:
  1569                           
  1570                           ;LCD.c: 38:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1571  01D7  3042               	movlw	66
  1572  01D8  00F4               	movwf	??_Iniciar_LCD
  1573  01D9                     u827:
  1574  01D9  0BF4               	decfsz	??_Iniciar_LCD,f
  1575  01DA  29D9               	goto	u827
  1576  01DB  0000               	nop
  1577  01DC                     l916:
  1578                           
  1579                           ;LCD.c: 39:     Escribir_comandoLCD(0b00110000);
  1580  01DC  3030               	movlw	48
  1581  01DD  120A  118A  225D  120A  118A  	fcall	_Escribir_comandoLCD
  1582                           
  1583                           ;LCD.c: 42:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1584  01E2  3042               	movlw	66
  1585  01E3  00F4               	movwf	??_Iniciar_LCD
  1586  01E4                     u837:
  1587  01E4  0BF4               	decfsz	??_Iniciar_LCD,f
  1588  01E5  29E4               	goto	u837
  1589  01E6  0000               	nop
  1590  01E7                     l918:
  1591                           
  1592                           ;LCD.c: 43:     Escribir_comandoLCD(0b00111000);
  1593  01E7  3038               	movlw	56
  1594  01E8  120A  118A  225D  120A  118A  	fcall	_Escribir_comandoLCD
  1595  01ED                     l920:
  1596                           
  1597                           ;LCD.c: 44:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1598  01ED  3042               	movlw	66
  1599  01EE  00F4               	movwf	??_Iniciar_LCD
  1600  01EF                     u847:
  1601  01EF  0BF4               	decfsz	??_Iniciar_LCD,f
  1602  01F0  29EF               	goto	u847
  1603  01F1  0000               	nop
  1604                           
  1605                           ;LCD.c: 45:     Escribir_comandoLCD(0b00001000);
  1606  01F2  3008               	movlw	8
  1607  01F3  120A  118A  225D  120A  118A  	fcall	_Escribir_comandoLCD
  1608  01F8                     l922:
  1609                           
  1610                           ;LCD.c: 46:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1611  01F8  3042               	movlw	66
  1612  01F9  00F4               	movwf	??_Iniciar_LCD
  1613  01FA                     u857:
  1614  01FA  0BF4               	decfsz	??_Iniciar_LCD,f
  1615  01FB  29FA               	goto	u857
  1616  01FC  0000               	nop
  1617  01FD                     l924:
  1618                           
  1619                           ;LCD.c: 47:     Escribir_comandoLCD(0b00000001);
  1620  01FD  3001               	movlw	1
  1621  01FE  120A  118A  225D  120A  118A  	fcall	_Escribir_comandoLCD
  1622                           
  1623                           ;LCD.c: 48:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1624  0203  3042               	movlw	66
  1625  0204  00F4               	movwf	??_Iniciar_LCD
  1626  0205                     u867:
  1627  0205  0BF4               	decfsz	??_Iniciar_LCD,f
  1628  0206  2A05               	goto	u867
  1629  0207  0000               	nop
  1630  0208                     l926:
  1631                           
  1632                           ;LCD.c: 49:     Escribir_comandoLCD(0b00000110);
  1633  0208  3006               	movlw	6
  1634  0209  120A  118A  225D  120A  118A  	fcall	_Escribir_comandoLCD
  1635  020E                     l928:
  1636                           
  1637                           ;LCD.c: 50:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1638  020E  3042               	movlw	66
  1639  020F  00F4               	movwf	??_Iniciar_LCD
  1640  0210                     u877:
  1641  0210  0BF4               	decfsz	??_Iniciar_LCD,f
  1642  0211  2A10               	goto	u877
  1643  0212  0000               	nop
  1644                           
  1645                           ;LCD.c: 51:     Escribir_comandoLCD(0b00001100);
  1646  0213  300C               	movlw	12
  1647  0214  120A  118A  225D  120A  118A  	fcall	_Escribir_comandoLCD
  1648  0219                     l184:
  1649  0219  0008               	return
  1650  021A                     __end_of_Iniciar_LCD:
  1651                           
  1652                           	psect	text6
  1653  02A0                     __ptext6:	
  1654 ;; *************** function _I2C_Master_Init *****************
  1655 ;; Defined at:
  1656 ;;		line 16 in file "I2C.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;  c               4    8[BANK0 ] const unsigned long 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;		None
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      void 
  1663 ;; Registers used:
  1664 ;;		wreg, status,2, status,0, pclath, cstack
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1670 ;;      Params:         0       4       0       0       0
  1671 ;;      Locals:         0       0       0       0       0
  1672 ;;      Temps:          0       4       0       0       0
  1673 ;;      Totals:         0       8       0       0       0
  1674 ;;Total ram usage:        8 bytes
  1675 ;; Hardware stack levels used: 1
  1676 ;; Hardware stack levels required when called: 2
  1677 ;; This function calls:
  1678 ;;		___lldiv
  1679 ;; This function is called by:
  1680 ;;		_setup
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           
  1685                           ;psect for function _I2C_Master_Init
  1686  02A0                     _I2C_Master_Init:
  1687  02A0                     l1408:	
  1688                           ;incstack = 0
  1689                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1690                           
  1691                           
  1692                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1693  02A0  3028               	movlw	40
  1694  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  1695  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  1696  02A3  0094               	movwf	20	;volatile
  1697  02A4                     l1410:
  1698                           
  1699                           ;I2C.c: 19:     SSPCON2 = 0;
  1700  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  1701  02A5  1303               	bcf	3,6	;RP1=0, select bank1
  1702  02A6  0191               	clrf	17	;volatile
  1703  02A7                     l1412:
  1704                           
  1705                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1706  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  1707  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  1708  02A9  0828               	movf	I2C_Master_Init@c,w
  1709  02AA  00AC               	movwf	??_I2C_Master_Init
  1710  02AB  0829               	movf	I2C_Master_Init@c+1,w
  1711  02AC  00AD               	movwf	??_I2C_Master_Init+1
  1712  02AD  082A               	movf	I2C_Master_Init@c+2,w
  1713  02AE  00AE               	movwf	??_I2C_Master_Init+2
  1714  02AF  082B               	movf	I2C_Master_Init@c+3,w
  1715  02B0  00AF               	movwf	??_I2C_Master_Init+3
  1716  02B1  3002               	movlw	2
  1717  02B2                     u745:
  1718  02B2  1003               	clrc
  1719  02B3  0DAC               	rlf	??_I2C_Master_Init,f
  1720  02B4  0DAD               	rlf	??_I2C_Master_Init+1,f
  1721  02B5  0DAE               	rlf	??_I2C_Master_Init+2,f
  1722  02B6  0DAF               	rlf	??_I2C_Master_Init+3,f
  1723  02B7                     u740:
  1724  02B7  3EFF               	addlw	-1
  1725  02B8  1D03               	skipz
  1726  02B9  2AB2               	goto	u745
  1727  02BA  082F               	movf	??_I2C_Master_Init+3,w
  1728  02BB  00A3               	movwf	___lldiv@divisor+3
  1729  02BC  082E               	movf	??_I2C_Master_Init+2,w
  1730  02BD  00A2               	movwf	___lldiv@divisor+2
  1731  02BE  082D               	movf	??_I2C_Master_Init+1,w
  1732  02BF  00A1               	movwf	___lldiv@divisor+1
  1733  02C0  082C               	movf	??_I2C_Master_Init,w
  1734  02C1  00A0               	movwf	___lldiv@divisor
  1735  02C2  3000               	movlw	0
  1736  02C3  00A7               	movwf	___lldiv@dividend+3
  1737  02C4  307A               	movlw	122
  1738  02C5  00A6               	movwf	___lldiv@dividend+2
  1739  02C6  3012               	movlw	18
  1740  02C7  00A5               	movwf	___lldiv@dividend+1
  1741  02C8  3000               	movlw	0
  1742  02C9  00A4               	movwf	___lldiv@dividend
  1743  02CA  120A  118A  214D  120A  118A  	fcall	___lldiv
  1744  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  1745  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  1746  02D1  0820               	movf	?___lldiv,w
  1747  02D2  3EFF               	addlw	255
  1748  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  1749  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  1750  02D5  0093               	movwf	19	;volatile
  1751  02D6                     l1414:
  1752                           
  1753                           ;I2C.c: 21:     SSPSTAT = 0;
  1754  02D6  0194               	clrf	20	;volatile
  1755  02D7                     l1416:
  1756                           
  1757                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1758  02D7  1587               	bsf	7,3	;volatile
  1759  02D8                     l1418:
  1760                           
  1761                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1762  02D8  1607               	bsf	7,4	;volatile
  1763  02D9                     l127:
  1764  02D9  0008               	return
  1765  02DA                     __end_of_I2C_Master_Init:
  1766                           
  1767                           	psect	text7
  1768  014D                     __ptext7:	
  1769 ;; *************** function ___lldiv *****************
  1770 ;; Defined at:
  1771 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  divisor         4    0[BANK0 ] unsigned long 
  1774 ;;  dividend        4    4[BANK0 ] unsigned long 
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;  quotient        4    3[COMMON] unsigned long 
  1777 ;;  counter         1    7[COMMON] unsigned char 
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  4    0[BANK0 ] unsigned long 
  1780 ;; Registers used:
  1781 ;;		wreg, status,2, status,0
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1787 ;;      Params:         0       8       0       0       0
  1788 ;;      Locals:         5       0       0       0       0
  1789 ;;      Temps:          1       0       0       0       0
  1790 ;;      Totals:         6       8       0       0       0
  1791 ;;Total ram usage:       14 bytes
  1792 ;; Hardware stack levels used: 1
  1793 ;; Hardware stack levels required when called: 1
  1794 ;; This function calls:
  1795 ;;		Nothing
  1796 ;; This function is called by:
  1797 ;;		_I2C_Master_Init
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           
  1802                           ;psect for function ___lldiv
  1803  014D                     ___lldiv:
  1804  014D                     l1384:	
  1805                           ;incstack = 0
  1806                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1807                           
  1808  014D  3000               	movlw	0
  1809  014E  00F6               	movwf	___lldiv@quotient+3
  1810  014F  3000               	movlw	0
  1811  0150  00F5               	movwf	___lldiv@quotient+2
  1812  0151  3000               	movlw	0
  1813  0152  00F4               	movwf	___lldiv@quotient+1
  1814  0153  3000               	movlw	0
  1815  0154  00F3               	movwf	___lldiv@quotient
  1816  0155  1283               	bcf	3,5	;RP0=0, select bank0
  1817  0156  1303               	bcf	3,6	;RP1=0, select bank0
  1818  0157  0823               	movf	___lldiv@divisor+3,w
  1819  0158  0422               	iorwf	___lldiv@divisor+2,w
  1820  0159  0421               	iorwf	___lldiv@divisor+1,w
  1821  015A  0420               	iorwf	___lldiv@divisor,w
  1822  015B  1903               	skipnz
  1823  015C  295E               	goto	u671
  1824  015D  295F               	goto	u670
  1825  015E                     u671:
  1826  015E  29AC               	goto	l1404
  1827  015F                     u670:
  1828  015F                     l1386:
  1829  015F  01F7               	clrf	___lldiv@counter
  1830  0160  0AF7               	incf	___lldiv@counter,f
  1831  0161  296F               	goto	l1390
  1832  0162                     l1388:
  1833  0162  3001               	movlw	1
  1834  0163  00F2               	movwf	??___lldiv
  1835  0164                     u685:
  1836  0164  1003               	clrc
  1837  0165  0DA0               	rlf	___lldiv@divisor,f
  1838  0166  0DA1               	rlf	___lldiv@divisor+1,f
  1839  0167  0DA2               	rlf	___lldiv@divisor+2,f
  1840  0168  0DA3               	rlf	___lldiv@divisor+3,f
  1841  0169  0BF2               	decfsz	??___lldiv,f
  1842  016A  2964               	goto	u685
  1843  016B  3001               	movlw	1
  1844  016C  00F2               	movwf	??___lldiv
  1845  016D  0872               	movf	??___lldiv,w
  1846  016E  07F7               	addwf	___lldiv@counter,f
  1847  016F                     l1390:
  1848  016F  1FA3               	btfss	___lldiv@divisor+3,7
  1849  0170  2972               	goto	u691
  1850  0171  2973               	goto	u690
  1851  0172                     u691:
  1852  0172  2962               	goto	l1388
  1853  0173                     u690:
  1854  0173                     l1392:
  1855  0173  3001               	movlw	1
  1856  0174  00F2               	movwf	??___lldiv
  1857  0175                     u705:
  1858  0175  1003               	clrc
  1859  0176  0DF3               	rlf	___lldiv@quotient,f
  1860  0177  0DF4               	rlf	___lldiv@quotient+1,f
  1861  0178  0DF5               	rlf	___lldiv@quotient+2,f
  1862  0179  0DF6               	rlf	___lldiv@quotient+3,f
  1863  017A  0BF2               	decfsz	??___lldiv,f
  1864  017B  2975               	goto	u705
  1865  017C                     l1394:
  1866  017C  0823               	movf	___lldiv@divisor+3,w
  1867  017D  0227               	subwf	___lldiv@dividend+3,w
  1868  017E  1D03               	skipz
  1869  017F  298A               	goto	u715
  1870  0180  0822               	movf	___lldiv@divisor+2,w
  1871  0181  0226               	subwf	___lldiv@dividend+2,w
  1872  0182  1D03               	skipz
  1873  0183  298A               	goto	u715
  1874  0184  0821               	movf	___lldiv@divisor+1,w
  1875  0185  0225               	subwf	___lldiv@dividend+1,w
  1876  0186  1D03               	skipz
  1877  0187  298A               	goto	u715
  1878  0188  0820               	movf	___lldiv@divisor,w
  1879  0189  0224               	subwf	___lldiv@dividend,w
  1880  018A                     u715:
  1881  018A  1C03               	skipc
  1882  018B  298D               	goto	u711
  1883  018C  298E               	goto	u710
  1884  018D                     u711:
  1885  018D  299D               	goto	l1400
  1886  018E                     u710:
  1887  018E                     l1396:
  1888  018E  0820               	movf	___lldiv@divisor,w
  1889  018F  02A4               	subwf	___lldiv@dividend,f
  1890  0190  0821               	movf	___lldiv@divisor+1,w
  1891  0191  1C03               	skipc
  1892  0192  0F21               	incfsz	___lldiv@divisor+1,w
  1893  0193  02A5               	subwf	___lldiv@dividend+1,f
  1894  0194  0822               	movf	___lldiv@divisor+2,w
  1895  0195  1C03               	skipc
  1896  0196  0F22               	incfsz	___lldiv@divisor+2,w
  1897  0197  02A6               	subwf	___lldiv@dividend+2,f
  1898  0198  0823               	movf	___lldiv@divisor+3,w
  1899  0199  1C03               	skipc
  1900  019A  0F23               	incfsz	___lldiv@divisor+3,w
  1901  019B  02A7               	subwf	___lldiv@dividend+3,f
  1902  019C                     l1398:
  1903  019C  1473               	bsf	___lldiv@quotient,0
  1904  019D                     l1400:
  1905  019D  3001               	movlw	1
  1906  019E                     u725:
  1907  019E  1003               	clrc
  1908  019F  0CA3               	rrf	___lldiv@divisor+3,f
  1909  01A0  0CA2               	rrf	___lldiv@divisor+2,f
  1910  01A1  0CA1               	rrf	___lldiv@divisor+1,f
  1911  01A2  0CA0               	rrf	___lldiv@divisor,f
  1912  01A3  3EFF               	addlw	-1
  1913  01A4  1D03               	skipz
  1914  01A5  299E               	goto	u725
  1915  01A6                     l1402:
  1916  01A6  3001               	movlw	1
  1917  01A7  02F7               	subwf	___lldiv@counter,f
  1918  01A8  1D03               	btfss	3,2
  1919  01A9  29AB               	goto	u731
  1920  01AA  29AC               	goto	u730
  1921  01AB                     u731:
  1922  01AB  2973               	goto	l1392
  1923  01AC                     u730:
  1924  01AC                     l1404:
  1925  01AC  0876               	movf	___lldiv@quotient+3,w
  1926  01AD  00A3               	movwf	?___lldiv+3
  1927  01AE  0875               	movf	___lldiv@quotient+2,w
  1928  01AF  00A2               	movwf	?___lldiv+2
  1929  01B0  0874               	movf	___lldiv@quotient+1,w
  1930  01B1  00A1               	movwf	?___lldiv+1
  1931  01B2  0873               	movf	___lldiv@quotient,w
  1932  01B3  00A0               	movwf	?___lldiv
  1933  01B4                     l358:
  1934  01B4  0008               	return
  1935  01B5                     __end_of___lldiv:
  1936                           
  1937                           	psect	text8
  1938  0371                     __ptext8:	
  1939 ;; *************** function _Escribir_stringLCD *****************
  1940 ;; Defined at:
  1941 ;;		line 55 in file "LCD.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;  d               1    wreg     PTR const unsigned char 
  1944 ;;		 -> STR_2(13), STR_1(5), 
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;  d               1    6[COMMON] PTR const unsigned char 
  1947 ;;		 -> STR_2(13), STR_1(5), 
  1948 ;;  i               1    5[COMMON] unsigned char 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      void 
  1951 ;; Registers used:
  1952 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1958 ;;      Params:         0       0       0       0       0
  1959 ;;      Locals:         2       0       0       0       0
  1960 ;;      Temps:          1       0       0       0       0
  1961 ;;      Totals:         3       0       0       0       0
  1962 ;;Total ram usage:        3 bytes
  1963 ;; Hardware stack levels used: 1
  1964 ;; Hardware stack levels required when called: 3
  1965 ;; This function calls:
  1966 ;;		_Escribir_comandoLCD
  1967 ;; This function is called by:
  1968 ;;		_setup
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           
  1973                           ;psect for function _Escribir_stringLCD
  1974  0371                     _Escribir_stringLCD:
  1975                           
  1976                           ;incstack = 0
  1977                           ; Regs used in _Escribir_stringLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1978                           ;Escribir_stringLCD@d stored from wreg
  1979  0371  00F6               	movwf	Escribir_stringLCD@d
  1980  0372                     l1236:
  1981                           
  1982                           ;LCD.c: 56:     PORTDbits.RD3 = 1; PORTDbits.RD4 = 0;
  1983  0372  1283               	bcf	3,5	;RP0=0, select bank0
  1984  0373  1303               	bcf	3,6	;RP1=0, select bank0
  1985  0374  1588               	bsf	8,3	;volatile
  1986  0375  1208               	bcf	8,4	;volatile
  1987  0376                     l1238:
  1988                           
  1989                           ;LCD.c: 58:     for (char i=0; d[i]!='\0'; i++){
  1990  0376  01F5               	clrf	Escribir_stringLCD@i
  1991  0377  2B89               	goto	l1244
  1992  0378                     l1240:
  1993                           
  1994                           ;LCD.c: 59:         Escribir_comandoLCD(d[i]);
  1995  0378  0875               	movf	Escribir_stringLCD@i,w
  1996  0379  0776               	addwf	Escribir_stringLCD@d,w
  1997  037A  0084               	movwf	4
  1998  037B  120A  118A  23B1  120A  118A  	fcall	stringdir
  1999  0380  120A  118A  225D  120A  118A  	fcall	_Escribir_comandoLCD
  2000  0385                     l1242:
  2001                           
  2002                           ;LCD.c: 60:     }
  2003  0385  3001               	movlw	1
  2004  0386  00F4               	movwf	??_Escribir_stringLCD
  2005  0387  0874               	movf	??_Escribir_stringLCD,w
  2006  0388  07F5               	addwf	Escribir_stringLCD@i,f
  2007  0389                     l1244:
  2008  0389  0875               	movf	Escribir_stringLCD@i,w
  2009  038A  0776               	addwf	Escribir_stringLCD@d,w
  2010  038B  0084               	movwf	4
  2011  038C  120A  118A  23B1  120A  118A  	fcall	stringdir
  2012  0391  3A00               	xorlw	0
  2013  0392  1D03               	skipz
  2014  0393  2B95               	goto	u531
  2015  0394  2B96               	goto	u530
  2016  0395                     u531:
  2017  0395  2B78               	goto	l1240
  2018  0396                     u530:
  2019  0396                     l190:
  2020  0396  0008               	return
  2021  0397                     __end_of_Escribir_stringLCD:
  2022                           
  2023                           	psect	text9
  2024  025D                     __ptext9:	
  2025 ;; *************** function _Escribir_comandoLCD *****************
  2026 ;; Defined at:
  2027 ;;		line 17 in file "LCD.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;  Comando         1    wreg     unsigned char 
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;  Comando         1    3[COMMON] unsigned char 
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  1    wreg      void 
  2034 ;; Registers used:
  2035 ;;		wreg, status,2, status,0, pclath, cstack
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2041 ;;      Params:         0       0       0       0       0
  2042 ;;      Locals:         1       0       0       0       0
  2043 ;;      Temps:          0       0       0       0       0
  2044 ;;      Totals:         1       0       0       0       0
  2045 ;;Total ram usage:        1 bytes
  2046 ;; Hardware stack levels used: 1
  2047 ;; Hardware stack levels required when called: 2
  2048 ;; This function calls:
  2049 ;;		_prender_ELCD
  2050 ;; This function is called by:
  2051 ;;		_Iniciar_LCD
  2052 ;;		_Escribir_stringLCD
  2053 ;;		_Limpiar_pantallaLCD
  2054 ;;		_set_cursor
  2055 ;;		_Escribir_caracterLCD
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           
  2060                           ;psect for function _Escribir_comandoLCD
  2061  025D                     _Escribir_comandoLCD:
  2062                           
  2063                           ;incstack = 0
  2064                           ; Regs used in _Escribir_comandoLCD: [wreg+status,2+status,0+pclath+cstack]
  2065                           ;Escribir_comandoLCD@Comando stored from wreg
  2066  025D  00F3               	movwf	Escribir_comandoLCD@Comando
  2067  025E                     l834:
  2068                           
  2069                           ;LCD.c: 18:     if((Comando & 0b00000001) == 0b00000001){PORTDbits.RD6 = 1;} else {PORTD
      +                          bits.RD6 = 0;}
  2070  025E  1C73               	btfss	Escribir_comandoLCD@Comando,0
  2071  025F  2A61               	goto	u11
  2072  0260  2A62               	goto	u10
  2073  0261                     u11:
  2074  0261  2A66               	goto	l165
  2075  0262                     u10:
  2076  0262                     l836:
  2077  0262  1283               	bcf	3,5	;RP0=0, select bank0
  2078  0263  1303               	bcf	3,6	;RP1=0, select bank0
  2079  0264  1708               	bsf	8,6	;volatile
  2080  0265  2A69               	goto	l166
  2081  0266                     l165:
  2082  0266  1283               	bcf	3,5	;RP0=0, select bank0
  2083  0267  1303               	bcf	3,6	;RP1=0, select bank0
  2084  0268  1308               	bcf	8,6	;volatile
  2085  0269                     l166:
  2086                           
  2087                           ;LCD.c: 19:     if((Comando & 0b00000010) == 0b00000010){PORTDbits.RD7 = 1;} else {PORTD
      +                          bits.RD7 = 0;}
  2088  0269  1CF3               	btfss	Escribir_comandoLCD@Comando,1
  2089  026A  2A6C               	goto	u21
  2090  026B  2A6D               	goto	u20
  2091  026C                     u21:
  2092  026C  2A6F               	goto	l167
  2093  026D                     u20:
  2094  026D                     l838:
  2095  026D  1788               	bsf	8,7	;volatile
  2096  026E  2A70               	goto	l168
  2097  026F                     l167:
  2098  026F  1388               	bcf	8,7	;volatile
  2099  0270                     l168:
  2100                           
  2101                           ;LCD.c: 20:     if((Comando & 0b00000100) == 0b00000100){PORTBbits.RB0 = 1;} else {PORTB
      +                          bits.RB0 = 0;}
  2102  0270  1D73               	btfss	Escribir_comandoLCD@Comando,2
  2103  0271  2A73               	goto	u31
  2104  0272  2A74               	goto	u30
  2105  0273                     u31:
  2106  0273  2A76               	goto	l169
  2107  0274                     u30:
  2108  0274                     l840:
  2109  0274  1406               	bsf	6,0	;volatile
  2110  0275  2A77               	goto	l170
  2111  0276                     l169:
  2112  0276  1006               	bcf	6,0	;volatile
  2113  0277                     l170:
  2114                           
  2115                           ;LCD.c: 21:     if((Comando & 0b00001000) == 0b00001000){PORTBbits.RB1 = 1;} else {PORTB
      +                          bits.RB1 = 0;}
  2116  0277  1DF3               	btfss	Escribir_comandoLCD@Comando,3
  2117  0278  2A7A               	goto	u41
  2118  0279  2A7B               	goto	u40
  2119  027A                     u41:
  2120  027A  2A7D               	goto	l171
  2121  027B                     u40:
  2122  027B                     l842:
  2123  027B  1486               	bsf	6,1	;volatile
  2124  027C  2A7E               	goto	l172
  2125  027D                     l171:
  2126  027D  1086               	bcf	6,1	;volatile
  2127  027E                     l172:
  2128                           
  2129                           ;LCD.c: 22:     if((Comando & 0b00010000) == 0b00010000){PORTBbits.RB2 = 1;} else {PORTB
      +                          bits.RB2 = 0;}
  2130  027E  1E73               	btfss	Escribir_comandoLCD@Comando,4
  2131  027F  2A81               	goto	u51
  2132  0280  2A82               	goto	u50
  2133  0281                     u51:
  2134  0281  2A84               	goto	l173
  2135  0282                     u50:
  2136  0282                     l844:
  2137  0282  1506               	bsf	6,2	;volatile
  2138  0283  2A85               	goto	l174
  2139  0284                     l173:
  2140  0284  1106               	bcf	6,2	;volatile
  2141  0285                     l174:
  2142                           
  2143                           ;LCD.c: 23:     if((Comando & 0b00100000) == 0b00100000){PORTBbits.RB3 = 1;} else {PORTB
      +                          bits.RB3 = 0;}
  2144  0285  1EF3               	btfss	Escribir_comandoLCD@Comando,5
  2145  0286  2A88               	goto	u61
  2146  0287  2A89               	goto	u60
  2147  0288                     u61:
  2148  0288  2A8B               	goto	l175
  2149  0289                     u60:
  2150  0289                     l846:
  2151  0289  1586               	bsf	6,3	;volatile
  2152  028A  2A8C               	goto	l176
  2153  028B                     l175:
  2154  028B  1186               	bcf	6,3	;volatile
  2155  028C                     l176:
  2156                           
  2157                           ;LCD.c: 24:     if((Comando & 0b01000000) == 0b01000000){PORTBbits.RB4 = 1;} else {PORTB
      +                          bits.RB4 = 0;}
  2158  028C  1F73               	btfss	Escribir_comandoLCD@Comando,6
  2159  028D  2A8F               	goto	u71
  2160  028E  2A90               	goto	u70
  2161  028F                     u71:
  2162  028F  2A92               	goto	l177
  2163  0290                     u70:
  2164  0290                     l848:
  2165  0290  1606               	bsf	6,4	;volatile
  2166  0291  2A93               	goto	l178
  2167  0292                     l177:
  2168  0292  1206               	bcf	6,4	;volatile
  2169  0293                     l178:
  2170                           
  2171                           ;LCD.c: 25:     if((Comando & 0b10000000) == 0b10000000){PORTBbits.RB5 = 1;} else {PORTB
      +                          bits.RB5 = 0;}
  2172  0293  1FF3               	btfss	Escribir_comandoLCD@Comando,7
  2173  0294  2A96               	goto	u81
  2174  0295  2A97               	goto	u80
  2175  0296                     u81:
  2176  0296  2A99               	goto	l179
  2177  0297                     u80:
  2178  0297                     l850:
  2179  0297  1686               	bsf	6,5	;volatile
  2180  0298  2A9A               	goto	l852
  2181  0299                     l179:
  2182  0299  1286               	bcf	6,5	;volatile
  2183  029A                     l852:
  2184                           
  2185                           ;LCD.c: 27:     prender_ELCD();
  2186  029A  120A  118A  23C9  120A  118A  	fcall	_prender_ELCD
  2187  029F                     l181:
  2188  029F  0008               	return
  2189  02A0                     __end_of_Escribir_comandoLCD:
  2190                           
  2191                           	psect	text10
  2192  03C9                     __ptext10:	
  2193 ;; *************** function _prender_ELCD *****************
  2194 ;; Defined at:
  2195 ;;		line 11 in file "LCD.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;		None
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;		None
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  1    wreg      void 
  2202 ;; Registers used:
  2203 ;;		wreg
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2209 ;;      Params:         0       0       0       0       0
  2210 ;;      Locals:         0       0       0       0       0
  2211 ;;      Temps:          1       0       0       0       0
  2212 ;;      Totals:         1       0       0       0       0
  2213 ;;Total ram usage:        1 bytes
  2214 ;; Hardware stack levels used: 1
  2215 ;; Hardware stack levels required when called: 1
  2216 ;; This function calls:
  2217 ;;		Nothing
  2218 ;; This function is called by:
  2219 ;;		_Escribir_comandoLCD
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           
  2224                           ;psect for function _prender_ELCD
  2225  03C9                     _prender_ELCD:
  2226  03C9                     l828:	
  2227                           ;incstack = 0
  2228                           ; Regs used in _prender_ELCD: [wreg]
  2229                           
  2230                           
  2231                           ;LCD.c: 12:     PORTDbits.RD5 = 1;
  2232  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  2233  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  2234  03CB  1688               	bsf	8,5	;volatile
  2235  03CC                     l830:
  2236                           
  2237                           ;LCD.c: 13:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  2238  03CC  30C7               	movlw	199
  2239  03CD  00F2               	movwf	??_prender_ELCD
  2240  03CE                     u887:
  2241  03CE  2BCF               	nop2
  2242  03CF  0BF2               	decfsz	??_prender_ELCD,f
  2243  03D0  2BCE               	goto	u887
  2244  03D1  2BD2               	nop2
  2245  03D2  2BD3               	nop2
  2246  03D3                     l832:
  2247                           
  2248                           ;LCD.c: 14:     PORTDbits.RD5 = 0;
  2249  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  2250  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  2251  03D5  1288               	bcf	8,5	;volatile
  2252  03D6                     l162:
  2253  03D6  0008               	return
  2254  03D7                     __end_of_prender_ELCD:
  2255                           
  2256                           	psect	text11
  2257  001A                     __ptext11:	
  2258 ;; *************** function _Config_USART *****************
  2259 ;; Defined at:
  2260 ;;		line 13 in file "UART.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;  baud_rate       2    2[COMMON] int 
  2263 ;;  Freq            2    4[COMMON] int 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;		None
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		wreg, status,2, status,0
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2275 ;;      Params:         4       0       0       0       0
  2276 ;;      Locals:         0       0       0       0       0
  2277 ;;      Temps:          0       0       0       0       0
  2278 ;;      Totals:         4       0       0       0       0
  2279 ;;Total ram usage:        4 bytes
  2280 ;; Hardware stack levels used: 1
  2281 ;; Hardware stack levels required when called: 1
  2282 ;; This function calls:
  2283 ;;		Nothing
  2284 ;; This function is called by:
  2285 ;;		_setup
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           
  2290                           ;psect for function _Config_USART
  2291  001A                     _Config_USART:
  2292  001A                     l1246:	
  2293                           ;incstack = 0
  2294                           ; Regs used in _Config_USART: [wreg+status,2+status,0]
  2295                           
  2296                           
  2297                           ;UART.c: 14:     if(baud_rate == 9600 && Freq == 4){
  2298  001A  3080               	movlw	128
  2299  001B  0672               	xorwf	Config_USART@baud_rate,w
  2300  001C  3025               	movlw	37
  2301  001D  1903               	skipnz
  2302  001E  0673               	xorwf	Config_USART@baud_rate+1,w
  2303  001F  1D03               	btfss	3,2
  2304  0020  2822               	goto	u541
  2305  0021  2823               	goto	u540
  2306  0022                     u541:
  2307  0022  2836               	goto	l1256
  2308  0023                     u540:
  2309  0023                     l1248:
  2310  0023  3004               	movlw	4
  2311  0024  0674               	xorwf	Config_USART@Freq,w
  2312  0025  0475               	iorwf	Config_USART@Freq+1,w
  2313  0026  1D03               	btfss	3,2
  2314  0027  2829               	goto	u551
  2315  0028  282A               	goto	u550
  2316  0029                     u551:
  2317  0029  2836               	goto	l1256
  2318  002A                     u550:
  2319  002A                     l1250:
  2320                           
  2321                           ;UART.c: 15:         TXSTAbits.SYNC = 0;
  2322  002A  1683               	bsf	3,5	;RP0=1, select bank1
  2323  002B  1303               	bcf	3,6	;RP1=0, select bank1
  2324  002C  1218               	bcf	24,4	;volatile
  2325                           
  2326                           ;UART.c: 16:         TXSTAbits.BRGH = 1;
  2327  002D  1518               	bsf	24,2	;volatile
  2328                           
  2329                           ;UART.c: 18:         BAUDCTLbits.BRG16 = 0;
  2330  002E  1683               	bsf	3,5	;RP0=1, select bank3
  2331  002F  1703               	bsf	3,6	;RP1=1, select bank3
  2332  0030  1187               	bcf	7,3	;volatile
  2333  0031                     l1252:
  2334                           
  2335                           ;UART.c: 20:         SPBRG = 25;
  2336  0031  3019               	movlw	25
  2337  0032  1683               	bsf	3,5	;RP0=1, select bank1
  2338  0033  1303               	bcf	3,6	;RP1=0, select bank1
  2339  0034  0099               	movwf	25	;volatile
  2340  0035                     l1254:
  2341                           
  2342                           ;UART.c: 21:         SPBRGH = 0;
  2343  0035  019A               	clrf	26	;volatile
  2344  0036                     l1256:
  2345                           
  2346                           ;UART.c: 24:     if(baud_rate == 9600 && Freq == 8){
  2347  0036  3080               	movlw	128
  2348  0037  0672               	xorwf	Config_USART@baud_rate,w
  2349  0038  3025               	movlw	37
  2350  0039  1903               	skipnz
  2351  003A  0673               	xorwf	Config_USART@baud_rate+1,w
  2352  003B  1D03               	btfss	3,2
  2353  003C  283E               	goto	u561
  2354  003D  283F               	goto	u560
  2355  003E                     u561:
  2356  003E  2852               	goto	l1266
  2357  003F                     u560:
  2358  003F                     l1258:
  2359  003F  3008               	movlw	8
  2360  0040  0674               	xorwf	Config_USART@Freq,w
  2361  0041  0475               	iorwf	Config_USART@Freq+1,w
  2362  0042  1D03               	btfss	3,2
  2363  0043  2845               	goto	u571
  2364  0044  2846               	goto	u570
  2365  0045                     u571:
  2366  0045  2852               	goto	l1266
  2367  0046                     u570:
  2368  0046                     l1260:
  2369                           
  2370                           ;UART.c: 25:         TXSTAbits.SYNC = 0;
  2371  0046  1683               	bsf	3,5	;RP0=1, select bank1
  2372  0047  1303               	bcf	3,6	;RP1=0, select bank1
  2373  0048  1218               	bcf	24,4	;volatile
  2374                           
  2375                           ;UART.c: 26:         TXSTAbits.BRGH = 0;
  2376  0049  1118               	bcf	24,2	;volatile
  2377                           
  2378                           ;UART.c: 28:         BAUDCTLbits.BRG16 = 1;
  2379  004A  1683               	bsf	3,5	;RP0=1, select bank3
  2380  004B  1703               	bsf	3,6	;RP1=1, select bank3
  2381  004C  1587               	bsf	7,3	;volatile
  2382  004D                     l1262:
  2383                           
  2384                           ;UART.c: 30:         SPBRG = 51;
  2385  004D  3033               	movlw	51
  2386  004E  1683               	bsf	3,5	;RP0=1, select bank1
  2387  004F  1303               	bcf	3,6	;RP1=0, select bank1
  2388  0050  0099               	movwf	25	;volatile
  2389  0051                     l1264:
  2390                           
  2391                           ;UART.c: 31:         SPBRGH = 0;
  2392  0051  019A               	clrf	26	;volatile
  2393  0052                     l1266:
  2394                           
  2395                           ;UART.c: 34:     if(baud_rate == 9600 && Freq == 1){
  2396  0052  3080               	movlw	128
  2397  0053  0672               	xorwf	Config_USART@baud_rate,w
  2398  0054  3025               	movlw	37
  2399  0055  1903               	skipnz
  2400  0056  0673               	xorwf	Config_USART@baud_rate+1,w
  2401  0057  1D03               	btfss	3,2
  2402  0058  285A               	goto	u581
  2403  0059  285B               	goto	u580
  2404  005A                     u581:
  2405  005A  286D               	goto	l1276
  2406  005B                     u580:
  2407  005B                     l1268:
  2408  005B  0374               	decf	Config_USART@Freq,w
  2409  005C  0475               	iorwf	Config_USART@Freq+1,w
  2410  005D  1D03               	btfss	3,2
  2411  005E  2860               	goto	u591
  2412  005F  2861               	goto	u590
  2413  0060                     u591:
  2414  0060  286D               	goto	l1276
  2415  0061                     u590:
  2416  0061                     l1270:
  2417                           
  2418                           ;UART.c: 35:         TXSTAbits.SYNC = 0;
  2419  0061  1683               	bsf	3,5	;RP0=1, select bank1
  2420  0062  1303               	bcf	3,6	;RP1=0, select bank1
  2421  0063  1218               	bcf	24,4	;volatile
  2422                           
  2423                           ;UART.c: 36:         TXSTAbits.BRGH = 1;
  2424  0064  1518               	bsf	24,2	;volatile
  2425                           
  2426                           ;UART.c: 38:         BAUDCTLbits.BRG16 = 1;
  2427  0065  1683               	bsf	3,5	;RP0=1, select bank3
  2428  0066  1703               	bsf	3,6	;RP1=1, select bank3
  2429  0067  1587               	bsf	7,3	;volatile
  2430  0068                     l1272:
  2431                           
  2432                           ;UART.c: 40:         SPBRG = 25;
  2433  0068  3019               	movlw	25
  2434  0069  1683               	bsf	3,5	;RP0=1, select bank1
  2435  006A  1303               	bcf	3,6	;RP1=0, select bank1
  2436  006B  0099               	movwf	25	;volatile
  2437  006C                     l1274:
  2438                           
  2439                           ;UART.c: 41:         SPBRGH = 0;
  2440  006C  019A               	clrf	26	;volatile
  2441  006D                     l1276:
  2442                           
  2443                           ;UART.c: 44:     if(baud_rate == 10417 && Freq == 4){
  2444  006D  30B1               	movlw	177
  2445  006E  0672               	xorwf	Config_USART@baud_rate,w
  2446  006F  3028               	movlw	40
  2447  0070  1903               	skipnz
  2448  0071  0673               	xorwf	Config_USART@baud_rate+1,w
  2449  0072  1D03               	btfss	3,2
  2450  0073  2875               	goto	u601
  2451  0074  2876               	goto	u600
  2452  0075                     u601:
  2453  0075  2889               	goto	l1286
  2454  0076                     u600:
  2455  0076                     l1278:
  2456  0076  3004               	movlw	4
  2457  0077  0674               	xorwf	Config_USART@Freq,w
  2458  0078  0475               	iorwf	Config_USART@Freq+1,w
  2459  0079  1D03               	btfss	3,2
  2460  007A  287C               	goto	u611
  2461  007B  287D               	goto	u610
  2462  007C                     u611:
  2463  007C  2889               	goto	l1286
  2464  007D                     u610:
  2465  007D                     l1280:
  2466                           
  2467                           ;UART.c: 45:         TXSTAbits.SYNC = 0;
  2468  007D  1683               	bsf	3,5	;RP0=1, select bank1
  2469  007E  1303               	bcf	3,6	;RP1=0, select bank1
  2470  007F  1218               	bcf	24,4	;volatile
  2471                           
  2472                           ;UART.c: 46:         TXSTAbits.BRGH = 1;
  2473  0080  1518               	bsf	24,2	;volatile
  2474                           
  2475                           ;UART.c: 48:         BAUDCTLbits.BRG16 = 1;
  2476  0081  1683               	bsf	3,5	;RP0=1, select bank3
  2477  0082  1703               	bsf	3,6	;RP1=1, select bank3
  2478  0083  1587               	bsf	7,3	;volatile
  2479  0084                     l1282:
  2480                           
  2481                           ;UART.c: 50:         SPBRG = 23;
  2482  0084  3017               	movlw	23
  2483  0085  1683               	bsf	3,5	;RP0=1, select bank1
  2484  0086  1303               	bcf	3,6	;RP1=0, select bank1
  2485  0087  0099               	movwf	25	;volatile
  2486  0088                     l1284:
  2487                           
  2488                           ;UART.c: 51:         SPBRGH = 0;
  2489  0088  019A               	clrf	26	;volatile
  2490  0089                     l1286:
  2491                           
  2492                           ;UART.c: 54:     if(baud_rate == 10417 && Freq == 8){
  2493  0089  30B1               	movlw	177
  2494  008A  0672               	xorwf	Config_USART@baud_rate,w
  2495  008B  3028               	movlw	40
  2496  008C  1903               	skipnz
  2497  008D  0673               	xorwf	Config_USART@baud_rate+1,w
  2498  008E  1D03               	btfss	3,2
  2499  008F  2891               	goto	u621
  2500  0090  2892               	goto	u620
  2501  0091                     u621:
  2502  0091  28A5               	goto	l1296
  2503  0092                     u620:
  2504  0092                     l1288:
  2505  0092  3008               	movlw	8
  2506  0093  0674               	xorwf	Config_USART@Freq,w
  2507  0094  0475               	iorwf	Config_USART@Freq+1,w
  2508  0095  1D03               	btfss	3,2
  2509  0096  2898               	goto	u631
  2510  0097  2899               	goto	u630
  2511  0098                     u631:
  2512  0098  28A5               	goto	l1296
  2513  0099                     u630:
  2514  0099                     l1290:
  2515                           
  2516                           ;UART.c: 55:         TXSTAbits.SYNC = 0;
  2517  0099  1683               	bsf	3,5	;RP0=1, select bank1
  2518  009A  1303               	bcf	3,6	;RP1=0, select bank1
  2519  009B  1218               	bcf	24,4	;volatile
  2520                           
  2521                           ;UART.c: 56:         TXSTAbits.BRGH = 0;
  2522  009C  1118               	bcf	24,2	;volatile
  2523                           
  2524                           ;UART.c: 58:         BAUDCTLbits.BRG16 = 1;
  2525  009D  1683               	bsf	3,5	;RP0=1, select bank3
  2526  009E  1703               	bsf	3,6	;RP1=1, select bank3
  2527  009F  1587               	bsf	7,3	;volatile
  2528  00A0                     l1292:
  2529                           
  2530                           ;UART.c: 60:         SPBRG = 47;
  2531  00A0  302F               	movlw	47
  2532  00A1  1683               	bsf	3,5	;RP0=1, select bank1
  2533  00A2  1303               	bcf	3,6	;RP1=0, select bank1
  2534  00A3  0099               	movwf	25	;volatile
  2535  00A4                     l1294:
  2536                           
  2537                           ;UART.c: 61:         SPBRGH = 0;
  2538  00A4  019A               	clrf	26	;volatile
  2539  00A5                     l1296:
  2540                           
  2541                           ;UART.c: 64:     if(baud_rate == 10417 && Freq == 1){
  2542  00A5  30B1               	movlw	177
  2543  00A6  0672               	xorwf	Config_USART@baud_rate,w
  2544  00A7  3028               	movlw	40
  2545  00A8  1903               	skipnz
  2546  00A9  0673               	xorwf	Config_USART@baud_rate+1,w
  2547  00AA  1D03               	btfss	3,2
  2548  00AB  28AD               	goto	u641
  2549  00AC  28AE               	goto	u640
  2550  00AD                     u641:
  2551  00AD  28C0               	goto	l1306
  2552  00AE                     u640:
  2553  00AE                     l1298:
  2554  00AE  0374               	decf	Config_USART@Freq,w
  2555  00AF  0475               	iorwf	Config_USART@Freq+1,w
  2556  00B0  1D03               	btfss	3,2
  2557  00B1  28B3               	goto	u651
  2558  00B2  28B4               	goto	u650
  2559  00B3                     u651:
  2560  00B3  28C0               	goto	l1306
  2561  00B4                     u650:
  2562  00B4                     l1300:
  2563                           
  2564                           ;UART.c: 65:         TXSTAbits.SYNC = 0;
  2565  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  2566  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  2567  00B6  1218               	bcf	24,4	;volatile
  2568                           
  2569                           ;UART.c: 66:         TXSTAbits.BRGH = 0;
  2570  00B7  1118               	bcf	24,2	;volatile
  2571                           
  2572                           ;UART.c: 68:         BAUDCTLbits.BRG16 = 1;
  2573  00B8  1683               	bsf	3,5	;RP0=1, select bank3
  2574  00B9  1703               	bsf	3,6	;RP1=1, select bank3
  2575  00BA  1587               	bsf	7,3	;volatile
  2576  00BB                     l1302:
  2577                           
  2578                           ;UART.c: 70:         SPBRG = 5;
  2579  00BB  3005               	movlw	5
  2580  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  2581  00BD  1303               	bcf	3,6	;RP1=0, select bank1
  2582  00BE  0099               	movwf	25	;volatile
  2583  00BF                     l1304:
  2584                           
  2585                           ;UART.c: 71:         SPBRGH = 0;
  2586  00BF  019A               	clrf	26	;volatile
  2587  00C0                     l1306:
  2588                           
  2589                           ;UART.c: 74:     RCSTAbits.SPEN = 1;
  2590  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  2591  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  2592  00C2  1798               	bsf	24,7	;volatile
  2593  00C3                     l1308:
  2594                           
  2595                           ;UART.c: 75:     RCSTAbits.RX9 = 0;
  2596  00C3  1318               	bcf	24,6	;volatile
  2597  00C4                     l1310:
  2598                           
  2599                           ;UART.c: 76:     RCSTAbits.CREN = 1;
  2600  00C4  1618               	bsf	24,4	;volatile
  2601  00C5                     l1312:
  2602                           
  2603                           ;UART.c: 78:     TXSTAbits.TXEN = 1;
  2604  00C5  1683               	bsf	3,5	;RP0=1, select bank1
  2605  00C6  1303               	bcf	3,6	;RP1=0, select bank1
  2606  00C7  1698               	bsf	24,5	;volatile
  2607  00C8                     l1314:
  2608                           
  2609                           ;UART.c: 79:     PIE1bits.RCIE = 0;
  2610  00C8  128C               	bcf	12,5	;volatile
  2611  00C9                     l236:
  2612  00C9  0008               	return
  2613  00CA                     __end_of_Config_USART:
  2614                           
  2615                           	psect	text12
  2616  03E4                     __ptext12:	
  2617 ;; *************** function _I2C_Master_Write *****************
  2618 ;; Defined at:
  2619 ;;		line 65 in file "I2C.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  d               2    2[COMMON] unsigned int 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  1    wreg      void 
  2626 ;; Registers used:
  2627 ;;		wreg, status,2, status,0, pclath, cstack
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2633 ;;      Params:         2       0       0       0       0
  2634 ;;      Locals:         0       0       0       0       0
  2635 ;;      Temps:          0       0       0       0       0
  2636 ;;      Totals:         2       0       0       0       0
  2637 ;;Total ram usage:        2 bytes
  2638 ;; Hardware stack levels used: 1
  2639 ;; Hardware stack levels required when called: 2
  2640 ;; This function calls:
  2641 ;;		_I2C_Master_Wait
  2642 ;; This function is called by:
  2643 ;;		_main
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           
  2648                           ;psect for function _I2C_Master_Write
  2649  03E4                     _I2C_Master_Write:
  2650  03E4                     l1352:	
  2651                           ;incstack = 0
  2652                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2653                           
  2654                           
  2655                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2656  03E4  120A  118A  23D7  120A  118A  	fcall	_I2C_Master_Wait
  2657  03E9                     l1354:
  2658                           
  2659                           ;I2C.c: 68:     SSPBUF = d;
  2660  03E9  0872               	movf	I2C_Master_Write@d,w
  2661  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2662  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  2663  03EC  0093               	movwf	19	;volatile
  2664  03ED                     l145:
  2665  03ED  0008               	return
  2666  03EE                     __end_of_I2C_Master_Write:
  2667                           
  2668                           	psect	text13
  2669  03EE                     __ptext13:	
  2670 ;; *************** function _I2C_Master_Stop *****************
  2671 ;; Defined at:
  2672 ;;		line 55 in file "I2C.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;		None
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;		None
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  1    wreg      void 
  2679 ;; Registers used:
  2680 ;;		wreg, status,2, status,0, pclath, cstack
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2686 ;;      Params:         0       0       0       0       0
  2687 ;;      Locals:         0       0       0       0       0
  2688 ;;      Temps:          0       0       0       0       0
  2689 ;;      Totals:         0       0       0       0       0
  2690 ;;Total ram usage:        0 bytes
  2691 ;; Hardware stack levels used: 1
  2692 ;; Hardware stack levels required when called: 2
  2693 ;; This function calls:
  2694 ;;		_I2C_Master_Wait
  2695 ;; This function is called by:
  2696 ;;		_main
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700                           
  2701                           ;psect for function _I2C_Master_Stop
  2702  03EE                     _I2C_Master_Stop:
  2703  03EE                     l1108:	
  2704                           ;incstack = 0
  2705                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2706                           
  2707                           
  2708                           ;I2C.c: 57:     I2C_Master_Wait();
  2709  03EE  120A  118A  23D7  120A  118A  	fcall	_I2C_Master_Wait
  2710  03F3                     l1110:
  2711                           
  2712                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2713  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  2714  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  2715  03F5  1511               	bsf	17,2	;volatile
  2716  03F6                     l142:
  2717  03F6  0008               	return
  2718  03F7                     __end_of_I2C_Master_Stop:
  2719                           
  2720                           	psect	text14
  2721  03F7                     __ptext14:	
  2722 ;; *************** function _I2C_Master_Start *****************
  2723 ;; Defined at:
  2724 ;;		line 39 in file "I2C.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;		None
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;		None
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      void 
  2731 ;; Registers used:
  2732 ;;		wreg, status,2, status,0, pclath, cstack
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2738 ;;      Params:         0       0       0       0       0
  2739 ;;      Locals:         0       0       0       0       0
  2740 ;;      Temps:          0       0       0       0       0
  2741 ;;      Totals:         0       0       0       0       0
  2742 ;;Total ram usage:        0 bytes
  2743 ;; Hardware stack levels used: 1
  2744 ;; Hardware stack levels required when called: 2
  2745 ;; This function calls:
  2746 ;;		_I2C_Master_Wait
  2747 ;; This function is called by:
  2748 ;;		_main
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           
  2753                           ;psect for function _I2C_Master_Start
  2754  03F7                     _I2C_Master_Start:
  2755  03F7                     l1084:	
  2756                           ;incstack = 0
  2757                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2758                           
  2759                           
  2760                           ;I2C.c: 41:     I2C_Master_Wait();
  2761  03F7  120A  118A  23D7  120A  118A  	fcall	_I2C_Master_Wait
  2762  03FC                     l1086:
  2763                           
  2764                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2765  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  2766  03FD  1303               	bcf	3,6	;RP1=0, select bank1
  2767  03FE  1411               	bsf	17,0	;volatile
  2768  03FF                     l136:
  2769  03FF  0008               	return
  2770  0400                     __end_of_I2C_Master_Start:
  2771                           
  2772                           	psect	text15
  2773  0343                     __ptext15:	
  2774 ;; *************** function _I2C_Master_Read *****************
  2775 ;; Defined at:
  2776 ;;		line 74 in file "I2C.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;  a               2    2[COMMON] unsigned short 
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;  temp            2    6[COMMON] unsigned short 
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  2    2[COMMON] unsigned short 
  2783 ;; Registers used:
  2784 ;;		wreg, status,2, status,0, pclath, cstack
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2790 ;;      Params:         2       0       0       0       0
  2791 ;;      Locals:         2       0       0       0       0
  2792 ;;      Temps:          2       0       0       0       0
  2793 ;;      Totals:         6       0       0       0       0
  2794 ;;Total ram usage:        6 bytes
  2795 ;; Hardware stack levels used: 1
  2796 ;; Hardware stack levels required when called: 2
  2797 ;; This function calls:
  2798 ;;		_I2C_Master_Wait
  2799 ;; This function is called by:
  2800 ;;		_main
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           
  2805                           ;psect for function _I2C_Master_Read
  2806  0343                     _I2C_Master_Read:
  2807  0343                     l1356:	
  2808                           ;incstack = 0
  2809                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2810                           
  2811                           
  2812                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2813  0343  120A  118A  23D7  120A  118A  	fcall	_I2C_Master_Wait
  2814  0348                     l1358:
  2815                           
  2816                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2817  0348  1683               	bsf	3,5	;RP0=1, select bank1
  2818  0349  1303               	bcf	3,6	;RP1=0, select bank1
  2819  034A  1591               	bsf	17,3	;volatile
  2820                           
  2821                           ;I2C.c: 79:     I2C_Master_Wait();
  2822  034B  120A  118A  23D7  120A  118A  	fcall	_I2C_Master_Wait
  2823  0350                     l1360:
  2824                           
  2825                           ;I2C.c: 80:     temp = SSPBUF;
  2826  0350  1283               	bcf	3,5	;RP0=0, select bank0
  2827  0351  1303               	bcf	3,6	;RP1=0, select bank0
  2828  0352  0813               	movf	19,w	;volatile
  2829  0353  00F4               	movwf	??_I2C_Master_Read
  2830  0354  01F5               	clrf	??_I2C_Master_Read+1
  2831  0355  0874               	movf	??_I2C_Master_Read,w
  2832  0356  00F6               	movwf	I2C_Master_Read@temp
  2833  0357  0875               	movf	??_I2C_Master_Read+1,w
  2834  0358  00F7               	movwf	I2C_Master_Read@temp+1
  2835  0359                     l1362:
  2836                           
  2837                           ;I2C.c: 81:     I2C_Master_Wait();
  2838  0359  120A  118A  23D7  120A  118A  	fcall	_I2C_Master_Wait
  2839  035E                     l1364:
  2840                           
  2841                           ;I2C.c: 82:     if(a == 1){
  2842  035E  0372               	decf	I2C_Master_Read@a,w
  2843  035F  0473               	iorwf	I2C_Master_Read@a+1,w
  2844  0360  1D03               	btfss	3,2
  2845  0361  2B63               	goto	u661
  2846  0362  2B64               	goto	u660
  2847  0363                     u661:
  2848  0363  2B68               	goto	l148
  2849  0364                     u660:
  2850  0364                     l1366:
  2851                           
  2852                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2853  0364  1683               	bsf	3,5	;RP0=1, select bank1
  2854  0365  1303               	bcf	3,6	;RP1=0, select bank1
  2855  0366  1291               	bcf	17,5	;volatile
  2856                           
  2857                           ;I2C.c: 84:     }else{
  2858  0367  2B6B               	goto	l149
  2859  0368                     l148:
  2860                           
  2861                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2862  0368  1683               	bsf	3,5	;RP0=1, select bank1
  2863  0369  1303               	bcf	3,6	;RP1=0, select bank1
  2864  036A  1691               	bsf	17,5	;volatile
  2865  036B                     l149:	
  2866                           ;I2C.c: 86:     }
  2867                           
  2868                           
  2869                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2870  036B  1611               	bsf	17,4	;volatile
  2871  036C                     l1368:
  2872                           
  2873                           ;I2C.c: 88:     return temp;
  2874  036C  0877               	movf	I2C_Master_Read@temp+1,w
  2875  036D  00F3               	movwf	?_I2C_Master_Read+1
  2876  036E  0876               	movf	I2C_Master_Read@temp,w
  2877  036F  00F2               	movwf	?_I2C_Master_Read
  2878  0370                     l150:
  2879  0370  0008               	return
  2880  0371                     __end_of_I2C_Master_Read:
  2881                           
  2882                           	psect	text16
  2883  03D7                     __ptext16:	
  2884 ;; *************** function _I2C_Master_Wait *****************
  2885 ;; Defined at:
  2886 ;;		line 32 in file "I2C.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;		None
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;		None
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      void 
  2893 ;; Registers used:
  2894 ;;		wreg, status,2
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2900 ;;      Params:         0       0       0       0       0
  2901 ;;      Locals:         0       0       0       0       0
  2902 ;;      Temps:          0       0       0       0       0
  2903 ;;      Totals:         0       0       0       0       0
  2904 ;;Total ram usage:        0 bytes
  2905 ;; Hardware stack levels used: 1
  2906 ;; Hardware stack levels required when called: 1
  2907 ;; This function calls:
  2908 ;;		Nothing
  2909 ;; This function is called by:
  2910 ;;		_I2C_Master_Start
  2911 ;;		_I2C_Master_Stop
  2912 ;;		_I2C_Master_Write
  2913 ;;		_I2C_Master_Read
  2914 ;;		_I2C_Master_RepeatedStart
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           
  2918                           
  2919                           ;psect for function _I2C_Master_Wait
  2920  03D7                     _I2C_Master_Wait:
  2921  03D7                     l1044:	
  2922                           ;incstack = 0
  2923                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2924                           
  2925  03D7                     l130:	
  2926                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2927                           
  2928  03D7  1683               	bsf	3,5	;RP0=1, select bank1
  2929  03D8  1303               	bcf	3,6	;RP1=0, select bank1
  2930  03D9  1914               	btfsc	20,2	;volatile
  2931  03DA  2BDC               	goto	u381
  2932  03DB  2BDD               	goto	u380
  2933  03DC                     u381:
  2934  03DC  2BD7               	goto	l130
  2935  03DD                     u380:
  2936  03DD                     l1046:
  2937  03DD  0811               	movf	17,w	;volatile
  2938  03DE  391F               	andlw	31
  2939  03DF  1D03               	btfss	3,2
  2940  03E0  2BE2               	goto	u391
  2941  03E1  2BE3               	goto	u390
  2942  03E2                     u391:
  2943  03E2  2BD7               	goto	l130
  2944  03E3                     u390:
  2945  03E3                     l133:
  2946  03E3  0008               	return
  2947  03E4                     __end_of_I2C_Master_Wait:
  2948                           
  2949                           	psect	text17
  2950  0400                     __ptext17:	
  2951 ;; *************** function _isr *****************
  2952 ;; Defined at:
  2953 ;;		line 65 in file "Maestro I2C.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;		None
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;		None
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  1    wreg      void 
  2960 ;; Registers used:
  2961 ;;		None
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2967 ;;      Params:         0       0       0       0       0
  2968 ;;      Locals:         0       0       0       0       0
  2969 ;;      Temps:          2       0       0       0       0
  2970 ;;      Totals:         2       0       0       0       0
  2971 ;;Total ram usage:        2 bytes
  2972 ;; Hardware stack levels used: 1
  2973 ;; This function calls:
  2974 ;;		Nothing
  2975 ;; This function is called by:
  2976 ;;		Interrupt level 1
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           
  2981                           ;psect for function _isr
  2982  0400                     _isr:
  2983  0400                     i1l71:
  2984  0400  0871               	movf	??_isr+1,w
  2985  0401  008A               	movwf	10
  2986  0402  0E70               	swapf	??_isr,w
  2987  0403  0083               	movwf	3
  2988  0404  0EFE               	swapf	btemp,f
  2989  0405  0E7E               	swapf	btemp,w
  2990  0406  0009               	retfie
  2991  0407                     __end_of_isr:
  2992  007E                     btemp	set	126	;btemp
  2993  007E                     wtemp0	set	126
  2994                           
  2995                           	psect	intentry
  2996  0004                     __pintentry:	
  2997                           ;incstack = 0
  2998                           ; Regs used in _isr: []
  2999                           
  3000  0004                     interrupt_function:
  3001  007E                     saved_w	set	btemp
  3002  0004  00FE               	movwf	btemp
  3003  0005  0E03               	swapf	3,w
  3004  0006  00F0               	movwf	??_isr
  3005  0007  080A               	movf	10,w
  3006  0008  00F1               	movwf	??_isr+1
  3007  0009  120A  118A  2C00   	ljmp	_isr
  3008                           
  3009                           	psect	config
  3010                           
  3011                           ;Config register CONFIG1 @ 0x2007
  3012                           ;	Oscillator Selection bits
  3013                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3014                           ;	Watchdog Timer Enable bit
  3015                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3016                           ;	Power-up Timer Enable bit
  3017                           ;	PWRTE = OFF, PWRT disabled
  3018                           ;	RE3/MCLR pin function select bit
  3019                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3020                           ;	Code Protection bit
  3021                           ;	CP = OFF, Program memory code protection is disabled
  3022                           ;	Data Code Protection bit
  3023                           ;	CPD = OFF, Data memory code protection is disabled
  3024                           ;	Brown Out Reset Selection bits
  3025                           ;	BOREN = OFF, BOR disabled
  3026                           ;	Internal External Switchover bit
  3027                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3028                           ;	Fail-Safe Clock Monitor Enabled bit
  3029                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3030                           ;	Low Voltage Programming Enable bit
  3031                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3032                           ;	In-Circuit Debugger Mode bit
  3033                           ;	DEBUG = 0x1, unprogrammed default
  3034  2007                     	org	8199
  3035  2007  20D4               	dw	8404
  3036                           
  3037                           ;Config register CONFIG2 @ 0x2008
  3038                           ;	Brown-out Reset Selection bit
  3039                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3040                           ;	Flash Program Memory Self Write Enable bits
  3041                           ;	WRT = OFF, Write protection off
  3042  2008                     	org	8200
  3043  2008  3FFF               	dw	16383

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     22      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Escribir_stringLCD@d	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_I2C_Master_Read
    _setup->_set_cursor
    _set_cursor->_Escribir_comandoLCD
    _Limpiar_pantallaLCD->_Escribir_comandoLCD
    _Iniciar_LCD->_Escribir_comandoLCD
    _I2C_Master_Init->___lldiv
    _Escribir_stringLCD->_Escribir_comandoLCD
    _Escribir_comandoLCD->_prender_ELCD

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_setup
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2114
                                             19 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                3     3      0    1895
                                             16 BANK0      3     3      0
                       _Config_USART
                 _Escribir_stringLCD
                    _I2C_Master_Init
                        _Iniciar_LCD
                _Limpiar_pantallaLCD
                            _initOsc
                         _set_cursor
 ---------------------------------------------------------------------------------
 (2) _set_cursor                                           4     3      1     361
                                              4 COMMON     4     3      1
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      60
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Limpiar_pantallaLCD                                  2     2      0     120
                                              4 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Iniciar_LCD                                          2     2      0     120
                                              4 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              8 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) _Escribir_stringLCD                                   3     3      0     276
                                              4 COMMON     3     3      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (3) _Escribir_comandoLCD                                  1     1      0     120
                                              3 COMMON     1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (4) _prender_ELCD                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Config_USART                                         4     0      4     416
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2      98
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     121
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _setup
     _Config_USART
     _Escribir_stringLCD
       _Escribir_comandoLCD
         _prender_ELCD
     _I2C_Master_Init
       ___lldiv
     _Iniciar_LCD
       _Escribir_comandoLCD
     _Limpiar_pantallaLCD
       _Escribir_comandoLCD
     _initOsc
     _set_cursor
       _Escribir_comandoLCD

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      23       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      18       5       30.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      23      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Feb 28 17:53:49 2022

                           pc 0002                            l82 014C                            u10 0262  
                          u11 0261                            u20 026D                            u21 026C  
                          u30 0274                            u31 0273                            u40 027B  
                          u41 027A                            u50 0282                            u51 0281  
                          u60 0289                            u61 0288                            u70 0290  
                          u71 028F                            u80 0297                            u81 0296  
                          fsr 0004               set_cursor@linea 0077                           l130 03D7  
                         l133 03E3                           l150 0370                           l142 03F6  
                         l214 033F                           l206 025C                           l127 02D9  
                         l215 0342                           l136 03FF                           l145 03ED  
                         l162 03D6                           l170 0277                           l171 027D  
                         l148 0368                           l236 00C9                           l172 027E  
                         l149 036B                           l181 029F                           l173 0284  
                         l165 0266                           l174 0285                           l166 0269  
                         l190 0396                           l175 028B                           l167 026F  
                         l176 028C                           l168 0270                           l184 0219  
                         l177 0292                           l169 0276                           l178 0293  
                         l179 0299                           l196 03B0                           l358 01B4  
                         l830 03CC                           l910 01C2                           l832 03D3  
                         l840 0274                           l920 01ED                           l912 01C8  
                         l850 0297                           l842 027B                           l834 025E  
                         l922 01F8                           l914 01D7                           l906 01B5  
                         l828 03C9                           l852 029A                           l844 0282  
                         l836 0262                           l924 01FD                           l916 01DC  
                         l908 01B9                           l932 0397                           l846 0289  
                         l838 026D                           l926 0208                           l918 01E7  
                         l934 039B                           l848 0290                           l928 020E  
                         l936 03A1                           l880 031A                           l938 03AA  
                         l890 0335                           l882 031F                           l892 033A  
                         l884 0325                           l886 032A                           l878 0314  
                         l888 0330                           _GIE 005F                           u160 031A  
                         u161 0319                           u170 0325                           u171 0324  
                         u180 0330                           u500 0231                           u181 032F  
                         u501 0230                           u190 033A                           u510 0245  
                         u191 0339                           u511 0244                           u600 0076  
                         u520 0253                           u601 0075                           u521 0252  
                         u610 007D                           u530 0396                           u611 007C  
                         u531 0395                           u380 03DD                           u620 0092  
                         u540 0023                           u381 03DC                           u621 0091  
                         u541 0022                           u390 03E3                           u630 0099  
                         u550 002A                           u710 018E                           u391 03E2  
                         u631 0098                           u551 0029                           u711 018D  
                         u640 00AE                           u560 003F                           u641 00AD  
                         u561 003E                           u705 0175                           u650 00B4  
                         u570 0046                           u730 01AC                           u490 0224  
                         u651 00B3                           u571 0045                           u731 01AB  
                         u715 018A                           u491 0223                           u660 0364  
                         u580 005B                           u740 02B7                           u661 0363  
                         u581 005A                           u725 019E                           u590 0061  
                         u670 015F                           u591 0060                           u671 015E  
                         u807 01BD                           u745 02B2                           u817 01CC  
                         u690 0173                           u691 0172                           u827 01D9  
                         u685 0164                           u837 01E4                           u757 0308  
                         u847 01EF                           u767 0133                           u857 01FA  
                         u777 023B                           u867 0205                           u787 0257  
                         u877 0210                           u797 03A5                           u887 03CE  
                         _isr 0400                           fsr0 0004                          l1110 03F3  
                        l1044 03D7                          l1108 03EE                          l1300 00B4  
                        l1220 0231                          l1212 021B                          l1046 03DD  
                        l1310 00C4                          l1302 00BB                          l1230 024C  
                        l1222 0237                          l1214 021F                          l1312 00C5  
                        l1304 00BF                          l1240 0378                          l1400 019D  
                        l1232 024E                          l1224 0240                          l1216 0224  
                        l1314 00C8                          l1306 00C0                          l1250 002A  
                        l1242 0385                          l1402 01A6                          l1410 02A4  
                        l1234 0253                          l1218 022B                          l1084 03F7  
                        l1308 00C3                          l1260 0046                          l1252 0031  
                        l1244 0389                          l1236 0372                          l1404 01AC  
                        l1412 02A7                          l1228 0246                          l1420 00CA  
                        l1086 03FC                          l1270 0061                          l1262 004D  
                        l1254 0035                          l1246 001A                          l1238 0376  
                        l1414 02D6                          l1430 00E7                          l1422 00DB  
                        l1360 0350                          l1352 03E4                          l1280 007D  
                        l1272 0068                          l1264 0051                          l1248 0023  
                        l1256 0036                          l1416 02D7                          l1408 02A0  
                        l1440 0107                          l1432 00EA                          l1424 00DE  
                        l1362 0359                          l1354 03E9                          l1290 0099  
                        l1282 0084                          l1274 006C                          l1258 003F  
                        l1266 0052                          l1418 02D8                          l1450 012B  
                        l1442 010C                          l1434 00ED                          l1426 00E1  
                        l1364 035E                          l1356 0343                          l1292 00A0  
                        l1284 0088                          l1268 005B                          l1276 006D  
                        l1452 013A                          l1444 0113                          l1436 00F3  
                        l1428 00E4                          l1460 02E4                          l1366 0364  
                        l1358 0348                          l1294 00A4                          l1278 0076  
                        l1286 0089                          l1390 016F                          l1454 013F  
                        l1446 0119                          l1438 0102                          l1462 02ED  
                        l1368 036C                          l1288 0092                          l1296 00A5  
                        l1392 0173                          l1384 014D                          l1448 0125  
                        l1464 02FB                          l1456 02DA                          l1298 00AE  
                        l1394 017C                          l1386 015F                          l1466 0300  
                        l1458 02DF                          l1396 018E                          l1388 0162  
                        l1398 019C                          ?_isr 0070                          STR_1 03C4  
                        STR_2 03B7                          _PEIE 005E                          i1l71 0400  
               ??_Iniciar_LCD 0074                          _main 02DA                          btemp 007E  
                        start 000C                         ??_isr 0070              ?_I2C_Master_Init 0028  
            ?_I2C_Master_Read 0072              ?_I2C_Master_Wait 0070              ?_I2C_Master_Stop 0070  
  __end_of_Escribir_stringLCD 0397                         ?_main 0070                         _ANSEL 0188  
             __end_of___lldiv 01B5                         _SPBRG 0099                         _PORTA 0005  
                       _PORTB 0006                         _PORTC 0007                         _PORTD 0008  
                       _PORTE 0009                         _TRISA 0085                         _TRISB 0086  
                       _TRISD 0088                         _SSPIE 0463                         _TRISE 0089  
                       _SSPIF 0063               __end_of_initOsc 0343                         _setup 00CA  
         _Limpiar_pantallaLCD 0397                         pclath 000A                         status 0003  
                       wtemp0 007E          __end_of_Config_USART 00CA               __initialization 000F  
         __end_of_Iniciar_LCD 021A                  __end_of_main 0313          ?_Limpiar_pantallaLCD 0070  
                      ??_main 0033             ?_I2C_Master_Start 0070             ?_I2C_Master_Write 0072  
          ??_I2C_Master_Start 0072            ??_I2C_Master_Write 0074            set_cursor@posicion 0074  
                      ?_setup 0070                        _ANSELH 0189                        _SPBRGH 009A  
                      _SSPADD 0093                        _TRISC0 0438                        _TRISC1 0439  
                      _TRISC2 043A                        _TRISC3 043B                        _TRISC4 043C  
                      _SSPCON 0014                        _SSPBUF 0013         ??_Limpiar_pantallaLCD 0074  
                   ??___lldiv 0072                     ??_initOsc 0072                        saved_w 007E  
     __end_of__initialization 0016                   _Iniciar_LCD 01B5                __pcstackCOMMON 0070  
               __end_of_setup 014D                       ??_setup 0030                    __pbssBANK0 0036  
       __size_of_Config_USART 00B0                    __pmaintext 02DA                    __pintentry 0004  
__size_of_Escribir_comandoLCD 0043                  initOsc@Valor 0072                  _Config_USART 001A  
                     _SSPCON2 0091                       _SSPSTAT 0094            _Escribir_stringLCD 0371  
                  __stringtab 03B1           ?_Escribir_stringLCD 0070                       ___lldiv 014D  
                     __ptext1 00CA                       __ptext2 021A                       __ptext3 0313  
                     __ptext4 0397                       __ptext5 01B5                       __ptext6 02A0  
                     __ptext7 014D                       __ptext8 0371                       __ptext9 025D  
        ??_Escribir_stringLCD 0074                       _initOsc 0313                  __size_of_isr 0007  
               ?_prender_ELCD 0070      __size_of_I2C_Master_Init 003A      __size_of_I2C_Master_Read 002E  
    __size_of_I2C_Master_Wait 000D      __size_of_I2C_Master_Stop 0009          end_of_initialization 0016  
   __size_of_I2C_Master_Start 0009     __size_of_I2C_Master_Write 000A               ___lldiv@divisor 0020  
             ___lldiv@counter 0077                    _set_cursor 021A                     _RCSTAbits 0018  
            I2C_Master_Init@c 0028              I2C_Master_Read@a 0072                     _PORTBbits 0006  
                   _PORTCbits 0007                     _PORTDbits 0008                ??_prender_ELCD 0072  
                   _TRISCbits 0087                  ?_Iniciar_LCD 0070                     _TXSTAbits 0098  
 __end_of_Limpiar_pantallaLCD 03B1                   _BAUDCTLbits 0187           start_initialization 000F  
                 __end_of_isr 0407           _Escribir_comandoLCD 025D             ??_I2C_Master_Init 002C  
           ??_I2C_Master_Read 0074             ??_I2C_Master_Wait 0072    Escribir_comandoLCD@Comando 0073  
           ??_I2C_Master_Stop 0072                   ?_set_cursor 0074          ?_Escribir_comandoLCD 0070  
                 __pbssCOMMON 0078                     ___latbits 0002                 __pcstackBANK0 0020  
            _I2C_Master_Start 03F7              _I2C_Master_Write 03E4          __end_of_prender_ELCD 03D7  
                    ?___lldiv 0020         ??_Escribir_comandoLCD 0073                     __pstrings 03B1  
                    ?_initOsc 0070           __size_of_set_cursor 0043                __size_of_setup 0083  
           interrupt_function 0004                      _PIE1bits 008C          __size_of_Iniciar_LCD 0065  
                   _val_giro1 0079                   __stringbase 03B6   __size_of_Escribir_stringLCD 0026  
         I2C_Master_Read@temp 0076           Escribir_stringLCD@d 0076           Escribir_stringLCD@i 0075  
            __size_of___lldiv 0068            __end_of__stringtab 03B7                      _dec_giro 0037  
             _I2C_Master_Init 02A0               _I2C_Master_Read 0343               _I2C_Master_Wait 03D7  
                    _cen_giro 0036               _I2C_Master_Stop 03EE              __size_of_initOsc 0030  
                    __ptext10 03C9                      __ptext11 001A                      __ptext12 03E4  
                    __ptext13 03EE                      __ptext14 03F7                      __ptext15 0343  
                    __ptext16 03D7                      __ptext17 0400         __size_of_prender_ELCD 000E  
               __size_of_main 0039                      _val_giro 007A                  ??_set_cursor 0075  
                    _uni_giro 0078  __size_of_Limpiar_pantallaLCD 001A      __end_of_I2C_Master_Start 0400  
    __end_of_I2C_Master_Write 03EE                  _prender_ELCD 03C9                 ?_Config_USART 0072  
            Config_USART@Freq 0074            __end_of_set_cursor 025D                      intlevel1 0000  
            ___lldiv@dividend 0024                     stringcode 03B1                    _OSCCONbits 008F  
     __end_of_I2C_Master_Init 02DA       __end_of_I2C_Master_Read 0371       __end_of_I2C_Master_Wait 03E4  
     __end_of_I2C_Master_Stop 03F7              ___lldiv@quotient 0073             I2C_Master_Write@d 0072  
              ??_Config_USART 0076                      stringdir 03B1                      stringtab 03B1  
                 _SSPCON2bits 0091         Config_USART@baud_rate 0072   __end_of_Escribir_comandoLCD 02A0  
