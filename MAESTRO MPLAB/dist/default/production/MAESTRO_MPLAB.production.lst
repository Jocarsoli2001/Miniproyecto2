

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Mar 07 20:18:08 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.20
    43                           ; Generated 12/02/2020 GMT
    44                           ; 
    45                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F887 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0088                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  008F                     	;# 
   121  0090                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  0105                     	;# 
   140  0107                     	;# 
   141  0108                     	;# 
   142  0109                     	;# 
   143  010C                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  010F                     	;# 
   148  0185                     	;# 
   149  0187                     	;# 
   150  0188                     	;# 
   151  0189                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  0000                     	;# 
   155  0001                     	;# 
   156  0002                     	;# 
   157  0003                     	;# 
   158  0004                     	;# 
   159  0005                     	;# 
   160  0006                     	;# 
   161  0007                     	;# 
   162  0008                     	;# 
   163  0009                     	;# 
   164  000A                     	;# 
   165  000B                     	;# 
   166  000C                     	;# 
   167  000D                     	;# 
   168  000E                     	;# 
   169  000E                     	;# 
   170  000F                     	;# 
   171  0010                     	;# 
   172  0011                     	;# 
   173  0012                     	;# 
   174  0013                     	;# 
   175  0014                     	;# 
   176  0015                     	;# 
   177  0015                     	;# 
   178  0016                     	;# 
   179  0017                     	;# 
   180  0018                     	;# 
   181  0019                     	;# 
   182  001A                     	;# 
   183  001B                     	;# 
   184  001B                     	;# 
   185  001C                     	;# 
   186  001D                     	;# 
   187  001E                     	;# 
   188  001F                     	;# 
   189  0081                     	;# 
   190  0085                     	;# 
   191  0086                     	;# 
   192  0087                     	;# 
   193  0088                     	;# 
   194  0089                     	;# 
   195  008C                     	;# 
   196  008D                     	;# 
   197  008E                     	;# 
   198  008F                     	;# 
   199  0090                     	;# 
   200  0091                     	;# 
   201  0092                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0093                     	;# 
   205  0094                     	;# 
   206  0095                     	;# 
   207  0096                     	;# 
   208  0097                     	;# 
   209  0098                     	;# 
   210  0099                     	;# 
   211  009A                     	;# 
   212  009B                     	;# 
   213  009C                     	;# 
   214  009D                     	;# 
   215  009E                     	;# 
   216  009F                     	;# 
   217  0105                     	;# 
   218  0107                     	;# 
   219  0108                     	;# 
   220  0109                     	;# 
   221  010C                     	;# 
   222  010C                     	;# 
   223  010D                     	;# 
   224  010E                     	;# 
   225  010F                     	;# 
   226  0185                     	;# 
   227  0187                     	;# 
   228  0188                     	;# 
   229  0189                     	;# 
   230  018C                     	;# 
   231  018D                     	;# 
   232  0000                     	;# 
   233  0001                     	;# 
   234  0002                     	;# 
   235  0003                     	;# 
   236  0004                     	;# 
   237  0005                     	;# 
   238  0006                     	;# 
   239  0007                     	;# 
   240  0008                     	;# 
   241  0009                     	;# 
   242  000A                     	;# 
   243  000B                     	;# 
   244  000C                     	;# 
   245  000D                     	;# 
   246  000E                     	;# 
   247  000E                     	;# 
   248  000F                     	;# 
   249  0010                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0013                     	;# 
   253  0014                     	;# 
   254  0015                     	;# 
   255  0015                     	;# 
   256  0016                     	;# 
   257  0017                     	;# 
   258  0018                     	;# 
   259  0019                     	;# 
   260  001A                     	;# 
   261  001B                     	;# 
   262  001B                     	;# 
   263  001C                     	;# 
   264  001D                     	;# 
   265  001E                     	;# 
   266  001F                     	;# 
   267  0081                     	;# 
   268  0085                     	;# 
   269  0086                     	;# 
   270  0087                     	;# 
   271  0088                     	;# 
   272  0089                     	;# 
   273  008C                     	;# 
   274  008D                     	;# 
   275  008E                     	;# 
   276  008F                     	;# 
   277  0090                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0093                     	;# 
   283  0094                     	;# 
   284  0095                     	;# 
   285  0096                     	;# 
   286  0097                     	;# 
   287  0098                     	;# 
   288  0099                     	;# 
   289  009A                     	;# 
   290  009B                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  0105                     	;# 
   296  0107                     	;# 
   297  0108                     	;# 
   298  0109                     	;# 
   299  010C                     	;# 
   300  010C                     	;# 
   301  010D                     	;# 
   302  010E                     	;# 
   303  010F                     	;# 
   304  0185                     	;# 
   305  0187                     	;# 
   306  0188                     	;# 
   307  0189                     	;# 
   308  018C                     	;# 
   309  018D                     	;# 
   310  0000                     	;# 
   311  0001                     	;# 
   312  0002                     	;# 
   313  0003                     	;# 
   314  0004                     	;# 
   315  0005                     	;# 
   316  0006                     	;# 
   317  0007                     	;# 
   318  0008                     	;# 
   319  0009                     	;# 
   320  000A                     	;# 
   321  000B                     	;# 
   322  000C                     	;# 
   323  000D                     	;# 
   324  000E                     	;# 
   325  000E                     	;# 
   326  000F                     	;# 
   327  0010                     	;# 
   328  0011                     	;# 
   329  0012                     	;# 
   330  0013                     	;# 
   331  0014                     	;# 
   332  0015                     	;# 
   333  0015                     	;# 
   334  0016                     	;# 
   335  0017                     	;# 
   336  0018                     	;# 
   337  0019                     	;# 
   338  001A                     	;# 
   339  001B                     	;# 
   340  001B                     	;# 
   341  001C                     	;# 
   342  001D                     	;# 
   343  001E                     	;# 
   344  001F                     	;# 
   345  0081                     	;# 
   346  0085                     	;# 
   347  0086                     	;# 
   348  0087                     	;# 
   349  0088                     	;# 
   350  0089                     	;# 
   351  008C                     	;# 
   352  008D                     	;# 
   353  008E                     	;# 
   354  008F                     	;# 
   355  0090                     	;# 
   356  0091                     	;# 
   357  0092                     	;# 
   358  0093                     	;# 
   359  0093                     	;# 
   360  0093                     	;# 
   361  0094                     	;# 
   362  0095                     	;# 
   363  0096                     	;# 
   364  0097                     	;# 
   365  0098                     	;# 
   366  0099                     	;# 
   367  009A                     	;# 
   368  009B                     	;# 
   369  009C                     	;# 
   370  009D                     	;# 
   371  009E                     	;# 
   372  009F                     	;# 
   373  0105                     	;# 
   374  0107                     	;# 
   375  0108                     	;# 
   376  0109                     	;# 
   377  010C                     	;# 
   378  010C                     	;# 
   379  010D                     	;# 
   380  010E                     	;# 
   381  010F                     	;# 
   382  0185                     	;# 
   383  0187                     	;# 
   384  0188                     	;# 
   385  0189                     	;# 
   386  018C                     	;# 
   387  018D                     	;# 
   388  0000                     	;# 
   389  0001                     	;# 
   390  0002                     	;# 
   391  0003                     	;# 
   392  0004                     	;# 
   393  0005                     	;# 
   394  0006                     	;# 
   395  0007                     	;# 
   396  0008                     	;# 
   397  0009                     	;# 
   398  000A                     	;# 
   399  000B                     	;# 
   400  000C                     	;# 
   401  000D                     	;# 
   402  000E                     	;# 
   403  000E                     	;# 
   404  000F                     	;# 
   405  0010                     	;# 
   406  0011                     	;# 
   407  0012                     	;# 
   408  0013                     	;# 
   409  0014                     	;# 
   410  0015                     	;# 
   411  0015                     	;# 
   412  0016                     	;# 
   413  0017                     	;# 
   414  0018                     	;# 
   415  0019                     	;# 
   416  001A                     	;# 
   417  001B                     	;# 
   418  001B                     	;# 
   419  001C                     	;# 
   420  001D                     	;# 
   421  001E                     	;# 
   422  001F                     	;# 
   423  0081                     	;# 
   424  0085                     	;# 
   425  0086                     	;# 
   426  0087                     	;# 
   427  0088                     	;# 
   428  0089                     	;# 
   429  008C                     	;# 
   430  008D                     	;# 
   431  008E                     	;# 
   432  008F                     	;# 
   433  0090                     	;# 
   434  0091                     	;# 
   435  0092                     	;# 
   436  0093                     	;# 
   437  0093                     	;# 
   438  0093                     	;# 
   439  0094                     	;# 
   440  0095                     	;# 
   441  0096                     	;# 
   442  0097                     	;# 
   443  0098                     	;# 
   444  0099                     	;# 
   445  009A                     	;# 
   446  009B                     	;# 
   447  009C                     	;# 
   448  009D                     	;# 
   449  009E                     	;# 
   450  009F                     	;# 
   451  0105                     	;# 
   452  0107                     	;# 
   453  0108                     	;# 
   454  0109                     	;# 
   455  010C                     	;# 
   456  010C                     	;# 
   457  010D                     	;# 
   458  010E                     	;# 
   459  010F                     	;# 
   460  0185                     	;# 
   461  0187                     	;# 
   462  0188                     	;# 
   463  0189                     	;# 
   464  018C                     	;# 
   465  018D                     	;# 
   466  0000                     	;# 
   467  0001                     	;# 
   468  0002                     	;# 
   469  0003                     	;# 
   470  0004                     	;# 
   471  0005                     	;# 
   472  0006                     	;# 
   473  0007                     	;# 
   474  0008                     	;# 
   475  0009                     	;# 
   476  000A                     	;# 
   477  000B                     	;# 
   478  000C                     	;# 
   479  000D                     	;# 
   480  000E                     	;# 
   481  000E                     	;# 
   482  000F                     	;# 
   483  0010                     	;# 
   484  0011                     	;# 
   485  0012                     	;# 
   486  0013                     	;# 
   487  0014                     	;# 
   488  0015                     	;# 
   489  0015                     	;# 
   490  0016                     	;# 
   491  0017                     	;# 
   492  0018                     	;# 
   493  0019                     	;# 
   494  001A                     	;# 
   495  001B                     	;# 
   496  001B                     	;# 
   497  001C                     	;# 
   498  001D                     	;# 
   499  001E                     	;# 
   500  001F                     	;# 
   501  0081                     	;# 
   502  0085                     	;# 
   503  0086                     	;# 
   504  0087                     	;# 
   505  0088                     	;# 
   506  0089                     	;# 
   507  008C                     	;# 
   508  008D                     	;# 
   509  008E                     	;# 
   510  008F                     	;# 
   511  0090                     	;# 
   512  0091                     	;# 
   513  0092                     	;# 
   514  0093                     	;# 
   515  0093                     	;# 
   516  0093                     	;# 
   517  0094                     	;# 
   518  0095                     	;# 
   519  0096                     	;# 
   520  0097                     	;# 
   521  0098                     	;# 
   522  0099                     	;# 
   523  009A                     	;# 
   524  009B                     	;# 
   525  009C                     	;# 
   526  009D                     	;# 
   527  009E                     	;# 
   528  009F                     	;# 
   529  0105                     	;# 
   530  0107                     	;# 
   531  0108                     	;# 
   532  0109                     	;# 
   533  010C                     	;# 
   534  010C                     	;# 
   535  010D                     	;# 
   536  010E                     	;# 
   537  010F                     	;# 
   538  0185                     	;# 
   539  0187                     	;# 
   540  0188                     	;# 
   541  0189                     	;# 
   542  018C                     	;# 
   543  018D                     	;# 
   544  0000                     	;# 
   545  0001                     	;# 
   546  0002                     	;# 
   547  0003                     	;# 
   548  0004                     	;# 
   549  0005                     	;# 
   550  0006                     	;# 
   551  0007                     	;# 
   552  0008                     	;# 
   553  0009                     	;# 
   554  000A                     	;# 
   555  000B                     	;# 
   556  000C                     	;# 
   557  000D                     	;# 
   558  000E                     	;# 
   559  000E                     	;# 
   560  000F                     	;# 
   561  0010                     	;# 
   562  0011                     	;# 
   563  0012                     	;# 
   564  0013                     	;# 
   565  0014                     	;# 
   566  0015                     	;# 
   567  0015                     	;# 
   568  0016                     	;# 
   569  0017                     	;# 
   570  0018                     	;# 
   571  0019                     	;# 
   572  001A                     	;# 
   573  001B                     	;# 
   574  001B                     	;# 
   575  001C                     	;# 
   576  001D                     	;# 
   577  001E                     	;# 
   578  001F                     	;# 
   579  0081                     	;# 
   580  0085                     	;# 
   581  0086                     	;# 
   582  0087                     	;# 
   583  0088                     	;# 
   584  0089                     	;# 
   585  008C                     	;# 
   586  008D                     	;# 
   587  008E                     	;# 
   588  008F                     	;# 
   589  0090                     	;# 
   590  0091                     	;# 
   591  0092                     	;# 
   592  0093                     	;# 
   593  0093                     	;# 
   594  0093                     	;# 
   595  0094                     	;# 
   596  0095                     	;# 
   597  0096                     	;# 
   598  0097                     	;# 
   599  0098                     	;# 
   600  0099                     	;# 
   601  009A                     	;# 
   602  009B                     	;# 
   603  009C                     	;# 
   604  009D                     	;# 
   605  009E                     	;# 
   606  009F                     	;# 
   607  0105                     	;# 
   608  0107                     	;# 
   609  0108                     	;# 
   610  0109                     	;# 
   611  010C                     	;# 
   612  010C                     	;# 
   613  010D                     	;# 
   614  010E                     	;# 
   615  010F                     	;# 
   616  0185                     	;# 
   617  0187                     	;# 
   618  0188                     	;# 
   619  0189                     	;# 
   620  018C                     	;# 
   621  018D                     	;# 
   622  0000                     	;# 
   623  0001                     	;# 
   624  0002                     	;# 
   625  0003                     	;# 
   626  0004                     	;# 
   627  0005                     	;# 
   628  0006                     	;# 
   629  0007                     	;# 
   630  0008                     	;# 
   631  0009                     	;# 
   632  000A                     	;# 
   633  000B                     	;# 
   634  000C                     	;# 
   635  000D                     	;# 
   636  000E                     	;# 
   637  000E                     	;# 
   638  000F                     	;# 
   639  0010                     	;# 
   640  0011                     	;# 
   641  0012                     	;# 
   642  0013                     	;# 
   643  0014                     	;# 
   644  0015                     	;# 
   645  0015                     	;# 
   646  0016                     	;# 
   647  0017                     	;# 
   648  0018                     	;# 
   649  0019                     	;# 
   650  001A                     	;# 
   651  001B                     	;# 
   652  001B                     	;# 
   653  001C                     	;# 
   654  001D                     	;# 
   655  001E                     	;# 
   656  001F                     	;# 
   657  0081                     	;# 
   658  0085                     	;# 
   659  0086                     	;# 
   660  0087                     	;# 
   661  0088                     	;# 
   662  0089                     	;# 
   663  008C                     	;# 
   664  008D                     	;# 
   665  008E                     	;# 
   666  008F                     	;# 
   667  0090                     	;# 
   668  0091                     	;# 
   669  0092                     	;# 
   670  0093                     	;# 
   671  0093                     	;# 
   672  0093                     	;# 
   673  0094                     	;# 
   674  0095                     	;# 
   675  0096                     	;# 
   676  0097                     	;# 
   677  0098                     	;# 
   678  0099                     	;# 
   679  009A                     	;# 
   680  009B                     	;# 
   681  009C                     	;# 
   682  009D                     	;# 
   683  009E                     	;# 
   684  009F                     	;# 
   685  0105                     	;# 
   686  0107                     	;# 
   687  0108                     	;# 
   688  0109                     	;# 
   689  010C                     	;# 
   690  010C                     	;# 
   691  010D                     	;# 
   692  010E                     	;# 
   693  010F                     	;# 
   694  0185                     	;# 
   695  0187                     	;# 
   696  0188                     	;# 
   697  0189                     	;# 
   698  018C                     	;# 
   699  018D                     	;# 
   700                           
   701                           	psect	idataBANK0
   702  0FBC                     __pidataBANK0:
   703                           
   704                           ;initializer for _bandera
   705  0FBC  3401               	retlw	1
   706  0FBD  3400               	retlw	0
   707                           
   708                           ;initializer for _dato
   709  0FBE  3401               	retlw	1
   710                           
   711                           ;initializer for _dato1
   712  0FBF  3403               	retlw	3
   713  0019                     _TXREG	set	25
   714  0018                     _RCSTAbits	set	24
   715  0006                     _PORTBbits	set	6
   716  0008                     _PORTDbits	set	8
   717  0013                     _SSPBUF	set	19
   718  0014                     _SSPCON	set	20
   719  0014                     _SSPCONbits	set	20
   720  000B                     _INTCONbits	set	11
   721  0008                     _PORTD	set	8
   722  0006                     _PORTB	set	6
   723  0005                     _PORTA	set	5
   724  001A                     _RCREG	set	26
   725  000C                     _PIR1bits	set	12
   726  005E                     _PEIE	set	94
   727  005F                     _GIE	set	95
   728  0065                     _RCIF	set	101
   729  0064                     _TXIF	set	100
   730  0063                     _SSPIF	set	99
   731  00A4                     _CKP	set	164
   732  009A                     _SPBRGH	set	154
   733  0099                     _SPBRG	set	153
   734  0098                     _TXSTAbits	set	152
   735  008F                     _OSCCONbits	set	143
   736  0091                     _SSPCON2bits	set	145
   737  0093                     _SSPADD	set	147
   738  0094                     _SSPSTAT	set	148
   739  0091                     _SSPCON2	set	145
   740  0094                     _SSPSTATbits	set	148
   741  0085                     _TRISAbits	set	133
   742  0087                     _TRISCbits	set	135
   743  008C                     _PIE1bits	set	140
   744  0088                     _TRISD	set	136
   745  0086                     _TRISB	set	134
   746  0085                     _TRISA	set	133
   747  0463                     _SSPIE	set	1123
   748  043C                     _TRISC4	set	1084
   749  043B                     _TRISC3	set	1083
   750  04A1                     _UA	set	1185
   751  0187                     _BAUDCTLbits	set	391
   752  0189                     _ANSELH	set	393
   753  0188                     _ANSEL	set	392
   754                           
   755                           	psect	strings
   756  0700                     __pstrings:
   757  0700                     stringtab:
   758  0700                     __stringtab:
   759  0700                     stringcode:	
   760                           ;	String table - string pointers are 1 byte each
   761                           
   762  0700                     stringdir:
   763  0700  3007               	movlw	high stringdir
   764  0701  008A               	movwf	10
   765  0702  0804               	movf	4,w
   766  0703  0A84               	incf	4,f
   767  0704  0782               	addwf	2,f
   768  0705                     __stringbase:
   769  0705  3400               	retlw	0
   770  0706                     __end_of__stringtab:
   771  0706                     STR_1:
   772  0706  3458               	retlw	88	;'X'
   773  0707  343A               	retlw	58	;':'
   774  0708  3420               	retlw	32	;' '
   775  0709  3420               	retlw	32	;' '
   776  070A  3420               	retlw	32	;' '
   777  070B  3420               	retlw	32	;' '
   778  070C  3459               	retlw	89	;'Y'
   779  070D  343A               	retlw	58	;':'
   780  070E  3420               	retlw	32	;' '
   781  070F  3420               	retlw	32	;' '
   782  0710  3420               	retlw	32	;' '
   783  0711  3420               	retlw	32	;' '
   784  0712  3420               	retlw	32	;' '
   785  0713  3453               	retlw	83	;'S'
   786  0714  343A               	retlw	58	;':'
   787  0715  3400               	retlw	0
   788  0716                     STR_6:
   789  0716  344D               	retlw	77	;'M'
   790  0717  3469               	retlw	105	;'i'
   791  0718  346E               	retlw	110	;'n'
   792  0719  3469               	retlw	105	;'i'
   793  071A  3470               	retlw	112	;'p'
   794  071B  3472               	retlw	114	;'r'
   795  071C  346F               	retlw	111	;'o'
   796  071D  3479               	retlw	121	;'y'
   797  071E  3465               	retlw	101	;'e'
   798  071F  3463               	retlw	99	;'c'
   799  0720  3474               	retlw	116	;'t'
   800  0721  346F               	retlw	111	;'o'
   801  0722  3420               	retlw	32	;' '
   802  0723  3432               	retlw	50	;'2'
   803  0724  3400               	retlw	0
   804  0725                     STR_7:
   805  0725  344A               	retlw	74	;'J'
   806  0726  346F               	retlw	111	;'o'
   807  0727  3473               	retlw	115	;'s'
   808  0728  3465               	retlw	101	;'e'
   809  0729  3420               	retlw	32	;' '
   810  072A  3453               	retlw	83	;'S'
   811  072B  3461               	retlw	97	;'a'
   812  072C  346E               	retlw	110	;'n'
   813  072D  3474               	retlw	116	;'t'
   814  072E  3469               	retlw	105	;'i'
   815  072F  347A               	retlw	122	;'z'
   816  0730  346F               	retlw	111	;'o'
   817  0731  3400               	retlw	0
   818  0732                     STR_2:
   819  0732  344F               	retlw	79	;'O'
   820  0733  3466               	retlw	102	;'f'
   821  0734  3466               	retlw	102	;'f'
   822  0735  3400               	retlw	0
   823  0736                     STR_4:
   824  0736  3441               	retlw	65	;'A'
   825  0737  3400               	retlw	0
   826  0738                     STR_3:
   827  0738  3452               	retlw	82	;'R'
   828  0739  3400               	retlw	0
   829  073A                     STR_5:
   830  073A  3456               	retlw	86	;'V'
   831  073B  3400               	retlw	0
   832                           
   833                           	psect	cinit
   834  000F                     start_initialization:	
   835                           ; #config settings
   836                           
   837  000F                     __initialization:
   838                           
   839                           ; Initialize objects allocated to BANK0
   840  000F  120A  158A  27BC  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   841  0014  00D0               	movwf	__pdataBANK0& (0+127)
   842  0015  120A  158A  27BD  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   843  001A  00D1               	movwf	(__pdataBANK0+1)& (0+127)
   844  001B  120A  158A  27BE  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   845  0020  00D2               	movwf	(__pdataBANK0+2)& (0+127)
   846  0021  120A  158A  27BF  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   847  0026  00D3               	movwf	(__pdataBANK0+3)& (0+127)
   848                           
   849                           ; Clear objects allocated to BANK0
   850  0027  1383               	bcf	3,7	;select IRP bank0
   851  0028  3020               	movlw	low __pbssBANK0
   852  0029  0084               	movwf	4
   853  002A  3038               	movlw	low (__pbssBANK0+24)
   854  002B  120A  158A  27C0  120A  118A  	fcall	clear_ram0
   855                           
   856                           ; Clear objects allocated to COMMON
   857  0030  01F8               	clrf	__pbssCOMMON& (0+127)
   858  0031  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   859  0032  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   860  0033                     end_of_initialization:	
   861                           ;End of C runtime variable initialization code
   862                           
   863  0033                     __end_of__initialization:
   864  0033  0183               	clrf	3
   865  0034  120A  118A  2837   	ljmp	_main	;jump to C main() function
   866                           
   867                           	psect	bssCOMMON
   868  0078                     __pbssCOMMON:
   869  0078                     _Gx1:
   870  0078                     	ds	1
   871  0079                     _Giro_digy:
   872  0079                     	ds	1
   873  007A                     _Giro_digx:
   874  007A                     	ds	1
   875                           
   876                           	psect	bssBANK0
   877  0020                     __pbssBANK0:
   878  0020                     _estado_sem:
   879  0020                     	ds	1
   880  0021                     _cen_z:
   881  0021                     	ds	1
   882  0022                     _dec_z:
   883  0022                     	ds	1
   884  0023                     _uni_z:
   885  0023                     	ds	1
   886  0024                     _Giro_digz:
   887  0024                     	ds	1
   888  0025                     _cen_y:
   889  0025                     	ds	1
   890  0026                     _dec_y:
   891  0026                     	ds	1
   892  0027                     _uni_y:
   893  0027                     	ds	1
   894  0028                     _cen_x:
   895  0028                     	ds	1
   896  0029                     _dec_x:
   897  0029                     	ds	1
   898  002A                     _uni_x:
   899  002A                     	ds	1
   900  002B                     _Gz2:
   901  002B                     	ds	1
   902  002C                     _Gz1:
   903  002C                     	ds	1
   904  002D                     _Gy2:
   905  002D                     	ds	1
   906  002E                     _Gy1:
   907  002E                     	ds	1
   908  002F                     _Gx2:
   909  002F                     	ds	1
   910  0030                     _T2:
   911  0030                     	ds	1
   912  0031                     _T1:
   913  0031                     	ds	1
   914  0032                     _Az2:
   915  0032                     	ds	1
   916  0033                     _Az1:
   917  0033                     	ds	1
   918  0034                     _Ay2:
   919  0034                     	ds	1
   920  0035                     _Ay1:
   921  0035                     	ds	1
   922  0036                     _Ax2:
   923  0036                     	ds	1
   924  0037                     _Ax1:
   925  0037                     	ds	1
   926                           
   927                           	psect	dataBANK0
   928  0050                     __pdataBANK0:
   929  0050                     _bandera:
   930  0050                     	ds	2
   931  0052                     _dato:
   932  0052                     	ds	1
   933  0053                     _dato1:
   934  0053                     	ds	1
   935                           
   936                           	psect	clrtext
   937  0FC0                     clear_ram0:	
   938                           ;	Called with FSR containing the base address, and
   939                           ;	W with the last address+1
   940                           
   941  0FC0  0064               	clrwdt	;clear the watchdog before getting into this loop
   942  0FC1                     clrloop0:
   943  0FC1  0180               	clrf	0	;clear RAM location pointed to by FSR
   944  0FC2  0A84               	incf	4,f	;increment pointer
   945  0FC3  0604               	xorwf	4,w	;XOR with final address
   946  0FC4  1903               	btfsc	3,2	;have we reached the end yet?
   947  0FC5  3400               	retlw	0	;all done for this memory range, return
   948  0FC6  0604               	xorwf	4,w	;XOR again to restore value
   949  0FC7  2FC1               	goto	clrloop0	;do the next byte
   950                           
   951                           	psect	cstackCOMMON
   952  0070                     __pcstackCOMMON:
   953  0070                     ?_setup:
   954  0070                     ?_I2C_Master_Start:	
   955                           ; 1 bytes @ 0x0
   956                           
   957  0070                     ?_I2CMasterWrite:	
   958                           ; 1 bytes @ 0x0
   959                           
   960  0070                     ?_I2CMasterRead:	
   961                           ; 1 bytes @ 0x0
   962                           
   963  0070                     ?_I2CMasterStop:	
   964                           ; 1 bytes @ 0x0
   965                           
   966  0070                     ?_UART_Write:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  0070                     ?_tabla_numASCII:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0070                     ?_Escribir_stringLCD:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0070                     ?_Escribir_caracterLCD:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0070                     ?_initOsc:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0070                     ?_InitMPU6050:	
   982                           ; 1 bytes @ 0x0
   983                           
   984  0070                     ?_Iniciar_LCD:	
   985                           ; 1 bytes @ 0x0
   986                           
   987  0070                     ?_Limpiar_pantallaLCD:	
   988                           ; 1 bytes @ 0x0
   989                           
   990  0070                     ?_isr:	
   991                           ; 1 bytes @ 0x0
   992                           
   993  0070                     ??_isr:	
   994                           ; 1 bytes @ 0x0
   995                           
   996  0070                     ?_main:	
   997                           ; 1 bytes @ 0x0
   998                           
   999  0070                     ?_I2CMasterCheck:	
  1000                           ; 1 bytes @ 0x0
  1001                           
  1002  0070                     ?_prender_ELCD:	
  1003                           ; 1 bytes @ 0x0
  1004                           
  1005  0070                     ?_Escribir_comandoLCD:	
  1006                           ; 1 bytes @ 0x0
  1007                           
  1008                           
  1009                           ; 1 bytes @ 0x0
  1010  0070                     	ds	3
  1011  0073                     ??_I2C_Master_Start:
  1012  0073                     ??_I2CMasterWrite:	
  1013                           ; 1 bytes @ 0x3
  1014                           
  1015  0073                     ??_I2CMasterRead:	
  1016                           ; 1 bytes @ 0x3
  1017                           
  1018  0073                     ??_I2CMasterStop:	
  1019                           ; 1 bytes @ 0x3
  1020                           
  1021  0073                     ??_UART_Write:	
  1022                           ; 1 bytes @ 0x3
  1023                           
  1024  0073                     ??_tabla_numASCII:	
  1025                           ; 1 bytes @ 0x3
  1026                           
  1027  0073                     ??_initOsc:	
  1028                           ; 1 bytes @ 0x3
  1029                           
  1030  0073                     ?_Config_USART:	
  1031                           ; 1 bytes @ 0x3
  1032                           
  1033  0073                     ??_I2CMasterCheck:	
  1034                           ; 1 bytes @ 0x3
  1035                           
  1036  0073                     ??_prender_ELCD:	
  1037                           ; 1 bytes @ 0x3
  1038                           
  1039  0073                     ??___lldiv:	
  1040                           ; 1 bytes @ 0x3
  1041                           
  1042  0073                     ?___awdiv:	
  1043                           ; 1 bytes @ 0x3
  1044                           
  1045  0073                     ?___awmod:	
  1046                           ; 2 bytes @ 0x3
  1047                           
  1048  0073                     I2C_Master_Start@Modo_Inicio:	
  1049                           ; 2 bytes @ 0x3
  1050                           
  1051  0073                     I2CMasterWrite@Datos:	
  1052                           ; 1 bytes @ 0x3
  1053                           
  1054  0073                     initOsc@Valor:	
  1055                           ; 1 bytes @ 0x3
  1056                           
  1057  0073                     UART_Write@data:	
  1058                           ; 1 bytes @ 0x3
  1059                           
  1060  0073                     Config_USART@baud_rate:	
  1061                           ; 1 bytes @ 0x3
  1062                           
  1063  0073                     ___awdiv@divisor:	
  1064                           ; 2 bytes @ 0x3
  1065                           
  1066  0073                     ___awmod@divisor:	
  1067                           ; 2 bytes @ 0x3
  1068                           
  1069                           
  1070                           ; 2 bytes @ 0x3
  1071  0073                     	ds	1
  1072  0074                     ??_InitMSSP:
  1073  0074                     ??_InitMPU6050:	
  1074                           ; 1 bytes @ 0x4
  1075                           
  1076  0074                     ??_Escribir_comandoLCD:	
  1077                           ; 1 bytes @ 0x4
  1078                           
  1079  0074                     I2CMasterRead@ACK:	
  1080                           ; 1 bytes @ 0x4
  1081                           
  1082  0074                     Escribir_comandoLCD@Comando:	
  1083                           ; 1 bytes @ 0x4
  1084                           
  1085                           
  1086                           ; 1 bytes @ 0x4
  1087  0074                     	ds	1
  1088  0075                     ?_set_cursor:
  1089  0075                     ??_Escribir_stringLCD:	
  1090                           ; 1 bytes @ 0x5
  1091                           
  1092  0075                     ??_Escribir_caracterLCD:	
  1093                           ; 1 bytes @ 0x5
  1094                           
  1095  0075                     ??_Iniciar_LCD:	
  1096                           ; 1 bytes @ 0x5
  1097                           
  1098  0075                     ??_Limpiar_pantallaLCD:	
  1099                           ; 1 bytes @ 0x5
  1100                           
  1101  0075                     tabla_numASCII@a:	
  1102                           ; 1 bytes @ 0x5
  1103                           
  1104  0075                     I2CMasterRead@Datos:	
  1105                           ; 1 bytes @ 0x5
  1106                           
  1107  0075                     Escribir_caracterLCD@a:	
  1108                           ; 1 bytes @ 0x5
  1109                           
  1110  0075                     set_cursor@posicion:	
  1111                           ; 1 bytes @ 0x5
  1112                           
  1113  0075                     Config_USART@Freq:	
  1114                           ; 1 bytes @ 0x5
  1115                           
  1116  0075                     ___awdiv@dividend:	
  1117                           ; 2 bytes @ 0x5
  1118                           
  1119  0075                     ___awmod@dividend:	
  1120                           ; 2 bytes @ 0x5
  1121                           
  1122                           
  1123                           ; 2 bytes @ 0x5
  1124  0075                     	ds	1
  1125  0076                     ??_set_cursor:
  1126  0076                     Escribir_stringLCD@i:	
  1127                           ; 1 bytes @ 0x6
  1128                           
  1129                           
  1130                           ; 1 bytes @ 0x6
  1131  0076                     	ds	1
  1132  0077                     ??_Config_USART:
  1133  0077                     ??___awdiv:	
  1134                           ; 1 bytes @ 0x7
  1135                           
  1136  0077                     ??___awmod:	
  1137                           ; 1 bytes @ 0x7
  1138                           
  1139  0077                     Escribir_stringLCD@d:	
  1140                           ; 1 bytes @ 0x7
  1141                           
  1142                           
  1143                           ; 1 bytes @ 0x7
  1144  0077                     	ds	1
  1145                           
  1146                           	psect	cstackBANK0
  1147  0038                     __pcstackBANK0:
  1148  0038                     ?___lldiv:
  1149  0038                     set_cursor@linea:	
  1150                           ; 4 bytes @ 0x0
  1151                           
  1152  0038                     ___awdiv@counter:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0038                     ___awmod@counter:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0038                     ___lldiv@divisor:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161                           
  1162                           ; 4 bytes @ 0x0
  1163  0038                     	ds	1
  1164  0039                     ___awdiv@sign:
  1165  0039                     ___awmod@sign:	
  1166                           ; 1 bytes @ 0x1
  1167                           
  1168                           
  1169                           ; 1 bytes @ 0x1
  1170  0039                     	ds	1
  1171  003A                     ___awdiv@quotient:
  1172                           
  1173                           ; 2 bytes @ 0x2
  1174  003A                     	ds	2
  1175  003C                     ?_divisor_dec:
  1176  003C                     divisor_dec@b:	
  1177                           ; 1 bytes @ 0x4
  1178                           
  1179  003C                     ___lldiv@dividend:	
  1180                           ; 2 bytes @ 0x4
  1181                           
  1182                           
  1183                           ; 4 bytes @ 0x4
  1184  003C                     	ds	2
  1185  003E                     divisor_dec@dig1:
  1186                           
  1187                           ; 1 bytes @ 0x6
  1188  003E                     	ds	1
  1189  003F                     ??_divisor_dec:
  1190                           
  1191                           ; 1 bytes @ 0x7
  1192  003F                     	ds	1
  1193  0040                     ___lldiv@quotient:
  1194                           
  1195                           ; 4 bytes @ 0x8
  1196  0040                     	ds	1
  1197  0041                     divisor_dec@n:
  1198                           
  1199                           ; 2 bytes @ 0x9
  1200  0041                     	ds	3
  1201  0044                     ___lldiv@counter:
  1202                           
  1203                           ; 1 bytes @ 0xC
  1204  0044                     	ds	1
  1205  0045                     ?_InitMSSP:
  1206  0045                     InitMSSP@Dato:	
  1207                           ; 1 bytes @ 0xD
  1208                           
  1209                           
  1210                           ; 4 bytes @ 0xD
  1211  0045                     	ds	4
  1212  0049                     InitMSSP@Modo:
  1213                           
  1214                           ; 1 bytes @ 0x11
  1215  0049                     	ds	1
  1216  004A                     ??_setup:
  1217                           
  1218                           ; 1 bytes @ 0x12
  1219  004A                     	ds	3
  1220  004D                     ??_main:
  1221                           
  1222                           ; 1 bytes @ 0x15
  1223  004D                     	ds	3
  1224                           
  1225                           	psect	maintext
  1226  0037                     __pmaintext:	
  1227 ;;
  1228 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1229 ;;
  1230 ;; *************** function _main *****************
  1231 ;; Defined at:
  1232 ;;		line 114 in file "Maestro I2C.c"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;		None
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;		None
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  1    wreg      void 
  1239 ;; Registers used:
  1240 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1241 ;; Tracked objects:
  1242 ;;		On entry : B00/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1246 ;;      Params:         0       0       0       0       0
  1247 ;;      Locals:         0       0       0       0       0
  1248 ;;      Temps:          0       3       0       0       0
  1249 ;;      Totals:         0       3       0       0       0
  1250 ;;Total ram usage:        3 bytes
  1251 ;; Hardware stack levels required when called: 5
  1252 ;; This function calls:
  1253 ;;		_Escribir_caracterLCD
  1254 ;;		_Escribir_stringLCD
  1255 ;;		_I2CMasterRead
  1256 ;;		_I2CMasterStop
  1257 ;;		_I2CMasterWrite
  1258 ;;		_I2C_Master_Start
  1259 ;;		_UART_Write
  1260 ;;		_divisor_dec
  1261 ;;		_set_cursor
  1262 ;;		_setup
  1263 ;;		_tabla_numASCII
  1264 ;; This function is called by:
  1265 ;;		Startup code after reset
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           
  1270                           ;psect for function _main
  1271  0037                     _main:
  1272  0037                     l2664:	
  1273                           ;incstack = 0
  1274                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1275                           
  1276                           
  1277                           ;Maestro I2C.c: 115:     setup();
  1278  0037  120A  118A  23D5  120A  118A  	fcall	_setup
  1279  003C                     l2666:
  1280                           
  1281                           ;Maestro I2C.c: 121:         I2C_Master_Start(Standard);
  1282  003C  3001               	movlw	1
  1283  003D  120A  118A  27D4  120A  118A  	fcall	_I2C_Master_Start
  1284  0042                     l2668:
  1285                           
  1286                           ;Maestro I2C.c: 122:         I2CMasterWrite(0b11010010 +0);
  1287  0042  30D2               	movlw	210
  1288  0043  120A  158A  27DB  120A  118A  	fcall	_I2CMasterWrite
  1289  0048                     l2670:
  1290                           
  1291                           ;Maestro I2C.c: 123:         I2CMasterWrite(0x3B);
  1292  0048  303B               	movlw	59
  1293  0049  120A  158A  27DB  120A  118A  	fcall	_I2CMasterWrite
  1294  004E                     l2672:
  1295                           
  1296                           ;Maestro I2C.c: 125:         I2C_Master_Start(Repeated);
  1297  004E  3000               	movlw	0
  1298  004F  120A  118A  27D4  120A  118A  	fcall	_I2C_Master_Start
  1299  0054                     l2674:
  1300                           
  1301                           ;Maestro I2C.c: 126:         I2CMasterWrite(0b11010010 +1);
  1302  0054  30D3               	movlw	211
  1303  0055  120A  158A  27DB  120A  118A  	fcall	_I2CMasterWrite
  1304  005A                     l2676:
  1305                           
  1306                           ;Maestro I2C.c: 138:         Ax1 = I2CMasterRead(ACK); Ax2 = I2CMasterRead(ACK);
  1307  005A  3000               	movlw	0
  1308  005B  120A  118A  276C  120A  118A  	fcall	_I2CMasterRead
  1309  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1310  0061  1303               	bcf	3,6	;RP1=0, select bank0
  1311  0062  00CD               	movwf	??_main
  1312  0063  084D               	movf	??_main,w
  1313  0064  00B7               	movwf	_Ax1
  1314  0065                     l2678:
  1315  0065  3000               	movlw	0
  1316  0066  120A  118A  276C  120A  118A  	fcall	_I2CMasterRead
  1317  006B  1283               	bcf	3,5	;RP0=0, select bank0
  1318  006C  1303               	bcf	3,6	;RP1=0, select bank0
  1319  006D  00CD               	movwf	??_main
  1320  006E  084D               	movf	??_main,w
  1321  006F  00B6               	movwf	_Ax2
  1322  0070                     l2680:
  1323                           
  1324                           ;Maestro I2C.c: 139:         Ay1 = I2CMasterRead(ACK); Ay2 = I2CMasterRead(ACK);
  1325  0070  3000               	movlw	0
  1326  0071  120A  118A  276C  120A  118A  	fcall	_I2CMasterRead
  1327  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1328  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1329  0078  00CD               	movwf	??_main
  1330  0079  084D               	movf	??_main,w
  1331  007A  00B5               	movwf	_Ay1
  1332  007B                     l2682:
  1333  007B  3000               	movlw	0
  1334  007C  120A  118A  276C  120A  118A  	fcall	_I2CMasterRead
  1335  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1336  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1337  0083  00CD               	movwf	??_main
  1338  0084  084D               	movf	??_main,w
  1339  0085  00B4               	movwf	_Ay2
  1340  0086                     l2684:
  1341                           
  1342                           ;Maestro I2C.c: 140:         Az1 = I2CMasterRead(ACK); Az2 = I2CMasterRead(ACK);
  1343  0086  3000               	movlw	0
  1344  0087  120A  118A  276C  120A  118A  	fcall	_I2CMasterRead
  1345  008C  1283               	bcf	3,5	;RP0=0, select bank0
  1346  008D  1303               	bcf	3,6	;RP1=0, select bank0
  1347  008E  00CD               	movwf	??_main
  1348  008F  084D               	movf	??_main,w
  1349  0090  00B3               	movwf	_Az1
  1350  0091                     l2686:
  1351  0091  3000               	movlw	0
  1352  0092  120A  118A  276C  120A  118A  	fcall	_I2CMasterRead
  1353  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1354  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1355  0099  00CD               	movwf	??_main
  1356  009A  084D               	movf	??_main,w
  1357  009B  00B2               	movwf	_Az2
  1358  009C                     l2688:
  1359                           
  1360                           ;Maestro I2C.c: 141:         T1 = I2CMasterRead(ACK); T2 = I2CMasterRead(ACK);
  1361  009C  3000               	movlw	0
  1362  009D  120A  118A  276C  120A  118A  	fcall	_I2CMasterRead
  1363  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1364  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  1365  00A4  00CD               	movwf	??_main
  1366  00A5  084D               	movf	??_main,w
  1367  00A6  00B1               	movwf	_T1
  1368  00A7                     l2690:
  1369  00A7  3000               	movlw	0
  1370  00A8  120A  118A  276C  120A  118A  	fcall	_I2CMasterRead
  1371  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1372  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1373  00AF  00CD               	movwf	??_main
  1374  00B0  084D               	movf	??_main,w
  1375  00B1  00B0               	movwf	_T2
  1376  00B2                     l2692:
  1377                           
  1378                           ;Maestro I2C.c: 142:         Gx1 = I2CMasterRead(ACK); Gx2 = I2CMasterRead(ACK);
  1379  00B2  3000               	movlw	0
  1380  00B3  120A  118A  276C  120A  118A  	fcall	_I2CMasterRead
  1381  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1382  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1383  00BA  00CD               	movwf	??_main
  1384  00BB  084D               	movf	??_main,w
  1385  00BC  00F8               	movwf	_Gx1
  1386  00BD                     l2694:
  1387  00BD  3000               	movlw	0
  1388  00BE  120A  118A  276C  120A  118A  	fcall	_I2CMasterRead
  1389  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  1390  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  1391  00C5  00CD               	movwf	??_main
  1392  00C6  084D               	movf	??_main,w
  1393  00C7  00AF               	movwf	_Gx2
  1394  00C8                     l2696:
  1395                           
  1396                           ;Maestro I2C.c: 143:         Gy1 = I2CMasterRead(ACK); Gy2 = I2CMasterRead(ACK);
  1397  00C8  3000               	movlw	0
  1398  00C9  120A  118A  276C  120A  118A  	fcall	_I2CMasterRead
  1399  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1400  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1401  00D0  00CD               	movwf	??_main
  1402  00D1  084D               	movf	??_main,w
  1403  00D2  00AE               	movwf	_Gy1
  1404  00D3                     l2698:
  1405  00D3  3000               	movlw	0
  1406  00D4  120A  118A  276C  120A  118A  	fcall	_I2CMasterRead
  1407  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1408  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1409  00DB  00CD               	movwf	??_main
  1410  00DC  084D               	movf	??_main,w
  1411  00DD  00AD               	movwf	_Gy2
  1412  00DE                     l2700:
  1413                           
  1414                           ;Maestro I2C.c: 144:         Gz1 = I2CMasterRead(ACK); Gz2 = I2CMasterRead(NACK);
  1415  00DE  3000               	movlw	0
  1416  00DF  120A  118A  276C  120A  118A  	fcall	_I2CMasterRead
  1417  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1418  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1419  00E6  00CD               	movwf	??_main
  1420  00E7  084D               	movf	??_main,w
  1421  00E8  00AC               	movwf	_Gz1
  1422  00E9                     l2702:
  1423  00E9  3001               	movlw	1
  1424  00EA  120A  118A  276C  120A  118A  	fcall	_I2CMasterRead
  1425  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1426  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1427  00F1  00CD               	movwf	??_main
  1428  00F2  084D               	movf	??_main,w
  1429  00F3  00AB               	movwf	_Gz2
  1430  00F4                     l2704:
  1431                           
  1432                           ;Maestro I2C.c: 146:         I2CMasterStop();
  1433  00F4  120A  158A  27C8  120A  118A  	fcall	_I2CMasterStop
  1434  00F9                     l2706:
  1435                           
  1436                           ;Maestro I2C.c: 152:         I2C_Master_Start(Standard);
  1437  00F9  3001               	movlw	1
  1438  00FA  120A  118A  27D4  120A  118A  	fcall	_I2C_Master_Start
  1439  00FF                     l2708:
  1440                           
  1441                           ;Maestro I2C.c: 153:         I2CMasterWrite(0x50);
  1442  00FF  3050               	movlw	80
  1443  0100  120A  158A  27DB  120A  118A  	fcall	_I2CMasterWrite
  1444  0105                     l2710:
  1445                           
  1446                           ;Maestro I2C.c: 154:         I2CMasterWrite(dato1);
  1447  0105  3003               	movlw	3
  1448  0106  120A  158A  27DB  120A  118A  	fcall	_I2CMasterWrite
  1449  010B                     l2712:
  1450                           
  1451                           ;Maestro I2C.c: 156:         I2CMasterStop();
  1452  010B  120A  158A  27C8  120A  118A  	fcall	_I2CMasterStop
  1453  0110                     l2714:
  1454                           
  1455                           ;Maestro I2C.c: 162:         UART_Write(Gx1);
  1456  0110  0878               	movf	_Gx1,w
  1457  0111  120A  158A  27D1  120A  118A  	fcall	_UART_Write
  1458  0116                     l2716:
  1459                           
  1460                           ;Maestro I2C.c: 163:         _delay((unsigned long)((20)*(8000000/4000.0)));
  1461  0116  3034               	movlw	52
  1462  0117  1283               	bcf	3,5	;RP0=0, select bank0
  1463  0118  1303               	bcf	3,6	;RP1=0, select bank0
  1464  0119  00CE               	movwf	??_main+1
  1465  011A  30F1               	movlw	241
  1466  011B  00CD               	movwf	??_main
  1467  011C                     u1887:
  1468  011C  0BCD               	decfsz	??_main,f
  1469  011D  291C               	goto	u1887
  1470  011E  0BCE               	decfsz	??_main+1,f
  1471  011F  291C               	goto	u1887
  1472  0120                     l2718:
  1473                           
  1474                           ;Maestro I2C.c: 169:         divisor_dec(Gx1,Giro_digx);
  1475  0120  0878               	movf	_Gx1,w
  1476  0121  1283               	bcf	3,5	;RP0=0, select bank0
  1477  0122  1303               	bcf	3,6	;RP1=0, select bank0
  1478  0123  00CD               	movwf	??_main
  1479  0124  01CE               	clrf	??_main+1
  1480  0125  084D               	movf	??_main,w
  1481  0126  00BC               	movwf	divisor_dec@b
  1482  0127  084E               	movf	??_main+1,w
  1483  0128  00BD               	movwf	divisor_dec@b+1
  1484  0129  307A               	movlw	(low (_Giro_digx| 0))& (0+255)
  1485  012A  00CF               	movwf	??_main+2
  1486  012B  084F               	movf	??_main+2,w
  1487  012C  00BE               	movwf	divisor_dec@dig1
  1488  012D  120A  118A  25E1  120A  118A  	fcall	_divisor_dec
  1489  0132                     l2720:
  1490                           
  1491                           ;Maestro I2C.c: 172:         uni_x = tabla_numASCII(Giro_digx[0]);
  1492  0132  087A               	movf	_Giro_digx,w
  1493  0133  120A  118A  26B4  120A  118A  	fcall	_tabla_numASCII
  1494  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1495  0139  1303               	bcf	3,6	;RP1=0, select bank0
  1496  013A  00CD               	movwf	??_main
  1497  013B  084D               	movf	??_main,w
  1498  013C  00AA               	movwf	_uni_x
  1499  013D                     l2722:
  1500                           
  1501                           ;Maestro I2C.c: 173:         dec_x = tabla_numASCII(Giro_digx[1]);
  1502  013D  087B               	movf	_Giro_digx+1,w
  1503  013E  120A  118A  26B4  120A  118A  	fcall	_tabla_numASCII
  1504  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1505  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1506  0145  00CD               	movwf	??_main
  1507  0146  084D               	movf	??_main,w
  1508  0147  00A9               	movwf	_dec_x
  1509  0148                     l2724:
  1510                           
  1511                           ;Maestro I2C.c: 174:         cen_x = tabla_numASCII(Giro_digx[2]);
  1512  0148  087C               	movf	_Giro_digx+2,w
  1513  0149  120A  118A  26B4  120A  118A  	fcall	_tabla_numASCII
  1514  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1515  014F  1303               	bcf	3,6	;RP1=0, select bank0
  1516  0150  00CD               	movwf	??_main
  1517  0151  084D               	movf	??_main,w
  1518  0152  00A8               	movwf	_cen_x
  1519  0153                     l2726:
  1520                           
  1521                           ;Maestro I2C.c: 177:         set_cursor(1,0);
  1522  0153  01F5               	clrf	set_cursor@posicion
  1523  0154  3001               	movlw	1
  1524  0155  120A  118A  262E  120A  118A  	fcall	_set_cursor
  1525  015A                     l2728:
  1526                           
  1527                           ;Maestro I2C.c: 178:         Escribir_stringLCD("X:    Y:     S:");
  1528  015A  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1529  015B  120A  118A  2794  120A  118A  	fcall	_Escribir_stringLCD
  1530  0160                     l2730:
  1531                           
  1532                           ;Maestro I2C.c: 180:         set_cursor(2,0);
  1533  0160  01F5               	clrf	set_cursor@posicion
  1534  0161  3002               	movlw	2
  1535  0162  120A  118A  262E  120A  118A  	fcall	_set_cursor
  1536  0167                     l2732:
  1537                           
  1538                           ;Maestro I2C.c: 181:         Escribir_caracterLCD(cen_x);
  1539  0167  1283               	bcf	3,5	;RP0=0, select bank0
  1540  0168  1303               	bcf	3,6	;RP1=0, select bank0
  1541  0169  0828               	movf	_cen_x,w
  1542  016A  120A  158A  27E6  120A  118A  	fcall	_Escribir_caracterLCD
  1543  016F                     l2734:
  1544                           
  1545                           ;Maestro I2C.c: 182:         Escribir_caracterLCD(dec_x);
  1546  016F  1283               	bcf	3,5	;RP0=0, select bank0
  1547  0170  1303               	bcf	3,6	;RP1=0, select bank0
  1548  0171  0829               	movf	_dec_x,w
  1549  0172  120A  158A  27E6  120A  118A  	fcall	_Escribir_caracterLCD
  1550  0177                     l2736:
  1551                           
  1552                           ;Maestro I2C.c: 183:         Escribir_caracterLCD(uni_x);
  1553  0177  1283               	bcf	3,5	;RP0=0, select bank0
  1554  0178  1303               	bcf	3,6	;RP1=0, select bank0
  1555  0179  082A               	movf	_uni_x,w
  1556  017A  120A  158A  27E6  120A  118A  	fcall	_Escribir_caracterLCD
  1557  017F                     l2738:
  1558                           
  1559                           ;Maestro I2C.c: 186:         divisor_dec(Gy1,Giro_digy);
  1560  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1561  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1562  0181  082E               	movf	_Gy1,w
  1563  0182  00CD               	movwf	??_main
  1564  0183  01CE               	clrf	??_main+1
  1565  0184  084D               	movf	??_main,w
  1566  0185  00BC               	movwf	divisor_dec@b
  1567  0186  084E               	movf	??_main+1,w
  1568  0187  00BD               	movwf	divisor_dec@b+1
  1569  0188  3079               	movlw	(low (_Giro_digy| 0))& (0+255)
  1570  0189  00CF               	movwf	??_main+2
  1571  018A  084F               	movf	??_main+2,w
  1572  018B  00BE               	movwf	divisor_dec@dig1
  1573  018C  120A  118A  25E1  120A  118A  	fcall	_divisor_dec
  1574  0191                     l2740:
  1575                           
  1576                           ;Maestro I2C.c: 189:         uni_y = tabla_numASCII(Giro_digy[0]);
  1577  0191  0879               	movf	_Giro_digy,w
  1578  0192  120A  118A  26B4  120A  118A  	fcall	_tabla_numASCII
  1579  0197  1283               	bcf	3,5	;RP0=0, select bank0
  1580  0198  1303               	bcf	3,6	;RP1=0, select bank0
  1581  0199  00CD               	movwf	??_main
  1582  019A  084D               	movf	??_main,w
  1583  019B  00A7               	movwf	_uni_y
  1584  019C                     l2742:
  1585                           
  1586                           ;Maestro I2C.c: 190:         dec_y = tabla_numASCII(Giro_digy[1]);
  1587  019C  087A               	movf	_Giro_digy+1,w
  1588  019D  120A  118A  26B4  120A  118A  	fcall	_tabla_numASCII
  1589  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1590  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  1591  01A4  00CD               	movwf	??_main
  1592  01A5  084D               	movf	??_main,w
  1593  01A6  00A6               	movwf	_dec_y
  1594  01A7                     l2744:
  1595                           
  1596                           ;Maestro I2C.c: 191:         cen_y = tabla_numASCII(Giro_digy[2]);
  1597  01A7  087B               	movf	_Giro_digy+2,w
  1598  01A8  120A  118A  26B4  120A  118A  	fcall	_tabla_numASCII
  1599  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1600  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  1601  01AF  00CD               	movwf	??_main
  1602  01B0  084D               	movf	??_main,w
  1603  01B1  00A5               	movwf	_cen_y
  1604  01B2                     l2746:
  1605                           
  1606                           ;Maestro I2C.c: 193:         set_cursor(2,6);
  1607  01B2  3006               	movlw	6
  1608  01B3  00CD               	movwf	??_main
  1609  01B4  084D               	movf	??_main,w
  1610  01B5  00F5               	movwf	set_cursor@posicion
  1611  01B6  3002               	movlw	2
  1612  01B7  120A  118A  262E  120A  118A  	fcall	_set_cursor
  1613  01BC                     l2748:
  1614                           
  1615                           ;Maestro I2C.c: 194:         Escribir_caracterLCD(cen_y);
  1616  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  1617  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  1618  01BE  0825               	movf	_cen_y,w
  1619  01BF  120A  158A  27E6  120A  118A  	fcall	_Escribir_caracterLCD
  1620  01C4                     l2750:
  1621                           
  1622                           ;Maestro I2C.c: 195:         Escribir_caracterLCD(dec_y);
  1623  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  1624  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  1625  01C6  0826               	movf	_dec_y,w
  1626  01C7  120A  158A  27E6  120A  118A  	fcall	_Escribir_caracterLCD
  1627  01CC                     l2752:
  1628                           
  1629                           ;Maestro I2C.c: 196:         Escribir_caracterLCD(uni_y);
  1630  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1631  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  1632  01CE  0827               	movf	_uni_y,w
  1633  01CF  120A  158A  27E6  120A  118A  	fcall	_Escribir_caracterLCD
  1634  01D4                     l2766:	
  1635                           ;Maestro I2C.c: 198:         if(dato1 == 0){
  1636                           
  1637                           
  1638                           ;Maestro I2C.c: 211:             set_cursor(2,13);
  1639  01D4  300D               	movlw	13
  1640  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  1641  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  1642  01D7  00CD               	movwf	??_main
  1643  01D8  084D               	movf	??_main,w
  1644  01D9  00F5               	movwf	set_cursor@posicion
  1645  01DA  3002               	movlw	2
  1646  01DB  120A  118A  262E  120A  118A  	fcall	_set_cursor
  1647  01E0                     l2768:
  1648                           
  1649                           ;Maestro I2C.c: 212:             Escribir_stringLCD("V");
  1650  01E0  3035               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1651  01E1  120A  118A  2794  120A  118A  	fcall	_Escribir_stringLCD
  1652  01E6  283C               	goto	l2666
  1653  01E7  120A  118A  280C   	ljmp	start
  1654  01EA                     __end_of_main:
  1655                           
  1656                           	psect	text1
  1657  06B4                     __ptext1:	
  1658 ;; *************** function _tabla_numASCII *****************
  1659 ;; Defined at:
  1660 ;;		line 272 in file "Maestro I2C.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;  a               1    wreg     unsigned char 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  a               1    5[COMMON] unsigned char 
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      unsigned char 
  1667 ;; Registers used:
  1668 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1674 ;;      Params:         0       0       0       0       0
  1675 ;;      Locals:         1       0       0       0       0
  1676 ;;      Temps:          2       0       0       0       0
  1677 ;;      Totals:         3       0       0       0       0
  1678 ;;Total ram usage:        3 bytes
  1679 ;; Hardware stack levels used: 1
  1680 ;; Hardware stack levels required when called: 1
  1681 ;; This function calls:
  1682 ;;		Nothing
  1683 ;; This function is called by:
  1684 ;;		_main
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           
  1689                           ;psect for function _tabla_numASCII
  1690  06B4                     _tabla_numASCII:
  1691                           
  1692                           ;incstack = 0
  1693                           ; Regs used in _tabla_numASCII: [wreg-fsr0h+status,2+status,0]
  1694                           ;tabla_numASCII@a stored from wreg
  1695  06B4  00F5               	movwf	tabla_numASCII@a
  1696  06B5                     l2194:
  1697                           
  1698                           ;Maestro I2C.c: 273:     switch(a){
  1699  06B5  2ECA               	goto	l2258
  1700  06B6                     l2196:
  1701                           
  1702                           ;Maestro I2C.c: 275:             return 48;
  1703  06B6  3030               	movlw	48
  1704  06B7  2EF2               	goto	l154
  1705  06B8                     l2202:
  1706                           
  1707                           ;Maestro I2C.c: 278:             return 49;
  1708  06B8  3031               	movlw	49
  1709  06B9  2EF2               	goto	l154
  1710  06BA                     l2208:
  1711                           
  1712                           ;Maestro I2C.c: 281:             return 50;
  1713  06BA  3032               	movlw	50
  1714  06BB  2EF2               	goto	l154
  1715  06BC                     l2214:
  1716                           
  1717                           ;Maestro I2C.c: 284:             return 51;
  1718  06BC  3033               	movlw	51
  1719  06BD  2EF2               	goto	l154
  1720  06BE                     l2220:
  1721                           
  1722                           ;Maestro I2C.c: 287:             return 52;
  1723  06BE  3034               	movlw	52
  1724  06BF  2EF2               	goto	l154
  1725  06C0                     l2226:
  1726                           
  1727                           ;Maestro I2C.c: 290:             return 53;
  1728  06C0  3035               	movlw	53
  1729  06C1  2EF2               	goto	l154
  1730  06C2                     l2232:
  1731                           
  1732                           ;Maestro I2C.c: 293:             return 54;
  1733  06C2  3036               	movlw	54
  1734  06C3  2EF2               	goto	l154
  1735  06C4                     l2238:
  1736                           
  1737                           ;Maestro I2C.c: 296:             return 55;
  1738  06C4  3037               	movlw	55
  1739  06C5  2EF2               	goto	l154
  1740  06C6                     l2244:
  1741                           
  1742                           ;Maestro I2C.c: 299:             return 56;
  1743  06C6  3038               	movlw	56
  1744  06C7  2EF2               	goto	l154
  1745  06C8                     l2250:
  1746                           
  1747                           ;Maestro I2C.c: 302:             return 57;
  1748  06C8  3039               	movlw	57
  1749  06C9  2EF2               	goto	l154
  1750  06CA                     l2258:
  1751  06CA  0875               	movf	tabla_numASCII@a,w
  1752  06CB  00F3               	movwf	??_tabla_numASCII
  1753  06CC  01F4               	clrf	??_tabla_numASCII+1
  1754                           
  1755                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1756                           ; Switch size 1, requested type "simple"
  1757                           ; Number of cases is 1, Range of values is 0 to 0
  1758                           ; switch strategies available:
  1759                           ; Name         Instructions Cycles
  1760                           ; simple_byte            4     3 (average)
  1761                           ; direct_byte           11     8 (fixed)
  1762                           ; jumptable            260     6 (fixed)
  1763                           ;	Chosen strategy is simple_byte
  1764  06CD  0874               	movf	??_tabla_numASCII+1,w
  1765  06CE  3A00               	xorlw	0	; case 0
  1766  06CF  1903               	skipnz
  1767  06D0  2ED2               	goto	l2802
  1768  06D1  2EF2               	goto	l154
  1769  06D2                     l2802:
  1770                           
  1771                           ; Switch size 1, requested type "simple"
  1772                           ; Number of cases is 10, Range of values is 0 to 9
  1773                           ; switch strategies available:
  1774                           ; Name         Instructions Cycles
  1775                           ; simple_byte           31    16 (average)
  1776                           ; direct_byte           38     8 (fixed)
  1777                           ; jumptable            260     6 (fixed)
  1778                           ;	Chosen strategy is simple_byte
  1779  06D2  0873               	movf	??_tabla_numASCII,w
  1780  06D3  3A00               	xorlw	0	; case 0
  1781  06D4  1903               	skipnz
  1782  06D5  2EB6               	goto	l2196
  1783  06D6  3A01               	xorlw	1	; case 1
  1784  06D7  1903               	skipnz
  1785  06D8  2EB8               	goto	l2202
  1786  06D9  3A03               	xorlw	3	; case 2
  1787  06DA  1903               	skipnz
  1788  06DB  2EBA               	goto	l2208
  1789  06DC  3A01               	xorlw	1	; case 3
  1790  06DD  1903               	skipnz
  1791  06DE  2EBC               	goto	l2214
  1792  06DF  3A07               	xorlw	7	; case 4
  1793  06E0  1903               	skipnz
  1794  06E1  2EBE               	goto	l2220
  1795  06E2  3A01               	xorlw	1	; case 5
  1796  06E3  1903               	skipnz
  1797  06E4  2EC0               	goto	l2226
  1798  06E5  3A03               	xorlw	3	; case 6
  1799  06E6  1903               	skipnz
  1800  06E7  2EC2               	goto	l2232
  1801  06E8  3A01               	xorlw	1	; case 7
  1802  06E9  1903               	skipnz
  1803  06EA  2EC4               	goto	l2238
  1804  06EB  3A0F               	xorlw	15	; case 8
  1805  06EC  1903               	skipnz
  1806  06ED  2EC6               	goto	l2244
  1807  06EE  3A01               	xorlw	1	; case 9
  1808  06EF  1903               	skipnz
  1809  06F0  2EC8               	goto	l2250
  1810  06F1  2EF2               	goto	l154
  1811  06F2                     l154:
  1812  06F2  0008               	return
  1813  06F3                     __end_of_tabla_numASCII:
  1814                           
  1815                           	psect	text2
  1816  03D5                     __ptext2:	
  1817 ;; *************** function _setup *****************
  1818 ;; Defined at:
  1819 ;;		line 219 in file "Maestro I2C.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;		None
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;		None
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  1    wreg      void 
  1826 ;; Registers used:
  1827 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1833 ;;      Params:         0       0       0       0       0
  1834 ;;      Locals:         0       0       0       0       0
  1835 ;;      Temps:          0       3       0       0       0
  1836 ;;      Totals:         0       3       0       0       0
  1837 ;;Total ram usage:        3 bytes
  1838 ;; Hardware stack levels used: 1
  1839 ;; Hardware stack levels required when called: 4
  1840 ;; This function calls:
  1841 ;;		_Config_USART
  1842 ;;		_Escribir_stringLCD
  1843 ;;		_Iniciar_LCD
  1844 ;;		_InitMPU6050
  1845 ;;		_InitMSSP
  1846 ;;		_Limpiar_pantallaLCD
  1847 ;;		_initOsc
  1848 ;;		_set_cursor
  1849 ;; This function is called by:
  1850 ;;		_main
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           
  1855                           ;psect for function _setup
  1856  03D5                     _setup:
  1857  03D5                     l2614:	
  1858                           ;incstack = 0
  1859                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1860                           
  1861                           
  1862                           ;Maestro I2C.c: 222:     ANSEL = 0;
  1863  03D5  1683               	bsf	3,5	;RP0=1, select bank3
  1864  03D6  1703               	bsf	3,6	;RP1=1, select bank3
  1865  03D7  0188               	clrf	8	;volatile
  1866                           
  1867                           ;Maestro I2C.c: 223:     ANSELH = 0;
  1868  03D8  0189               	clrf	9	;volatile
  1869                           
  1870                           ;Maestro I2C.c: 225:     TRISA = 0;
  1871  03D9  1683               	bsf	3,5	;RP0=1, select bank1
  1872  03DA  1303               	bcf	3,6	;RP1=0, select bank1
  1873  03DB  0185               	clrf	5	;volatile
  1874                           
  1875                           ;Maestro I2C.c: 226:     TRISB = 0;
  1876  03DC  0186               	clrf	6	;volatile
  1877                           
  1878                           ;Maestro I2C.c: 227:     TRISD = 0;
  1879  03DD  0188               	clrf	8	;volatile
  1880                           
  1881                           ;Maestro I2C.c: 229:     PORTA = 0;
  1882  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  1883  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  1884  03E0  0185               	clrf	5	;volatile
  1885                           
  1886                           ;Maestro I2C.c: 230:     PORTB = 0;
  1887  03E1  0186               	clrf	6	;volatile
  1888                           
  1889                           ;Maestro I2C.c: 231:     PORTD = 0;
  1890  03E2  0188               	clrf	8	;volatile
  1891  03E3                     l2616:
  1892                           
  1893                           ;Maestro I2C.c: 234:     initOsc(4);
  1894  03E3  3004               	movlw	4
  1895  03E4  120A  118A  273C  120A  118A  	fcall	_initOsc
  1896  03E9                     l2618:
  1897                           
  1898                           ;Maestro I2C.c: 238:     InitMSSP(I2C_MASTER_FOSC, 100000);
  1899  03E9  3000               	movlw	0
  1900  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  1901  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  1902  03EC  00C8               	movwf	InitMSSP@Dato+3
  1903  03ED  3001               	movlw	1
  1904  03EE  00C7               	movwf	InitMSSP@Dato+2
  1905  03EF  3086               	movlw	134
  1906  03F0  00C6               	movwf	InitMSSP@Dato+1
  1907  03F1  30A0               	movlw	160
  1908  03F2  00C5               	movwf	InitMSSP@Dato
  1909  03F3  3008               	movlw	8
  1910  03F4  120A  118A  21EA  120A  118A  	fcall	_InitMSSP
  1911  03F9                     l2620:
  1912                           
  1913                           ;Maestro I2C.c: 242:     InitMPU6050();
  1914  03F9  120A  118A  234B  120A  118A  	fcall	_InitMPU6050
  1915  03FE                     l2622:
  1916                           
  1917                           ;Maestro I2C.c: 245:     Iniciar_LCD();
  1918  03FE  120A  118A  2521  120A  118A  	fcall	_Iniciar_LCD
  1919  0403                     l2624:
  1920                           
  1921                           ;Maestro I2C.c: 246:     Limpiar_pantallaLCD();
  1922  0403  120A  118A  27BA  120A  118A  	fcall	_Limpiar_pantallaLCD
  1923  0408                     l2626:
  1924                           
  1925                           ;Maestro I2C.c: 247:     set_cursor(1,0);
  1926  0408  01F5               	clrf	set_cursor@posicion
  1927  0409  3001               	movlw	1
  1928  040A  120A  118A  262E  120A  118A  	fcall	_set_cursor
  1929  040F                     l2628:
  1930                           
  1931                           ;Maestro I2C.c: 248:     Escribir_stringLCD("Miniproyecto 2");
  1932  040F  3011               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1933  0410  120A  118A  2794  120A  118A  	fcall	_Escribir_stringLCD
  1934  0415                     l2630:
  1935                           
  1936                           ;Maestro I2C.c: 249:     set_cursor(2,2);
  1937  0415  3002               	movlw	2
  1938  0416  1283               	bcf	3,5	;RP0=0, select bank0
  1939  0417  1303               	bcf	3,6	;RP1=0, select bank0
  1940  0418  00CA               	movwf	??_setup
  1941  0419  084A               	movf	??_setup,w
  1942  041A  00F5               	movwf	set_cursor@posicion
  1943  041B  3002               	movlw	2
  1944  041C  120A  118A  262E  120A  118A  	fcall	_set_cursor
  1945  0421                     l2632:
  1946                           
  1947                           ;Maestro I2C.c: 250:     Escribir_stringLCD("Jose Santizo");
  1948  0421  3020               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1949  0422  120A  118A  2794  120A  118A  	fcall	_Escribir_stringLCD
  1950  0427                     l2634:
  1951                           
  1952                           ;Maestro I2C.c: 251:     _delay((unsigned long)((5000)*(8000000/4000.0)));
  1953  0427  3033               	movlw	51
  1954  0428  1283               	bcf	3,5	;RP0=0, select bank0
  1955  0429  1303               	bcf	3,6	;RP1=0, select bank0
  1956  042A  00CC               	movwf	??_setup+2
  1957  042B  30BB               	movlw	187
  1958  042C  00CB               	movwf	??_setup+1
  1959  042D  30DF               	movlw	223
  1960  042E  00CA               	movwf	??_setup
  1961  042F                     u1897:
  1962  042F  0BCA               	decfsz	??_setup,f
  1963  0430  2C2F               	goto	u1897
  1964  0431  0BCB               	decfsz	??_setup+1,f
  1965  0432  2C2F               	goto	u1897
  1966  0433  0BCC               	decfsz	??_setup+2,f
  1967  0434  2C2F               	goto	u1897
  1968  0435                     l2636:
  1969                           
  1970                           ;Maestro I2C.c: 252:     Limpiar_pantallaLCD();
  1971  0435  120A  118A  27BA  120A  118A  	fcall	_Limpiar_pantallaLCD
  1972  043A                     l2638:
  1973                           
  1974                           ;Maestro I2C.c: 255:     Config_USART(9600,4);
  1975  043A  3080               	movlw	128
  1976  043B  00F3               	movwf	Config_USART@baud_rate
  1977  043C  3025               	movlw	37
  1978  043D  00F4               	movwf	Config_USART@baud_rate+1
  1979  043E  3004               	movlw	4
  1980  043F  00F5               	movwf	Config_USART@Freq
  1981  0440  3000               	movlw	0
  1982  0441  00F6               	movwf	Config_USART@Freq+1
  1983  0442  120A  118A  229B  120A  118A  	fcall	_Config_USART
  1984  0447                     l2640:
  1985                           
  1986                           ;Maestro I2C.c: 258:     PIR1bits.RCIF = 0;
  1987  0447  1283               	bcf	3,5	;RP0=0, select bank0
  1988  0448  1303               	bcf	3,6	;RP1=0, select bank0
  1989  0449  128C               	bcf	12,5	;volatile
  1990  044A                     l2642:
  1991                           
  1992                           ;Maestro I2C.c: 259:     PIE1bits.RCIE = 1;
  1993  044A  1683               	bsf	3,5	;RP0=1, select bank1
  1994  044B  1303               	bcf	3,6	;RP1=0, select bank1
  1995  044C  168C               	bsf	12,5	;volatile
  1996  044D                     l2644:
  1997                           
  1998                           ;Maestro I2C.c: 260:     INTCONbits.PEIE = 1;
  1999  044D  170B               	bsf	11,6	;volatile
  2000  044E                     l2646:
  2001                           
  2002                           ;Maestro I2C.c: 261:     INTCONbits.GIE = 1;
  2003  044E  178B               	bsf	11,7	;volatile
  2004  044F                     l144:
  2005  044F  0008               	return
  2006  0450                     __end_of_setup:
  2007                           
  2008                           	psect	text3
  2009  062E                     __ptext3:	
  2010 ;; *************** function _set_cursor *****************
  2011 ;; Defined at:
  2012 ;;		line 77 in file "LCD.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;  linea           1    wreg     unsigned char 
  2015 ;;  posicion        1    5[COMMON] unsigned char 
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;  linea           1    0[BANK0 ] unsigned char 
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  1    wreg      void 
  2020 ;; Registers used:
  2021 ;;		wreg, status,2, status,0, pclath, cstack
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2027 ;;      Params:         1       0       0       0       0
  2028 ;;      Locals:         0       1       0       0       0
  2029 ;;      Temps:          2       0       0       0       0
  2030 ;;      Totals:         3       1       0       0       0
  2031 ;;Total ram usage:        4 bytes
  2032 ;; Hardware stack levels used: 1
  2033 ;; Hardware stack levels required when called: 3
  2034 ;; This function calls:
  2035 ;;		_Escribir_comandoLCD
  2036 ;; This function is called by:
  2037 ;;		_main
  2038 ;;		_setup
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           
  2043                           ;psect for function _set_cursor
  2044  062E                     _set_cursor:
  2045                           
  2046                           ;incstack = 0
  2047                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  2048                           ;set_cursor@linea stored from wreg
  2049  062E  1283               	bcf	3,5	;RP0=0, select bank0
  2050  062F  1303               	bcf	3,6	;RP1=0, select bank0
  2051  0630  00B8               	movwf	set_cursor@linea
  2052  0631                     l2460:
  2053                           
  2054                           ;LCD.c: 78:     PORTDbits.RD3 = 0; PORTDbits.RD4 = 0;
  2055  0631  1188               	bcf	8,3	;volatile
  2056  0632  1208               	bcf	8,4	;volatile
  2057  0633                     l2462:
  2058                           
  2059                           ;LCD.c: 81:     if (linea == 1){ Escribir_comandoLCD(0b10000000);}
  2060  0633  0338               	decf	set_cursor@linea,w
  2061  0634  1D03               	btfss	3,2
  2062  0635  2E37               	goto	u1641
  2063  0636  2E38               	goto	u1640
  2064  0637                     u1641:
  2065  0637  2E3F               	goto	l2466
  2066  0638                     u1640:
  2067  0638                     l2464:
  2068  0638  3080               	movlw	128
  2069  0639  120A  118A  2671  120A  118A  	fcall	_Escribir_comandoLCD
  2070  063E  2E4B               	goto	l2470
  2071  063F                     l2466:
  2072  063F  3002               	movlw	2
  2073  0640  0638               	xorwf	set_cursor@linea,w
  2074  0641  1D03               	btfss	3,2
  2075  0642  2E44               	goto	u1651
  2076  0643  2E45               	goto	u1650
  2077  0644                     u1651:
  2078  0644  2E4B               	goto	l2470
  2079  0645                     u1650:
  2080  0645                     l2468:
  2081  0645  30C0               	movlw	192
  2082  0646  120A  118A  2671  120A  118A  	fcall	_Escribir_comandoLCD
  2083  064B                     l2470:
  2084                           
  2085                           ;LCD.c: 84:     _delay((unsigned long)((40)*(8000000/4000.0)));
  2086  064B  3068               	movlw	104
  2087  064C  00F7               	movwf	??_set_cursor+1
  2088  064D  30E4               	movlw	228
  2089  064E  00F6               	movwf	??_set_cursor
  2090  064F                     u1907:
  2091  064F  0BF6               	decfsz	??_set_cursor,f
  2092  0650  2E4F               	goto	u1907
  2093  0651  0BF7               	decfsz	??_set_cursor+1,f
  2094  0652  2E4F               	goto	u1907
  2095  0653  0000               	nop
  2096  0654                     l2472:
  2097                           
  2098                           ;LCD.c: 86:     if (posicion != 0){
  2099  0654  0875               	movf	set_cursor@posicion,w
  2100  0655  1903               	btfsc	3,2
  2101  0656  2E58               	goto	u1661
  2102  0657  2E59               	goto	u1660
  2103  0658                     u1661:
  2104  0658  2E70               	goto	l286
  2105  0659                     u1660:
  2106  0659  2E62               	goto	l2480
  2107  065A                     l2476:
  2108                           
  2109                           ;LCD.c: 88:             Escribir_comandoLCD(0b00010100);
  2110  065A  3014               	movlw	20
  2111  065B  120A  118A  2671  120A  118A  	fcall	_Escribir_comandoLCD
  2112  0660                     l2478:
  2113                           
  2114                           ;LCD.c: 89:             posicion--;
  2115  0660  3001               	movlw	1
  2116  0661  02F5               	subwf	set_cursor@posicion,f
  2117  0662                     l2480:
  2118                           
  2119                           ;LCD.c: 87:         while(posicion > 0){
  2120  0662  0875               	movf	set_cursor@posicion,w
  2121  0663  1D03               	btfss	3,2
  2122  0664  2E66               	goto	u1671
  2123  0665  2E67               	goto	u1670
  2124  0666                     u1671:
  2125  0666  2E5A               	goto	l2476
  2126  0667                     u1670:
  2127  0667                     l2482:
  2128                           
  2129                           ;LCD.c: 92:         _delay((unsigned long)((40)*(8000000/4000.0)));
  2130  0667  3068               	movlw	104
  2131  0668  00F7               	movwf	??_set_cursor+1
  2132  0669  30E4               	movlw	228
  2133  066A  00F6               	movwf	??_set_cursor
  2134  066B                     u1917:
  2135  066B  0BF6               	decfsz	??_set_cursor,f
  2136  066C  2E6B               	goto	u1917
  2137  066D  0BF7               	decfsz	??_set_cursor+1,f
  2138  066E  2E6B               	goto	u1917
  2139  066F  0000               	nop
  2140  0670                     l286:
  2141  0670  0008               	return
  2142  0671                     __end_of_set_cursor:
  2143                           
  2144                           	psect	text4
  2145  073C                     __ptext4:	
  2146 ;; *************** function _initOsc *****************
  2147 ;; Defined at:
  2148 ;;		line 12 in file "Oscilador.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;  Valor           1    wreg     unsigned char 
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;  Valor           1    3[COMMON] unsigned char 
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  1    wreg      void 
  2155 ;; Registers used:
  2156 ;;		wreg, status,2, status,0
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2162 ;;      Params:         0       0       0       0       0
  2163 ;;      Locals:         1       0       0       0       0
  2164 ;;      Temps:          0       0       0       0       0
  2165 ;;      Totals:         1       0       0       0       0
  2166 ;;Total ram usage:        1 bytes
  2167 ;; Hardware stack levels used: 1
  2168 ;; Hardware stack levels required when called: 1
  2169 ;; This function calls:
  2170 ;;		Nothing
  2171 ;; This function is called by:
  2172 ;;		_setup
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           
  2177                           ;psect for function _initOsc
  2178  073C                     _initOsc:
  2179                           
  2180                           ;incstack = 0
  2181                           ; Regs used in _initOsc: [wreg+status,2+status,0]
  2182                           ;initOsc@Valor stored from wreg
  2183  073C  00F3               	movwf	initOsc@Valor
  2184  073D                     l1834:
  2185                           
  2186                           ;Oscilador.c: 14:     if(Valor == 8){
  2187  073D  3008               	movlw	8
  2188  073E  0673               	xorwf	initOsc@Valor,w
  2189  073F  1D03               	btfss	3,2
  2190  0740  2F42               	goto	u1011
  2191  0741  2F43               	goto	u1010
  2192  0742                     u1011:
  2193  0742  2F48               	goto	l1838
  2194  0743                     u1010:
  2195  0743                     l1836:
  2196                           
  2197                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
  2198  0743  1683               	bsf	3,5	;RP0=1, select bank1
  2199  0744  1303               	bcf	3,6	;RP1=0, select bank1
  2200  0745  160F               	bsf	15,4	;volatile
  2201                           
  2202                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
  2203  0746  168F               	bsf	15,5	;volatile
  2204                           
  2205                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
  2206  0747  170F               	bsf	15,6	;volatile
  2207  0748                     l1838:
  2208                           
  2209                           ;Oscilador.c: 19:     if(Valor == 4){
  2210  0748  3004               	movlw	4
  2211  0749  0673               	xorwf	initOsc@Valor,w
  2212  074A  1D03               	btfss	3,2
  2213  074B  2F4D               	goto	u1021
  2214  074C  2F4E               	goto	u1020
  2215  074D                     u1021:
  2216  074D  2F53               	goto	l1842
  2217  074E                     u1020:
  2218  074E                     l1840:
  2219                           
  2220                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
  2221  074E  1683               	bsf	3,5	;RP0=1, select bank1
  2222  074F  1303               	bcf	3,6	;RP1=0, select bank1
  2223  0750  120F               	bcf	15,4	;volatile
  2224                           
  2225                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
  2226  0751  168F               	bsf	15,5	;volatile
  2227                           
  2228                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
  2229  0752  170F               	bsf	15,6	;volatile
  2230  0753                     l1842:
  2231                           
  2232                           ;Oscilador.c: 24:     if(Valor == 2){
  2233  0753  3002               	movlw	2
  2234  0754  0673               	xorwf	initOsc@Valor,w
  2235  0755  1D03               	btfss	3,2
  2236  0756  2F58               	goto	u1031
  2237  0757  2F59               	goto	u1030
  2238  0758                     u1031:
  2239  0758  2F5E               	goto	l1846
  2240  0759                     u1030:
  2241  0759                     l1844:
  2242                           
  2243                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
  2244  0759  1683               	bsf	3,5	;RP0=1, select bank1
  2245  075A  1303               	bcf	3,6	;RP1=0, select bank1
  2246  075B  160F               	bsf	15,4	;volatile
  2247                           
  2248                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
  2249  075C  128F               	bcf	15,5	;volatile
  2250                           
  2251                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
  2252  075D  170F               	bsf	15,6	;volatile
  2253  075E                     l1846:
  2254                           
  2255                           ;Oscilador.c: 29:     if(Valor == 1){
  2256  075E  0373               	decf	initOsc@Valor,w
  2257  075F  1D03               	btfss	3,2
  2258  0760  2F62               	goto	u1041
  2259  0761  2F63               	goto	u1040
  2260  0762                     u1041:
  2261  0762  2F68               	goto	l294
  2262  0763                     u1040:
  2263  0763                     l1848:
  2264                           
  2265                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
  2266  0763  1683               	bsf	3,5	;RP0=1, select bank1
  2267  0764  1303               	bcf	3,6	;RP1=0, select bank1
  2268  0765  120F               	bcf	15,4	;volatile
  2269                           
  2270                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
  2271  0766  128F               	bcf	15,5	;volatile
  2272                           
  2273                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
  2274  0767  170F               	bsf	15,6	;volatile
  2275  0768                     l294:	
  2276                           ;Oscilador.c: 33:     }
  2277                           
  2278                           
  2279                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
  2280  0768  1683               	bsf	3,5	;RP0=1, select bank1
  2281  0769  1303               	bcf	3,6	;RP1=0, select bank1
  2282  076A  140F               	bsf	15,0	;volatile
  2283  076B                     l295:
  2284  076B  0008               	return
  2285  076C                     __end_of_initOsc:
  2286                           
  2287                           	psect	text5
  2288  07BA                     __ptext5:	
  2289 ;; *************** function _Limpiar_pantallaLCD *****************
  2290 ;; Defined at:
  2291 ;;		line 69 in file "LCD.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;		None
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;		None
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  1    wreg      void 
  2298 ;; Registers used:
  2299 ;;		wreg, status,2, status,0, pclath, cstack
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2305 ;;      Params:         0       0       0       0       0
  2306 ;;      Locals:         0       0       0       0       0
  2307 ;;      Temps:          2       0       0       0       0
  2308 ;;      Totals:         2       0       0       0       0
  2309 ;;Total ram usage:        2 bytes
  2310 ;; Hardware stack levels used: 1
  2311 ;; Hardware stack levels required when called: 3
  2312 ;; This function calls:
  2313 ;;		_Escribir_comandoLCD
  2314 ;; This function is called by:
  2315 ;;		_setup
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           
  2320                           ;psect for function _Limpiar_pantallaLCD
  2321  07BA                     _Limpiar_pantallaLCD:
  2322  07BA                     l2568:	
  2323                           ;incstack = 0
  2324                           ; Regs used in _Limpiar_pantallaLCD: [wreg+status,2+status,0+pclath+cstack]
  2325                           
  2326                           
  2327                           ;LCD.c: 70:     PORTDbits.RD3 = 0; PORTDbits.RD4 = 0;
  2328  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  2329  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  2330  07BC  1188               	bcf	8,3	;volatile
  2331  07BD  1208               	bcf	8,4	;volatile
  2332  07BE                     l2570:
  2333                           
  2334                           ;LCD.c: 72:     Escribir_comandoLCD(0b00000001);
  2335  07BE  3001               	movlw	1
  2336  07BF  120A  118A  2671  120A  118A  	fcall	_Escribir_comandoLCD
  2337  07C4                     l2572:
  2338                           
  2339                           ;LCD.c: 73:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2340  07C4  301A               	movlw	26
  2341  07C5  00F6               	movwf	??_Limpiar_pantallaLCD+1
  2342  07C6  30F8               	movlw	248
  2343  07C7  00F5               	movwf	??_Limpiar_pantallaLCD
  2344  07C8                     u1927:
  2345  07C8  0BF5               	decfsz	??_Limpiar_pantallaLCD,f
  2346  07C9  2FC8               	goto	u1927
  2347  07CA  0BF6               	decfsz	??_Limpiar_pantallaLCD+1,f
  2348  07CB  2FC8               	goto	u1927
  2349  07CC  0000               	nop
  2350  07CD                     l2574:
  2351                           
  2352                           ;LCD.c: 74:     Escribir_comandoLCD(0b00000010);
  2353  07CD  3002               	movlw	2
  2354  07CE  120A  118A  2671  120A  118A  	fcall	_Escribir_comandoLCD
  2355  07D3                     l276:
  2356  07D3  0008               	return
  2357  07D4                     __end_of_Limpiar_pantallaLCD:
  2358                           
  2359                           	psect	text6
  2360  01EA                     __ptext6:	
  2361 ;; *************** function _InitMSSP *****************
  2362 ;; Defined at:
  2363 ;;		line 5 in file "I2C.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;  Modo            1    wreg     enum E1292
  2366 ;;  Dato            4   13[BANK0 ] unsigned long 
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;  Modo            1   17[BANK0 ] enum E1292
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      void 
  2371 ;; Registers used:
  2372 ;;		wreg, status,2, status,0, pclath, cstack
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2378 ;;      Params:         0       4       0       0       0
  2379 ;;      Locals:         0       1       0       0       0
  2380 ;;      Temps:          4       0       0       0       0
  2381 ;;      Totals:         4       5       0       0       0
  2382 ;;Total ram usage:        9 bytes
  2383 ;; Hardware stack levels used: 1
  2384 ;; Hardware stack levels required when called: 2
  2385 ;; This function calls:
  2386 ;;		___lldiv
  2387 ;; This function is called by:
  2388 ;;		_setup
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           
  2393                           ;psect for function _InitMSSP
  2394  01EA                     _InitMSSP:
  2395                           
  2396                           ;incstack = 0
  2397                           ; Regs used in _InitMSSP: [wreg+status,2+status,0+pclath+cstack]
  2398                           ;InitMSSP@Modo stored from wreg
  2399  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  2400  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  2401  01EC  00C9               	movwf	InitMSSP@Modo
  2402  01ED                     l2494:
  2403                           
  2404                           ;I2C.c: 9:     SSPCONbits.SSPEN = 0;
  2405  01ED  1294               	bcf	20,5	;volatile
  2406  01EE                     l2496:
  2407                           
  2408                           ;I2C.c: 10:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2409  01EE  301A               	movlw	26
  2410  01EF  00F5               	movwf	??_InitMSSP+1
  2411  01F0  30F8               	movlw	248
  2412  01F1  00F4               	movwf	??_InitMSSP
  2413  01F2                     u1937:
  2414  01F2  0BF4               	decfsz	??_InitMSSP,f
  2415  01F3  29F2               	goto	u1937
  2416  01F4  0BF5               	decfsz	??_InitMSSP+1,f
  2417  01F5  29F2               	goto	u1937
  2418  01F6  0000               	nop
  2419  01F7                     l2498:
  2420                           
  2421                           ;I2C.c: 11:     SSPCONbits.SSPEN = 1;
  2422  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  2423  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  2424  01F9  1694               	bsf	20,5	;volatile
  2425                           
  2426                           ;I2C.c: 14:     if (Modo < 0b00000110){
  2427  01FA  3006               	movlw	6
  2428  01FB  0249               	subwf	InitMSSP@Modo,w
  2429  01FC  1803               	skipnc
  2430  01FD  29FF               	goto	u1691
  2431  01FE  2A00               	goto	u1690
  2432  01FF                     u1691:
  2433  01FF  2A24               	goto	l2510
  2434  0200                     u1690:
  2435  0200                     l2500:
  2436                           
  2437                           ;I2C.c: 17:         TRISCbits.TRISC5 = 0;
  2438  0200  1683               	bsf	3,5	;RP0=1, select bank1
  2439  0201  1303               	bcf	3,6	;RP1=0, select bank1
  2440  0202  1287               	bcf	7,5	;volatile
  2441                           
  2442                           ;I2C.c: 18:         TRISCbits.TRISC4 = 1;
  2443  0203  1607               	bsf	7,4	;volatile
  2444  0204                     l2502:
  2445                           
  2446                           ;I2C.c: 20:         if (Modo < 0b00000100){
  2447  0204  3004               	movlw	4
  2448  0205  1283               	bcf	3,5	;RP0=0, select bank0
  2449  0206  1303               	bcf	3,6	;RP1=0, select bank0
  2450  0207  0249               	subwf	InitMSSP@Modo,w
  2451  0208  1803               	skipnc
  2452  0209  2A0B               	goto	u1701
  2453  020A  2A0C               	goto	u1700
  2454  020B                     u1701:
  2455  020B  2A10               	goto	l201
  2456  020C                     u1700:
  2457  020C                     l2504:
  2458                           
  2459                           ;I2C.c: 21:             TRISCbits.TRISC3 = 0;
  2460  020C  1683               	bsf	3,5	;RP0=1, select bank1
  2461  020D  1303               	bcf	3,6	;RP1=0, select bank1
  2462  020E  1187               	bcf	7,3	;volatile
  2463                           
  2464                           ;I2C.c: 22:         }
  2465  020F  2A13               	goto	l2506
  2466  0210                     l201:	
  2467                           ;I2C.c: 23:         else {
  2468                           
  2469                           
  2470                           ;I2C.c: 24:             TRISCbits.TRISC3 = 1;
  2471  0210  1683               	bsf	3,5	;RP0=1, select bank1
  2472  0211  1303               	bcf	3,6	;RP1=0, select bank1
  2473  0212  1587               	bsf	7,3	;volatile
  2474  0213                     l2506:
  2475                           
  2476                           ;I2C.c: 27:         if (Modo == 0b00000100){ TRISAbits.TRISA5 = 1;}
  2477  0213  3004               	movlw	4
  2478  0214  1283               	bcf	3,5	;RP0=0, select bank0
  2479  0215  1303               	bcf	3,6	;RP1=0, select bank0
  2480  0216  0649               	xorwf	InitMSSP@Modo,w
  2481  0217  1D03               	btfss	3,2
  2482  0218  2A1A               	goto	u1711
  2483  0219  2A1B               	goto	u1710
  2484  021A                     u1711:
  2485  021A  2A1E               	goto	l203
  2486  021B                     u1710:
  2487  021B                     l2508:
  2488  021B  1683               	bsf	3,5	;RP0=1, select bank1
  2489  021C  1303               	bcf	3,6	;RP1=0, select bank1
  2490  021D  1685               	bsf	5,5	;volatile
  2491  021E                     l203:
  2492                           
  2493                           ;I2C.c: 31:         SSPCONbits.CKP = 0;
  2494  021E  1283               	bcf	3,5	;RP0=0, select bank0
  2495  021F  1214               	bcf	20,4	;volatile
  2496                           
  2497                           ;I2C.c: 36:         SSPSTATbits.SMP = 1;
  2498  0220  1683               	bsf	3,5	;RP0=1, select bank1
  2499  0221  1303               	bcf	3,6	;RP1=0, select bank1
  2500  0222  1794               	bsf	20,7	;volatile
  2501                           
  2502                           ;I2C.c: 38:     }
  2503  0223  2A93               	goto	l2538
  2504  0224                     l2510:
  2505  0224  3006               	movlw	6
  2506  0225  0249               	subwf	InitMSSP@Modo,w
  2507  0226  1C03               	skipc
  2508  0227  2A29               	goto	u1721
  2509  0228  2A2A               	goto	u1720
  2510  0229                     u1721:
  2511  0229  2A93               	goto	l2538
  2512  022A                     u1720:
  2513  022A                     l2512:
  2514                           
  2515                           ;I2C.c: 42:         TRISCbits.TRISC3 = 1;
  2516  022A  1683               	bsf	3,5	;RP0=1, select bank1
  2517  022B  1303               	bcf	3,6	;RP1=0, select bank1
  2518  022C  1587               	bsf	7,3	;volatile
  2519                           
  2520                           ;I2C.c: 43:         TRISCbits.TRISC4 = 1;
  2521  022D  1607               	bsf	7,4	;volatile
  2522                           
  2523                           ;I2C.c: 44:         SSPCONbits.SSPEN = 1;
  2524  022E  1283               	bcf	3,5	;RP0=0, select bank0
  2525  022F  1303               	bcf	3,6	;RP1=0, select bank0
  2526  0230  1694               	bsf	20,5	;volatile
  2527                           
  2528                           ;I2C.c: 45:         SSPSTATbits.SMP = 1;
  2529  0231  1683               	bsf	3,5	;RP0=1, select bank1
  2530  0232  1303               	bcf	3,6	;RP1=0, select bank1
  2531  0233  1794               	bsf	20,7	;volatile
  2532  0234                     l2514:
  2533                           
  2534                           ;I2C.c: 46:         if (Modo == 0b00000111 || Modo == 0b00001111){
  2535  0234  3007               	movlw	7
  2536  0235  1283               	bcf	3,5	;RP0=0, select bank0
  2537  0236  1303               	bcf	3,6	;RP1=0, select bank0
  2538  0237  0649               	xorwf	InitMSSP@Modo,w
  2539  0238  1903               	btfsc	3,2
  2540  0239  2A3B               	goto	u1731
  2541  023A  2A3C               	goto	u1730
  2542  023B                     u1731:
  2543  023B  2A42               	goto	l208
  2544  023C                     u1730:
  2545  023C                     l2516:
  2546  023C  300F               	movlw	15
  2547  023D  0649               	xorwf	InitMSSP@Modo,w
  2548  023E  1D03               	btfss	3,2
  2549  023F  2A41               	goto	u1741
  2550  0240  2A42               	goto	u1740
  2551  0241                     u1741:
  2552  0241  2A45               	goto	l2518
  2553  0242                     u1740:
  2554  0242                     l208:
  2555                           
  2556                           ;I2C.c: 47:             UA = 0;
  2557  0242  1683               	bsf	3,5	;RP0=1, select bank1
  2558  0243  1303               	bcf	3,6	;RP1=0, select bank1
  2559  0244  1094               	bcf	20,1	;volatile
  2560  0245                     l2518:
  2561                           
  2562                           ;I2C.c: 50:         if (Modo == 0b00001000){
  2563  0245  3008               	movlw	8
  2564  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2565  0247  0649               	xorwf	InitMSSP@Modo,w
  2566  0248  1D03               	btfss	3,2
  2567  0249  2A4B               	goto	u1751
  2568  024A  2A4C               	goto	u1750
  2569  024B                     u1751:
  2570  024B  2A82               	goto	l209
  2571  024C                     u1750:
  2572  024C                     l2520:
  2573                           
  2574                           ;I2C.c: 51:             CKP = 0;
  2575  024C  1214               	bcf	20,4	;volatile
  2576  024D                     l2522:
  2577                           
  2578                           ;I2C.c: 52:             SSPCON2 = 0;
  2579  024D  1683               	bsf	3,5	;RP0=1, select bank1
  2580  024E  1303               	bcf	3,6	;RP1=0, select bank1
  2581  024F  0191               	clrf	17	;volatile
  2582                           
  2583                           ;I2C.c: 53:             SSPSTAT = 0;
  2584  0250  0194               	clrf	20	;volatile
  2585  0251                     l2524:
  2586                           
  2587                           ;I2C.c: 54:             SSPADD = (8000000/(Dato*4))-1;
  2588  0251  1283               	bcf	3,5	;RP0=0, select bank0
  2589  0252  1303               	bcf	3,6	;RP1=0, select bank0
  2590  0253  0845               	movf	InitMSSP@Dato,w
  2591  0254  00F4               	movwf	??_InitMSSP
  2592  0255  0846               	movf	InitMSSP@Dato+1,w
  2593  0256  00F5               	movwf	??_InitMSSP+1
  2594  0257  0847               	movf	InitMSSP@Dato+2,w
  2595  0258  00F6               	movwf	??_InitMSSP+2
  2596  0259  0848               	movf	InitMSSP@Dato+3,w
  2597  025A  00F7               	movwf	??_InitMSSP+3
  2598  025B  3002               	movlw	2
  2599  025C                     u1765:
  2600  025C  1003               	clrc
  2601  025D  0DF4               	rlf	??_InitMSSP,f
  2602  025E  0DF5               	rlf	??_InitMSSP+1,f
  2603  025F  0DF6               	rlf	??_InitMSSP+2,f
  2604  0260  0DF7               	rlf	??_InitMSSP+3,f
  2605  0261                     u1760:
  2606  0261  3EFF               	addlw	-1
  2607  0262  1D03               	skipz
  2608  0263  2A5C               	goto	u1765
  2609  0264  0877               	movf	??_InitMSSP+3,w
  2610  0265  00BB               	movwf	___lldiv@divisor+3
  2611  0266  0876               	movf	??_InitMSSP+2,w
  2612  0267  00BA               	movwf	___lldiv@divisor+2
  2613  0268  0875               	movf	??_InitMSSP+1,w
  2614  0269  00B9               	movwf	___lldiv@divisor+1
  2615  026A  0874               	movf	??_InitMSSP,w
  2616  026B  00B8               	movwf	___lldiv@divisor
  2617  026C  3000               	movlw	0
  2618  026D  00BF               	movwf	___lldiv@dividend+3
  2619  026E  307A               	movlw	122
  2620  026F  00BE               	movwf	___lldiv@dividend+2
  2621  0270  3012               	movlw	18
  2622  0271  00BD               	movwf	___lldiv@dividend+1
  2623  0272  3000               	movlw	0
  2624  0273  00BC               	movwf	___lldiv@dividend
  2625  0274  120A  118A  24B9  120A  118A  	fcall	___lldiv
  2626  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2627  027A  1303               	bcf	3,6	;RP1=0, select bank0
  2628  027B  0838               	movf	?___lldiv,w
  2629  027C  3EFF               	addlw	255
  2630  027D  1683               	bsf	3,5	;RP0=1, select bank1
  2631  027E  1303               	bcf	3,6	;RP1=0, select bank1
  2632  027F  0093               	movwf	19	;volatile
  2633  0280                     l2526:
  2634                           
  2635                           ;I2C.c: 55:             PIE1bits.SSPIE = 0;
  2636  0280  118C               	bcf	12,3	;volatile
  2637                           
  2638                           ;I2C.c: 56:         }
  2639  0281  2A93               	goto	l2538
  2640  0282                     l209:	
  2641                           ;I2C.c: 57:         else {
  2642                           
  2643                           
  2644                           ;I2C.c: 58:             CKP = 1;
  2645  0282  1614               	bsf	20,4	;volatile
  2646                           
  2647                           ;I2C.c: 59:             SSPCON2bits.GCEN = 0;
  2648  0283  1683               	bsf	3,5	;RP0=1, select bank1
  2649  0284  1303               	bcf	3,6	;RP1=0, select bank1
  2650  0285  1391               	bcf	17,7	;volatile
  2651                           
  2652                           ;I2C.c: 60:             SSPCON2bits.SEN = 1;
  2653  0286  1411               	bsf	17,0	;volatile
  2654  0287                     l2528:
  2655                           
  2656                           ;I2C.c: 61:             SSPADD = Dato;
  2657  0287  1283               	bcf	3,5	;RP0=0, select bank0
  2658  0288  1303               	bcf	3,6	;RP1=0, select bank0
  2659  0289  0845               	movf	InitMSSP@Dato,w
  2660  028A  1683               	bsf	3,5	;RP0=1, select bank1
  2661  028B  1303               	bcf	3,6	;RP1=0, select bank1
  2662  028C  0093               	movwf	19	;volatile
  2663  028D                     l2530:
  2664                           
  2665                           ;I2C.c: 62:             INTCONbits.GIE = 1;
  2666  028D  178B               	bsf	11,7	;volatile
  2667  028E                     l2532:
  2668                           
  2669                           ;I2C.c: 63:             INTCONbits.PEIE = 1;
  2670  028E  170B               	bsf	11,6	;volatile
  2671  028F                     l2534:
  2672                           
  2673                           ;I2C.c: 64:             PIE1bits.SSPIE = 1;
  2674  028F  158C               	bsf	12,3	;volatile
  2675  0290                     l2536:
  2676                           
  2677                           ;I2C.c: 65:             SSPIF = 0;
  2678  0290  1283               	bcf	3,5	;RP0=0, select bank0
  2679  0291  1303               	bcf	3,6	;RP1=0, select bank0
  2680  0292  118C               	bcf	12,3	;volatile
  2681  0293                     l2538:
  2682                           
  2683                           ;I2C.c: 72:     SSPCON = SSPCON | Modo;
  2684  0293  1283               	bcf	3,5	;RP0=0, select bank0
  2685  0294  0814               	movf	20,w	;volatile
  2686  0295  0449               	iorwf	InitMSSP@Modo,w	;volatile
  2687  0296  0094               	movwf	20	;volatile
  2688  0297                     l2540:
  2689                           
  2690                           ;I2C.c: 77:     SSPSTATbits.CKE = 0;
  2691  0297  1683               	bsf	3,5	;RP0=1, select bank1
  2692  0298  1303               	bcf	3,6	;RP1=0, select bank1
  2693  0299  1314               	bcf	20,6	;volatile
  2694  029A                     l211:
  2695  029A  0008               	return
  2696  029B                     __end_of_InitMSSP:
  2697                           
  2698                           	psect	text7
  2699  04B9                     __ptext7:	
  2700 ;; *************** function ___lldiv *****************
  2701 ;; Defined at:
  2702 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;  divisor         4    0[BANK0 ] unsigned long 
  2705 ;;  dividend        4    4[BANK0 ] unsigned long 
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;  quotient        4    8[BANK0 ] unsigned long 
  2708 ;;  counter         1   12[BANK0 ] unsigned char 
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  4    0[BANK0 ] unsigned long 
  2711 ;; Registers used:
  2712 ;;		wreg, status,2, status,0
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2718 ;;      Params:         0       8       0       0       0
  2719 ;;      Locals:         0       5       0       0       0
  2720 ;;      Temps:          1       0       0       0       0
  2721 ;;      Totals:         1      13       0       0       0
  2722 ;;Total ram usage:       14 bytes
  2723 ;; Hardware stack levels used: 1
  2724 ;; Hardware stack levels required when called: 1
  2725 ;; This function calls:
  2726 ;;		Nothing
  2727 ;; This function is called by:
  2728 ;;		_InitMSSP
  2729 ;;		_I2C_Master_Init
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732                           
  2733                           
  2734                           ;psect for function ___lldiv
  2735  04B9                     ___lldiv:
  2736  04B9                     l2436:	
  2737                           ;incstack = 0
  2738                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2739                           
  2740  04B9  3000               	movlw	0
  2741  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2742  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  2743  04BC  00C3               	movwf	___lldiv@quotient+3
  2744  04BD  3000               	movlw	0
  2745  04BE  00C2               	movwf	___lldiv@quotient+2
  2746  04BF  3000               	movlw	0
  2747  04C0  00C1               	movwf	___lldiv@quotient+1
  2748  04C1  3000               	movlw	0
  2749  04C2  00C0               	movwf	___lldiv@quotient
  2750  04C3  083B               	movf	___lldiv@divisor+3,w
  2751  04C4  043A               	iorwf	___lldiv@divisor+2,w
  2752  04C5  0439               	iorwf	___lldiv@divisor+1,w
  2753  04C6  0438               	iorwf	___lldiv@divisor,w
  2754  04C7  1903               	skipnz
  2755  04C8  2CCA               	goto	u1571
  2756  04C9  2CCB               	goto	u1570
  2757  04CA                     u1571:
  2758  04CA  2D18               	goto	l2456
  2759  04CB                     u1570:
  2760  04CB                     l2438:
  2761  04CB  01C4               	clrf	___lldiv@counter
  2762  04CC  0AC4               	incf	___lldiv@counter,f
  2763  04CD  2CDB               	goto	l2442
  2764  04CE                     l2440:
  2765  04CE  3001               	movlw	1
  2766  04CF  00F3               	movwf	??___lldiv
  2767  04D0                     u1585:
  2768  04D0  1003               	clrc
  2769  04D1  0DB8               	rlf	___lldiv@divisor,f
  2770  04D2  0DB9               	rlf	___lldiv@divisor+1,f
  2771  04D3  0DBA               	rlf	___lldiv@divisor+2,f
  2772  04D4  0DBB               	rlf	___lldiv@divisor+3,f
  2773  04D5  0BF3               	decfsz	??___lldiv,f
  2774  04D6  2CD0               	goto	u1585
  2775  04D7  3001               	movlw	1
  2776  04D8  00F3               	movwf	??___lldiv
  2777  04D9  0873               	movf	??___lldiv,w
  2778  04DA  07C4               	addwf	___lldiv@counter,f
  2779  04DB                     l2442:
  2780  04DB  1FBB               	btfss	___lldiv@divisor+3,7
  2781  04DC  2CDE               	goto	u1591
  2782  04DD  2CDF               	goto	u1590
  2783  04DE                     u1591:
  2784  04DE  2CCE               	goto	l2440
  2785  04DF                     u1590:
  2786  04DF                     l2444:
  2787  04DF  3001               	movlw	1
  2788  04E0  00F3               	movwf	??___lldiv
  2789  04E1                     u1605:
  2790  04E1  1003               	clrc
  2791  04E2  0DC0               	rlf	___lldiv@quotient,f
  2792  04E3  0DC1               	rlf	___lldiv@quotient+1,f
  2793  04E4  0DC2               	rlf	___lldiv@quotient+2,f
  2794  04E5  0DC3               	rlf	___lldiv@quotient+3,f
  2795  04E6  0BF3               	decfsz	??___lldiv,f
  2796  04E7  2CE1               	goto	u1605
  2797  04E8                     l2446:
  2798  04E8  083B               	movf	___lldiv@divisor+3,w
  2799  04E9  023F               	subwf	___lldiv@dividend+3,w
  2800  04EA  1D03               	skipz
  2801  04EB  2CF6               	goto	u1615
  2802  04EC  083A               	movf	___lldiv@divisor+2,w
  2803  04ED  023E               	subwf	___lldiv@dividend+2,w
  2804  04EE  1D03               	skipz
  2805  04EF  2CF6               	goto	u1615
  2806  04F0  0839               	movf	___lldiv@divisor+1,w
  2807  04F1  023D               	subwf	___lldiv@dividend+1,w
  2808  04F2  1D03               	skipz
  2809  04F3  2CF6               	goto	u1615
  2810  04F4  0838               	movf	___lldiv@divisor,w
  2811  04F5  023C               	subwf	___lldiv@dividend,w
  2812  04F6                     u1615:
  2813  04F6  1C03               	skipc
  2814  04F7  2CF9               	goto	u1611
  2815  04F8  2CFA               	goto	u1610
  2816  04F9                     u1611:
  2817  04F9  2D09               	goto	l2452
  2818  04FA                     u1610:
  2819  04FA                     l2448:
  2820  04FA  0838               	movf	___lldiv@divisor,w
  2821  04FB  02BC               	subwf	___lldiv@dividend,f
  2822  04FC  0839               	movf	___lldiv@divisor+1,w
  2823  04FD  1C03               	skipc
  2824  04FE  0F39               	incfsz	___lldiv@divisor+1,w
  2825  04FF  02BD               	subwf	___lldiv@dividend+1,f
  2826  0500  083A               	movf	___lldiv@divisor+2,w
  2827  0501  1C03               	skipc
  2828  0502  0F3A               	incfsz	___lldiv@divisor+2,w
  2829  0503  02BE               	subwf	___lldiv@dividend+2,f
  2830  0504  083B               	movf	___lldiv@divisor+3,w
  2831  0505  1C03               	skipc
  2832  0506  0F3B               	incfsz	___lldiv@divisor+3,w
  2833  0507  02BF               	subwf	___lldiv@dividend+3,f
  2834  0508                     l2450:
  2835  0508  1440               	bsf	___lldiv@quotient,0
  2836  0509                     l2452:
  2837  0509  3001               	movlw	1
  2838  050A                     u1625:
  2839  050A  1003               	clrc
  2840  050B  0CBB               	rrf	___lldiv@divisor+3,f
  2841  050C  0CBA               	rrf	___lldiv@divisor+2,f
  2842  050D  0CB9               	rrf	___lldiv@divisor+1,f
  2843  050E  0CB8               	rrf	___lldiv@divisor,f
  2844  050F  3EFF               	addlw	-1
  2845  0510  1D03               	skipz
  2846  0511  2D0A               	goto	u1625
  2847  0512                     l2454:
  2848  0512  3001               	movlw	1
  2849  0513  02C4               	subwf	___lldiv@counter,f
  2850  0514  1D03               	btfss	3,2
  2851  0515  2D17               	goto	u1631
  2852  0516  2D18               	goto	u1630
  2853  0517                     u1631:
  2854  0517  2CDF               	goto	l2444
  2855  0518                     u1630:
  2856  0518                     l2456:
  2857  0518  0843               	movf	___lldiv@quotient+3,w
  2858  0519  00BB               	movwf	?___lldiv+3
  2859  051A  0842               	movf	___lldiv@quotient+2,w
  2860  051B  00BA               	movwf	?___lldiv+2
  2861  051C  0841               	movf	___lldiv@quotient+1,w
  2862  051D  00B9               	movwf	?___lldiv+1
  2863  051E  0840               	movf	___lldiv@quotient,w
  2864  051F  00B8               	movwf	?___lldiv
  2865  0520                     l524:
  2866  0520  0008               	return
  2867  0521                     __end_of___lldiv:
  2868                           
  2869                           	psect	text8
  2870  034B                     __ptext8:	
  2871 ;; *************** function _InitMPU6050 *****************
  2872 ;; Defined at:
  2873 ;;		line 13 in file "MPU.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;		None
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;		None
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  1    wreg      void 
  2880 ;; Registers used:
  2881 ;;		wreg, status,2, status,0, pclath, cstack
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2887 ;;      Params:         0       0       0       0       0
  2888 ;;      Locals:         0       0       0       0       0
  2889 ;;      Temps:          3       0       0       0       0
  2890 ;;      Totals:         3       0       0       0       0
  2891 ;;Total ram usage:        3 bytes
  2892 ;; Hardware stack levels used: 1
  2893 ;; Hardware stack levels required when called: 3
  2894 ;; This function calls:
  2895 ;;		_I2CMasterStop
  2896 ;;		_I2CMasterWrite
  2897 ;;		_I2C_Master_Start
  2898 ;; This function is called by:
  2899 ;;		_setup
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           
  2904                           ;psect for function _InitMPU6050
  2905  034B                     _InitMPU6050:
  2906  034B                     l1898:	
  2907                           ;incstack = 0
  2908                           ; Regs used in _InitMPU6050: [wreg+status,2+status,0+pclath+cstack]
  2909                           
  2910                           
  2911                           ;MPU.c: 14:     _delay((unsigned long)((150)*(8000000/4000.0)));
  2912  034B  3002               	movlw	2
  2913  034C  00F6               	movwf	??_InitMPU6050+2
  2914  034D  3086               	movlw	134
  2915  034E  00F5               	movwf	??_InitMPU6050+1
  2916  034F  3099               	movlw	153
  2917  0350  00F4               	movwf	??_InitMPU6050
  2918  0351                     u1947:
  2919  0351  0BF4               	decfsz	??_InitMPU6050,f
  2920  0352  2B51               	goto	u1947
  2921  0353  0BF5               	decfsz	??_InitMPU6050+1,f
  2922  0354  2B51               	goto	u1947
  2923  0355  0BF6               	decfsz	??_InitMPU6050+2,f
  2924  0356  2B51               	goto	u1947
  2925  0357                     l1900:
  2926                           
  2927                           ;MPU.c: 17:     I2C_Master_Start(Standard);
  2928  0357  3001               	movlw	1
  2929  0358  120A  118A  27D4  120A  118A  	fcall	_I2C_Master_Start
  2930  035D                     l1902:
  2931                           
  2932                           ;MPU.c: 18:     I2CMasterWrite(0b11010010 +0);
  2933  035D  30D2               	movlw	210
  2934  035E  120A  158A  27DB  120A  118A  	fcall	_I2CMasterWrite
  2935  0363                     l1904:
  2936                           
  2937                           ;MPU.c: 19:     I2CMasterWrite(0x6B);
  2938  0363  306B               	movlw	107
  2939  0364  120A  158A  27DB  120A  118A  	fcall	_I2CMasterWrite
  2940  0369                     l1906:
  2941                           
  2942                           ;MPU.c: 20:     I2CMasterWrite(0b00000001);
  2943  0369  3001               	movlw	1
  2944  036A  120A  158A  27DB  120A  118A  	fcall	_I2CMasterWrite
  2945  036F                     l1908:
  2946                           
  2947                           ;MPU.c: 24:     I2C_Master_Start(Repeated);
  2948  036F  3000               	movlw	0
  2949  0370  120A  118A  27D4  120A  118A  	fcall	_I2C_Master_Start
  2950  0375                     l1910:
  2951                           
  2952                           ;MPU.c: 25:     I2CMasterWrite(0b11010010 +0);
  2953  0375  30D2               	movlw	210
  2954  0376  120A  158A  27DB  120A  118A  	fcall	_I2CMasterWrite
  2955  037B                     l1912:
  2956                           
  2957                           ;MPU.c: 26:     I2CMasterWrite(0x1B);
  2958  037B  301B               	movlw	27
  2959  037C  120A  158A  27DB  120A  118A  	fcall	_I2CMasterWrite
  2960  0381                     l1914:
  2961                           
  2962                           ;MPU.c: 27:     I2CMasterWrite(0b00000000);
  2963  0381  3000               	movlw	0
  2964  0382  120A  158A  27DB  120A  118A  	fcall	_I2CMasterWrite
  2965  0387                     l1916:
  2966                           
  2967                           ;MPU.c: 31:     I2C_Master_Start(Repeated);
  2968  0387  3000               	movlw	0
  2969  0388  120A  118A  27D4  120A  118A  	fcall	_I2C_Master_Start
  2970  038D                     l1918:
  2971                           
  2972                           ;MPU.c: 32:     I2CMasterWrite(0b11010010 +0);
  2973  038D  30D2               	movlw	210
  2974  038E  120A  158A  27DB  120A  118A  	fcall	_I2CMasterWrite
  2975  0393                     l1920:
  2976                           
  2977                           ;MPU.c: 33:     I2CMasterWrite(0x1C);
  2978  0393  301C               	movlw	28
  2979  0394  120A  158A  27DB  120A  118A  	fcall	_I2CMasterWrite
  2980  0399                     l1922:
  2981                           
  2982                           ;MPU.c: 34:     I2CMasterWrite(0b00000000);
  2983  0399  3000               	movlw	0
  2984  039A  120A  158A  27DB  120A  118A  	fcall	_I2CMasterWrite
  2985  039F                     l1924:
  2986                           
  2987                           ;MPU.c: 37:     I2C_Master_Start(Repeated);
  2988  039F  3000               	movlw	0
  2989  03A0  120A  118A  27D4  120A  118A  	fcall	_I2C_Master_Start
  2990  03A5                     l1926:
  2991                           
  2992                           ;MPU.c: 38:     I2CMasterWrite(0b11010010 +0);
  2993  03A5  30D2               	movlw	210
  2994  03A6  120A  158A  27DB  120A  118A  	fcall	_I2CMasterWrite
  2995  03AB                     l1928:
  2996                           
  2997                           ;MPU.c: 39:     I2CMasterWrite(0x1A);
  2998  03AB  301A               	movlw	26
  2999  03AC  120A  158A  27DB  120A  118A  	fcall	_I2CMasterWrite
  3000  03B1                     l1930:
  3001                           
  3002                           ;MPU.c: 40:     I2CMasterWrite(0b00000000);
  3003  03B1  3000               	movlw	0
  3004  03B2  120A  158A  27DB  120A  118A  	fcall	_I2CMasterWrite
  3005  03B7                     l1932:
  3006                           
  3007                           ;MPU.c: 43:     I2C_Master_Start(Repeated);
  3008  03B7  3000               	movlw	0
  3009  03B8  120A  118A  27D4  120A  118A  	fcall	_I2C_Master_Start
  3010  03BD                     l1934:
  3011                           
  3012                           ;MPU.c: 44:     I2CMasterWrite(0b11010010 +0);
  3013  03BD  30D2               	movlw	210
  3014  03BE  120A  158A  27DB  120A  118A  	fcall	_I2CMasterWrite
  3015  03C3                     l1936:
  3016                           
  3017                           ;MPU.c: 45:     I2CMasterWrite(0x19);
  3018  03C3  3019               	movlw	25
  3019  03C4  120A  158A  27DB  120A  118A  	fcall	_I2CMasterWrite
  3020  03C9                     l1938:
  3021                           
  3022                           ;MPU.c: 46:     I2CMasterWrite(0b00000111);
  3023  03C9  3007               	movlw	7
  3024  03CA  120A  158A  27DB  120A  118A  	fcall	_I2CMasterWrite
  3025  03CF                     l1940:
  3026                           
  3027                           ;MPU.c: 48:     I2CMasterStop();
  3028  03CF  120A  158A  27C8  120A  118A  	fcall	_I2CMasterStop
  3029  03D4                     l347:
  3030  03D4  0008               	return
  3031  03D5                     __end_of_InitMPU6050:
  3032                           
  3033                           	psect	text9
  3034  07D4                     __ptext9:	
  3035 ;; *************** function _I2C_Master_Start *****************
  3036 ;; Defined at:
  3037 ;;		line 96 in file "I2C.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;  Modo_Inicio     1    wreg     enum E1305
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;  Modo_Inicio     1    3[COMMON] enum E1305
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  1    wreg      void 
  3044 ;; Registers used:
  3045 ;;		wreg, status,2, status,0, pclath, cstack
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3051 ;;      Params:         0       0       0       0       0
  3052 ;;      Locals:         1       0       0       0       0
  3053 ;;      Temps:          0       0       0       0       0
  3054 ;;      Totals:         1       0       0       0       0
  3055 ;;Total ram usage:        1 bytes
  3056 ;; Hardware stack levels used: 1
  3057 ;; Hardware stack levels required when called: 2
  3058 ;; This function calls:
  3059 ;;		_I2CMasterCheck
  3060 ;; This function is called by:
  3061 ;;		_main
  3062 ;;		_InitMPU6050
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           
  3067                           ;psect for function _I2C_Master_Start
  3068  07D4                     _I2C_Master_Start:
  3069                           
  3070                           ;incstack = 0
  3071                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3072                           ;I2C_Master_Start@Modo_Inicio stored from wreg
  3073  07D4  00F3               	movwf	I2C_Master_Start@Modo_Inicio
  3074  07D5                     l1738:
  3075                           
  3076                           ;I2C.c: 97:     I2CMasterCheck();
  3077  07D5  120A  118A  26F3  120A  118A  	fcall	_I2CMasterCheck
  3078  07DA                     l1740:
  3079                           
  3080                           ;I2C.c: 98:     if (Modo_Inicio == 1) SSPCON2bits.SEN = 1;
  3081  07DA  0373               	decf	I2C_Master_Start@Modo_Inicio,w
  3082  07DB  1D03               	btfss	3,2
  3083  07DC  2FDE               	goto	u791
  3084  07DD  2FDF               	goto	u790
  3085  07DE                     u791:
  3086  07DE  2FE2               	goto	l1744
  3087  07DF                     u790:
  3088  07DF                     l1742:
  3089  07DF  1683               	bsf	3,5	;RP0=1, select bank1
  3090  07E0  1303               	bcf	3,6	;RP1=0, select bank1
  3091  07E1  1411               	bsf	17,0	;volatile
  3092  07E2                     l1744:
  3093                           
  3094                           ;I2C.c: 99:     if (Modo_Inicio == 0) SSPCON2bits.RSEN = 1;
  3095  07E2  0873               	movf	I2C_Master_Start@Modo_Inicio,w
  3096  07E3  1D03               	btfss	3,2
  3097  07E4  2FE6               	goto	u801
  3098  07E5  2FE7               	goto	u800
  3099  07E6                     u801:
  3100  07E6  2FEA               	goto	l221
  3101  07E7                     u800:
  3102  07E7                     l1746:
  3103  07E7  1683               	bsf	3,5	;RP0=1, select bank1
  3104  07E8  1303               	bcf	3,6	;RP1=0, select bank1
  3105  07E9  1491               	bsf	17,1	;volatile
  3106  07EA                     l221:
  3107                           
  3108                           ;I2C.c: 100:     SSPIF = 0;
  3109  07EA  1283               	bcf	3,5	;RP0=0, select bank0
  3110  07EB  1303               	bcf	3,6	;RP1=0, select bank0
  3111  07EC  118C               	bcf	12,3	;volatile
  3112  07ED                     l222:
  3113  07ED  0008               	return
  3114  07EE                     __end_of_I2C_Master_Start:
  3115                           
  3116                           	psect	text10
  3117  0FDB                     __ptext10:	
  3118 ;; *************** function _I2CMasterWrite *****************
  3119 ;; Defined at:
  3120 ;;		line 110 in file "I2C.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  Datos           1    wreg     unsigned char 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  Datos           1    3[COMMON] unsigned char 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      void 
  3127 ;; Registers used:
  3128 ;;		wreg, status,2, status,0, pclath, cstack
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3134 ;;      Params:         0       0       0       0       0
  3135 ;;      Locals:         1       0       0       0       0
  3136 ;;      Temps:          0       0       0       0       0
  3137 ;;      Totals:         1       0       0       0       0
  3138 ;;Total ram usage:        1 bytes
  3139 ;; Hardware stack levels used: 1
  3140 ;; Hardware stack levels required when called: 2
  3141 ;; This function calls:
  3142 ;;		_I2CMasterCheck
  3143 ;; This function is called by:
  3144 ;;		_main
  3145 ;;		_InitMPU6050
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           
  3150                           ;psect for function _I2CMasterWrite
  3151  0FDB                     _I2CMasterWrite:
  3152                           
  3153                           ;incstack = 0
  3154                           ; Regs used in _I2CMasterWrite: [wreg+status,2+status,0+pclath+cstack]
  3155                           ;I2CMasterWrite@Datos stored from wreg
  3156  0FDB  00F3               	movwf	I2CMasterWrite@Datos
  3157  0FDC                     l1748:
  3158                           
  3159                           ;I2C.c: 111:     I2CMasterCheck();
  3160  0FDC  120A  118A  26F3  120A  158A  	fcall	_I2CMasterCheck
  3161  0FE1                     l1750:
  3162                           
  3163                           ;I2C.c: 112:     SSPBUF = Datos;
  3164  0FE1  0873               	movf	I2CMasterWrite@Datos,w
  3165  0FE2  1283               	bcf	3,5	;RP0=0, select bank0
  3166  0FE3  1303               	bcf	3,6	;RP1=0, select bank0
  3167  0FE4  0093               	movwf	19	;volatile
  3168  0FE5                     l228:
  3169  0FE5  0008               	return
  3170  0FE6                     __end_of_I2CMasterWrite:
  3171                           
  3172                           	psect	text11
  3173  0FC8                     __ptext11:	
  3174 ;; *************** function _I2CMasterStop *****************
  3175 ;; Defined at:
  3176 ;;		line 104 in file "I2C.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;		None
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;		None
  3181 ;; Return value:  Size  Location     Type
  3182 ;;                  1    wreg      void 
  3183 ;; Registers used:
  3184 ;;		wreg, status,2, status,0, pclath, cstack
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3190 ;;      Params:         0       0       0       0       0
  3191 ;;      Locals:         0       0       0       0       0
  3192 ;;      Temps:          0       0       0       0       0
  3193 ;;      Totals:         0       0       0       0       0
  3194 ;;Total ram usage:        0 bytes
  3195 ;; Hardware stack levels used: 1
  3196 ;; Hardware stack levels required when called: 2
  3197 ;; This function calls:
  3198 ;;		_I2CMasterCheck
  3199 ;; This function is called by:
  3200 ;;		_main
  3201 ;;		_InitMPU6050
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           
  3206                           ;psect for function _I2CMasterStop
  3207  0FC8                     _I2CMasterStop:
  3208  0FC8                     l1752:	
  3209                           ;incstack = 0
  3210                           ; Regs used in _I2CMasterStop: [wreg+status,2+status,0+pclath+cstack]
  3211                           
  3212                           
  3213                           ;I2C.c: 105:     I2CMasterCheck();
  3214  0FC8  120A  118A  26F3  120A  158A  	fcall	_I2CMasterCheck
  3215  0FCD                     l1754:
  3216                           
  3217                           ;I2C.c: 106:     SSPCON2bits.PEN = 1;
  3218  0FCD  1683               	bsf	3,5	;RP0=1, select bank1
  3219  0FCE  1303               	bcf	3,6	;RP1=0, select bank1
  3220  0FCF  1511               	bsf	17,2	;volatile
  3221  0FD0                     l225:
  3222  0FD0  0008               	return
  3223  0FD1                     __end_of_I2CMasterStop:
  3224                           
  3225                           	psect	text12
  3226  0521                     __ptext12:	
  3227 ;; *************** function _Iniciar_LCD *****************
  3228 ;; Defined at:
  3229 ;;		line 30 in file "LCD.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;		None
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;		None
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  1    wreg      void 
  3236 ;; Registers used:
  3237 ;;		wreg, status,2, status,0, pclath, cstack
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3243 ;;      Params:         0       0       0       0       0
  3244 ;;      Locals:         0       0       0       0       0
  3245 ;;      Temps:          2       0       0       0       0
  3246 ;;      Totals:         2       0       0       0       0
  3247 ;;Total ram usage:        2 bytes
  3248 ;; Hardware stack levels used: 1
  3249 ;; Hardware stack levels required when called: 3
  3250 ;; This function calls:
  3251 ;;		_Escribir_comandoLCD
  3252 ;; This function is called by:
  3253 ;;		_setup
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           
  3258                           ;psect for function _Iniciar_LCD
  3259  0521                     _Iniciar_LCD:
  3260  0521                     l2542:	
  3261                           ;incstack = 0
  3262                           ; Regs used in _Iniciar_LCD: [wreg+status,2+status,0+pclath+cstack]
  3263                           
  3264                           
  3265                           ;LCD.c: 31:     PORTDbits.RD3 = 0;
  3266  0521  1283               	bcf	3,5	;RP0=0, select bank0
  3267  0522  1303               	bcf	3,6	;RP1=0, select bank0
  3268  0523  1188               	bcf	8,3	;volatile
  3269                           
  3270                           ;LCD.c: 32:     PORTDbits.RD4 = 0;
  3271  0524  1208               	bcf	8,4	;volatile
  3272  0525                     l2544:
  3273                           
  3274                           ;LCD.c: 34:     _delay((unsigned long)((14)*(8000000/4000.0)));
  3275  0525  3025               	movlw	37
  3276  0526  00F6               	movwf	??_Iniciar_LCD+1
  3277  0527  305B               	movlw	91
  3278  0528  00F5               	movwf	??_Iniciar_LCD
  3279  0529                     u1957:
  3280  0529  0BF5               	decfsz	??_Iniciar_LCD,f
  3281  052A  2D29               	goto	u1957
  3282  052B  0BF6               	decfsz	??_Iniciar_LCD+1,f
  3283  052C  2D29               	goto	u1957
  3284  052D  2D2E               	nop2
  3285  052E                     l2546:
  3286                           
  3287                           ;LCD.c: 35:     Escribir_comandoLCD(0b00110000);
  3288  052E  3030               	movlw	48
  3289  052F  120A  118A  2671  120A  118A  	fcall	_Escribir_comandoLCD
  3290  0534                     l2548:
  3291                           
  3292                           ;LCD.c: 36:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3293  0534  300B               	movlw	11
  3294  0535  00F6               	movwf	??_Iniciar_LCD+1
  3295  0536  3062               	movlw	98
  3296  0537  00F5               	movwf	??_Iniciar_LCD
  3297  0538                     u1967:
  3298  0538  0BF5               	decfsz	??_Iniciar_LCD,f
  3299  0539  2D38               	goto	u1967
  3300  053A  0BF6               	decfsz	??_Iniciar_LCD+1,f
  3301  053B  2D38               	goto	u1967
  3302  053C  0000               	nop
  3303                           
  3304                           ;LCD.c: 37:     Escribir_comandoLCD(0b00110000);
  3305  053D  3030               	movlw	48
  3306  053E  120A  118A  2671  120A  118A  	fcall	_Escribir_comandoLCD
  3307  0543                     l2550:
  3308                           
  3309                           ;LCD.c: 38:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3310  0543  3042               	movlw	66
  3311  0544  00F5               	movwf	??_Iniciar_LCD
  3312  0545                     u1977:
  3313  0545  0BF5               	decfsz	??_Iniciar_LCD,f
  3314  0546  2D45               	goto	u1977
  3315  0547  0000               	nop
  3316  0548                     l2552:
  3317                           
  3318                           ;LCD.c: 39:     Escribir_comandoLCD(0b00110000);
  3319  0548  3030               	movlw	48
  3320  0549  120A  118A  2671  120A  118A  	fcall	_Escribir_comandoLCD
  3321                           
  3322                           ;LCD.c: 42:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3323  054E  3042               	movlw	66
  3324  054F  00F5               	movwf	??_Iniciar_LCD
  3325  0550                     u1987:
  3326  0550  0BF5               	decfsz	??_Iniciar_LCD,f
  3327  0551  2D50               	goto	u1987
  3328  0552  0000               	nop
  3329  0553                     l2554:
  3330                           
  3331                           ;LCD.c: 43:     Escribir_comandoLCD(0b00111000);
  3332  0553  3038               	movlw	56
  3333  0554  120A  118A  2671  120A  118A  	fcall	_Escribir_comandoLCD
  3334  0559                     l2556:
  3335                           
  3336                           ;LCD.c: 44:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3337  0559  3042               	movlw	66
  3338  055A  00F5               	movwf	??_Iniciar_LCD
  3339  055B                     u1997:
  3340  055B  0BF5               	decfsz	??_Iniciar_LCD,f
  3341  055C  2D5B               	goto	u1997
  3342  055D  0000               	nop
  3343                           
  3344                           ;LCD.c: 45:     Escribir_comandoLCD(0b00001000);
  3345  055E  3008               	movlw	8
  3346  055F  120A  118A  2671  120A  118A  	fcall	_Escribir_comandoLCD
  3347  0564                     l2558:
  3348                           
  3349                           ;LCD.c: 46:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3350  0564  3042               	movlw	66
  3351  0565  00F5               	movwf	??_Iniciar_LCD
  3352  0566                     u2007:
  3353  0566  0BF5               	decfsz	??_Iniciar_LCD,f
  3354  0567  2D66               	goto	u2007
  3355  0568  0000               	nop
  3356  0569                     l2560:
  3357                           
  3358                           ;LCD.c: 47:     Escribir_comandoLCD(0b00000001);
  3359  0569  3001               	movlw	1
  3360  056A  120A  118A  2671  120A  118A  	fcall	_Escribir_comandoLCD
  3361                           
  3362                           ;LCD.c: 48:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3363  056F  3042               	movlw	66
  3364  0570  00F5               	movwf	??_Iniciar_LCD
  3365  0571                     u2017:
  3366  0571  0BF5               	decfsz	??_Iniciar_LCD,f
  3367  0572  2D71               	goto	u2017
  3368  0573  0000               	nop
  3369  0574                     l2562:
  3370                           
  3371                           ;LCD.c: 49:     Escribir_comandoLCD(0b00000110);
  3372  0574  3006               	movlw	6
  3373  0575  120A  118A  2671  120A  118A  	fcall	_Escribir_comandoLCD
  3374  057A                     l2564:
  3375                           
  3376                           ;LCD.c: 50:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3377  057A  3042               	movlw	66
  3378  057B  00F5               	movwf	??_Iniciar_LCD
  3379  057C                     u2027:
  3380  057C  0BF5               	decfsz	??_Iniciar_LCD,f
  3381  057D  2D7C               	goto	u2027
  3382  057E  0000               	nop
  3383                           
  3384                           ;LCD.c: 51:     Escribir_comandoLCD(0b00001100);
  3385  057F  300C               	movlw	12
  3386  0580  120A  118A  2671  120A  118A  	fcall	_Escribir_comandoLCD
  3387  0585                     l264:
  3388  0585  0008               	return
  3389  0586                     __end_of_Iniciar_LCD:
  3390                           
  3391                           	psect	text13
  3392  0794                     __ptext13:	
  3393 ;; *************** function _Escribir_stringLCD *****************
  3394 ;; Defined at:
  3395 ;;		line 55 in file "LCD.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;  d               1    wreg     PTR const unsigned char 
  3398 ;;		 -> STR_7(13), STR_6(15), STR_5(2), STR_4(2), 
  3399 ;;		 -> STR_3(2), STR_2(4), STR_1(16), 
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  d               1    7[COMMON] PTR const unsigned char 
  3402 ;;		 -> STR_7(13), STR_6(15), STR_5(2), STR_4(2), 
  3403 ;;		 -> STR_3(2), STR_2(4), STR_1(16), 
  3404 ;;  i               1    6[COMMON] unsigned char 
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  1    wreg      void 
  3407 ;; Registers used:
  3408 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3414 ;;      Params:         0       0       0       0       0
  3415 ;;      Locals:         2       0       0       0       0
  3416 ;;      Temps:          1       0       0       0       0
  3417 ;;      Totals:         3       0       0       0       0
  3418 ;;Total ram usage:        3 bytes
  3419 ;; Hardware stack levels used: 1
  3420 ;; Hardware stack levels required when called: 3
  3421 ;; This function calls:
  3422 ;;		_Escribir_comandoLCD
  3423 ;; This function is called by:
  3424 ;;		_main
  3425 ;;		_setup
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           
  3430                           ;psect for function _Escribir_stringLCD
  3431  0794                     _Escribir_stringLCD:
  3432                           
  3433                           ;incstack = 0
  3434                           ; Regs used in _Escribir_stringLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3435                           ;Escribir_stringLCD@d stored from wreg
  3436  0794  00F7               	movwf	Escribir_stringLCD@d
  3437  0795                     l2484:
  3438                           
  3439                           ;LCD.c: 56:     PORTDbits.RD3 = 1; PORTDbits.RD4 = 0;
  3440  0795  1283               	bcf	3,5	;RP0=0, select bank0
  3441  0796  1303               	bcf	3,6	;RP1=0, select bank0
  3442  0797  1588               	bsf	8,3	;volatile
  3443  0798  1208               	bcf	8,4	;volatile
  3444  0799                     l2486:
  3445                           
  3446                           ;LCD.c: 58:     for (char i=0; d[i]!='\0'; i++){
  3447  0799  01F6               	clrf	Escribir_stringLCD@i
  3448  079A  2FAC               	goto	l2492
  3449  079B                     l2488:
  3450                           
  3451                           ;LCD.c: 59:         Escribir_comandoLCD(d[i]);
  3452  079B  0876               	movf	Escribir_stringLCD@i,w
  3453  079C  0777               	addwf	Escribir_stringLCD@d,w
  3454  079D  0084               	movwf	4
  3455  079E  120A  118A  2700  120A  118A  	fcall	stringdir
  3456  07A3  120A  118A  2671  120A  118A  	fcall	_Escribir_comandoLCD
  3457  07A8                     l2490:
  3458                           
  3459                           ;LCD.c: 60:     }
  3460  07A8  3001               	movlw	1
  3461  07A9  00F5               	movwf	??_Escribir_stringLCD
  3462  07AA  0875               	movf	??_Escribir_stringLCD,w
  3463  07AB  07F6               	addwf	Escribir_stringLCD@i,f
  3464  07AC                     l2492:
  3465  07AC  0876               	movf	Escribir_stringLCD@i,w
  3466  07AD  0777               	addwf	Escribir_stringLCD@d,w
  3467  07AE  0084               	movwf	4
  3468  07AF  120A  118A  2700  120A  118A  	fcall	stringdir
  3469  07B4  3A00               	xorlw	0
  3470  07B5  1D03               	skipz
  3471  07B6  2FB8               	goto	u1681
  3472  07B7  2FB9               	goto	u1680
  3473  07B8                     u1681:
  3474  07B8  2F9B               	goto	l2488
  3475  07B9                     u1680:
  3476  07B9                     l270:
  3477  07B9  0008               	return
  3478  07BA                     __end_of_Escribir_stringLCD:
  3479                           
  3480                           	psect	text14
  3481  029B                     __ptext14:	
  3482 ;; *************** function _Config_USART *****************
  3483 ;; Defined at:
  3484 ;;		line 13 in file "UART.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;  baud_rate       2    3[COMMON] int 
  3487 ;;  Freq            2    5[COMMON] int 
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;		None
  3490 ;; Return value:  Size  Location     Type
  3491 ;;                  1    wreg      void 
  3492 ;; Registers used:
  3493 ;;		wreg, status,2, status,0
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 0/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3499 ;;      Params:         4       0       0       0       0
  3500 ;;      Locals:         0       0       0       0       0
  3501 ;;      Temps:          0       0       0       0       0
  3502 ;;      Totals:         4       0       0       0       0
  3503 ;;Total ram usage:        4 bytes
  3504 ;; Hardware stack levels used: 1
  3505 ;; Hardware stack levels required when called: 1
  3506 ;; This function calls:
  3507 ;;		Nothing
  3508 ;; This function is called by:
  3509 ;;		_setup
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513                           
  3514                           ;psect for function _Config_USART
  3515  029B                     _Config_USART:
  3516  029B                     l1976:	
  3517                           ;incstack = 0
  3518                           ; Regs used in _Config_USART: [wreg+status,2+status,0]
  3519                           
  3520                           
  3521                           ;UART.c: 14:     if(baud_rate == 9600 && Freq == 4){
  3522  029B  3080               	movlw	128
  3523  029C  0673               	xorwf	Config_USART@baud_rate,w
  3524  029D  3025               	movlw	37
  3525  029E  1903               	skipnz
  3526  029F  0674               	xorwf	Config_USART@baud_rate+1,w
  3527  02A0  1D03               	btfss	3,2
  3528  02A1  2AA3               	goto	u1131
  3529  02A2  2AA4               	goto	u1130
  3530  02A3                     u1131:
  3531  02A3  2AB7               	goto	l1986
  3532  02A4                     u1130:
  3533  02A4                     l1978:
  3534  02A4  3004               	movlw	4
  3535  02A5  0675               	xorwf	Config_USART@Freq,w
  3536  02A6  0476               	iorwf	Config_USART@Freq+1,w
  3537  02A7  1D03               	btfss	3,2
  3538  02A8  2AAA               	goto	u1141
  3539  02A9  2AAB               	goto	u1140
  3540  02AA                     u1141:
  3541  02AA  2AB7               	goto	l1986
  3542  02AB                     u1140:
  3543  02AB                     l1980:
  3544                           
  3545                           ;UART.c: 15:         TXSTAbits.SYNC = 0;
  3546  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  3547  02AC  1303               	bcf	3,6	;RP1=0, select bank1
  3548  02AD  1218               	bcf	24,4	;volatile
  3549                           
  3550                           ;UART.c: 16:         TXSTAbits.BRGH = 1;
  3551  02AE  1518               	bsf	24,2	;volatile
  3552                           
  3553                           ;UART.c: 18:         BAUDCTLbits.BRG16 = 0;
  3554  02AF  1683               	bsf	3,5	;RP0=1, select bank3
  3555  02B0  1703               	bsf	3,6	;RP1=1, select bank3
  3556  02B1  1187               	bcf	7,3	;volatile
  3557  02B2                     l1982:
  3558                           
  3559                           ;UART.c: 20:         SPBRG = 25;
  3560  02B2  3019               	movlw	25
  3561  02B3  1683               	bsf	3,5	;RP0=1, select bank1
  3562  02B4  1303               	bcf	3,6	;RP1=0, select bank1
  3563  02B5  0099               	movwf	25	;volatile
  3564  02B6                     l1984:
  3565                           
  3566                           ;UART.c: 21:         SPBRGH = 0;
  3567  02B6  019A               	clrf	26	;volatile
  3568  02B7                     l1986:
  3569                           
  3570                           ;UART.c: 24:     if(baud_rate == 9600 && Freq == 8){
  3571  02B7  3080               	movlw	128
  3572  02B8  0673               	xorwf	Config_USART@baud_rate,w
  3573  02B9  3025               	movlw	37
  3574  02BA  1903               	skipnz
  3575  02BB  0674               	xorwf	Config_USART@baud_rate+1,w
  3576  02BC  1D03               	btfss	3,2
  3577  02BD  2ABF               	goto	u1151
  3578  02BE  2AC0               	goto	u1150
  3579  02BF                     u1151:
  3580  02BF  2AD3               	goto	l1996
  3581  02C0                     u1150:
  3582  02C0                     l1988:
  3583  02C0  3008               	movlw	8
  3584  02C1  0675               	xorwf	Config_USART@Freq,w
  3585  02C2  0476               	iorwf	Config_USART@Freq+1,w
  3586  02C3  1D03               	btfss	3,2
  3587  02C4  2AC6               	goto	u1161
  3588  02C5  2AC7               	goto	u1160
  3589  02C6                     u1161:
  3590  02C6  2AD3               	goto	l1996
  3591  02C7                     u1160:
  3592  02C7                     l1990:
  3593                           
  3594                           ;UART.c: 25:         TXSTAbits.SYNC = 0;
  3595  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  3596  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  3597  02C9  1218               	bcf	24,4	;volatile
  3598                           
  3599                           ;UART.c: 26:         TXSTAbits.BRGH = 0;
  3600  02CA  1118               	bcf	24,2	;volatile
  3601                           
  3602                           ;UART.c: 28:         BAUDCTLbits.BRG16 = 1;
  3603  02CB  1683               	bsf	3,5	;RP0=1, select bank3
  3604  02CC  1703               	bsf	3,6	;RP1=1, select bank3
  3605  02CD  1587               	bsf	7,3	;volatile
  3606  02CE                     l1992:
  3607                           
  3608                           ;UART.c: 30:         SPBRG = 51;
  3609  02CE  3033               	movlw	51
  3610  02CF  1683               	bsf	3,5	;RP0=1, select bank1
  3611  02D0  1303               	bcf	3,6	;RP1=0, select bank1
  3612  02D1  0099               	movwf	25	;volatile
  3613  02D2                     l1994:
  3614                           
  3615                           ;UART.c: 31:         SPBRGH = 0;
  3616  02D2  019A               	clrf	26	;volatile
  3617  02D3                     l1996:
  3618                           
  3619                           ;UART.c: 34:     if(baud_rate == 9600 && Freq == 1){
  3620  02D3  3080               	movlw	128
  3621  02D4  0673               	xorwf	Config_USART@baud_rate,w
  3622  02D5  3025               	movlw	37
  3623  02D6  1903               	skipnz
  3624  02D7  0674               	xorwf	Config_USART@baud_rate+1,w
  3625  02D8  1D03               	btfss	3,2
  3626  02D9  2ADB               	goto	u1171
  3627  02DA  2ADC               	goto	u1170
  3628  02DB                     u1171:
  3629  02DB  2AEE               	goto	l2006
  3630  02DC                     u1170:
  3631  02DC                     l1998:
  3632  02DC  0375               	decf	Config_USART@Freq,w
  3633  02DD  0476               	iorwf	Config_USART@Freq+1,w
  3634  02DE  1D03               	btfss	3,2
  3635  02DF  2AE1               	goto	u1181
  3636  02E0  2AE2               	goto	u1180
  3637  02E1                     u1181:
  3638  02E1  2AEE               	goto	l2006
  3639  02E2                     u1180:
  3640  02E2                     l2000:
  3641                           
  3642                           ;UART.c: 35:         TXSTAbits.SYNC = 0;
  3643  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  3644  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  3645  02E4  1218               	bcf	24,4	;volatile
  3646                           
  3647                           ;UART.c: 36:         TXSTAbits.BRGH = 1;
  3648  02E5  1518               	bsf	24,2	;volatile
  3649                           
  3650                           ;UART.c: 38:         BAUDCTLbits.BRG16 = 1;
  3651  02E6  1683               	bsf	3,5	;RP0=1, select bank3
  3652  02E7  1703               	bsf	3,6	;RP1=1, select bank3
  3653  02E8  1587               	bsf	7,3	;volatile
  3654  02E9                     l2002:
  3655                           
  3656                           ;UART.c: 40:         SPBRG = 25;
  3657  02E9  3019               	movlw	25
  3658  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  3659  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  3660  02EC  0099               	movwf	25	;volatile
  3661  02ED                     l2004:
  3662                           
  3663                           ;UART.c: 41:         SPBRGH = 0;
  3664  02ED  019A               	clrf	26	;volatile
  3665  02EE                     l2006:
  3666                           
  3667                           ;UART.c: 44:     if(baud_rate == 10417 && Freq == 4){
  3668  02EE  30B1               	movlw	177
  3669  02EF  0673               	xorwf	Config_USART@baud_rate,w
  3670  02F0  3028               	movlw	40
  3671  02F1  1903               	skipnz
  3672  02F2  0674               	xorwf	Config_USART@baud_rate+1,w
  3673  02F3  1D03               	btfss	3,2
  3674  02F4  2AF6               	goto	u1191
  3675  02F5  2AF7               	goto	u1190
  3676  02F6                     u1191:
  3677  02F6  2B0A               	goto	l2016
  3678  02F7                     u1190:
  3679  02F7                     l2008:
  3680  02F7  3004               	movlw	4
  3681  02F8  0675               	xorwf	Config_USART@Freq,w
  3682  02F9  0476               	iorwf	Config_USART@Freq+1,w
  3683  02FA  1D03               	btfss	3,2
  3684  02FB  2AFD               	goto	u1201
  3685  02FC  2AFE               	goto	u1200
  3686  02FD                     u1201:
  3687  02FD  2B0A               	goto	l2016
  3688  02FE                     u1200:
  3689  02FE                     l2010:
  3690                           
  3691                           ;UART.c: 45:         TXSTAbits.SYNC = 0;
  3692  02FE  1683               	bsf	3,5	;RP0=1, select bank1
  3693  02FF  1303               	bcf	3,6	;RP1=0, select bank1
  3694  0300  1218               	bcf	24,4	;volatile
  3695                           
  3696                           ;UART.c: 46:         TXSTAbits.BRGH = 1;
  3697  0301  1518               	bsf	24,2	;volatile
  3698                           
  3699                           ;UART.c: 48:         BAUDCTLbits.BRG16 = 1;
  3700  0302  1683               	bsf	3,5	;RP0=1, select bank3
  3701  0303  1703               	bsf	3,6	;RP1=1, select bank3
  3702  0304  1587               	bsf	7,3	;volatile
  3703  0305                     l2012:
  3704                           
  3705                           ;UART.c: 50:         SPBRG = 23;
  3706  0305  3017               	movlw	23
  3707  0306  1683               	bsf	3,5	;RP0=1, select bank1
  3708  0307  1303               	bcf	3,6	;RP1=0, select bank1
  3709  0308  0099               	movwf	25	;volatile
  3710  0309                     l2014:
  3711                           
  3712                           ;UART.c: 51:         SPBRGH = 0;
  3713  0309  019A               	clrf	26	;volatile
  3714  030A                     l2016:
  3715                           
  3716                           ;UART.c: 54:     if(baud_rate == 10417 && Freq == 8){
  3717  030A  30B1               	movlw	177
  3718  030B  0673               	xorwf	Config_USART@baud_rate,w
  3719  030C  3028               	movlw	40
  3720  030D  1903               	skipnz
  3721  030E  0674               	xorwf	Config_USART@baud_rate+1,w
  3722  030F  1D03               	btfss	3,2
  3723  0310  2B12               	goto	u1211
  3724  0311  2B13               	goto	u1210
  3725  0312                     u1211:
  3726  0312  2B26               	goto	l2026
  3727  0313                     u1210:
  3728  0313                     l2018:
  3729  0313  3008               	movlw	8
  3730  0314  0675               	xorwf	Config_USART@Freq,w
  3731  0315  0476               	iorwf	Config_USART@Freq+1,w
  3732  0316  1D03               	btfss	3,2
  3733  0317  2B19               	goto	u1221
  3734  0318  2B1A               	goto	u1220
  3735  0319                     u1221:
  3736  0319  2B26               	goto	l2026
  3737  031A                     u1220:
  3738  031A                     l2020:
  3739                           
  3740                           ;UART.c: 55:         TXSTAbits.SYNC = 0;
  3741  031A  1683               	bsf	3,5	;RP0=1, select bank1
  3742  031B  1303               	bcf	3,6	;RP1=0, select bank1
  3743  031C  1218               	bcf	24,4	;volatile
  3744                           
  3745                           ;UART.c: 56:         TXSTAbits.BRGH = 0;
  3746  031D  1118               	bcf	24,2	;volatile
  3747                           
  3748                           ;UART.c: 58:         BAUDCTLbits.BRG16 = 1;
  3749  031E  1683               	bsf	3,5	;RP0=1, select bank3
  3750  031F  1703               	bsf	3,6	;RP1=1, select bank3
  3751  0320  1587               	bsf	7,3	;volatile
  3752  0321                     l2022:
  3753                           
  3754                           ;UART.c: 60:         SPBRG = 47;
  3755  0321  302F               	movlw	47
  3756  0322  1683               	bsf	3,5	;RP0=1, select bank1
  3757  0323  1303               	bcf	3,6	;RP1=0, select bank1
  3758  0324  0099               	movwf	25	;volatile
  3759  0325                     l2024:
  3760                           
  3761                           ;UART.c: 61:         SPBRGH = 0;
  3762  0325  019A               	clrf	26	;volatile
  3763  0326                     l2026:
  3764                           
  3765                           ;UART.c: 64:     if(baud_rate == 10417 && Freq == 1){
  3766  0326  30B1               	movlw	177
  3767  0327  0673               	xorwf	Config_USART@baud_rate,w
  3768  0328  3028               	movlw	40
  3769  0329  1903               	skipnz
  3770  032A  0674               	xorwf	Config_USART@baud_rate+1,w
  3771  032B  1D03               	btfss	3,2
  3772  032C  2B2E               	goto	u1231
  3773  032D  2B2F               	goto	u1230
  3774  032E                     u1231:
  3775  032E  2B41               	goto	l2036
  3776  032F                     u1230:
  3777  032F                     l2028:
  3778  032F  0375               	decf	Config_USART@Freq,w
  3779  0330  0476               	iorwf	Config_USART@Freq+1,w
  3780  0331  1D03               	btfss	3,2
  3781  0332  2B34               	goto	u1241
  3782  0333  2B35               	goto	u1240
  3783  0334                     u1241:
  3784  0334  2B41               	goto	l2036
  3785  0335                     u1240:
  3786  0335                     l2030:
  3787                           
  3788                           ;UART.c: 65:         TXSTAbits.SYNC = 0;
  3789  0335  1683               	bsf	3,5	;RP0=1, select bank1
  3790  0336  1303               	bcf	3,6	;RP1=0, select bank1
  3791  0337  1218               	bcf	24,4	;volatile
  3792                           
  3793                           ;UART.c: 66:         TXSTAbits.BRGH = 0;
  3794  0338  1118               	bcf	24,2	;volatile
  3795                           
  3796                           ;UART.c: 68:         BAUDCTLbits.BRG16 = 1;
  3797  0339  1683               	bsf	3,5	;RP0=1, select bank3
  3798  033A  1703               	bsf	3,6	;RP1=1, select bank3
  3799  033B  1587               	bsf	7,3	;volatile
  3800  033C                     l2032:
  3801                           
  3802                           ;UART.c: 70:         SPBRG = 5;
  3803  033C  3005               	movlw	5
  3804  033D  1683               	bsf	3,5	;RP0=1, select bank1
  3805  033E  1303               	bcf	3,6	;RP1=0, select bank1
  3806  033F  0099               	movwf	25	;volatile
  3807  0340                     l2034:
  3808                           
  3809                           ;UART.c: 71:         SPBRGH = 0;
  3810  0340  019A               	clrf	26	;volatile
  3811  0341                     l2036:
  3812                           
  3813                           ;UART.c: 74:     RCSTAbits.SPEN = 1;
  3814  0341  1283               	bcf	3,5	;RP0=0, select bank0
  3815  0342  1303               	bcf	3,6	;RP1=0, select bank0
  3816  0343  1798               	bsf	24,7	;volatile
  3817  0344                     l2038:
  3818                           
  3819                           ;UART.c: 75:     RCSTAbits.RX9 = 0;
  3820  0344  1318               	bcf	24,6	;volatile
  3821  0345                     l2040:
  3822                           
  3823                           ;UART.c: 76:     RCSTAbits.CREN = 1;
  3824  0345  1618               	bsf	24,4	;volatile
  3825  0346                     l2042:
  3826                           
  3827                           ;UART.c: 78:     TXSTAbits.TXEN = 1;
  3828  0346  1683               	bsf	3,5	;RP0=1, select bank1
  3829  0347  1303               	bcf	3,6	;RP1=0, select bank1
  3830  0348  1698               	bsf	24,5	;volatile
  3831  0349                     l2044:
  3832                           
  3833                           ;UART.c: 79:     PIE1bits.RCIE = 0;
  3834  0349  128C               	bcf	12,5	;volatile
  3835  034A                     l324:
  3836  034A  0008               	return
  3837  034B                     __end_of_Config_USART:
  3838                           
  3839                           	psect	text15
  3840  05E1                     __ptext15:	
  3841 ;; *************** function _divisor_dec *****************
  3842 ;; Defined at:
  3843 ;;		line 265 in file "Maestro I2C.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;  b               2    4[BANK0 ] int 
  3846 ;;  dig1            1    6[BANK0 ] PTR unsigned char 
  3847 ;;		 -> Giro_digy(1), Giro_digx(1), 
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;  n               2    9[BANK0 ] int 
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  1    wreg      void 
  3852 ;; Registers used:
  3853 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3859 ;;      Params:         0       3       0       0       0
  3860 ;;      Locals:         0       2       0       0       0
  3861 ;;      Temps:          0       2       0       0       0
  3862 ;;      Totals:         0       7       0       0       0
  3863 ;;Total ram usage:        7 bytes
  3864 ;; Hardware stack levels used: 1
  3865 ;; Hardware stack levels required when called: 2
  3866 ;; This function calls:
  3867 ;;		___awdiv
  3868 ;;		___awmod
  3869 ;; This function is called by:
  3870 ;;		_main
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           
  3875                           ;psect for function _divisor_dec
  3876  05E1                     _divisor_dec:
  3877  05E1                     l2648:	
  3878                           ;incstack = 0
  3879                           ; Regs used in _divisor_dec: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3880                           
  3881                           
  3882                           ;Maestro I2C.c: 266:     for(int n = 0; n<3 ; n++){
  3883  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  3884  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  3885  05E3  01C1               	clrf	divisor_dec@n
  3886  05E4  01C2               	clrf	divisor_dec@n+1
  3887  05E5                     l2654:
  3888                           
  3889                           ;Maestro I2C.c: 267:         dig1[n] = b % 10;
  3890  05E5  300A               	movlw	10
  3891  05E6  00F3               	movwf	___awmod@divisor
  3892  05E7  3000               	movlw	0
  3893  05E8  00F4               	movwf	___awmod@divisor+1
  3894  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  3895  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  3896  05EB  083D               	movf	divisor_dec@b+1,w
  3897  05EC  00F6               	movwf	___awmod@dividend+1
  3898  05ED  083C               	movf	divisor_dec@b,w
  3899  05EE  00F5               	movwf	___awmod@dividend
  3900  05EF  120A  118A  2586  120A  118A  	fcall	___awmod
  3901  05F4  0873               	movf	?___awmod,w
  3902  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  3903  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  3904  05F7  00BF               	movwf	??_divisor_dec
  3905  05F8  0841               	movf	divisor_dec@n,w
  3906  05F9  073E               	addwf	divisor_dec@dig1,w
  3907  05FA  00C0               	movwf	??_divisor_dec+1
  3908  05FB  0840               	movf	??_divisor_dec+1,w
  3909  05FC  0084               	movwf	4
  3910  05FD  083F               	movf	??_divisor_dec,w
  3911  05FE  0080               	movwf	0
  3912                           
  3913                           ;Maestro I2C.c: 268:         b = (b - dig1[n])/10;
  3914  05FF  300A               	movlw	10
  3915  0600  00F3               	movwf	___awdiv@divisor
  3916  0601  3000               	movlw	0
  3917  0602  00F4               	movwf	___awdiv@divisor+1
  3918  0603  0841               	movf	divisor_dec@n,w
  3919  0604  073E               	addwf	divisor_dec@dig1,w
  3920  0605  00BF               	movwf	??_divisor_dec
  3921  0606  083F               	movf	??_divisor_dec,w
  3922  0607  0084               	movwf	4
  3923  0608  0800               	movf	0,w
  3924  0609  023C               	subwf	divisor_dec@b,w
  3925  060A  00F5               	movwf	___awdiv@dividend
  3926  060B  083D               	movf	divisor_dec@b+1,w
  3927  060C  1C03               	skipc
  3928  060D  033D               	decf	divisor_dec@b+1,w
  3929  060E  00F6               	movwf	___awdiv@dividend+1
  3930  060F  120A  118A  2450  120A  118A  	fcall	___awdiv
  3931  0614  0874               	movf	?___awdiv+1,w
  3932  0615  1283               	bcf	3,5	;RP0=0, select bank0
  3933  0616  1303               	bcf	3,6	;RP1=0, select bank0
  3934  0617  00BD               	movwf	divisor_dec@b+1
  3935  0618  0873               	movf	?___awdiv,w
  3936  0619  00BC               	movwf	divisor_dec@b
  3937  061A                     l2656:
  3938                           
  3939                           ;Maestro I2C.c: 269:     }
  3940  061A  3001               	movlw	1
  3941  061B  07C1               	addwf	divisor_dec@n,f
  3942  061C  1803               	skipnc
  3943  061D  0AC2               	incf	divisor_dec@n+1,f
  3944  061E  3000               	movlw	0
  3945  061F  07C2               	addwf	divisor_dec@n+1,f
  3946  0620                     l2658:
  3947  0620  0842               	movf	divisor_dec@n+1,w
  3948  0621  3A80               	xorlw	128
  3949  0622  00FF               	movwf	btemp+1
  3950  0623  3080               	movlw	128
  3951  0624  027F               	subwf	btemp+1,w
  3952  0625  1D03               	skipz
  3953  0626  2E29               	goto	u1865
  3954  0627  3003               	movlw	3
  3955  0628  0241               	subwf	divisor_dec@n,w
  3956  0629                     u1865:
  3957  0629  1C03               	skipc
  3958  062A  2E2C               	goto	u1861
  3959  062B  2E2D               	goto	u1860
  3960  062C                     u1861:
  3961  062C  2DE5               	goto	l2654
  3962  062D                     u1860:
  3963  062D                     l149:
  3964  062D  0008               	return
  3965  062E                     __end_of_divisor_dec:
  3966                           
  3967                           	psect	text16
  3968  0586                     __ptext16:	
  3969 ;; *************** function ___awmod *****************
  3970 ;; Defined at:
  3971 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;  divisor         2    3[COMMON] int 
  3974 ;;  dividend        2    5[COMMON] int 
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;  sign            1    1[BANK0 ] unsigned char 
  3977 ;;  counter         1    0[BANK0 ] unsigned char 
  3978 ;; Return value:  Size  Location     Type
  3979 ;;                  2    3[COMMON] int 
  3980 ;; Registers used:
  3981 ;;		wreg, status,2, status,0
  3982 ;; Tracked objects:
  3983 ;;		On entry : 0/0
  3984 ;;		On exit  : 0/0
  3985 ;;		Unchanged: 0/0
  3986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3987 ;;      Params:         4       0       0       0       0
  3988 ;;      Locals:         0       2       0       0       0
  3989 ;;      Temps:          1       0       0       0       0
  3990 ;;      Totals:         5       2       0       0       0
  3991 ;;Total ram usage:        7 bytes
  3992 ;; Hardware stack levels used: 1
  3993 ;; Hardware stack levels required when called: 1
  3994 ;; This function calls:
  3995 ;;		Nothing
  3996 ;; This function is called by:
  3997 ;;		_divisor_dec
  3998 ;; This function uses a non-reentrant model
  3999 ;;
  4000                           
  4001                           
  4002                           ;psect for function ___awmod
  4003  0586                     ___awmod:
  4004  0586                     l2576:	
  4005                           ;incstack = 0
  4006                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4007                           
  4008  0586  1283               	bcf	3,5	;RP0=0, select bank0
  4009  0587  1303               	bcf	3,6	;RP1=0, select bank0
  4010  0588  01B9               	clrf	___awmod@sign
  4011  0589                     l2578:
  4012  0589  1FF6               	btfss	___awmod@dividend+1,7
  4013  058A  2D8C               	goto	u1771
  4014  058B  2D8D               	goto	u1770
  4015  058C                     u1771:
  4016  058C  2D94               	goto	l2584
  4017  058D                     u1770:
  4018  058D                     l2580:
  4019  058D  09F5               	comf	___awmod@dividend,f
  4020  058E  09F6               	comf	___awmod@dividend+1,f
  4021  058F  0AF5               	incf	___awmod@dividend,f
  4022  0590  1903               	skipnz
  4023  0591  0AF6               	incf	___awmod@dividend+1,f
  4024  0592                     l2582:
  4025  0592  01B9               	clrf	___awmod@sign
  4026  0593  0AB9               	incf	___awmod@sign,f
  4027  0594                     l2584:
  4028  0594  1FF4               	btfss	___awmod@divisor+1,7
  4029  0595  2D97               	goto	u1781
  4030  0596  2D98               	goto	u1780
  4031  0597                     u1781:
  4032  0597  2D9D               	goto	l2588
  4033  0598                     u1780:
  4034  0598                     l2586:
  4035  0598  09F3               	comf	___awmod@divisor,f
  4036  0599  09F4               	comf	___awmod@divisor+1,f
  4037  059A  0AF3               	incf	___awmod@divisor,f
  4038  059B  1903               	skipnz
  4039  059C  0AF4               	incf	___awmod@divisor+1,f
  4040  059D                     l2588:
  4041  059D  0873               	movf	___awmod@divisor,w
  4042  059E  0474               	iorwf	___awmod@divisor+1,w
  4043  059F  1903               	btfsc	3,2
  4044  05A0  2DA2               	goto	u1791
  4045  05A1  2DA3               	goto	u1790
  4046  05A2                     u1791:
  4047  05A2  2DD2               	goto	l2606
  4048  05A3                     u1790:
  4049  05A3                     l2590:
  4050  05A3  01B8               	clrf	___awmod@counter
  4051  05A4  0AB8               	incf	___awmod@counter,f
  4052  05A5  2DB1               	goto	l2596
  4053  05A6                     l2592:
  4054  05A6  3001               	movlw	1
  4055  05A7                     u1805:
  4056  05A7  1003               	clrc
  4057  05A8  0DF3               	rlf	___awmod@divisor,f
  4058  05A9  0DF4               	rlf	___awmod@divisor+1,f
  4059  05AA  3EFF               	addlw	-1
  4060  05AB  1D03               	skipz
  4061  05AC  2DA7               	goto	u1805
  4062  05AD                     l2594:
  4063  05AD  3001               	movlw	1
  4064  05AE  00F7               	movwf	??___awmod
  4065  05AF  0877               	movf	??___awmod,w
  4066  05B0  07B8               	addwf	___awmod@counter,f
  4067  05B1                     l2596:
  4068  05B1  1FF4               	btfss	___awmod@divisor+1,7
  4069  05B2  2DB4               	goto	u1811
  4070  05B3  2DB5               	goto	u1810
  4071  05B4                     u1811:
  4072  05B4  2DA6               	goto	l2592
  4073  05B5                     u1810:
  4074  05B5                     l2598:
  4075  05B5  0874               	movf	___awmod@divisor+1,w
  4076  05B6  0276               	subwf	___awmod@dividend+1,w
  4077  05B7  1D03               	skipz
  4078  05B8  2DBB               	goto	u1825
  4079  05B9  0873               	movf	___awmod@divisor,w
  4080  05BA  0275               	subwf	___awmod@dividend,w
  4081  05BB                     u1825:
  4082  05BB  1C03               	skipc
  4083  05BC  2DBE               	goto	u1821
  4084  05BD  2DBF               	goto	u1820
  4085  05BE                     u1821:
  4086  05BE  2DC5               	goto	l2602
  4087  05BF                     u1820:
  4088  05BF                     l2600:
  4089  05BF  0873               	movf	___awmod@divisor,w
  4090  05C0  02F5               	subwf	___awmod@dividend,f
  4091  05C1  0874               	movf	___awmod@divisor+1,w
  4092  05C2  1C03               	skipc
  4093  05C3  03F6               	decf	___awmod@dividend+1,f
  4094  05C4  02F6               	subwf	___awmod@dividend+1,f
  4095  05C5                     l2602:
  4096  05C5  3001               	movlw	1
  4097  05C6                     u1835:
  4098  05C6  1003               	clrc
  4099  05C7  0CF4               	rrf	___awmod@divisor+1,f
  4100  05C8  0CF3               	rrf	___awmod@divisor,f
  4101  05C9  3EFF               	addlw	-1
  4102  05CA  1D03               	skipz
  4103  05CB  2DC6               	goto	u1835
  4104  05CC                     l2604:
  4105  05CC  3001               	movlw	1
  4106  05CD  02B8               	subwf	___awmod@counter,f
  4107  05CE  1D03               	btfss	3,2
  4108  05CF  2DD1               	goto	u1841
  4109  05D0  2DD2               	goto	u1840
  4110  05D1                     u1841:
  4111  05D1  2DB5               	goto	l2598
  4112  05D2                     u1840:
  4113  05D2                     l2606:
  4114  05D2  0839               	movf	___awmod@sign,w
  4115  05D3  1903               	btfsc	3,2
  4116  05D4  2DD6               	goto	u1851
  4117  05D5  2DD7               	goto	u1850
  4118  05D6                     u1851:
  4119  05D6  2DDC               	goto	l2610
  4120  05D7                     u1850:
  4121  05D7                     l2608:
  4122  05D7  09F5               	comf	___awmod@dividend,f
  4123  05D8  09F6               	comf	___awmod@dividend+1,f
  4124  05D9  0AF5               	incf	___awmod@dividend,f
  4125  05DA  1903               	skipnz
  4126  05DB  0AF6               	incf	___awmod@dividend+1,f
  4127  05DC                     l2610:
  4128  05DC  0876               	movf	___awmod@dividend+1,w
  4129  05DD  00F4               	movwf	?___awmod+1
  4130  05DE  0875               	movf	___awmod@dividend,w
  4131  05DF  00F3               	movwf	?___awmod
  4132  05E0                     l654:
  4133  05E0  0008               	return
  4134  05E1                     __end_of___awmod:
  4135                           
  4136                           	psect	text17
  4137  0450                     __ptext17:	
  4138 ;; *************** function ___awdiv *****************
  4139 ;; Defined at:
  4140 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;  divisor         2    3[COMMON] int 
  4143 ;;  dividend        2    5[COMMON] int 
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;  quotient        2    2[BANK0 ] int 
  4146 ;;  sign            1    1[BANK0 ] unsigned char 
  4147 ;;  counter         1    0[BANK0 ] unsigned char 
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  2    3[COMMON] int 
  4150 ;; Registers used:
  4151 ;;		wreg, status,2, status,0
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4157 ;;      Params:         4       0       0       0       0
  4158 ;;      Locals:         0       4       0       0       0
  4159 ;;      Temps:          1       0       0       0       0
  4160 ;;      Totals:         5       4       0       0       0
  4161 ;;Total ram usage:        9 bytes
  4162 ;; Hardware stack levels used: 1
  4163 ;; Hardware stack levels required when called: 1
  4164 ;; This function calls:
  4165 ;;		Nothing
  4166 ;; This function is called by:
  4167 ;;		_divisor_dec
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171                           
  4172                           ;psect for function ___awdiv
  4173  0450                     ___awdiv:
  4174  0450                     l2046:	
  4175                           ;incstack = 0
  4176                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4177                           
  4178  0450  1283               	bcf	3,5	;RP0=0, select bank0
  4179  0451  1303               	bcf	3,6	;RP1=0, select bank0
  4180  0452  01B9               	clrf	___awdiv@sign
  4181  0453                     l2048:
  4182  0453  1FF4               	btfss	___awdiv@divisor+1,7
  4183  0454  2C56               	goto	u1251
  4184  0455  2C57               	goto	u1250
  4185  0456                     u1251:
  4186  0456  2C5E               	goto	l2054
  4187  0457                     u1250:
  4188  0457                     l2050:
  4189  0457  09F3               	comf	___awdiv@divisor,f
  4190  0458  09F4               	comf	___awdiv@divisor+1,f
  4191  0459  0AF3               	incf	___awdiv@divisor,f
  4192  045A  1903               	skipnz
  4193  045B  0AF4               	incf	___awdiv@divisor+1,f
  4194  045C                     l2052:
  4195  045C  01B9               	clrf	___awdiv@sign
  4196  045D  0AB9               	incf	___awdiv@sign,f
  4197  045E                     l2054:
  4198  045E  1FF6               	btfss	___awdiv@dividend+1,7
  4199  045F  2C61               	goto	u1261
  4200  0460  2C62               	goto	u1260
  4201  0461                     u1261:
  4202  0461  2C6B               	goto	l2060
  4203  0462                     u1260:
  4204  0462                     l2056:
  4205  0462  09F5               	comf	___awdiv@dividend,f
  4206  0463  09F6               	comf	___awdiv@dividend+1,f
  4207  0464  0AF5               	incf	___awdiv@dividend,f
  4208  0465  1903               	skipnz
  4209  0466  0AF6               	incf	___awdiv@dividend+1,f
  4210  0467                     l2058:
  4211  0467  3001               	movlw	1
  4212  0468  00F7               	movwf	??___awdiv
  4213  0469  0877               	movf	??___awdiv,w
  4214  046A  06B9               	xorwf	___awdiv@sign,f
  4215  046B                     l2060:
  4216  046B  01BA               	clrf	___awdiv@quotient
  4217  046C  01BB               	clrf	___awdiv@quotient+1
  4218  046D                     l2062:
  4219  046D  0873               	movf	___awdiv@divisor,w
  4220  046E  0474               	iorwf	___awdiv@divisor+1,w
  4221  046F  1903               	btfsc	3,2
  4222  0470  2C72               	goto	u1271
  4223  0471  2C73               	goto	u1270
  4224  0472                     u1271:
  4225  0472  2CAA               	goto	l2082
  4226  0473                     u1270:
  4227  0473                     l2064:
  4228  0473  01B8               	clrf	___awdiv@counter
  4229  0474  0AB8               	incf	___awdiv@counter,f
  4230  0475  2C81               	goto	l2070
  4231  0476                     l2066:
  4232  0476  3001               	movlw	1
  4233  0477                     u1285:
  4234  0477  1003               	clrc
  4235  0478  0DF3               	rlf	___awdiv@divisor,f
  4236  0479  0DF4               	rlf	___awdiv@divisor+1,f
  4237  047A  3EFF               	addlw	-1
  4238  047B  1D03               	skipz
  4239  047C  2C77               	goto	u1285
  4240  047D                     l2068:
  4241  047D  3001               	movlw	1
  4242  047E  00F7               	movwf	??___awdiv
  4243  047F  0877               	movf	??___awdiv,w
  4244  0480  07B8               	addwf	___awdiv@counter,f
  4245  0481                     l2070:
  4246  0481  1FF4               	btfss	___awdiv@divisor+1,7
  4247  0482  2C84               	goto	u1291
  4248  0483  2C85               	goto	u1290
  4249  0484                     u1291:
  4250  0484  2C76               	goto	l2066
  4251  0485                     u1290:
  4252  0485                     l2072:
  4253  0485  3001               	movlw	1
  4254  0486                     u1305:
  4255  0486  1003               	clrc
  4256  0487  0DBA               	rlf	___awdiv@quotient,f
  4257  0488  0DBB               	rlf	___awdiv@quotient+1,f
  4258  0489  3EFF               	addlw	-1
  4259  048A  1D03               	skipz
  4260  048B  2C86               	goto	u1305
  4261  048C  0874               	movf	___awdiv@divisor+1,w
  4262  048D  0276               	subwf	___awdiv@dividend+1,w
  4263  048E  1D03               	skipz
  4264  048F  2C92               	goto	u1315
  4265  0490  0873               	movf	___awdiv@divisor,w
  4266  0491  0275               	subwf	___awdiv@dividend,w
  4267  0492                     u1315:
  4268  0492  1C03               	skipc
  4269  0493  2C95               	goto	u1311
  4270  0494  2C96               	goto	u1310
  4271  0495                     u1311:
  4272  0495  2C9D               	goto	l2078
  4273  0496                     u1310:
  4274  0496                     l2074:
  4275  0496  0873               	movf	___awdiv@divisor,w
  4276  0497  02F5               	subwf	___awdiv@dividend,f
  4277  0498  0874               	movf	___awdiv@divisor+1,w
  4278  0499  1C03               	skipc
  4279  049A  03F6               	decf	___awdiv@dividend+1,f
  4280  049B  02F6               	subwf	___awdiv@dividend+1,f
  4281  049C                     l2076:
  4282  049C  143A               	bsf	___awdiv@quotient,0
  4283  049D                     l2078:
  4284  049D  3001               	movlw	1
  4285  049E                     u1325:
  4286  049E  1003               	clrc
  4287  049F  0CF4               	rrf	___awdiv@divisor+1,f
  4288  04A0  0CF3               	rrf	___awdiv@divisor,f
  4289  04A1  3EFF               	addlw	-1
  4290  04A2  1D03               	skipz
  4291  04A3  2C9E               	goto	u1325
  4292  04A4                     l2080:
  4293  04A4  3001               	movlw	1
  4294  04A5  02B8               	subwf	___awdiv@counter,f
  4295  04A6  1D03               	btfss	3,2
  4296  04A7  2CA9               	goto	u1331
  4297  04A8  2CAA               	goto	u1330
  4298  04A9                     u1331:
  4299  04A9  2C85               	goto	l2072
  4300  04AA                     u1330:
  4301  04AA                     l2082:
  4302  04AA  0839               	movf	___awdiv@sign,w
  4303  04AB  1903               	btfsc	3,2
  4304  04AC  2CAE               	goto	u1341
  4305  04AD  2CAF               	goto	u1340
  4306  04AE                     u1341:
  4307  04AE  2CB4               	goto	l2086
  4308  04AF                     u1340:
  4309  04AF                     l2084:
  4310  04AF  09BA               	comf	___awdiv@quotient,f
  4311  04B0  09BB               	comf	___awdiv@quotient+1,f
  4312  04B1  0ABA               	incf	___awdiv@quotient,f
  4313  04B2  1903               	skipnz
  4314  04B3  0ABB               	incf	___awdiv@quotient+1,f
  4315  04B4                     l2086:
  4316  04B4  083B               	movf	___awdiv@quotient+1,w
  4317  04B5  00F4               	movwf	?___awdiv+1
  4318  04B6  083A               	movf	___awdiv@quotient,w
  4319  04B7  00F3               	movwf	?___awdiv
  4320  04B8                     l641:
  4321  04B8  0008               	return
  4322  04B9                     __end_of___awdiv:
  4323                           
  4324                           	psect	text18
  4325  0FD1                     __ptext18:	
  4326 ;; *************** function _UART_Write *****************
  4327 ;; Defined at:
  4328 ;;		line 82 in file "UART.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  data            1    wreg     unsigned char 
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;  data            1    3[COMMON] unsigned char 
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  1    wreg      void 
  4335 ;; Registers used:
  4336 ;;		wreg
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4342 ;;      Params:         0       0       0       0       0
  4343 ;;      Locals:         1       0       0       0       0
  4344 ;;      Temps:          0       0       0       0       0
  4345 ;;      Totals:         1       0       0       0       0
  4346 ;;Total ram usage:        1 bytes
  4347 ;; Hardware stack levels used: 1
  4348 ;; Hardware stack levels required when called: 1
  4349 ;; This function calls:
  4350 ;;		Nothing
  4351 ;; This function is called by:
  4352 ;;		_main
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           
  4357                           ;psect for function _UART_Write
  4358  0FD1                     _UART_Write:
  4359                           
  4360                           ;incstack = 0
  4361                           ; Regs used in _UART_Write: [wreg]
  4362                           ;UART_Write@data stored from wreg
  4363  0FD1  00F3               	movwf	UART_Write@data
  4364  0FD2                     l2178:
  4365  0FD2                     l327:	
  4366                           ;UART.c: 83:   while(!TXIF);
  4367                           
  4368  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  4369  0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  4370  0FD4  1E0C               	btfss	12,4	;volatile
  4371  0FD5  2FD7               	goto	u1451
  4372  0FD6  2FD8               	goto	u1450
  4373  0FD7                     u1451:
  4374  0FD7  2FD2               	goto	l327
  4375  0FD8                     u1450:
  4376  0FD8                     l2180:
  4377                           
  4378                           ;UART.c: 84:   TXREG = data;
  4379  0FD8  0873               	movf	UART_Write@data,w
  4380  0FD9  0099               	movwf	25	;volatile
  4381  0FDA                     l330:
  4382  0FDA  0008               	return
  4383  0FDB                     __end_of_UART_Write:
  4384                           
  4385                           	psect	text19
  4386  076C                     __ptext19:	
  4387 ;; *************** function _I2CMasterRead *****************
  4388 ;; Defined at:
  4389 ;;		line 116 in file "I2C.c"
  4390 ;; Parameters:    Size  Location     Type
  4391 ;;  ACK             1    wreg     enum E1309
  4392 ;; Auto vars:     Size  Location     Type
  4393 ;;  ACK             1    4[COMMON] enum E1309
  4394 ;;  Datos           1    5[COMMON] unsigned char 
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  1    wreg      unsigned char 
  4397 ;; Registers used:
  4398 ;;		wreg, status,2, status,0, pclath, cstack
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4404 ;;      Params:         0       0       0       0       0
  4405 ;;      Locals:         2       0       0       0       0
  4406 ;;      Temps:          1       0       0       0       0
  4407 ;;      Totals:         3       0       0       0       0
  4408 ;;Total ram usage:        3 bytes
  4409 ;; Hardware stack levels used: 1
  4410 ;; Hardware stack levels required when called: 2
  4411 ;; This function calls:
  4412 ;;		_I2CMasterCheck
  4413 ;; This function is called by:
  4414 ;;		_main
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418                           
  4419                           ;psect for function _I2CMasterRead
  4420  076C                     _I2CMasterRead:
  4421                           
  4422                           ;incstack = 0
  4423                           ; Regs used in _I2CMasterRead: [wreg+status,2+status,0+pclath+cstack]
  4424                           ;I2CMasterRead@ACK stored from wreg
  4425  076C  00F4               	movwf	I2CMasterRead@ACK
  4426  076D                     l2162:
  4427                           
  4428                           ;I2C.c: 117:     char Datos;;I2C.c: 118:     I2CMasterCheck();
  4429  076D  120A  118A  26F3  120A  118A  	fcall	_I2CMasterCheck
  4430  0772                     l2164:
  4431                           
  4432                           ;I2C.c: 119:     SSPCON2bits.RCEN = 1;
  4433  0772  1683               	bsf	3,5	;RP0=1, select bank1
  4434  0773  1303               	bcf	3,6	;RP1=0, select bank1
  4435  0774  1591               	bsf	17,3	;volatile
  4436                           
  4437                           ;I2C.c: 120:     I2CMasterCheck();
  4438  0775  120A  118A  26F3  120A  118A  	fcall	_I2CMasterCheck
  4439  077A                     l2166:
  4440                           
  4441                           ;I2C.c: 121:     Datos = SSPBUF;
  4442  077A  1283               	bcf	3,5	;RP0=0, select bank0
  4443  077B  1303               	bcf	3,6	;RP1=0, select bank0
  4444  077C  0813               	movf	19,w	;volatile
  4445  077D  00F3               	movwf	??_I2CMasterRead
  4446  077E  0873               	movf	??_I2CMasterRead,w
  4447  077F  00F5               	movwf	I2CMasterRead@Datos
  4448  0780                     l2168:
  4449                           
  4450                           ;I2C.c: 122:     I2CMasterCheck();
  4451  0780  120A  118A  26F3  120A  118A  	fcall	_I2CMasterCheck
  4452  0785                     l2170:
  4453                           
  4454                           ;I2C.c: 123:     if (ACK == 0) {
  4455  0785  0874               	movf	I2CMasterRead@ACK,w
  4456  0786  1D03               	btfss	3,2
  4457  0787  2F89               	goto	u1441
  4458  0788  2F8A               	goto	u1440
  4459  0789                     u1441:
  4460  0789  2F8E               	goto	l231
  4461  078A                     u1440:
  4462  078A                     l2172:
  4463                           
  4464                           ;I2C.c: 124:       SSPCON2bits.ACKDT = 0;
  4465  078A  1683               	bsf	3,5	;RP0=1, select bank1
  4466  078B  1303               	bcf	3,6	;RP1=0, select bank1
  4467  078C  1291               	bcf	17,5	;volatile
  4468                           
  4469                           ;I2C.c: 125:     }
  4470  078D  2F91               	goto	l232
  4471  078E                     l231:	
  4472                           ;I2C.c: 126:     else {
  4473                           
  4474                           
  4475                           ;I2C.c: 127:       SSPCON2bits.ACKDT = 1;
  4476  078E  1683               	bsf	3,5	;RP0=1, select bank1
  4477  078F  1303               	bcf	3,6	;RP1=0, select bank1
  4478  0790  1691               	bsf	17,5	;volatile
  4479  0791                     l232:	
  4480                           ;I2C.c: 128:     }
  4481                           
  4482                           
  4483                           ;I2C.c: 129:     SSPCON2bits.ACKEN = 1;
  4484  0791  1611               	bsf	17,4	;volatile
  4485  0792                     l2174:
  4486                           
  4487                           ;I2C.c: 130:     return Datos;
  4488  0792  0875               	movf	I2CMasterRead@Datos,w
  4489  0793                     l233:
  4490  0793  0008               	return
  4491  0794                     __end_of_I2CMasterRead:
  4492                           
  4493                           	psect	text20
  4494  06F3                     __ptext20:	
  4495 ;; *************** function _I2CMasterCheck *****************
  4496 ;; Defined at:
  4497 ;;		line 91 in file "I2C.c"
  4498 ;; Parameters:    Size  Location     Type
  4499 ;;		None
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;		None
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  1    wreg      void 
  4504 ;; Registers used:
  4505 ;;		wreg, status,2
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4511 ;;      Params:         0       0       0       0       0
  4512 ;;      Locals:         0       0       0       0       0
  4513 ;;      Temps:          0       0       0       0       0
  4514 ;;      Totals:         0       0       0       0       0
  4515 ;;Total ram usage:        0 bytes
  4516 ;; Hardware stack levels used: 1
  4517 ;; Hardware stack levels required when called: 1
  4518 ;; This function calls:
  4519 ;;		Nothing
  4520 ;; This function is called by:
  4521 ;;		_I2C_Master_Start
  4522 ;;		_I2CMasterStop
  4523 ;;		_I2CMasterWrite
  4524 ;;		_I2CMasterRead
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527                           
  4528                           
  4529                           ;psect for function _I2CMasterCheck
  4530  06F3                     _I2CMasterCheck:
  4531  06F3                     l1728:	
  4532                           ;incstack = 0
  4533                           ; Regs used in _I2CMasterCheck: [wreg+status,2]
  4534                           
  4535  06F3                     l214:	
  4536                           ;I2C.c: 92:     while((SSPSTAT & 0x04)|| (SSPCON2 & 0x1F));
  4537                           
  4538  06F3  1683               	bsf	3,5	;RP0=1, select bank1
  4539  06F4  1303               	bcf	3,6	;RP1=0, select bank1
  4540  06F5  1914               	btfsc	20,2	;volatile
  4541  06F6  2EF8               	goto	u771
  4542  06F7  2EF9               	goto	u770
  4543  06F8                     u771:
  4544  06F8  2EF3               	goto	l214
  4545  06F9                     u770:
  4546  06F9                     l1730:
  4547  06F9  0811               	movf	17,w	;volatile
  4548  06FA  391F               	andlw	31
  4549  06FB  1D03               	btfss	3,2
  4550  06FC  2EFE               	goto	u781
  4551  06FD  2EFF               	goto	u780
  4552  06FE                     u781:
  4553  06FE  2EF3               	goto	l214
  4554  06FF                     u780:
  4555  06FF                     l217:
  4556  06FF  0008               	return
  4557  0700                     __end_of_I2CMasterCheck:
  4558                           
  4559                           	psect	text21
  4560  0FE6                     __ptext21:	
  4561 ;; *************** function _Escribir_caracterLCD *****************
  4562 ;; Defined at:
  4563 ;;		line 63 in file "LCD.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;  a               1    wreg     unsigned char 
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;  a               1    5[COMMON] unsigned char 
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  1    wreg      void 
  4570 ;; Registers used:
  4571 ;;		wreg, status,2, status,0, pclath, cstack
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4577 ;;      Params:         0       0       0       0       0
  4578 ;;      Locals:         1       0       0       0       0
  4579 ;;      Temps:          0       0       0       0       0
  4580 ;;      Totals:         1       0       0       0       0
  4581 ;;Total ram usage:        1 bytes
  4582 ;; Hardware stack levels used: 1
  4583 ;; Hardware stack levels required when called: 3
  4584 ;; This function calls:
  4585 ;;		_Escribir_comandoLCD
  4586 ;; This function is called by:
  4587 ;;		_main
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           
  4592                           ;psect for function _Escribir_caracterLCD
  4593  0FE6                     _Escribir_caracterLCD:
  4594                           
  4595                           ;incstack = 0
  4596                           ; Regs used in _Escribir_caracterLCD: [wreg+status,2+status,0+pclath+cstack]
  4597                           ;Escribir_caracterLCD@a stored from wreg
  4598  0FE6  00F5               	movwf	Escribir_caracterLCD@a
  4599  0FE7                     l2660:
  4600                           
  4601                           ;LCD.c: 64:     PORTDbits.RD3 = 1; PORTDbits.RD4 = 0;
  4602  0FE7  1283               	bcf	3,5	;RP0=0, select bank0
  4603  0FE8  1303               	bcf	3,6	;RP1=0, select bank0
  4604  0FE9  1588               	bsf	8,3	;volatile
  4605  0FEA  1208               	bcf	8,4	;volatile
  4606  0FEB                     l2662:
  4607                           
  4608                           ;LCD.c: 66:     Escribir_comandoLCD(a);
  4609  0FEB  0875               	movf	Escribir_caracterLCD@a,w
  4610  0FEC  120A  118A  2671  120A  158A  	fcall	_Escribir_comandoLCD
  4611  0FF1                     l273:
  4612  0FF1  0008               	return
  4613  0FF2                     __end_of_Escribir_caracterLCD:
  4614                           
  4615                           	psect	text22
  4616  0671                     __ptext22:	
  4617 ;; *************** function _Escribir_comandoLCD *****************
  4618 ;; Defined at:
  4619 ;;		line 17 in file "LCD.c"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;  Comando         1    wreg     unsigned char 
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;  Comando         1    4[COMMON] unsigned char 
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  1    wreg      void 
  4626 ;; Registers used:
  4627 ;;		wreg, status,2, status,0, pclath, cstack
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4633 ;;      Params:         0       0       0       0       0
  4634 ;;      Locals:         1       0       0       0       0
  4635 ;;      Temps:          0       0       0       0       0
  4636 ;;      Totals:         1       0       0       0       0
  4637 ;;Total ram usage:        1 bytes
  4638 ;; Hardware stack levels used: 1
  4639 ;; Hardware stack levels required when called: 2
  4640 ;; This function calls:
  4641 ;;		_prender_ELCD
  4642 ;; This function is called by:
  4643 ;;		_Iniciar_LCD
  4644 ;;		_Escribir_stringLCD
  4645 ;;		_Escribir_caracterLCD
  4646 ;;		_Limpiar_pantallaLCD
  4647 ;;		_set_cursor
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651                           
  4652                           ;psect for function _Escribir_comandoLCD
  4653  0671                     _Escribir_comandoLCD:
  4654                           
  4655                           ;incstack = 0
  4656                           ; Regs used in _Escribir_comandoLCD: [wreg+status,2+status,0+pclath+cstack]
  4657                           ;Escribir_comandoLCD@Comando stored from wreg
  4658  0671  00F4               	movwf	Escribir_comandoLCD@Comando
  4659  0672                     l2416:
  4660                           
  4661                           ;LCD.c: 18:     if((Comando & 0b00000001) == 0b00000001){PORTDbits.RD6 = 1;} else {PORTD
      +                          bits.RD6 = 0;}
  4662  0672  1C74               	btfss	Escribir_comandoLCD@Comando,0
  4663  0673  2E75               	goto	u1491
  4664  0674  2E76               	goto	u1490
  4665  0675                     u1491:
  4666  0675  2E7A               	goto	l245
  4667  0676                     u1490:
  4668  0676                     l2418:
  4669  0676  1283               	bcf	3,5	;RP0=0, select bank0
  4670  0677  1303               	bcf	3,6	;RP1=0, select bank0
  4671  0678  1708               	bsf	8,6	;volatile
  4672  0679  2E7D               	goto	l246
  4673  067A                     l245:
  4674  067A  1283               	bcf	3,5	;RP0=0, select bank0
  4675  067B  1303               	bcf	3,6	;RP1=0, select bank0
  4676  067C  1308               	bcf	8,6	;volatile
  4677  067D                     l246:
  4678                           
  4679                           ;LCD.c: 19:     if((Comando & 0b00000010) == 0b00000010){PORTDbits.RD7 = 1;} else {PORTD
      +                          bits.RD7 = 0;}
  4680  067D  1CF4               	btfss	Escribir_comandoLCD@Comando,1
  4681  067E  2E80               	goto	u1501
  4682  067F  2E81               	goto	u1500
  4683  0680                     u1501:
  4684  0680  2E83               	goto	l247
  4685  0681                     u1500:
  4686  0681                     l2420:
  4687  0681  1788               	bsf	8,7	;volatile
  4688  0682  2E84               	goto	l248
  4689  0683                     l247:
  4690  0683  1388               	bcf	8,7	;volatile
  4691  0684                     l248:
  4692                           
  4693                           ;LCD.c: 20:     if((Comando & 0b00000100) == 0b00000100){PORTBbits.RB0 = 1;} else {PORTB
      +                          bits.RB0 = 0;}
  4694  0684  1D74               	btfss	Escribir_comandoLCD@Comando,2
  4695  0685  2E87               	goto	u1511
  4696  0686  2E88               	goto	u1510
  4697  0687                     u1511:
  4698  0687  2E8A               	goto	l249
  4699  0688                     u1510:
  4700  0688                     l2422:
  4701  0688  1406               	bsf	6,0	;volatile
  4702  0689  2E8B               	goto	l250
  4703  068A                     l249:
  4704  068A  1006               	bcf	6,0	;volatile
  4705  068B                     l250:
  4706                           
  4707                           ;LCD.c: 21:     if((Comando & 0b00001000) == 0b00001000){PORTBbits.RB1 = 1;} else {PORTB
      +                          bits.RB1 = 0;}
  4708  068B  1DF4               	btfss	Escribir_comandoLCD@Comando,3
  4709  068C  2E8E               	goto	u1521
  4710  068D  2E8F               	goto	u1520
  4711  068E                     u1521:
  4712  068E  2E91               	goto	l251
  4713  068F                     u1520:
  4714  068F                     l2424:
  4715  068F  1486               	bsf	6,1	;volatile
  4716  0690  2E92               	goto	l252
  4717  0691                     l251:
  4718  0691  1086               	bcf	6,1	;volatile
  4719  0692                     l252:
  4720                           
  4721                           ;LCD.c: 22:     if((Comando & 0b00010000) == 0b00010000){PORTBbits.RB2 = 1;} else {PORTB
      +                          bits.RB2 = 0;}
  4722  0692  1E74               	btfss	Escribir_comandoLCD@Comando,4
  4723  0693  2E95               	goto	u1531
  4724  0694  2E96               	goto	u1530
  4725  0695                     u1531:
  4726  0695  2E98               	goto	l253
  4727  0696                     u1530:
  4728  0696                     l2426:
  4729  0696  1506               	bsf	6,2	;volatile
  4730  0697  2E99               	goto	l254
  4731  0698                     l253:
  4732  0698  1106               	bcf	6,2	;volatile
  4733  0699                     l254:
  4734                           
  4735                           ;LCD.c: 23:     if((Comando & 0b00100000) == 0b00100000){PORTBbits.RB3 = 1;} else {PORTB
      +                          bits.RB3 = 0;}
  4736  0699  1EF4               	btfss	Escribir_comandoLCD@Comando,5
  4737  069A  2E9C               	goto	u1541
  4738  069B  2E9D               	goto	u1540
  4739  069C                     u1541:
  4740  069C  2E9F               	goto	l255
  4741  069D                     u1540:
  4742  069D                     l2428:
  4743  069D  1586               	bsf	6,3	;volatile
  4744  069E  2EA0               	goto	l256
  4745  069F                     l255:
  4746  069F  1186               	bcf	6,3	;volatile
  4747  06A0                     l256:
  4748                           
  4749                           ;LCD.c: 24:     if((Comando & 0b01000000) == 0b01000000){PORTBbits.RB4 = 1;} else {PORTB
      +                          bits.RB4 = 0;}
  4750  06A0  1F74               	btfss	Escribir_comandoLCD@Comando,6
  4751  06A1  2EA3               	goto	u1551
  4752  06A2  2EA4               	goto	u1550
  4753  06A3                     u1551:
  4754  06A3  2EA6               	goto	l257
  4755  06A4                     u1550:
  4756  06A4                     l2430:
  4757  06A4  1606               	bsf	6,4	;volatile
  4758  06A5  2EA7               	goto	l258
  4759  06A6                     l257:
  4760  06A6  1206               	bcf	6,4	;volatile
  4761  06A7                     l258:
  4762                           
  4763                           ;LCD.c: 25:     if((Comando & 0b10000000) == 0b10000000){PORTBbits.RB5 = 1;} else {PORTB
      +                          bits.RB5 = 0;}
  4764  06A7  1FF4               	btfss	Escribir_comandoLCD@Comando,7
  4765  06A8  2EAA               	goto	u1561
  4766  06A9  2EAB               	goto	u1560
  4767  06AA                     u1561:
  4768  06AA  2EAD               	goto	l259
  4769  06AB                     u1560:
  4770  06AB                     l2432:
  4771  06AB  1686               	bsf	6,5	;volatile
  4772  06AC  2EAE               	goto	l2434
  4773  06AD                     l259:
  4774  06AD  1286               	bcf	6,5	;volatile
  4775  06AE                     l2434:
  4776                           
  4777                           ;LCD.c: 27:     prender_ELCD();
  4778  06AE  120A  158A  27F2  120A  118A  	fcall	_prender_ELCD
  4779  06B3                     l261:
  4780  06B3  0008               	return
  4781  06B4                     __end_of_Escribir_comandoLCD:
  4782                           
  4783                           	psect	text23
  4784  0FF2                     __ptext23:	
  4785 ;; *************** function _prender_ELCD *****************
  4786 ;; Defined at:
  4787 ;;		line 11 in file "LCD.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;		None
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;		None
  4792 ;; Return value:  Size  Location     Type
  4793 ;;                  1    wreg      void 
  4794 ;; Registers used:
  4795 ;;		wreg
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4801 ;;      Params:         0       0       0       0       0
  4802 ;;      Locals:         0       0       0       0       0
  4803 ;;      Temps:          1       0       0       0       0
  4804 ;;      Totals:         1       0       0       0       0
  4805 ;;Total ram usage:        1 bytes
  4806 ;; Hardware stack levels used: 1
  4807 ;; Hardware stack levels required when called: 1
  4808 ;; This function calls:
  4809 ;;		Nothing
  4810 ;; This function is called by:
  4811 ;;		_Escribir_comandoLCD
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           
  4816                           ;psect for function _prender_ELCD
  4817  0FF2                     _prender_ELCD:
  4818  0FF2                     l2410:	
  4819                           ;incstack = 0
  4820                           ; Regs used in _prender_ELCD: [wreg]
  4821                           
  4822                           
  4823                           ;LCD.c: 12:     PORTDbits.RD5 = 1;
  4824  0FF2  1283               	bcf	3,5	;RP0=0, select bank0
  4825  0FF3  1303               	bcf	3,6	;RP1=0, select bank0
  4826  0FF4  1688               	bsf	8,5	;volatile
  4827  0FF5                     l2412:
  4828                           
  4829                           ;LCD.c: 13:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  4830  0FF5  30C7               	movlw	199
  4831  0FF6  00F3               	movwf	??_prender_ELCD
  4832  0FF7                     u2037:
  4833  0FF7  2FF8               	nop2
  4834  0FF8  0BF3               	decfsz	??_prender_ELCD,f
  4835  0FF9  2FF7               	goto	u2037
  4836  0FFA  2FFB               	nop2
  4837  0FFB  2FFC               	nop2
  4838  0FFC                     l2414:
  4839                           
  4840                           ;LCD.c: 14:     PORTDbits.RD5 = 0;
  4841  0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  4842  0FFD  1303               	bcf	3,6	;RP1=0, select bank0
  4843  0FFE  1288               	bcf	8,5	;volatile
  4844  0FFF                     l242:
  4845  0FFF  0008               	return
  4846  1000                     __end_of_prender_ELCD:
  4847                           
  4848                           	psect	text24
  4849  07EE                     __ptext24:	
  4850 ;; *************** function _isr *****************
  4851 ;; Defined at:
  4852 ;;		line 106 in file "Maestro I2C.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;		None
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;		None
  4857 ;; Return value:  Size  Location     Type
  4858 ;;                  1    wreg      void 
  4859 ;; Registers used:
  4860 ;;		wreg
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4866 ;;      Params:         0       0       0       0       0
  4867 ;;      Locals:         0       0       0       0       0
  4868 ;;      Temps:          3       0       0       0       0
  4869 ;;      Totals:         3       0       0       0       0
  4870 ;;Total ram usage:        3 bytes
  4871 ;; Hardware stack levels used: 1
  4872 ;; This function calls:
  4873 ;;		Nothing
  4874 ;; This function is called by:
  4875 ;;		Interrupt level 1
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879                           
  4880                           ;psect for function _isr
  4881  07EE                     _isr:
  4882  07EE                     i1l2268:
  4883                           
  4884                           ;Maestro I2C.c: 107:     if(PIR1bits.RCIF){
  4885  07EE  1283               	bcf	3,5	;RP0=0, select bank0
  4886  07EF  1303               	bcf	3,6	;RP1=0, select bank0
  4887  07F0  1E8C               	btfss	12,5	;volatile
  4888  07F1  2FF3               	goto	u147_21
  4889  07F2  2FF4               	goto	u147_20
  4890  07F3                     u147_21:
  4891  07F3  2FF8               	goto	i1l126
  4892  07F4                     u147_20:
  4893  07F4                     i1l2270:
  4894                           
  4895                           ;Maestro I2C.c: 108:         dato = RCREG;
  4896  07F4  081A               	movf	26,w	;volatile
  4897  07F5  00F0               	movwf	??_isr
  4898  07F6  0870               	movf	??_isr,w
  4899  07F7  00D2               	movwf	_dato
  4900  07F8                     i1l126:
  4901  07F8  0872               	movf	??_isr+2,w
  4902  07F9  008A               	movwf	10
  4903  07FA  0E71               	swapf	??_isr+1,w
  4904  07FB  0083               	movwf	3
  4905  07FC  0EFE               	swapf	btemp,f
  4906  07FD  0E7E               	swapf	btemp,w
  4907  07FE  0009               	retfie
  4908  07FF                     __end_of_isr:
  4909  007E                     btemp	set	126	;btemp
  4910  007E                     wtemp0	set	126
  4911                           
  4912                           	psect	intentry
  4913  0004                     __pintentry:	
  4914                           ;incstack = 0
  4915                           ; Regs used in _isr: [wreg]
  4916                           
  4917  0004                     interrupt_function:
  4918  007E                     saved_w	set	btemp
  4919  0004  00FE               	movwf	btemp
  4920  0005  0E03               	swapf	3,w
  4921  0006  00F1               	movwf	??_isr+1
  4922  0007  080A               	movf	10,w
  4923  0008  00F2               	movwf	??_isr+2
  4924  0009  120A  118A  2FEE   	ljmp	_isr
  4925                           
  4926                           	psect	config
  4927                           
  4928                           ;Config register CONFIG1 @ 0x2007
  4929                           ;	Oscillator Selection bits
  4930                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4931                           ;	Watchdog Timer Enable bit
  4932                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4933                           ;	Power-up Timer Enable bit
  4934                           ;	PWRTE = OFF, PWRT disabled
  4935                           ;	RE3/MCLR pin function select bit
  4936                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4937                           ;	Code Protection bit
  4938                           ;	CP = OFF, Program memory code protection is disabled
  4939                           ;	Data Code Protection bit
  4940                           ;	CPD = OFF, Data memory code protection is disabled
  4941                           ;	Brown Out Reset Selection bits
  4942                           ;	BOREN = OFF, BOR disabled
  4943                           ;	Internal External Switchover bit
  4944                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4945                           ;	Fail-Safe Clock Monitor Enabled bit
  4946                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4947                           ;	Low Voltage Programming Enable bit
  4948                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4949                           ;	In-Circuit Debugger Mode bit
  4950                           ;	DEBUG = 0x1, unprogrammed default
  4951  2007                     	org	8199
  4952  2007  20D4               	dw	8404
  4953                           
  4954                           ;Config register CONFIG2 @ 0x2008
  4955                           ;	Brown-out Reset Selection bit
  4956                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4957                           ;	Flash Program Memory Self Write Enable bits
  4958                           ;	WRT = OFF, Write protection off
  4959  2008                     	org	8200
  4960  2008  3FFF               	dw	16383

Data Sizes:
    Strings     54
    Constant    0
    Data        4
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     24      52
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Escribir_stringLCD@d	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_7(CODE[13]), STR_6(CODE[15]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), STR_2(CODE[4]), STR_1(CODE[16]), 

    divisor_dec@dig1	PTR unsigned char  size(1) Largest target is 1
		 -> Giro_digy(COMMON[1]), Giro_digx(COMMON[1]), 


Critical Paths under _main in COMMON

    _main->_Escribir_stringLCD
    _main->_set_cursor
    _setup->_Escribir_stringLCD
    _setup->_InitMSSP
    _setup->_set_cursor
    _set_cursor->_Escribir_comandoLCD
    _Limpiar_pantallaLCD->_Escribir_comandoLCD
    _InitMSSP->___lldiv
    _InitMPU6050->_I2CMasterWrite
    _InitMPU6050->_I2C_Master_Start
    _Iniciar_LCD->_Escribir_comandoLCD
    _Escribir_stringLCD->_Escribir_comandoLCD
    _divisor_dec->___awdiv
    _divisor_dec->___awmod
    _Escribir_caracterLCD->_Escribir_comandoLCD
    _Escribir_comandoLCD->_prender_ELCD

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_setup
    _setup->_InitMSSP
    _InitMSSP->___lldiv
    _divisor_dec->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    7813
                                             21 BANK0      3     3      0
               _Escribir_caracterLCD
                 _Escribir_stringLCD
                      _I2CMasterRead
                      _I2CMasterStop
                     _I2CMasterWrite
                   _I2C_Master_Start
                         _UART_Write
                        _divisor_dec
                         _set_cursor
                              _setup
                     _tabla_numASCII
 ---------------------------------------------------------------------------------
 (1) _tabla_numASCII                                       3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                3     3      0    3882
                                             18 BANK0      3     3      0
                       _Config_USART
                 _Escribir_stringLCD
                        _Iniciar_LCD
                        _InitMPU6050
                           _InitMSSP
                _Limpiar_pantallaLCD
                            _initOsc
                         _set_cursor
 ---------------------------------------------------------------------------------
 (2) _set_cursor                                           4     3      1    1185
                                              5 COMMON     3     2      1
                                              0 BANK0      1     1      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      88
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Limpiar_pantallaLCD                                  2     2      0     248
                                              5 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _InitMSSP                                             9     5      4    1001
                                              4 COMMON     4     4      0
                                             13 BANK0      5     1      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     601
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _InitMPU6050                                          3     3      0      66
                                              4 COMMON     3     3      0
                      _I2CMasterStop
                     _I2CMasterWrite
                   _I2C_Master_Start
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     1     1      0      44
                                              3 COMMON     1     1      0
                     _I2CMasterCheck
 ---------------------------------------------------------------------------------
 (3) _I2CMasterWrite                                       1     1      0      22
                                              3 COMMON     1     1      0
                     _I2CMasterCheck
 ---------------------------------------------------------------------------------
 (3) _I2CMasterStop                                        0     0      0       0
                     _I2CMasterCheck
 ---------------------------------------------------------------------------------
 (2) _Iniciar_LCD                                          2     2      0     248
                                              5 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Escribir_stringLCD                                   3     3      0     630
                                              5 COMMON     3     3      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Config_USART                                         4     0      4     416
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _divisor_dec                                          7     4      3    1682
                                              4 BANK0      7     4      3
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     613
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2CMasterRead                                        3     3      0      45
                                              3 COMMON     3     3      0
                     _I2CMasterCheck
 ---------------------------------------------------------------------------------
 (4) _I2CMasterCheck                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Escribir_caracterLCD                                 1     1      0     279
                                              5 COMMON     1     1      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (3) _Escribir_comandoLCD                                  1     1      0     248
                                              4 COMMON     1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (4) _prender_ELCD                                         1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_caracterLCD
     _Escribir_comandoLCD
       _prender_ELCD
   _Escribir_stringLCD
     _Escribir_comandoLCD
   _I2CMasterRead
     _I2CMasterCheck
   _I2CMasterStop
     _I2CMasterCheck
   _I2CMasterWrite
     _I2CMasterCheck
   _I2C_Master_Start
     _I2CMasterCheck
   _UART_Write
   _divisor_dec
     ___awdiv
     ___awmod
   _set_cursor
     _Escribir_comandoLCD
   _setup
     _Config_USART
     _Escribir_stringLCD
     _Iniciar_LCD
       _Escribir_comandoLCD
     _InitMPU6050
       _I2CMasterStop
       _I2CMasterWrite
       _I2C_Master_Start
     _InitMSSP
       ___lldiv
     _Limpiar_pantallaLCD
       _Escribir_comandoLCD
     _initOsc
     _set_cursor
   _tabla_numASCII

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     18      34       5       65.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3F      12        0.0%
ABS                  0      0      3F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Mar 07 20:18:08 2022

                            pc 0002                    _SSPSTATbits 0094                             _T1 0031  
                           _T2 0030                             _UA 04A1                   ___awdiv@sign 0039  
                           fsr 0004                set_cursor@linea 0038                   ?_divisor_dec 003C  
                          l201 0210                            l211 029A                            l203 021E  
                          l221 07EA                            l214 06F3                            l222 07ED  
                          l231 078E                            l232 0791                            l208 0242  
                          l144 044F                            l217 06FF                            l233 0793  
                          l225 0FD0                            l209 0282                            l242 0FFF  
                          l250 068B                            l330 0FDA                            l154 06F2  
                          l251 0691                            l252 0692                            l324 034A  
                          l228 0FE5                            l261 06B3                            l253 0698  
                          l245 067A                            l149 062D                            l254 0699  
                          l246 067D                            l270 07B9                            l255 069F  
                          l247 0683                            l327 0FD2                            l256 06A0  
                          l248 0684                            l264 0585                            l257 06A6  
                          l249 068A                            l273 0FF1                            l258 06A7  
                          l259 06AD                            l347 03D4                            l524 0520  
                          l276 07D3                            l294 0768                            l286 0670  
                          l295 076B                            l641 04B8                            l654 05E0  
                          _CKP 00A4                            _GIE 005F                            u800 07E7  
                          u801 07E6                            _Ax1 0037                            _Ax2 0036  
                          _Ay1 0035                            _Ay2 0034                            _Az1 0033  
                          u770 06F9                            _Az2 0032                            u771 06F8  
                          u780 06FF                            u781 06FE                            u790 07DF  
                          u791 07DE                            _Gx1 0078                            _Gx2 002F  
                          _Gy1 002E                            _Gy2 002D                            _Gz1 002C  
                          _Gz2 002B                            _isr 07EE                            fsr0 0004  
                          indf 0000                   ___awmod@sign 0039                  ??_InitMPU6050 0074  
                         l2000 02E2                           l2010 02FE                           l2002 02E9  
                         l2020 031A                           l2012 0305                           l2004 02ED  
                         l2030 0335                           l2022 0321                           l2014 0309  
                         l2006 02EE                           l2040 0345                           l2032 033C  
                         l2024 0325                           l2008 02F7                           l2016 030A  
                         l2050 0457                           l2042 0346                           l2034 0340  
                         l2018 0313                           l2026 0326                           l2202 06B8  
                         l2060 046B                           l2052 045C                           l2044 0349  
                         l2028 032F                           l2036 0341                           l2220 06BE  
                         l2070 0481                           l2062 046D                           l2054 045E  
                         l2046 0450                           l2038 0344                           l2214 06BC  
                         l2080 04A4                           l2072 0485                           l2064 0473  
                         l2056 0462                           l2048 0453                           l2232 06C2  
                         l2208 06BA                           l2410 0FF2                           l2170 0785  
                         l2162 076D                           l2074 0496                           l2066 0476  
                         l2082 04AA                           l2058 0467                           l2250 06C8  
                         l2226 06C0                           l2412 0FF5                           l2420 0681  
                         l2172 078A                           l2164 0772                           l2180 0FD8  
                         l2084 04AF                           l2076 049C                           l2068 047D  
                         l2500 0200                           l2244 06C6                           l2414 0FFC  
                         l2430 06A4                           l2422 0688                           l2174 0792  
                         l2166 077A                           l2086 04B4                           l2078 049D  
                         l2502 0204                           l2510 0224                           l2238 06C4  
                         l2432 06AB                           l2424 068F                           l2416 0672  
                         l2168 0780                           l2600 05BF                           l2440 04CE  
                         l2520 024C                           l2512 022A                           l2504 020C  
                         l2434 06AE                           l2426 0696                           l2418 0676  
                         l1730 06F9                           l2178 0FD2                           l2610 05DC  
                         l2602 05C5                           l2450 0508                           l2442 04DB  
                         l2530 028D                           l2522 024D                           l2514 0234  
                         l2506 0213                           l2258 06CA                           l2194 06B5  
                         l2428 069D                           l2604 05CC                           l1740 07DA  
                         l1900 0357                           l2452 0509                           l2444 04DF  
                         l2436 04B9                           l2540 0297                           l2532 028E  
                         l2524 0251                           l2516 023C                           l2508 021B  
                         l2460 0631                           l2620 03F9                           l2196 06B6  
                         l2700 00DE                           l2606 05D2                           l2550 0543  
                         l2542 0521                           l1750 0FE1                           l1742 07DF  
                         l1910 0375                           l1902 035D                           l2454 0512  
                         l2446 04E8                           l2438 04CB                           l2534 028F  
                         l2526 0280                           l2518 0245                           l2470 064B  
                         l2462 0633                           l2630 0415                           l2622 03FE  
                         l2614 03D5                           l2710 0105                           l2702 00E9  
                         l1728 06F3                           l2608 05D7                           l2560 0569  
                         l2552 0548                           l2544 0525                           l1752 0FC8  
                         l1744 07E2                           l1920 0393                           l1912 037B  
                         l1904 0363                           l2448 04FA                           l2456 0518  
                         l2536 0290                           l2528 0287                           l1840 074E  
                         l2480 0662                           l2472 0654                           l2464 0638  
                         l2640 0447                           l2632 0421                           l2624 0403  
                         l2616 03E3                           l2720 0132                           l2712 010B  
                         l2704 00F4                           l2490 07A8                           l2562 0574  
                         l2554 0553                           l2546 052E                           l1754 0FCD  
                         l1746 07E7                           l1738 07D5                           l1930 03B1  
                         l1922 0399                           l1914 0381                           l1906 0369  
                         l2538 0293                           l2570 07BE                           l1842 0753  
                         l1834 073D                           l2482 0667                           l2466 063F  
                         l2642 044A                           l2634 0427                           l2626 0408  
                         l2618 03E9                           l2802 06D2                           l2730 0160  
                         l2722 013D                           l2714 0110                           l2706 00F9  
                         l2660 0FE7                           l2580 058D                           l2492 07AC  
                         l2484 0795                           l2564 057A                           l2556 0559  
                         l2548 0534                           l1748 0FDC                           l1940 03CF  
                         l1932 03B7                           l1924 039F                           l1916 0387  
                         l1908 036F                           l2572 07C4                           l1844 0759  
                         l1836 0743                           l2476 065A                           l2468 0645  
                         l2644 044D                           l2636 0435                           l2628 040F  
                         l2740 0191                           l2732 0167                           l2724 0148  
                         l2716 0116                           l2708 00FF                           l2662 0FEB  
                         l2590 05A3                           l2582 0592                           l2654 05E5  
                         l2486 0799                           l2558 0564                           l1934 03BD  
                         l1926 03A5                           l1918 038D                           l2494 01ED  
                         l2574 07CD                           l1846 075E                           l1838 0748  
                         l2478 0660                           l2646 044E                           l2638 043A  
                         l2750 01C4                           l2742 019C                           l2734 016F  
                         l2726 0153                           l2718 0120                           l2670 0048  
                         l2592 05A6                           l2584 0594                           l2576 0586  
                         l2656 061A                           l2648 05E1                           l2488 079B  
                         l1936 03C3                           l1928 03AB                           l2496 01EE  
                         l2568 07BA                           l1848 0763                           l2752 01CC  
                         l2744 01A7                           l2736 0177                           l2728 015A  
                         l2680 0070                           l2672 004E                           l2664 0037  
                         l2594 05AD                           l2586 0598                           l2578 0589  
                         l2658 0620                           l1938 03C9                           l2498 01F7  
                         l2746 01B2                           l2738 017F                           l2690 00A7  
                         l2682 007B                           l2674 0054                           l2666 003C  
                         l2596 05B1                           l2588 059D                           l1980 02AB  
                         l2748 01BC                           l2692 00B2                           l2684 0086  
                         l2676 005A                           l2668 0042                           l2598 05B5  
                         l1990 02C7                           l1982 02B2                           l2766 01D4  
                         l2694 00BD                           l2686 0091                           l2678 0065  
                         l1992 02CE                           l1984 02B6                           l1976 029B  
                         l2768 01E0                           l2696 00C8                           l2688 009C  
                         l1994 02D2                           l1978 02A4                           l1986 02B7  
                         l1898 034B                           l2698 00D3                           l1988 02C0  
                         l1996 02D3                           l1998 02DC                           ?_isr 0070  
                         STR_1 0706                           STR_2 0732                           STR_3 0738  
                         STR_4 0736                           STR_5 073A                           STR_6 0716  
                         STR_7 0725                           u1010 0743                           u1011 0742  
                         u1020 074E                           u1021 074D                           u1030 0759  
                         u1031 0758                           u1200 02FE                           u1040 0763  
                         u1201 02FD                           u1041 0762                           u1210 0313  
                         u1130 02A4                           u1211 0312                           u1131 02A3  
                         u1220 031A                           u1140 02AB                           u1221 0319  
                         u1141 02AA                           u1310 0496                           u1230 032F  
                         u1150 02C0                           u1311 0495                           u1231 032E  
                         u1151 02BF                           u2007 0566                           u1240 0335  
                         u1160 02C7                           u1305 0486                           u1241 0334  
                         u1161 02C6                           u2017 0571                           u1330 04AA  
                         u1250 0457                           u1170 02DC                           u1331 04A9  
                         u1315 0492                           u1251 0456                           u1171 02DB  
                         u2027 057C                           u1500 0681                           u1340 04AF  
                         u1260 0462                           u1180 02E2                           u2037 0FF7  
                         u1501 0680                           u1341 04AE                           u1325 049E  
                         u1261 0461                           u1181 02E1                           u1510 0688  
                         u1270 0473                           u1190 02F7                           u1511 0687  
                         u1271 0472                           u1191 02F6                           u1520 068F  
                         u1440 078A                           u1521 068E                           u1441 0789  
                         u1530 0696                           u1450 0FD8                           u1290 0485  
                         u1610 04FA                           u1531 0695                           u1451 0FD7  
                         u1291 0484                           u1611 04F9                           u1540 069D  
                         u1700 020C                           u1541 069C                           u1285 0477  
                         u1605 04E1                           u1701 020B                           u1550 06A4  
                         u1630 0518                           u1710 021B                           u1551 06A3  
                         u1631 0517                           u1615 04F6                           u1711 021A  
                         u1560 06AB                           u1720 022A                           u1640 0638  
                         u1561 06AA                           u1625 050A                           u1721 0229  
                         u1641 0637                           u1490 0676                           u1810 05B5  
                         u1570 04CB                           u1730 023C                           u1650 0645  
                         u1491 0675                           u1811 05B4                           u1571 04CA  
                         u1731 023B                           u1651 0644                           u1820 05BF  
                         u1740 0242                           u1660 0659                           u1821 05BE  
                         u1805 05A7                           u1741 0241                           u1661 0658  
                         u1590 04DF                           u1750 024C                           u1670 0667  
                         u1591 04DE                           u1751 024B                           u1671 0666  
                         u1840 05D2                           u1680 07B9                           u1760 0261  
                         u1841 05D1                           u1825 05BB                           u1681 07B8  
                         u1585 04D0                           u1850 05D7                           u1770 058D  
                         u1690 0200                           u1851 05D6                           u1835 05C6  
                         u1771 058C                           u1691 01FF                           u1907 064F  
                         u1780 0598                           u1860 062D                           u1781 0597  
                         u1861 062C                           u1765 025C                           u1917 066B  
                         u1790 05A3                           u1791 05A2                           u1927 07C8  
                         u1865 0629                           u1937 01F2                           u1947 0351  
                         _PEIE 005E                           u1957 0529                           u1967 0538  
                         u1887 011C                           u1977 0545                           u1897 042F  
                         u1987 0550                           _RCIF 0065                           u1997 055B  
                         _TXIF 0064                  ??_Iniciar_LCD 0075                           _dato 0052  
                         _main 0037                           btemp 007E                           start 000C  
         _Escribir_caracterLCD 0FE6         __size_of_I2CMasterRead 0028         __size_of_I2CMasterStop 0009  
                        ??_isr 0070     __end_of_Escribir_stringLCD 07BA                          ?_main 0070  
              __end_of___awdiv 04B9                __end_of___awmod 05E1                          _ANSEL 0188  
              __end_of___lldiv 0521                ___awdiv@divisor 0073                          i1l126 07F8  
              ___awdiv@counter 0038                          _RCREG 001A                          _SPBRG 0099  
                        _PORTA 0005                          _PORTB 0006                          _PORTD 0008  
                        _TRISA 0085                          _TRISB 0086                          _TRISD 0088  
                        _SSPIE 0463                          _SSPIF 0063                          _TXREG 0019  
                 InitMSSP@Dato 0045                   InitMSSP@Modo 0049                    ?_UART_Write 0070  
                        _dato1 0053                          _dec_x 0029                          _dec_y 0026  
                        _dec_z 0022                          _cen_x 0028                          _cen_y 0025  
                        _cen_z 0021                __end_of_initOsc 076C                          _setup 03D5  
                        _uni_x 002A                          _uni_y 0027                          _uni_z 0023  
          _Limpiar_pantallaLCD 07BA                          pclath 000A            __end_of_InitMPU6050 03D5  
                        status 0003                          wtemp0 007E          ?_Escribir_caracterLCD 0070  
         __end_of_Config_USART 034B                __initialization 000F            __end_of_Iniciar_LCD 0586  
                 __end_of_main 01EA        __size_of_I2CMasterCheck 000D               __end_of_InitMSSP 029B  
         ?_Limpiar_pantallaLCD 0070        __size_of_I2CMasterWrite 000B                         ??_main 004D  
                 divisor_dec@b 003C                   divisor_dec@n 0041              ?_I2C_Master_Start 0070  
                _I2CMasterRead 076C             ??_I2C_Master_Start 0073                  _I2CMasterStop 0FC8  
           set_cursor@posicion 0075               ___awdiv@dividend 0075                         ?_setup 0070  
                       _ANSELH 0189                         i1l2270 07F4                         i1l2268 07EE  
                       u147_20 07F4                         u147_21 07F3                         _SPBRGH 009A  
                       _SSPADD 0093                         _TRISC3 043B                         _TRISC4 043C  
                       _SSPCON 0014                         _SSPBUF 0013            __size_of_UART_Write 000A  
             ??_tabla_numASCII 0073          ??_Limpiar_pantallaLCD 0075                      ??___awdiv 0077  
                    ??___awmod 0077                      ??___lldiv 0073               ___awdiv@quotient 003A  
              ___awmod@divisor 0073                ___awmod@counter 0038                      ??_initOsc 0073  
         __size_of_divisor_dec 004D                         saved_w 007E                    _InitMPU6050 034B  
               ?_I2CMasterRead 0070                 ?_I2CMasterStop 0070                divisor_dec@dig1 003E  
      __end_of__initialization 0033                    _Iniciar_LCD 0521         ??_Escribir_caracterLCD 0075  
               __pcstackCOMMON 0070                   __pidataBANK0 0FBC                  __end_of_setup 0450  
                      ??_setup 004A                     __pbssBANK0 0020                      ?_InitMSSP 0045  
        __size_of_Config_USART 00B0                     __pmaintext 0037                 _I2CMasterCheck 06F3  
                   __pintentry 0004                 _I2CMasterWrite 0FDB   __size_of_Escribir_comandoLCD 0043  
          I2CMasterWrite@Datos 0073                   initOsc@Valor 0073                ??_I2CMasterRead 0073  
              ??_I2CMasterStop 0073                   ??_UART_Write 0073                   _Config_USART 029B  
                      _SSPCON2 0091                        _SSPSTAT 0094             _Escribir_stringLCD 0794  
                   __stringtab 0700                     ??_InitMSSP 0074                tabla_numASCII@a 0075  
          ?_Escribir_stringLCD 0070         __end_of_I2CMasterCheck 0700          Escribir_caracterLCD@a 0075  
       __end_of_I2CMasterWrite 0FE6                        ___awdiv 0450                     _estado_sem 0020  
                      ___awmod 0586                        ___lldiv 04B9             __end_of_UART_Write 0FDB  
                      _bandera 0050                        __ptext1 06B4                        __ptext2 03D5  
                      __ptext3 062E                        __ptext4 073C                        __ptext5 07BA  
                      __ptext6 01EA                        __ptext7 04B9                        __ptext8 034B  
                      __ptext9 07D4           ??_Escribir_stringLCD 0075                        _initOsc 073C  
                 __size_of_isr 0011               ___awmod@dividend 0075                  ?_prender_ELCD 0070  
                      clrloop0 0FC1           end_of_initialization 0033      __size_of_I2C_Master_Start 001A  
              ___lldiv@divisor 0038                ___lldiv@counter 0044                ?_I2CMasterCheck 0070  
                   _set_cursor 062E                      _RCSTAbits 0018                ?_I2CMasterWrite 0070  
                    _PORTBbits 0006                      _PORTDbits 0008                 UART_Write@data 0073  
               ??_prender_ELCD 0073                      _TRISAbits 0085                      _TRISCbits 0087  
                 ?_InitMPU6050 0070                   ?_Iniciar_LCD 0070                      _TXSTAbits 0098  
  __end_of_Limpiar_pantallaLCD 07D4             I2CMasterRead@Datos 0075                    _BAUDCTLbits 0187  
                ??_divisor_dec 003F                      _Giro_digx 007A                      _Giro_digy 0079  
                    _Giro_digz 0024            start_initialization 000F                    __end_of_isr 07FF  
          _Escribir_comandoLCD 0671     Escribir_comandoLCD@Comando 0074              __size_of_InitMSSP 00B1  
__size_of_Escribir_caracterLCD 000C                    ?_set_cursor 0075                    __pdataBANK0 0050  
         ?_Escribir_comandoLCD 0070                    __pbssCOMMON 0078        __size_of_tabla_numASCII 003F  
                    ___latbits 0002                  __pcstackBANK0 0038            __end_of_divisor_dec 062E  
             _I2C_Master_Start 07D4           __end_of_prender_ELCD 1000                       ?___awdiv 0073  
                     ?___awmod 0073                       ?___lldiv 0038          ??_Escribir_comandoLCD 0074  
                    __pstrings 0700                       ?_initOsc 0070          __end_of_I2CMasterRead 0794  
        __end_of_I2CMasterStop 0FD1            __size_of_set_cursor 0043           __size_of_InitMPU6050 008A  
               __size_of_setup 007B               ??_I2CMasterCheck 0073              interrupt_function 0004  
  I2C_Master_Start@Modo_Inicio 0073               ??_I2CMasterWrite 0073                      clear_ram0 0FC0  
                     _PIE1bits 008C           __size_of_Iniciar_LCD 0065                       _PIR1bits 000C  
                  __stringbase 0705                    _divisor_dec 05E1    __size_of_Escribir_stringLCD 0026  
                     _InitMSSP 01EA            Escribir_stringLCD@d 0077            Escribir_stringLCD@i 0076  
             __size_of___awdiv 0069               __size_of___awmod 005B               __size_of___lldiv 0068  
           __end_of__stringtab 0706                 _tabla_numASCII 06B4               __size_of_initOsc 0030  
                     __ptext10 0FDB                       __ptext11 0FC8                       __ptext20 06F3  
                     __ptext12 0521                       __ptext21 0FE6                       __ptext13 0794  
                     __ptext22 0671                       __ptext14 029B                       __ptext23 0FF2  
                     __ptext15 05E1                       __ptext24 07EE                       __ptext16 0586  
                     __ptext17 0450                       __ptext18 0FD1                       __ptext19 076C  
        __size_of_prender_ELCD 000E                  __size_of_main 01B3                   ??_set_cursor 0076  
 __size_of_Limpiar_pantallaLCD 001A               I2CMasterRead@ACK 0074         __end_of_tabla_numASCII 06F3  
     __end_of_I2C_Master_Start 07EE                     _INTCONbits 000B   __end_of_Escribir_caracterLCD 0FF2  
                 _prender_ELCD 0FF2                  ?_Config_USART 0073               Config_USART@Freq 0075  
           __end_of_set_cursor 0671                       intlevel1 0000               ___lldiv@dividend 003C  
                    stringcode 0700                     _OSCCONbits 008F                ?_tabla_numASCII 0070  
             ___lldiv@quotient 0040                 ??_Config_USART 0077                       stringdir 0700  
                     stringtab 0700                     _UART_Write 0FD1                    _SSPCON2bits 0091  
        Config_USART@baud_rate 0073                     _SSPCONbits 0014    __end_of_Escribir_comandoLCD 06B4  
