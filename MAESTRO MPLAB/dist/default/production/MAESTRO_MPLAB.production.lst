

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Mar 06 17:29:42 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F887 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  008F                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0097                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  0105                     	;# 
   138  0107                     	;# 
   139  0108                     	;# 
   140  0109                     	;# 
   141  010C                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  0185                     	;# 
   147  0187                     	;# 
   148  0188                     	;# 
   149  0189                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  000E                     	;# 
   168  000F                     	;# 
   169  0010                     	;# 
   170  0011                     	;# 
   171  0012                     	;# 
   172  0013                     	;# 
   173  0014                     	;# 
   174  0015                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001B                     	;# 
   183  001C                     	;# 
   184  001D                     	;# 
   185  001E                     	;# 
   186  001F                     	;# 
   187  0081                     	;# 
   188  0085                     	;# 
   189  0086                     	;# 
   190  0087                     	;# 
   191  0088                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  008F                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  0105                     	;# 
   216  0107                     	;# 
   217  0108                     	;# 
   218  0109                     	;# 
   219  010C                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  0185                     	;# 
   225  0187                     	;# 
   226  0188                     	;# 
   227  0189                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0008                     	;# 
   239  0009                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000D                     	;# 
   244  000E                     	;# 
   245  000E                     	;# 
   246  000F                     	;# 
   247  0010                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0014                     	;# 
   252  0015                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001B                     	;# 
   261  001C                     	;# 
   262  001D                     	;# 
   263  001E                     	;# 
   264  001F                     	;# 
   265  0081                     	;# 
   266  0085                     	;# 
   267  0086                     	;# 
   268  0087                     	;# 
   269  0088                     	;# 
   270  0089                     	;# 
   271  008C                     	;# 
   272  008D                     	;# 
   273  008E                     	;# 
   274  008F                     	;# 
   275  0090                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0095                     	;# 
   283  0096                     	;# 
   284  0097                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009A                     	;# 
   288  009B                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  0105                     	;# 
   294  0107                     	;# 
   295  0108                     	;# 
   296  0109                     	;# 
   297  010C                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  010E                     	;# 
   301  010F                     	;# 
   302  0185                     	;# 
   303  0187                     	;# 
   304  0188                     	;# 
   305  0189                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308  0000                     	;# 
   309  0001                     	;# 
   310  0002                     	;# 
   311  0003                     	;# 
   312  0004                     	;# 
   313  0005                     	;# 
   314  0006                     	;# 
   315  0007                     	;# 
   316  0008                     	;# 
   317  0009                     	;# 
   318  000A                     	;# 
   319  000B                     	;# 
   320  000C                     	;# 
   321  000D                     	;# 
   322  000E                     	;# 
   323  000E                     	;# 
   324  000F                     	;# 
   325  0010                     	;# 
   326  0011                     	;# 
   327  0012                     	;# 
   328  0013                     	;# 
   329  0014                     	;# 
   330  0015                     	;# 
   331  0015                     	;# 
   332  0016                     	;# 
   333  0017                     	;# 
   334  0018                     	;# 
   335  0019                     	;# 
   336  001A                     	;# 
   337  001B                     	;# 
   338  001B                     	;# 
   339  001C                     	;# 
   340  001D                     	;# 
   341  001E                     	;# 
   342  001F                     	;# 
   343  0081                     	;# 
   344  0085                     	;# 
   345  0086                     	;# 
   346  0087                     	;# 
   347  0088                     	;# 
   348  0089                     	;# 
   349  008C                     	;# 
   350  008D                     	;# 
   351  008E                     	;# 
   352  008F                     	;# 
   353  0090                     	;# 
   354  0091                     	;# 
   355  0092                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0094                     	;# 
   360  0095                     	;# 
   361  0096                     	;# 
   362  0097                     	;# 
   363  0098                     	;# 
   364  0099                     	;# 
   365  009A                     	;# 
   366  009B                     	;# 
   367  009C                     	;# 
   368  009D                     	;# 
   369  009E                     	;# 
   370  009F                     	;# 
   371  0105                     	;# 
   372  0107                     	;# 
   373  0108                     	;# 
   374  0109                     	;# 
   375  010C                     	;# 
   376  010C                     	;# 
   377  010D                     	;# 
   378  010E                     	;# 
   379  010F                     	;# 
   380  0185                     	;# 
   381  0187                     	;# 
   382  0188                     	;# 
   383  0189                     	;# 
   384  018C                     	;# 
   385  018D                     	;# 
   386  0000                     	;# 
   387  0001                     	;# 
   388  0002                     	;# 
   389  0003                     	;# 
   390  0004                     	;# 
   391  0005                     	;# 
   392  0006                     	;# 
   393  0007                     	;# 
   394  0008                     	;# 
   395  0009                     	;# 
   396  000A                     	;# 
   397  000B                     	;# 
   398  000C                     	;# 
   399  000D                     	;# 
   400  000E                     	;# 
   401  000E                     	;# 
   402  000F                     	;# 
   403  0010                     	;# 
   404  0011                     	;# 
   405  0012                     	;# 
   406  0013                     	;# 
   407  0014                     	;# 
   408  0015                     	;# 
   409  0015                     	;# 
   410  0016                     	;# 
   411  0017                     	;# 
   412  0018                     	;# 
   413  0019                     	;# 
   414  001A                     	;# 
   415  001B                     	;# 
   416  001B                     	;# 
   417  001C                     	;# 
   418  001D                     	;# 
   419  001E                     	;# 
   420  001F                     	;# 
   421  0081                     	;# 
   422  0085                     	;# 
   423  0086                     	;# 
   424  0087                     	;# 
   425  0088                     	;# 
   426  0089                     	;# 
   427  008C                     	;# 
   428  008D                     	;# 
   429  008E                     	;# 
   430  008F                     	;# 
   431  0090                     	;# 
   432  0091                     	;# 
   433  0092                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0093                     	;# 
   437  0094                     	;# 
   438  0095                     	;# 
   439  0096                     	;# 
   440  0097                     	;# 
   441  0098                     	;# 
   442  0099                     	;# 
   443  009A                     	;# 
   444  009B                     	;# 
   445  009C                     	;# 
   446  009D                     	;# 
   447  009E                     	;# 
   448  009F                     	;# 
   449  0105                     	;# 
   450  0107                     	;# 
   451  0108                     	;# 
   452  0109                     	;# 
   453  010C                     	;# 
   454  010C                     	;# 
   455  010D                     	;# 
   456  010E                     	;# 
   457  010F                     	;# 
   458  0185                     	;# 
   459  0187                     	;# 
   460  0188                     	;# 
   461  0189                     	;# 
   462  018C                     	;# 
   463  018D                     	;# 
   464  0000                     	;# 
   465  0001                     	;# 
   466  0002                     	;# 
   467  0003                     	;# 
   468  0004                     	;# 
   469  0005                     	;# 
   470  0006                     	;# 
   471  0007                     	;# 
   472  0008                     	;# 
   473  0009                     	;# 
   474  000A                     	;# 
   475  000B                     	;# 
   476  000C                     	;# 
   477  000D                     	;# 
   478  000E                     	;# 
   479  000E                     	;# 
   480  000F                     	;# 
   481  0010                     	;# 
   482  0011                     	;# 
   483  0012                     	;# 
   484  0013                     	;# 
   485  0014                     	;# 
   486  0015                     	;# 
   487  0015                     	;# 
   488  0016                     	;# 
   489  0017                     	;# 
   490  0018                     	;# 
   491  0019                     	;# 
   492  001A                     	;# 
   493  001B                     	;# 
   494  001B                     	;# 
   495  001C                     	;# 
   496  001D                     	;# 
   497  001E                     	;# 
   498  001F                     	;# 
   499  0081                     	;# 
   500  0085                     	;# 
   501  0086                     	;# 
   502  0087                     	;# 
   503  0088                     	;# 
   504  0089                     	;# 
   505  008C                     	;# 
   506  008D                     	;# 
   507  008E                     	;# 
   508  008F                     	;# 
   509  0090                     	;# 
   510  0091                     	;# 
   511  0092                     	;# 
   512  0093                     	;# 
   513  0093                     	;# 
   514  0093                     	;# 
   515  0094                     	;# 
   516  0095                     	;# 
   517  0096                     	;# 
   518  0097                     	;# 
   519  0098                     	;# 
   520  0099                     	;# 
   521  009A                     	;# 
   522  009B                     	;# 
   523  009C                     	;# 
   524  009D                     	;# 
   525  009E                     	;# 
   526  009F                     	;# 
   527  0105                     	;# 
   528  0107                     	;# 
   529  0108                     	;# 
   530  0109                     	;# 
   531  010C                     	;# 
   532  010C                     	;# 
   533  010D                     	;# 
   534  010E                     	;# 
   535  010F                     	;# 
   536  0185                     	;# 
   537  0187                     	;# 
   538  0188                     	;# 
   539  0189                     	;# 
   540  018C                     	;# 
   541  018D                     	;# 
   542  0000                     	;# 
   543  0001                     	;# 
   544  0002                     	;# 
   545  0003                     	;# 
   546  0004                     	;# 
   547  0005                     	;# 
   548  0006                     	;# 
   549  0007                     	;# 
   550  0008                     	;# 
   551  0009                     	;# 
   552  000A                     	;# 
   553  000B                     	;# 
   554  000C                     	;# 
   555  000D                     	;# 
   556  000E                     	;# 
   557  000E                     	;# 
   558  000F                     	;# 
   559  0010                     	;# 
   560  0011                     	;# 
   561  0012                     	;# 
   562  0013                     	;# 
   563  0014                     	;# 
   564  0015                     	;# 
   565  0015                     	;# 
   566  0016                     	;# 
   567  0017                     	;# 
   568  0018                     	;# 
   569  0019                     	;# 
   570  001A                     	;# 
   571  001B                     	;# 
   572  001B                     	;# 
   573  001C                     	;# 
   574  001D                     	;# 
   575  001E                     	;# 
   576  001F                     	;# 
   577  0081                     	;# 
   578  0085                     	;# 
   579  0086                     	;# 
   580  0087                     	;# 
   581  0088                     	;# 
   582  0089                     	;# 
   583  008C                     	;# 
   584  008D                     	;# 
   585  008E                     	;# 
   586  008F                     	;# 
   587  0090                     	;# 
   588  0091                     	;# 
   589  0092                     	;# 
   590  0093                     	;# 
   591  0093                     	;# 
   592  0093                     	;# 
   593  0094                     	;# 
   594  0095                     	;# 
   595  0096                     	;# 
   596  0097                     	;# 
   597  0098                     	;# 
   598  0099                     	;# 
   599  009A                     	;# 
   600  009B                     	;# 
   601  009C                     	;# 
   602  009D                     	;# 
   603  009E                     	;# 
   604  009F                     	;# 
   605  0105                     	;# 
   606  0107                     	;# 
   607  0108                     	;# 
   608  0109                     	;# 
   609  010C                     	;# 
   610  010C                     	;# 
   611  010D                     	;# 
   612  010E                     	;# 
   613  010F                     	;# 
   614  0185                     	;# 
   615  0187                     	;# 
   616  0188                     	;# 
   617  0189                     	;# 
   618  018C                     	;# 
   619  018D                     	;# 
   620  0018                     _RCSTAbits	set	24
   621  0006                     _PORTBbits	set	6
   622  0008                     _PORTDbits	set	8
   623  0013                     _SSPBUF	set	19
   624  0014                     _SSPCON	set	20
   625  0007                     _PORTC	set	7
   626  0006                     _PORTB	set	6
   627  0009                     _PORTE	set	9
   628  0008                     _PORTD	set	8
   629  0005                     _PORTA	set	5
   630  0063                     _SSPIF	set	99
   631  005E                     _PEIE	set	94
   632  005F                     _GIE	set	95
   633  008C                     _PIE1bits	set	140
   634  009A                     _SPBRGH	set	154
   635  0099                     _SPBRG	set	153
   636  0098                     _TXSTAbits	set	152
   637  008F                     _OSCCONbits	set	143
   638  0091                     _SSPCON2bits	set	145
   639  0087                     _TRISCbits	set	135
   640  0094                     _SSPSTAT	set	148
   641  0093                     _SSPADD	set	147
   642  0091                     _SSPCON2	set	145
   643  0089                     _TRISE	set	137
   644  0088                     _TRISD	set	136
   645  0086                     _TRISB	set	134
   646  0085                     _TRISA	set	133
   647  0463                     _SSPIE	set	1123
   648  043C                     _TRISC4	set	1084
   649  043B                     _TRISC3	set	1083
   650  0187                     _BAUDCTLbits	set	391
   651  0189                     _ANSELH	set	393
   652  0188                     _ANSEL	set	392
   653                           
   654                           	psect	strings
   655  0645                     __pstrings:
   656  0645                     stringtab:
   657  0645                     __stringtab:
   658  0645                     stringcode:	
   659                           ;	String table - string pointers are 1 byte each
   660                           
   661  0645                     stringdir:
   662  0645  3006               	movlw	high stringdir
   663  0646  008A               	movwf	10
   664  0647  0804               	movf	4,w
   665  0648  0A84               	incf	4,f
   666  0649  0782               	addwf	2,f
   667  064A                     __stringbase:
   668  064A  3400               	retlw	0
   669  064B                     __end_of__stringtab:
   670  064B                     STR_1:
   671  064B  3458               	retlw	88	;'X'
   672  064C  343A               	retlw	58	;':'
   673  064D  3420               	retlw	32	;' '
   674  064E  3420               	retlw	32	;' '
   675  064F  3420               	retlw	32	;' '
   676  0650  3420               	retlw	32	;' '
   677  0651  3459               	retlw	89	;'Y'
   678  0652  343A               	retlw	58	;':'
   679  0653  3420               	retlw	32	;' '
   680  0654  3420               	retlw	32	;' '
   681  0655  3420               	retlw	32	;' '
   682  0656  3420               	retlw	32	;' '
   683  0657  3420               	retlw	32	;' '
   684  0658  3453               	retlw	83	;'S'
   685  0659  343A               	retlw	58	;':'
   686  065A  3400               	retlw	0
   687  065B                     STR_2:
   688  065B  344D               	retlw	77	;'M'
   689  065C  3469               	retlw	105	;'i'
   690  065D  346E               	retlw	110	;'n'
   691  065E  3469               	retlw	105	;'i'
   692  065F  3470               	retlw	112	;'p'
   693  0660  3472               	retlw	114	;'r'
   694  0661  346F               	retlw	111	;'o'
   695  0662  3479               	retlw	121	;'y'
   696  0663  3465               	retlw	101	;'e'
   697  0664  3463               	retlw	99	;'c'
   698  0665  3474               	retlw	116	;'t'
   699  0666  346F               	retlw	111	;'o'
   700  0667  3420               	retlw	32	;' '
   701  0668  3432               	retlw	50	;'2'
   702  0669  3400               	retlw	0
   703  066A                     STR_3:
   704  066A  344A               	retlw	74	;'J'
   705  066B  346F               	retlw	111	;'o'
   706  066C  3473               	retlw	115	;'s'
   707  066D  3465               	retlw	101	;'e'
   708  066E  3420               	retlw	32	;' '
   709  066F  3453               	retlw	83	;'S'
   710  0670  3461               	retlw	97	;'a'
   711  0671  346E               	retlw	110	;'n'
   712  0672  3474               	retlw	116	;'t'
   713  0673  3469               	retlw	105	;'i'
   714  0674  347A               	retlw	122	;'z'
   715  0675  346F               	retlw	111	;'o'
   716  0676  3400               	retlw	0
   717                           
   718                           	psect	cinit
   719  000F                     start_initialization:	
   720                           ; #config settings
   721                           
   722  000F                     __initialization:
   723                           
   724                           ; Clear objects allocated to COMMON
   725  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   726  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   727                           
   728                           ; Clear objects allocated to BANK0
   729  0011  1383               	bcf	3,7	;select IRP bank0
   730  0012  3020               	movlw	low __pbssBANK0
   731  0013  0084               	movwf	4
   732  0014  3038               	movlw	low (__pbssBANK0+24)
   733  0015  120A  118A  2761  120A  118A  	fcall	clear_ram0
   734  001A                     end_of_initialization:	
   735                           ;End of C runtime variable initialization code
   736                           
   737  001A                     __end_of__initialization:
   738  001A  0183               	clrf	3
   739  001B  120A  118A  281E   	ljmp	_main	;jump to C main() function
   740                           
   741                           	psect	bssCOMMON
   742  007A                     __pbssCOMMON:
   743  007A                     _uni_x:
   744  007A                     	ds	1
   745  007B                     _Giro_digx:
   746  007B                     	ds	1
   747                           
   748                           	psect	bssBANK0
   749  0020                     __pbssBANK0:
   750  0020                     _Gz:
   751  0020                     	ds	2
   752  0022                     _Gy:
   753  0022                     	ds	2
   754  0024                     _Gx:
   755  0024                     	ds	2
   756  0026                     _Temp:
   757  0026                     	ds	2
   758  0028                     _Az:
   759  0028                     	ds	2
   760  002A                     _Ay:
   761  002A                     	ds	2
   762  002C                     _Ax:
   763  002C                     	ds	2
   764  002E                     _cen_z:
   765  002E                     	ds	1
   766  002F                     _dec_z:
   767  002F                     	ds	1
   768  0030                     _uni_z:
   769  0030                     	ds	1
   770  0031                     _Giro_digz:
   771  0031                     	ds	1
   772  0032                     _cen_y:
   773  0032                     	ds	1
   774  0033                     _dec_y:
   775  0033                     	ds	1
   776  0034                     _uni_y:
   777  0034                     	ds	1
   778  0035                     _Giro_digy:
   779  0035                     	ds	1
   780  0036                     _cen_x:
   781  0036                     	ds	1
   782  0037                     _dec_x:
   783  0037                     	ds	1
   784                           
   785                           	psect	clrtext
   786  0761                     clear_ram0:	
   787                           ;	Called with FSR containing the base address, and
   788                           ;	W with the last address+1
   789                           
   790  0761  0064               	clrwdt	;clear the watchdog before getting into this loop
   791  0762                     clrloop0:
   792  0762  0180               	clrf	0	;clear RAM location pointed to by FSR
   793  0763  0A84               	incf	4,f	;increment pointer
   794  0764  0604               	xorwf	4,w	;XOR with final address
   795  0765  1903               	btfsc	3,2	;have we reached the end yet?
   796  0766  3400               	retlw	0	;all done for this memory range, return
   797  0767  0604               	xorwf	4,w	;XOR again to restore value
   798  0768  2F62               	goto	clrloop0	;do the next byte
   799                           
   800                           	psect	cstackCOMMON
   801  0070                     __pcstackCOMMON:
   802  0070                     ?_setup:
   803  0070                     ?_I2C_Master_Start:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0070                     ?_I2C_Master_Stop:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0070                     ?_I2C_Master_RepeatedStart:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0070                     ?_tabla_numASCII:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0070                     ?_Escribir_stringLCD:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0070                     ?_Escribir_caracterLCD:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     ?_initOsc:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0070                     ?_InitMPU6050:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     ?_Iniciar_LCD:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0070                     ?_Limpiar_pantallaLCD:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     ?_isr:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0070                     ??_isr:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ?_main:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0070                     ?_I2C_Master_Wait:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0070                     ?_prender_ELCD:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0070                     ?_Escribir_comandoLCD:	
   849                           ; 1 bytes @ 0x0
   850                           
   851                           
   852                           ; 1 bytes @ 0x0
   853  0070                     	ds	2
   854  0072                     ??_I2C_Master_Start:
   855  0072                     ?_I2C_Master_Write:	
   856                           ; 1 bytes @ 0x2
   857                           
   858  0072                     ??_I2C_Master_Stop:	
   859                           ; 1 bytes @ 0x2
   860                           
   861  0072                     ??_I2C_Master_RepeatedStart:	
   862                           ; 1 bytes @ 0x2
   863                           
   864  0072                     ??_tabla_numASCII:	
   865                           ; 1 bytes @ 0x2
   866                           
   867  0072                     ??_initOsc:	
   868                           ; 1 bytes @ 0x2
   869                           
   870  0072                     ?_Config_USART:	
   871                           ; 1 bytes @ 0x2
   872                           
   873  0072                     ??_I2C_Master_Wait:	
   874                           ; 1 bytes @ 0x2
   875                           
   876  0072                     ??_prender_ELCD:	
   877                           ; 1 bytes @ 0x2
   878                           
   879  0072                     ?_I2C_Master_Read:	
   880                           ; 1 bytes @ 0x2
   881                           
   882  0072                     ?___awdiv:	
   883                           ; 2 bytes @ 0x2
   884                           
   885  0072                     ?___awmod:	
   886                           ; 2 bytes @ 0x2
   887                           
   888  0072                     ?___lldiv:	
   889                           ; 2 bytes @ 0x2
   890                           
   891  0072                     initOsc@Valor:	
   892                           ; 4 bytes @ 0x2
   893                           
   894  0072                     I2C_Master_Write@d:	
   895                           ; 1 bytes @ 0x2
   896                           
   897  0072                     I2C_Master_Read@a:	
   898                           ; 2 bytes @ 0x2
   899                           
   900  0072                     Config_USART@baud_rate:	
   901                           ; 2 bytes @ 0x2
   902                           
   903  0072                     ___awdiv@divisor:	
   904                           ; 2 bytes @ 0x2
   905                           
   906  0072                     ___awmod@divisor:	
   907                           ; 2 bytes @ 0x2
   908                           
   909  0072                     ___lldiv@divisor:	
   910                           ; 2 bytes @ 0x2
   911                           
   912                           
   913                           ; 4 bytes @ 0x2
   914  0072                     	ds	1
   915  0073                     ??_Escribir_comandoLCD:
   916  0073                     Escribir_comandoLCD@Comando:	
   917                           ; 1 bytes @ 0x3
   918                           
   919                           
   920                           ; 1 bytes @ 0x3
   921  0073                     	ds	1
   922  0074                     ??_I2C_Master_Write:
   923  0074                     ??_I2C_Master_Read:	
   924                           ; 1 bytes @ 0x4
   925                           
   926  0074                     ?_set_cursor:	
   927                           ; 1 bytes @ 0x4
   928                           
   929  0074                     ??_Escribir_stringLCD:	
   930                           ; 1 bytes @ 0x4
   931                           
   932  0074                     ??_Escribir_caracterLCD:	
   933                           ; 1 bytes @ 0x4
   934                           
   935  0074                     ??_InitMPU6050:	
   936                           ; 1 bytes @ 0x4
   937                           
   938  0074                     ??_Iniciar_LCD:	
   939                           ; 1 bytes @ 0x4
   940                           
   941  0074                     ??_Limpiar_pantallaLCD:	
   942                           ; 1 bytes @ 0x4
   943                           
   944  0074                     tabla_numASCII@a:	
   945                           ; 1 bytes @ 0x4
   946                           
   947  0074                     Escribir_caracterLCD@a:	
   948                           ; 1 bytes @ 0x4
   949                           
   950  0074                     set_cursor@posicion:	
   951                           ; 1 bytes @ 0x4
   952                           
   953  0074                     Config_USART@Freq:	
   954                           ; 1 bytes @ 0x4
   955                           
   956  0074                     ___awdiv@dividend:	
   957                           ; 2 bytes @ 0x4
   958                           
   959  0074                     ___awmod@dividend:	
   960                           ; 2 bytes @ 0x4
   961                           
   962                           
   963                           ; 2 bytes @ 0x4
   964  0074                     	ds	1
   965  0075                     ??_set_cursor:
   966  0075                     Escribir_stringLCD@i:	
   967                           ; 1 bytes @ 0x5
   968                           
   969                           
   970                           ; 1 bytes @ 0x5
   971  0075                     	ds	1
   972  0076                     ??_Config_USART:
   973  0076                     ??___awdiv:	
   974                           ; 1 bytes @ 0x6
   975                           
   976  0076                     ??___awmod:	
   977                           ; 1 bytes @ 0x6
   978                           
   979  0076                     Escribir_stringLCD@d:	
   980                           ; 1 bytes @ 0x6
   981                           
   982  0076                     I2C_Master_Read@temp:	
   983                           ; 1 bytes @ 0x6
   984                           
   985  0076                     ___lldiv@dividend:	
   986                           ; 2 bytes @ 0x6
   987                           
   988                           
   989                           ; 4 bytes @ 0x6
   990  0076                     	ds	1
   991  0077                     set_cursor@linea:
   992  0077                     ___awmod@counter:	
   993                           ; 1 bytes @ 0x7
   994                           
   995                           
   996                           ; 1 bytes @ 0x7
   997  0077                     	ds	1
   998  0078                     ___awmod@sign:
   999                           
  1000                           ; 1 bytes @ 0x8
  1001  0078                     	ds	1
  1002  0079                     ?_divisor_dec:
  1003  0079                     divisor_dec@dig1:	
  1004                           ; 1 bytes @ 0x9
  1005                           
  1006                           
  1007                           ; 1 bytes @ 0x9
  1008  0079                     	ds	1
  1009                           
  1010                           	psect	cstackBANK0
  1011  0038                     __pcstackBANK0:
  1012  0038                     ??___lldiv:
  1013  0038                     ___awdiv@counter:	
  1014                           ; 1 bytes @ 0x0
  1015                           
  1016                           
  1017                           ; 1 bytes @ 0x0
  1018  0038                     	ds	1
  1019  0039                     ___awdiv@sign:
  1020  0039                     ___lldiv@quotient:	
  1021                           ; 1 bytes @ 0x1
  1022                           
  1023                           
  1024                           ; 4 bytes @ 0x1
  1025  0039                     	ds	1
  1026  003A                     ___awdiv@quotient:
  1027                           
  1028                           ; 2 bytes @ 0x2
  1029  003A                     	ds	2
  1030  003C                     ??_divisor_dec:
  1031                           
  1032                           ; 1 bytes @ 0x4
  1033  003C                     	ds	1
  1034  003D                     ___lldiv@counter:
  1035                           
  1036                           ; 1 bytes @ 0x5
  1037  003D                     	ds	1
  1038  003E                     ?_I2C_Master_Init:
  1039  003E                     I2C_Master_Init@c:	
  1040                           ; 1 bytes @ 0x6
  1041                           
  1042                           
  1043                           ; 4 bytes @ 0x6
  1044  003E                     	ds	2
  1045  0040                     divisor_dec@b:
  1046                           
  1047                           ; 1 bytes @ 0x8
  1048  0040                     	ds	1
  1049  0041                     divisor_dec@n:
  1050                           
  1051                           ; 2 bytes @ 0x9
  1052  0041                     	ds	1
  1053  0042                     ??_I2C_Master_Init:
  1054                           
  1055                           ; 1 bytes @ 0xA
  1056  0042                     	ds	4
  1057  0046                     ??_setup:
  1058                           
  1059                           ; 1 bytes @ 0xE
  1060  0046                     	ds	3
  1061  0049                     ??_main:
  1062                           
  1063                           ; 1 bytes @ 0x11
  1064  0049                     	ds	2
  1065                           
  1066                           	psect	maintext
  1067  001E                     __pmaintext:	
  1068 ;;
  1069 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1070 ;;
  1071 ;; *************** function _main *****************
  1072 ;; Defined at:
  1073 ;;		line 93 in file "Maestro I2C.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;		None
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1082 ;; Tracked objects:
  1083 ;;		On entry : B00/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1087 ;;      Params:         0       0       0       0       0
  1088 ;;      Locals:         0       0       0       0       0
  1089 ;;      Temps:          0       2       0       0       0
  1090 ;;      Totals:         0       2       0       0       0
  1091 ;;Total ram usage:        2 bytes
  1092 ;; Hardware stack levels required when called: 5
  1093 ;; This function calls:
  1094 ;;		_Escribir_caracterLCD
  1095 ;;		_Escribir_stringLCD
  1096 ;;		_I2C_Master_Read
  1097 ;;		_I2C_Master_RepeatedStart
  1098 ;;		_I2C_Master_Start
  1099 ;;		_I2C_Master_Stop
  1100 ;;		_I2C_Master_Write
  1101 ;;		_divisor_dec
  1102 ;;		_set_cursor
  1103 ;;		_setup
  1104 ;;		_tabla_numASCII
  1105 ;; This function is called by:
  1106 ;;		Startup code after reset
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           
  1111                           ;psect for function _main
  1112  001E                     _main:
  1113  001E                     l2124:	
  1114                           ;incstack = 0
  1115                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1116                           
  1117                           
  1118                           ;Maestro I2C.c: 94:     setup();
  1119  001E  120A  118A  22F4  120A  118A  	fcall	_setup
  1120  0023                     l2126:
  1121                           
  1122                           ;Maestro I2C.c: 99:         I2C_Master_Start();
  1123  0023  120A  118A  274F  120A  118A  	fcall	_I2C_Master_Start
  1124  0028                     l2128:
  1125                           
  1126                           ;Maestro I2C.c: 100:         I2C_Master_Write(0x68 +0);
  1127  0028  3068               	movlw	104
  1128  0029  00F2               	movwf	I2C_Master_Write@d
  1129  002A  3000               	movlw	0
  1130  002B  00F3               	movwf	I2C_Master_Write@d+1
  1131  002C  120A  118A  273C  120A  118A  	fcall	_I2C_Master_Write
  1132  0031                     l2130:
  1133                           
  1134                           ;Maestro I2C.c: 101:         I2C_Master_Write(0x3B);
  1135  0031  303B               	movlw	59
  1136  0032  00F2               	movwf	I2C_Master_Write@d
  1137  0033  3000               	movlw	0
  1138  0034  00F3               	movwf	I2C_Master_Write@d+1
  1139  0035  120A  118A  273C  120A  118A  	fcall	_I2C_Master_Write
  1140  003A                     l2132:
  1141                           
  1142                           ;Maestro I2C.c: 102:         I2C_Master_Stop();
  1143  003A  120A  118A  2746  120A  118A  	fcall	_I2C_Master_Stop
  1144  003F                     l2134:
  1145                           
  1146                           ;Maestro I2C.c: 104:         I2C_Master_RepeatedStart();
  1147  003F  120A  118A  2758  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1148  0044                     l2136:
  1149                           
  1150                           ;Maestro I2C.c: 105:         I2C_Master_Write(0x68 +1);
  1151  0044  3069               	movlw	105
  1152  0045  00F2               	movwf	I2C_Master_Write@d
  1153  0046  3000               	movlw	0
  1154  0047  00F3               	movwf	I2C_Master_Write@d+1
  1155  0048  120A  118A  273C  120A  118A  	fcall	_I2C_Master_Write
  1156  004D                     l2138:
  1157                           
  1158                           ;Maestro I2C.c: 118:         Ax = ((int)I2C_Master_Read(0)<<8) | (int)I2C_Master_Read(0)
      +                          ;
  1159  004D  3000               	movlw	0
  1160  004E  00F2               	movwf	I2C_Master_Read@a
  1161  004F  00F3               	movwf	I2C_Master_Read@a+1
  1162  0050  120A  118A  26A7  120A  118A  	fcall	_I2C_Master_Read
  1163  0055  0872               	movf	?_I2C_Master_Read,w
  1164  0056  1283               	bcf	3,5	;RP0=0, select bank0
  1165  0057  1303               	bcf	3,6	;RP1=0, select bank0
  1166  0058  00C9               	movwf	??_main
  1167  0059  0873               	movf	?_I2C_Master_Read+1,w
  1168  005A  00CA               	movwf	??_main+1
  1169  005B  0849               	movf	??_main,w
  1170  005C  00CA               	movwf	??_main+1
  1171  005D  01C9               	clrf	??_main
  1172  005E  3000               	movlw	0
  1173  005F  00F2               	movwf	I2C_Master_Read@a
  1174  0060  00F3               	movwf	I2C_Master_Read@a+1
  1175  0061  120A  118A  26A7  120A  118A  	fcall	_I2C_Master_Read
  1176  0066  0872               	movf	?_I2C_Master_Read,w
  1177  0067  1283               	bcf	3,5	;RP0=0, select bank0
  1178  0068  1303               	bcf	3,6	;RP1=0, select bank0
  1179  0069  0449               	iorwf	??_main,w
  1180  006A  00AC               	movwf	_Ax
  1181  006B  0873               	movf	?_I2C_Master_Read+1,w
  1182  006C  044A               	iorwf	??_main+1,w
  1183  006D  00AD               	movwf	_Ax+1
  1184  006E                     l2140:
  1185                           
  1186                           ;Maestro I2C.c: 119:         Ay = ((int)I2C_Master_Read(0)<<8) | (int)I2C_Master_Read(0)
      +                          ;
  1187  006E  3000               	movlw	0
  1188  006F  00F2               	movwf	I2C_Master_Read@a
  1189  0070  00F3               	movwf	I2C_Master_Read@a+1
  1190  0071  120A  118A  26A7  120A  118A  	fcall	_I2C_Master_Read
  1191  0076  0872               	movf	?_I2C_Master_Read,w
  1192  0077  1283               	bcf	3,5	;RP0=0, select bank0
  1193  0078  1303               	bcf	3,6	;RP1=0, select bank0
  1194  0079  00C9               	movwf	??_main
  1195  007A  0873               	movf	?_I2C_Master_Read+1,w
  1196  007B  00CA               	movwf	??_main+1
  1197  007C  0849               	movf	??_main,w
  1198  007D  00CA               	movwf	??_main+1
  1199  007E  01C9               	clrf	??_main
  1200  007F  3000               	movlw	0
  1201  0080  00F2               	movwf	I2C_Master_Read@a
  1202  0081  00F3               	movwf	I2C_Master_Read@a+1
  1203  0082  120A  118A  26A7  120A  118A  	fcall	_I2C_Master_Read
  1204  0087  0872               	movf	?_I2C_Master_Read,w
  1205  0088  1283               	bcf	3,5	;RP0=0, select bank0
  1206  0089  1303               	bcf	3,6	;RP1=0, select bank0
  1207  008A  0449               	iorwf	??_main,w
  1208  008B  00AA               	movwf	_Ay
  1209  008C  0873               	movf	?_I2C_Master_Read+1,w
  1210  008D  044A               	iorwf	??_main+1,w
  1211  008E  00AB               	movwf	_Ay+1
  1212  008F                     l2142:
  1213                           
  1214                           ;Maestro I2C.c: 120:         Az = ((int)I2C_Master_Read(0)<<8) | (int)I2C_Master_Read(0)
      +                          ;
  1215  008F  3000               	movlw	0
  1216  0090  00F2               	movwf	I2C_Master_Read@a
  1217  0091  00F3               	movwf	I2C_Master_Read@a+1
  1218  0092  120A  118A  26A7  120A  118A  	fcall	_I2C_Master_Read
  1219  0097  0872               	movf	?_I2C_Master_Read,w
  1220  0098  1283               	bcf	3,5	;RP0=0, select bank0
  1221  0099  1303               	bcf	3,6	;RP1=0, select bank0
  1222  009A  00C9               	movwf	??_main
  1223  009B  0873               	movf	?_I2C_Master_Read+1,w
  1224  009C  00CA               	movwf	??_main+1
  1225  009D  0849               	movf	??_main,w
  1226  009E  00CA               	movwf	??_main+1
  1227  009F  01C9               	clrf	??_main
  1228  00A0  3000               	movlw	0
  1229  00A1  00F2               	movwf	I2C_Master_Read@a
  1230  00A2  00F3               	movwf	I2C_Master_Read@a+1
  1231  00A3  120A  118A  26A7  120A  118A  	fcall	_I2C_Master_Read
  1232  00A8  0872               	movf	?_I2C_Master_Read,w
  1233  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1234  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1235  00AB  0449               	iorwf	??_main,w
  1236  00AC  00A8               	movwf	_Az
  1237  00AD  0873               	movf	?_I2C_Master_Read+1,w
  1238  00AE  044A               	iorwf	??_main+1,w
  1239  00AF  00A9               	movwf	_Az+1
  1240  00B0                     l2144:
  1241                           
  1242                           ;Maestro I2C.c: 121:         Temp = ((int)I2C_Master_Read(0)<<8) | (int)I2C_Master_Read(
      +                          0);
  1243  00B0  3000               	movlw	0
  1244  00B1  00F2               	movwf	I2C_Master_Read@a
  1245  00B2  00F3               	movwf	I2C_Master_Read@a+1
  1246  00B3  120A  118A  26A7  120A  118A  	fcall	_I2C_Master_Read
  1247  00B8  0872               	movf	?_I2C_Master_Read,w
  1248  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1249  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  1250  00BB  00C9               	movwf	??_main
  1251  00BC  0873               	movf	?_I2C_Master_Read+1,w
  1252  00BD  00CA               	movwf	??_main+1
  1253  00BE  0849               	movf	??_main,w
  1254  00BF  00CA               	movwf	??_main+1
  1255  00C0  01C9               	clrf	??_main
  1256  00C1  3000               	movlw	0
  1257  00C2  00F2               	movwf	I2C_Master_Read@a
  1258  00C3  00F3               	movwf	I2C_Master_Read@a+1
  1259  00C4  120A  118A  26A7  120A  118A  	fcall	_I2C_Master_Read
  1260  00C9  0872               	movf	?_I2C_Master_Read,w
  1261  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1262  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1263  00CC  0449               	iorwf	??_main,w
  1264  00CD  00A6               	movwf	_Temp
  1265  00CE  0873               	movf	?_I2C_Master_Read+1,w
  1266  00CF  044A               	iorwf	??_main+1,w
  1267  00D0  00A7               	movwf	_Temp+1
  1268  00D1                     l2146:
  1269                           
  1270                           ;Maestro I2C.c: 122:         Gx = ((int)I2C_Master_Read(0)<<8) | (int)I2C_Master_Read(0)
      +                          ;
  1271  00D1  3000               	movlw	0
  1272  00D2  00F2               	movwf	I2C_Master_Read@a
  1273  00D3  00F3               	movwf	I2C_Master_Read@a+1
  1274  00D4  120A  118A  26A7  120A  118A  	fcall	_I2C_Master_Read
  1275  00D9  0872               	movf	?_I2C_Master_Read,w
  1276  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1277  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  1278  00DC  00C9               	movwf	??_main
  1279  00DD  0873               	movf	?_I2C_Master_Read+1,w
  1280  00DE  00CA               	movwf	??_main+1
  1281  00DF  0849               	movf	??_main,w
  1282  00E0  00CA               	movwf	??_main+1
  1283  00E1  01C9               	clrf	??_main
  1284  00E2  3000               	movlw	0
  1285  00E3  00F2               	movwf	I2C_Master_Read@a
  1286  00E4  00F3               	movwf	I2C_Master_Read@a+1
  1287  00E5  120A  118A  26A7  120A  118A  	fcall	_I2C_Master_Read
  1288  00EA  0872               	movf	?_I2C_Master_Read,w
  1289  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1290  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  1291  00ED  0449               	iorwf	??_main,w
  1292  00EE  00A4               	movwf	_Gx
  1293  00EF  0873               	movf	?_I2C_Master_Read+1,w
  1294  00F0  044A               	iorwf	??_main+1,w
  1295  00F1  00A5               	movwf	_Gx+1
  1296  00F2                     l2148:
  1297                           
  1298                           ;Maestro I2C.c: 123:         Gy = ((int)I2C_Master_Read(0)<<8) | (int)I2C_Master_Read(0)
      +                          ;
  1299  00F2  3000               	movlw	0
  1300  00F3  00F2               	movwf	I2C_Master_Read@a
  1301  00F4  00F3               	movwf	I2C_Master_Read@a+1
  1302  00F5  120A  118A  26A7  120A  118A  	fcall	_I2C_Master_Read
  1303  00FA  0872               	movf	?_I2C_Master_Read,w
  1304  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1305  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1306  00FD  00C9               	movwf	??_main
  1307  00FE  0873               	movf	?_I2C_Master_Read+1,w
  1308  00FF  00CA               	movwf	??_main+1
  1309  0100  0849               	movf	??_main,w
  1310  0101  00CA               	movwf	??_main+1
  1311  0102  01C9               	clrf	??_main
  1312  0103  3000               	movlw	0
  1313  0104  00F2               	movwf	I2C_Master_Read@a
  1314  0105  00F3               	movwf	I2C_Master_Read@a+1
  1315  0106  120A  118A  26A7  120A  118A  	fcall	_I2C_Master_Read
  1316  010B  0872               	movf	?_I2C_Master_Read,w
  1317  010C  1283               	bcf	3,5	;RP0=0, select bank0
  1318  010D  1303               	bcf	3,6	;RP1=0, select bank0
  1319  010E  0449               	iorwf	??_main,w
  1320  010F  00A2               	movwf	_Gy
  1321  0110  0873               	movf	?_I2C_Master_Read+1,w
  1322  0111  044A               	iorwf	??_main+1,w
  1323  0112  00A3               	movwf	_Gy+1
  1324  0113                     l2150:
  1325                           
  1326                           ;Maestro I2C.c: 124:         Gz = ((int)I2C_Master_Read(0)<<8) | (int)I2C_Master_Read(1)
      +                          ;
  1327  0113  3000               	movlw	0
  1328  0114  00F2               	movwf	I2C_Master_Read@a
  1329  0115  00F3               	movwf	I2C_Master_Read@a+1
  1330  0116  120A  118A  26A7  120A  118A  	fcall	_I2C_Master_Read
  1331  011B  0872               	movf	?_I2C_Master_Read,w
  1332  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1333  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1334  011E  00C9               	movwf	??_main
  1335  011F  0873               	movf	?_I2C_Master_Read+1,w
  1336  0120  00CA               	movwf	??_main+1
  1337  0121  0849               	movf	??_main,w
  1338  0122  00CA               	movwf	??_main+1
  1339  0123  01C9               	clrf	??_main
  1340  0124  3001               	movlw	1
  1341  0125  00F2               	movwf	I2C_Master_Read@a
  1342  0126  3000               	movlw	0
  1343  0127  00F3               	movwf	I2C_Master_Read@a+1
  1344  0128  120A  118A  26A7  120A  118A  	fcall	_I2C_Master_Read
  1345  012D  0872               	movf	?_I2C_Master_Read,w
  1346  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1347  012F  1303               	bcf	3,6	;RP1=0, select bank0
  1348  0130  0449               	iorwf	??_main,w
  1349  0131  00A0               	movwf	_Gz
  1350  0132  0873               	movf	?_I2C_Master_Read+1,w
  1351  0133  044A               	iorwf	??_main+1,w
  1352  0134  00A1               	movwf	_Gz+1
  1353  0135                     l2152:
  1354                           
  1355                           ;Maestro I2C.c: 126:         I2C_Master_Stop();
  1356  0135  120A  118A  2746  120A  118A  	fcall	_I2C_Master_Stop
  1357                           
  1358                           ;Maestro I2C.c: 133:         divisor_dec(Gx,Giro_digx);
  1359  013A  307B               	movlw	(low (_Giro_digx| 0))& (0+255)
  1360  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1361  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1362  013D  00C9               	movwf	??_main
  1363  013E  0849               	movf	??_main,w
  1364  013F  00F9               	movwf	divisor_dec@dig1
  1365  0140  0824               	movf	_Gx,w
  1366  0141  120A  118A  24F8  120A  118A  	fcall	_divisor_dec
  1367  0146                     l2154:
  1368                           
  1369                           ;Maestro I2C.c: 136:         uni_x = tabla_numASCII(Giro_digx[0]);
  1370  0146  087B               	movf	_Giro_digx,w
  1371  0147  120A  118A  25CE  120A  118A  	fcall	_tabla_numASCII
  1372  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1373  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1374  014E  00C9               	movwf	??_main
  1375  014F  0849               	movf	??_main,w
  1376  0150  00FA               	movwf	_uni_x
  1377  0151                     l2156:
  1378                           
  1379                           ;Maestro I2C.c: 137:         dec_x = tabla_numASCII(Giro_digx[1]);
  1380  0151  087C               	movf	_Giro_digx+1,w
  1381  0152  120A  118A  25CE  120A  118A  	fcall	_tabla_numASCII
  1382  0157  1283               	bcf	3,5	;RP0=0, select bank0
  1383  0158  1303               	bcf	3,6	;RP1=0, select bank0
  1384  0159  00C9               	movwf	??_main
  1385  015A  0849               	movf	??_main,w
  1386  015B  00B7               	movwf	_dec_x
  1387  015C                     l2158:
  1388                           
  1389                           ;Maestro I2C.c: 138:         cen_x = tabla_numASCII(Giro_digx[2]);
  1390  015C  087D               	movf	_Giro_digx+2,w
  1391  015D  120A  118A  25CE  120A  118A  	fcall	_tabla_numASCII
  1392  0162  1283               	bcf	3,5	;RP0=0, select bank0
  1393  0163  1303               	bcf	3,6	;RP1=0, select bank0
  1394  0164  00C9               	movwf	??_main
  1395  0165  0849               	movf	??_main,w
  1396  0166  00B6               	movwf	_cen_x
  1397  0167                     l2160:
  1398                           
  1399                           ;Maestro I2C.c: 141:         set_cursor(1,0);
  1400  0167  01F4               	clrf	set_cursor@posicion
  1401  0168  3001               	movlw	1
  1402  0169  120A  118A  2548  120A  118A  	fcall	_set_cursor
  1403  016E                     l2162:
  1404                           
  1405                           ;Maestro I2C.c: 142:         Escribir_stringLCD("X:    Y:     S:");
  1406  016E  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1407  016F  120A  118A  26D5  120A  118A  	fcall	_Escribir_stringLCD
  1408  0174                     l2164:
  1409                           
  1410                           ;Maestro I2C.c: 144:         set_cursor(2,0);
  1411  0174  01F4               	clrf	set_cursor@posicion
  1412  0175  3002               	movlw	2
  1413  0176  120A  118A  2548  120A  118A  	fcall	_set_cursor
  1414  017B                     l2166:
  1415                           
  1416                           ;Maestro I2C.c: 145:         Escribir_caracterLCD(cen_x);
  1417  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1418  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1419  017D  0836               	movf	_cen_x,w
  1420  017E  120A  118A  2730  120A  118A  	fcall	_Escribir_caracterLCD
  1421  0183                     l2168:
  1422                           
  1423                           ;Maestro I2C.c: 146:         Escribir_caracterLCD(dec_x);
  1424  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1425  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1426  0185  0837               	movf	_dec_x,w
  1427  0186  120A  118A  2730  120A  118A  	fcall	_Escribir_caracterLCD
  1428  018B                     l2170:
  1429                           
  1430                           ;Maestro I2C.c: 147:         Escribir_caracterLCD(uni_x);
  1431  018B  087A               	movf	_uni_x,w
  1432  018C  120A  118A  2730  120A  118A  	fcall	_Escribir_caracterLCD
  1433  0191  2823               	goto	l2126
  1434  0192  120A  118A  280C   	ljmp	start
  1435  0195                     __end_of_main:
  1436                           
  1437                           	psect	text1
  1438  05CE                     __ptext1:	
  1439 ;; *************** function _tabla_numASCII *****************
  1440 ;; Defined at:
  1441 ;;		line 201 in file "Maestro I2C.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;  a               1    wreg     unsigned char 
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;  a               1    4[COMMON] unsigned char 
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  1    wreg      unsigned char 
  1448 ;; Registers used:
  1449 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1455 ;;      Params:         0       0       0       0       0
  1456 ;;      Locals:         1       0       0       0       0
  1457 ;;      Temps:          2       0       0       0       0
  1458 ;;      Totals:         3       0       0       0       0
  1459 ;;Total ram usage:        3 bytes
  1460 ;; Hardware stack levels used: 1
  1461 ;; Hardware stack levels required when called: 1
  1462 ;; This function calls:
  1463 ;;		Nothing
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           
  1470                           ;psect for function _tabla_numASCII
  1471  05CE                     _tabla_numASCII:
  1472                           
  1473                           ;incstack = 0
  1474                           ; Regs used in _tabla_numASCII: [wreg-fsr0h+status,2+status,0]
  1475                           ;tabla_numASCII@a stored from wreg
  1476  05CE  00F4               	movwf	tabla_numASCII@a
  1477  05CF                     l1864:
  1478                           
  1479                           ;Maestro I2C.c: 202:     switch(a){
  1480  05CF  2DE4               	goto	l1928
  1481  05D0                     l1866:
  1482                           
  1483                           ;Maestro I2C.c: 204:             return 48;
  1484  05D0  3030               	movlw	48
  1485  05D1  2E0C               	goto	l122
  1486  05D2                     l1872:
  1487                           
  1488                           ;Maestro I2C.c: 207:             return 49;
  1489  05D2  3031               	movlw	49
  1490  05D3  2E0C               	goto	l122
  1491  05D4                     l1878:
  1492                           
  1493                           ;Maestro I2C.c: 210:             return 50;
  1494  05D4  3032               	movlw	50
  1495  05D5  2E0C               	goto	l122
  1496  05D6                     l1884:
  1497                           
  1498                           ;Maestro I2C.c: 213:             return 51;
  1499  05D6  3033               	movlw	51
  1500  05D7  2E0C               	goto	l122
  1501  05D8                     l1890:
  1502                           
  1503                           ;Maestro I2C.c: 216:             return 52;
  1504  05D8  3034               	movlw	52
  1505  05D9  2E0C               	goto	l122
  1506  05DA                     l1896:
  1507                           
  1508                           ;Maestro I2C.c: 219:             return 53;
  1509  05DA  3035               	movlw	53
  1510  05DB  2E0C               	goto	l122
  1511  05DC                     l1902:
  1512                           
  1513                           ;Maestro I2C.c: 222:             return 54;
  1514  05DC  3036               	movlw	54
  1515  05DD  2E0C               	goto	l122
  1516  05DE                     l1908:
  1517                           
  1518                           ;Maestro I2C.c: 225:             return 55;
  1519  05DE  3037               	movlw	55
  1520  05DF  2E0C               	goto	l122
  1521  05E0                     l1914:
  1522                           
  1523                           ;Maestro I2C.c: 228:             return 56;
  1524  05E0  3038               	movlw	56
  1525  05E1  2E0C               	goto	l122
  1526  05E2                     l1920:
  1527                           
  1528                           ;Maestro I2C.c: 231:             return 57;
  1529  05E2  3039               	movlw	57
  1530  05E3  2E0C               	goto	l122
  1531  05E4                     l1928:
  1532  05E4  0874               	movf	tabla_numASCII@a,w
  1533  05E5  00F2               	movwf	??_tabla_numASCII
  1534  05E6  01F3               	clrf	??_tabla_numASCII+1
  1535                           
  1536                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1537                           ; Switch size 1, requested type "simple"
  1538                           ; Number of cases is 1, Range of values is 0 to 0
  1539                           ; switch strategies available:
  1540                           ; Name         Instructions Cycles
  1541                           ; simple_byte            4     3 (average)
  1542                           ; direct_byte           11     8 (fixed)
  1543                           ; jumptable            260     6 (fixed)
  1544                           ;	Chosen strategy is simple_byte
  1545  05E7  0873               	movf	??_tabla_numASCII+1,w
  1546  05E8  3A00               	xorlw	0	; case 0
  1547  05E9  1903               	skipnz
  1548  05EA  2DEC               	goto	l2192
  1549  05EB  2E0C               	goto	l122
  1550  05EC                     l2192:
  1551                           
  1552                           ; Switch size 1, requested type "simple"
  1553                           ; Number of cases is 10, Range of values is 0 to 9
  1554                           ; switch strategies available:
  1555                           ; Name         Instructions Cycles
  1556                           ; simple_byte           31    16 (average)
  1557                           ; direct_byte           38     8 (fixed)
  1558                           ; jumptable            260     6 (fixed)
  1559                           ;	Chosen strategy is simple_byte
  1560  05EC  0872               	movf	??_tabla_numASCII,w
  1561  05ED  3A00               	xorlw	0	; case 0
  1562  05EE  1903               	skipnz
  1563  05EF  2DD0               	goto	l1866
  1564  05F0  3A01               	xorlw	1	; case 1
  1565  05F1  1903               	skipnz
  1566  05F2  2DD2               	goto	l1872
  1567  05F3  3A03               	xorlw	3	; case 2
  1568  05F4  1903               	skipnz
  1569  05F5  2DD4               	goto	l1878
  1570  05F6  3A01               	xorlw	1	; case 3
  1571  05F7  1903               	skipnz
  1572  05F8  2DD6               	goto	l1884
  1573  05F9  3A07               	xorlw	7	; case 4
  1574  05FA  1903               	skipnz
  1575  05FB  2DD8               	goto	l1890
  1576  05FC  3A01               	xorlw	1	; case 5
  1577  05FD  1903               	skipnz
  1578  05FE  2DDA               	goto	l1896
  1579  05FF  3A03               	xorlw	3	; case 6
  1580  0600  1903               	skipnz
  1581  0601  2DDC               	goto	l1902
  1582  0602  3A01               	xorlw	1	; case 7
  1583  0603  1903               	skipnz
  1584  0604  2DDE               	goto	l1908
  1585  0605  3A0F               	xorlw	15	; case 8
  1586  0606  1903               	skipnz
  1587  0607  2DE0               	goto	l1914
  1588  0608  3A01               	xorlw	1	; case 9
  1589  0609  1903               	skipnz
  1590  060A  2DE2               	goto	l1920
  1591  060B  2E0C               	goto	l122
  1592  060C                     l122:
  1593  060C  0008               	return
  1594  060D                     __end_of_tabla_numASCII:
  1595                           
  1596                           	psect	text2
  1597  02F4                     __ptext2:	
  1598 ;; *************** function _setup *****************
  1599 ;; Defined at:
  1600 ;;		line 153 in file "Maestro I2C.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;		None
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;		None
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  1    wreg      void 
  1607 ;; Registers used:
  1608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1614 ;;      Params:         0       0       0       0       0
  1615 ;;      Locals:         0       0       0       0       0
  1616 ;;      Temps:          0       3       0       0       0
  1617 ;;      Totals:         0       3       0       0       0
  1618 ;;Total ram usage:        3 bytes
  1619 ;; Hardware stack levels used: 1
  1620 ;; Hardware stack levels required when called: 4
  1621 ;; This function calls:
  1622 ;;		_Config_USART
  1623 ;;		_Escribir_stringLCD
  1624 ;;		_I2C_Master_Init
  1625 ;;		_Iniciar_LCD
  1626 ;;		_InitMPU6050
  1627 ;;		_Limpiar_pantallaLCD
  1628 ;;		_initOsc
  1629 ;;		_set_cursor
  1630 ;; This function is called by:
  1631 ;;		_main
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           
  1636                           ;psect for function _setup
  1637  02F4                     _setup:
  1638  02F4                     l2086:	
  1639                           ;incstack = 0
  1640                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1641                           
  1642                           
  1643                           ;Maestro I2C.c: 156:     ANSEL = 0;
  1644  02F4  1683               	bsf	3,5	;RP0=1, select bank3
  1645  02F5  1703               	bsf	3,6	;RP1=1, select bank3
  1646  02F6  0188               	clrf	8	;volatile
  1647                           
  1648                           ;Maestro I2C.c: 157:     ANSELH = 0;
  1649  02F7  0189               	clrf	9	;volatile
  1650                           
  1651                           ;Maestro I2C.c: 159:     TRISA = 0;
  1652  02F8  1683               	bsf	3,5	;RP0=1, select bank1
  1653  02F9  1303               	bcf	3,6	;RP1=0, select bank1
  1654  02FA  0185               	clrf	5	;volatile
  1655                           
  1656                           ;Maestro I2C.c: 160:     TRISB = 0;
  1657  02FB  0186               	clrf	6	;volatile
  1658                           
  1659                           ;Maestro I2C.c: 161:     TRISD = 0;
  1660  02FC  0188               	clrf	8	;volatile
  1661                           
  1662                           ;Maestro I2C.c: 162:     TRISE = 0;
  1663  02FD  0189               	clrf	9	;volatile
  1664                           
  1665                           ;Maestro I2C.c: 164:     PORTA = 0;
  1666  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  1667  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  1668  0300  0185               	clrf	5	;volatile
  1669                           
  1670                           ;Maestro I2C.c: 165:     PORTD = 0;
  1671  0301  0188               	clrf	8	;volatile
  1672                           
  1673                           ;Maestro I2C.c: 166:     PORTE = 0;
  1674  0302  0189               	clrf	9	;volatile
  1675                           
  1676                           ;Maestro I2C.c: 167:     PORTB = 0;
  1677  0303  0186               	clrf	6	;volatile
  1678                           
  1679                           ;Maestro I2C.c: 168:     PORTC = 0;
  1680  0304  0187               	clrf	7	;volatile
  1681  0305                     l2088:
  1682                           
  1683                           ;Maestro I2C.c: 171:     initOsc(4);
  1684  0305  3004               	movlw	4
  1685  0306  120A  118A  2677  120A  118A  	fcall	_initOsc
  1686  030B                     l2090:
  1687                           
  1688                           ;Maestro I2C.c: 174:     I2C_Master_Init(100000);
  1689  030B  3000               	movlw	0
  1690  030C  1283               	bcf	3,5	;RP0=0, select bank0
  1691  030D  1303               	bcf	3,6	;RP1=0, select bank0
  1692  030E  00C1               	movwf	I2C_Master_Init@c+3
  1693  030F  3001               	movlw	1
  1694  0310  00C0               	movwf	I2C_Master_Init@c+2
  1695  0311  3086               	movlw	134
  1696  0312  00BF               	movwf	I2C_Master_Init@c+1
  1697  0313  30A0               	movlw	160
  1698  0314  00BE               	movwf	I2C_Master_Init@c
  1699  0315  120A  118A  260D  120A  118A  	fcall	_I2C_Master_Init
  1700  031A                     l2092:
  1701                           
  1702                           ;Maestro I2C.c: 177:     InitMPU6050();
  1703  031A  120A  118A  2245  120A  118A  	fcall	_InitMPU6050
  1704  031F                     l2094:
  1705                           
  1706                           ;Maestro I2C.c: 180:     Iniciar_LCD();
  1707  031F  120A  118A  243A  120A  118A  	fcall	_Iniciar_LCD
  1708  0324                     l2096:
  1709                           
  1710                           ;Maestro I2C.c: 181:     Limpiar_pantallaLCD();
  1711  0324  120A  118A  26FB  120A  118A  	fcall	_Limpiar_pantallaLCD
  1712  0329                     l2098:
  1713                           
  1714                           ;Maestro I2C.c: 182:     set_cursor(1,0);
  1715  0329  01F4               	clrf	set_cursor@posicion
  1716  032A  3001               	movlw	1
  1717  032B  120A  118A  2548  120A  118A  	fcall	_set_cursor
  1718  0330                     l2100:
  1719                           
  1720                           ;Maestro I2C.c: 183:     Escribir_stringLCD("Miniproyecto 2");
  1721  0330  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1722  0331  120A  118A  26D5  120A  118A  	fcall	_Escribir_stringLCD
  1723  0336                     l2102:
  1724                           
  1725                           ;Maestro I2C.c: 184:     set_cursor(2,2);
  1726  0336  3002               	movlw	2
  1727  0337  1283               	bcf	3,5	;RP0=0, select bank0
  1728  0338  1303               	bcf	3,6	;RP1=0, select bank0
  1729  0339  00C6               	movwf	??_setup
  1730  033A  0846               	movf	??_setup,w
  1731  033B  00F4               	movwf	set_cursor@posicion
  1732  033C  3002               	movlw	2
  1733  033D  120A  118A  2548  120A  118A  	fcall	_set_cursor
  1734  0342                     l2104:
  1735                           
  1736                           ;Maestro I2C.c: 185:     Escribir_stringLCD("Jose Santizo");
  1737  0342  3020               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1738  0343  120A  118A  26D5  120A  118A  	fcall	_Escribir_stringLCD
  1739  0348                     l2106:
  1740                           
  1741                           ;Maestro I2C.c: 186:     _delay((unsigned long)((5000)*(8000000/4000.0)));
  1742  0348  3033               	movlw	51
  1743  0349  1283               	bcf	3,5	;RP0=0, select bank0
  1744  034A  1303               	bcf	3,6	;RP1=0, select bank0
  1745  034B  00C8               	movwf	??_setup+2
  1746  034C  30BB               	movlw	187
  1747  034D  00C7               	movwf	??_setup+1
  1748  034E  30DF               	movlw	223
  1749  034F  00C6               	movwf	??_setup
  1750  0350                     u1407:
  1751  0350  0BC6               	decfsz	??_setup,f
  1752  0351  2B50               	goto	u1407
  1753  0352  0BC7               	decfsz	??_setup+1,f
  1754  0353  2B50               	goto	u1407
  1755  0354  0BC8               	decfsz	??_setup+2,f
  1756  0355  2B50               	goto	u1407
  1757  0356                     l2108:
  1758                           
  1759                           ;Maestro I2C.c: 187:     Limpiar_pantallaLCD();
  1760  0356  120A  118A  26FB  120A  118A  	fcall	_Limpiar_pantallaLCD
  1761  035B                     l2110:
  1762                           
  1763                           ;Maestro I2C.c: 190:     Config_USART(9600,4);
  1764  035B  3080               	movlw	128
  1765  035C  00F2               	movwf	Config_USART@baud_rate
  1766  035D  3025               	movlw	37
  1767  035E  00F3               	movwf	Config_USART@baud_rate+1
  1768  035F  3004               	movlw	4
  1769  0360  00F4               	movwf	Config_USART@Freq
  1770  0361  3000               	movlw	0
  1771  0362  00F5               	movwf	Config_USART@Freq+1
  1772  0363  120A  118A  2195  120A  118A  	fcall	_Config_USART
  1773  0368                     l112:
  1774  0368  0008               	return
  1775  0369                     __end_of_setup:
  1776                           
  1777                           	psect	text3
  1778  0548                     __ptext3:	
  1779 ;; *************** function _set_cursor *****************
  1780 ;; Defined at:
  1781 ;;		line 77 in file "LCD.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;  linea           1    wreg     unsigned char 
  1784 ;;  posicion        1    4[COMMON] unsigned char 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;  linea           1    7[COMMON] unsigned char 
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      void 
  1789 ;; Registers used:
  1790 ;;		wreg, status,2, status,0, pclath, cstack
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1796 ;;      Params:         1       0       0       0       0
  1797 ;;      Locals:         1       0       0       0       0
  1798 ;;      Temps:          2       0       0       0       0
  1799 ;;      Totals:         4       0       0       0       0
  1800 ;;Total ram usage:        4 bytes
  1801 ;; Hardware stack levels used: 1
  1802 ;; Hardware stack levels required when called: 3
  1803 ;; This function calls:
  1804 ;;		_Escribir_comandoLCD
  1805 ;; This function is called by:
  1806 ;;		_main
  1807 ;;		_setup
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           
  1812                           ;psect for function _set_cursor
  1813  0548                     _set_cursor:
  1814                           
  1815                           ;incstack = 0
  1816                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1817                           ;set_cursor@linea stored from wreg
  1818  0548  00F7               	movwf	set_cursor@linea
  1819  0549                     l1518:
  1820                           
  1821                           ;LCD.c: 78:     PORTDbits.RD3 = 0; PORTDbits.RD4 = 0;
  1822  0549  1283               	bcf	3,5	;RP0=0, select bank0
  1823  054A  1303               	bcf	3,6	;RP1=0, select bank0
  1824  054B  1188               	bcf	8,3	;volatile
  1825  054C  1208               	bcf	8,4	;volatile
  1826  054D                     l1520:
  1827                           
  1828                           ;LCD.c: 81:     if (linea == 1){ Escribir_comandoLCD(0b10000000);}
  1829  054D  0377               	decf	set_cursor@linea,w
  1830  054E  1D03               	btfss	3,2
  1831  054F  2D51               	goto	u781
  1832  0550  2D52               	goto	u780
  1833  0551                     u781:
  1834  0551  2D59               	goto	l1524
  1835  0552                     u780:
  1836  0552                     l1522:
  1837  0552  3080               	movlw	128
  1838  0553  120A  118A  258B  120A  118A  	fcall	_Escribir_comandoLCD
  1839  0558  2D65               	goto	l1528
  1840  0559                     l1524:
  1841  0559  3002               	movlw	2
  1842  055A  0677               	xorwf	set_cursor@linea,w
  1843  055B  1D03               	btfss	3,2
  1844  055C  2D5E               	goto	u791
  1845  055D  2D5F               	goto	u790
  1846  055E                     u791:
  1847  055E  2D65               	goto	l1528
  1848  055F                     u790:
  1849  055F                     l1526:
  1850  055F  30C0               	movlw	192
  1851  0560  120A  118A  258B  120A  118A  	fcall	_Escribir_comandoLCD
  1852  0565                     l1528:
  1853                           
  1854                           ;LCD.c: 84:     _delay((unsigned long)((40)*(8000000/4000.0)));
  1855  0565  3068               	movlw	104
  1856  0566  00F6               	movwf	??_set_cursor+1
  1857  0567  30E4               	movlw	228
  1858  0568  00F5               	movwf	??_set_cursor
  1859  0569                     u1417:
  1860  0569  0BF5               	decfsz	??_set_cursor,f
  1861  056A  2D69               	goto	u1417
  1862  056B  0BF6               	decfsz	??_set_cursor+1,f
  1863  056C  2D69               	goto	u1417
  1864  056D  0000               	nop
  1865  056E                     l1530:
  1866                           
  1867                           ;LCD.c: 86:     if (posicion != 0){
  1868  056E  0874               	movf	set_cursor@posicion,w
  1869  056F  1903               	btfsc	3,2
  1870  0570  2D72               	goto	u801
  1871  0571  2D73               	goto	u800
  1872  0572                     u801:
  1873  0572  2D8A               	goto	l241
  1874  0573                     u800:
  1875  0573  2D7C               	goto	l1538
  1876  0574                     l1534:
  1877                           
  1878                           ;LCD.c: 88:             Escribir_comandoLCD(0b00010100);
  1879  0574  3014               	movlw	20
  1880  0575  120A  118A  258B  120A  118A  	fcall	_Escribir_comandoLCD
  1881  057A                     l1536:
  1882                           
  1883                           ;LCD.c: 89:             posicion--;
  1884  057A  3001               	movlw	1
  1885  057B  02F4               	subwf	set_cursor@posicion,f
  1886  057C                     l1538:
  1887                           
  1888                           ;LCD.c: 87:         while(posicion > 0){
  1889  057C  0874               	movf	set_cursor@posicion,w
  1890  057D  1D03               	btfss	3,2
  1891  057E  2D80               	goto	u811
  1892  057F  2D81               	goto	u810
  1893  0580                     u811:
  1894  0580  2D74               	goto	l1534
  1895  0581                     u810:
  1896  0581                     l1540:
  1897                           
  1898                           ;LCD.c: 92:         _delay((unsigned long)((40)*(8000000/4000.0)));
  1899  0581  3068               	movlw	104
  1900  0582  00F6               	movwf	??_set_cursor+1
  1901  0583  30E4               	movlw	228
  1902  0584  00F5               	movwf	??_set_cursor
  1903  0585                     u1427:
  1904  0585  0BF5               	decfsz	??_set_cursor,f
  1905  0586  2D85               	goto	u1427
  1906  0587  0BF6               	decfsz	??_set_cursor+1,f
  1907  0588  2D85               	goto	u1427
  1908  0589  0000               	nop
  1909  058A                     l241:
  1910  058A  0008               	return
  1911  058B                     __end_of_set_cursor:
  1912                           
  1913                           	psect	text4
  1914  0677                     __ptext4:	
  1915 ;; *************** function _initOsc *****************
  1916 ;; Defined at:
  1917 ;;		line 12 in file "Oscilador.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  Valor           1    wreg     unsigned char 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  Valor           1    2[COMMON] unsigned char 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  1    wreg      void 
  1924 ;; Registers used:
  1925 ;;		wreg, status,2, status,0
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1931 ;;      Params:         0       0       0       0       0
  1932 ;;      Locals:         1       0       0       0       0
  1933 ;;      Temps:          0       0       0       0       0
  1934 ;;      Totals:         1       0       0       0       0
  1935 ;;Total ram usage:        1 bytes
  1936 ;; Hardware stack levels used: 1
  1937 ;; Hardware stack levels required when called: 1
  1938 ;; This function calls:
  1939 ;;		Nothing
  1940 ;; This function is called by:
  1941 ;;		_setup
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           
  1946                           ;psect for function _initOsc
  1947  0677                     _initOsc:
  1948                           
  1949                           ;incstack = 0
  1950                           ; Regs used in _initOsc: [wreg+status,2+status,0]
  1951                           ;initOsc@Valor stored from wreg
  1952  0677  00F2               	movwf	initOsc@Valor
  1953  0678                     l1552:
  1954                           
  1955                           ;Oscilador.c: 14:     if(Valor == 8){
  1956  0678  3008               	movlw	8
  1957  0679  0672               	xorwf	initOsc@Valor,w
  1958  067A  1D03               	btfss	3,2
  1959  067B  2E7D               	goto	u831
  1960  067C  2E7E               	goto	u830
  1961  067D                     u831:
  1962  067D  2E83               	goto	l1556
  1963  067E                     u830:
  1964  067E                     l1554:
  1965                           
  1966                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
  1967  067E  1683               	bsf	3,5	;RP0=1, select bank1
  1968  067F  1303               	bcf	3,6	;RP1=0, select bank1
  1969  0680  160F               	bsf	15,4	;volatile
  1970                           
  1971                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
  1972  0681  168F               	bsf	15,5	;volatile
  1973                           
  1974                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
  1975  0682  170F               	bsf	15,6	;volatile
  1976  0683                     l1556:
  1977                           
  1978                           ;Oscilador.c: 19:     if(Valor == 4){
  1979  0683  3004               	movlw	4
  1980  0684  0672               	xorwf	initOsc@Valor,w
  1981  0685  1D03               	btfss	3,2
  1982  0686  2E88               	goto	u841
  1983  0687  2E89               	goto	u840
  1984  0688                     u841:
  1985  0688  2E8E               	goto	l1560
  1986  0689                     u840:
  1987  0689                     l1558:
  1988                           
  1989                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
  1990  0689  1683               	bsf	3,5	;RP0=1, select bank1
  1991  068A  1303               	bcf	3,6	;RP1=0, select bank1
  1992  068B  120F               	bcf	15,4	;volatile
  1993                           
  1994                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
  1995  068C  168F               	bsf	15,5	;volatile
  1996                           
  1997                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
  1998  068D  170F               	bsf	15,6	;volatile
  1999  068E                     l1560:
  2000                           
  2001                           ;Oscilador.c: 24:     if(Valor == 2){
  2002  068E  3002               	movlw	2
  2003  068F  0672               	xorwf	initOsc@Valor,w
  2004  0690  1D03               	btfss	3,2
  2005  0691  2E93               	goto	u851
  2006  0692  2E94               	goto	u850
  2007  0693                     u851:
  2008  0693  2E99               	goto	l1564
  2009  0694                     u850:
  2010  0694                     l1562:
  2011                           
  2012                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
  2013  0694  1683               	bsf	3,5	;RP0=1, select bank1
  2014  0695  1303               	bcf	3,6	;RP1=0, select bank1
  2015  0696  160F               	bsf	15,4	;volatile
  2016                           
  2017                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
  2018  0697  128F               	bcf	15,5	;volatile
  2019                           
  2020                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
  2021  0698  170F               	bsf	15,6	;volatile
  2022  0699                     l1564:
  2023                           
  2024                           ;Oscilador.c: 29:     if(Valor == 1){
  2025  0699  0372               	decf	initOsc@Valor,w
  2026  069A  1D03               	btfss	3,2
  2027  069B  2E9D               	goto	u861
  2028  069C  2E9E               	goto	u860
  2029  069D                     u861:
  2030  069D  2EA3               	goto	l249
  2031  069E                     u860:
  2032  069E                     l1566:
  2033                           
  2034                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
  2035  069E  1683               	bsf	3,5	;RP0=1, select bank1
  2036  069F  1303               	bcf	3,6	;RP1=0, select bank1
  2037  06A0  120F               	bcf	15,4	;volatile
  2038                           
  2039                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
  2040  06A1  128F               	bcf	15,5	;volatile
  2041                           
  2042                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
  2043  06A2  170F               	bsf	15,6	;volatile
  2044  06A3                     l249:	
  2045                           ;Oscilador.c: 33:     }
  2046                           
  2047                           
  2048                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
  2049  06A3  1683               	bsf	3,5	;RP0=1, select bank1
  2050  06A4  1303               	bcf	3,6	;RP1=0, select bank1
  2051  06A5  140F               	bsf	15,0	;volatile
  2052  06A6                     l250:
  2053  06A6  0008               	return
  2054  06A7                     __end_of_initOsc:
  2055                           
  2056                           	psect	text5
  2057  06FB                     __ptext5:	
  2058 ;; *************** function _Limpiar_pantallaLCD *****************
  2059 ;; Defined at:
  2060 ;;		line 69 in file "LCD.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;		None
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;		None
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  1    wreg      void 
  2067 ;; Registers used:
  2068 ;;		wreg, status,2, status,0, pclath, cstack
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2074 ;;      Params:         0       0       0       0       0
  2075 ;;      Locals:         0       0       0       0       0
  2076 ;;      Temps:          2       0       0       0       0
  2077 ;;      Totals:         2       0       0       0       0
  2078 ;;Total ram usage:        2 bytes
  2079 ;; Hardware stack levels used: 1
  2080 ;; Hardware stack levels required when called: 3
  2081 ;; This function calls:
  2082 ;;		_Escribir_comandoLCD
  2083 ;; This function is called by:
  2084 ;;		_setup
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           
  2089                           ;psect for function _Limpiar_pantallaLCD
  2090  06FB                     _Limpiar_pantallaLCD:
  2091  06FB                     l1650:	
  2092                           ;incstack = 0
  2093                           ; Regs used in _Limpiar_pantallaLCD: [wreg+status,2+status,0+pclath+cstack]
  2094                           
  2095                           
  2096                           ;LCD.c: 70:     PORTDbits.RD3 = 0; PORTDbits.RD4 = 0;
  2097  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  2098  06FC  1303               	bcf	3,6	;RP1=0, select bank0
  2099  06FD  1188               	bcf	8,3	;volatile
  2100  06FE  1208               	bcf	8,4	;volatile
  2101  06FF                     l1652:
  2102                           
  2103                           ;LCD.c: 72:     Escribir_comandoLCD(0b00000001);
  2104  06FF  3001               	movlw	1
  2105  0700  120A  118A  258B  120A  118A  	fcall	_Escribir_comandoLCD
  2106  0705                     l1654:
  2107                           
  2108                           ;LCD.c: 73:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2109  0705  301A               	movlw	26
  2110  0706  00F5               	movwf	??_Limpiar_pantallaLCD+1
  2111  0707  30F8               	movlw	248
  2112  0708  00F4               	movwf	??_Limpiar_pantallaLCD
  2113  0709                     u1437:
  2114  0709  0BF4               	decfsz	??_Limpiar_pantallaLCD,f
  2115  070A  2F09               	goto	u1437
  2116  070B  0BF5               	decfsz	??_Limpiar_pantallaLCD+1,f
  2117  070C  2F09               	goto	u1437
  2118  070D  0000               	nop
  2119  070E                     l1656:
  2120                           
  2121                           ;LCD.c: 74:     Escribir_comandoLCD(0b00000010);
  2122  070E  3002               	movlw	2
  2123  070F  120A  118A  258B  120A  118A  	fcall	_Escribir_comandoLCD
  2124  0714                     l231:
  2125  0714  0008               	return
  2126  0715                     __end_of_Limpiar_pantallaLCD:
  2127                           
  2128                           	psect	text6
  2129  0245                     __ptext6:	
  2130 ;; *************** function _InitMPU6050 *****************
  2131 ;; Defined at:
  2132 ;;		line 13 in file "MPU.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;		None
  2135 ;; Auto vars:     Size  Location     Type
  2136 ;;		None
  2137 ;; Return value:  Size  Location     Type
  2138 ;;                  1    wreg      void 
  2139 ;; Registers used:
  2140 ;;		wreg, status,2, status,0, pclath, cstack
  2141 ;; Tracked objects:
  2142 ;;		On entry : 0/0
  2143 ;;		On exit  : 0/0
  2144 ;;		Unchanged: 0/0
  2145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2146 ;;      Params:         0       0       0       0       0
  2147 ;;      Locals:         0       0       0       0       0
  2148 ;;      Temps:          3       0       0       0       0
  2149 ;;      Totals:         3       0       0       0       0
  2150 ;;Total ram usage:        3 bytes
  2151 ;; Hardware stack levels used: 1
  2152 ;; Hardware stack levels required when called: 3
  2153 ;; This function calls:
  2154 ;;		_I2C_Master_RepeatedStart
  2155 ;;		_I2C_Master_Start
  2156 ;;		_I2C_Master_Stop
  2157 ;;		_I2C_Master_Write
  2158 ;; This function is called by:
  2159 ;;		_setup
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           
  2164                           ;psect for function _InitMPU6050
  2165  0245                     _InitMPU6050:
  2166  0245                     l1580:	
  2167                           ;incstack = 0
  2168                           ; Regs used in _InitMPU6050: [wreg+status,2+status,0+pclath+cstack]
  2169                           
  2170                           
  2171                           ;MPU.c: 14:     _delay((unsigned long)((150)*(8000000/4000.0)));
  2172  0245  3002               	movlw	2
  2173  0246  00F6               	movwf	??_InitMPU6050+2
  2174  0247  3086               	movlw	134
  2175  0248  00F5               	movwf	??_InitMPU6050+1
  2176  0249  3099               	movlw	153
  2177  024A  00F4               	movwf	??_InitMPU6050
  2178  024B                     u1447:
  2179  024B  0BF4               	decfsz	??_InitMPU6050,f
  2180  024C  2A4B               	goto	u1447
  2181  024D  0BF5               	decfsz	??_InitMPU6050+1,f
  2182  024E  2A4B               	goto	u1447
  2183  024F  0BF6               	decfsz	??_InitMPU6050+2,f
  2184  0250  2A4B               	goto	u1447
  2185  0251                     l1582:
  2186                           
  2187                           ;MPU.c: 17:     I2C_Master_Start();
  2188  0251  120A  118A  274F  120A  118A  	fcall	_I2C_Master_Start
  2189  0256                     l1584:
  2190                           
  2191                           ;MPU.c: 18:     I2C_Master_Write(0b11010010 +0);
  2192  0256  30D2               	movlw	210
  2193  0257  00F2               	movwf	I2C_Master_Write@d
  2194  0258  3000               	movlw	0
  2195  0259  00F3               	movwf	I2C_Master_Write@d+1
  2196  025A  120A  118A  273C  120A  118A  	fcall	_I2C_Master_Write
  2197  025F                     l1586:
  2198                           
  2199                           ;MPU.c: 19:     I2C_Master_Write(0x6B);
  2200  025F  306B               	movlw	107
  2201  0260  00F2               	movwf	I2C_Master_Write@d
  2202  0261  3000               	movlw	0
  2203  0262  00F3               	movwf	I2C_Master_Write@d+1
  2204  0263  120A  118A  273C  120A  118A  	fcall	_I2C_Master_Write
  2205  0268                     l1588:
  2206                           
  2207                           ;MPU.c: 20:     I2C_Master_Write(0b00000001);
  2208  0268  3001               	movlw	1
  2209  0269  00F2               	movwf	I2C_Master_Write@d
  2210  026A  3000               	movlw	0
  2211  026B  00F3               	movwf	I2C_Master_Write@d+1
  2212  026C  120A  118A  273C  120A  118A  	fcall	_I2C_Master_Write
  2213  0271                     l1590:
  2214                           
  2215                           ;MPU.c: 24:     I2C_Master_RepeatedStart();
  2216  0271  120A  118A  2758  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2217  0276                     l1592:
  2218                           
  2219                           ;MPU.c: 25:     I2C_Master_Write(0b11010010 +0);
  2220  0276  30D2               	movlw	210
  2221  0277  00F2               	movwf	I2C_Master_Write@d
  2222  0278  3000               	movlw	0
  2223  0279  00F3               	movwf	I2C_Master_Write@d+1
  2224  027A  120A  118A  273C  120A  118A  	fcall	_I2C_Master_Write
  2225  027F                     l1594:
  2226                           
  2227                           ;MPU.c: 26:     I2C_Master_Write(0x1B);
  2228  027F  301B               	movlw	27
  2229  0280  00F2               	movwf	I2C_Master_Write@d
  2230  0281  3000               	movlw	0
  2231  0282  00F3               	movwf	I2C_Master_Write@d+1
  2232  0283  120A  118A  273C  120A  118A  	fcall	_I2C_Master_Write
  2233  0288                     l1596:
  2234                           
  2235                           ;MPU.c: 27:     I2C_Master_Write(0b00000000);
  2236  0288  3000               	movlw	0
  2237  0289  00F2               	movwf	I2C_Master_Write@d
  2238  028A  00F3               	movwf	I2C_Master_Write@d+1
  2239  028B  120A  118A  273C  120A  118A  	fcall	_I2C_Master_Write
  2240  0290                     l1598:
  2241                           
  2242                           ;MPU.c: 31:     I2C_Master_RepeatedStart();
  2243  0290  120A  118A  2758  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2244  0295                     l1600:
  2245                           
  2246                           ;MPU.c: 32:     I2C_Master_Write(0b11010010 +0);
  2247  0295  30D2               	movlw	210
  2248  0296  00F2               	movwf	I2C_Master_Write@d
  2249  0297  3000               	movlw	0
  2250  0298  00F3               	movwf	I2C_Master_Write@d+1
  2251  0299  120A  118A  273C  120A  118A  	fcall	_I2C_Master_Write
  2252  029E                     l1602:
  2253                           
  2254                           ;MPU.c: 33:     I2C_Master_Write(0x1C);
  2255  029E  301C               	movlw	28
  2256  029F  00F2               	movwf	I2C_Master_Write@d
  2257  02A0  3000               	movlw	0
  2258  02A1  00F3               	movwf	I2C_Master_Write@d+1
  2259  02A2  120A  118A  273C  120A  118A  	fcall	_I2C_Master_Write
  2260  02A7                     l1604:
  2261                           
  2262                           ;MPU.c: 34:     I2C_Master_Write(0b00000000);
  2263  02A7  3000               	movlw	0
  2264  02A8  00F2               	movwf	I2C_Master_Write@d
  2265  02A9  00F3               	movwf	I2C_Master_Write@d+1
  2266  02AA  120A  118A  273C  120A  118A  	fcall	_I2C_Master_Write
  2267  02AF                     l1606:
  2268                           
  2269                           ;MPU.c: 37:     I2C_Master_RepeatedStart();
  2270  02AF  120A  118A  2758  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2271  02B4                     l1608:
  2272                           
  2273                           ;MPU.c: 38:     I2C_Master_Write(0b11010010 +0);
  2274  02B4  30D2               	movlw	210
  2275  02B5  00F2               	movwf	I2C_Master_Write@d
  2276  02B6  3000               	movlw	0
  2277  02B7  00F3               	movwf	I2C_Master_Write@d+1
  2278  02B8  120A  118A  273C  120A  118A  	fcall	_I2C_Master_Write
  2279  02BD                     l1610:
  2280                           
  2281                           ;MPU.c: 39:     I2C_Master_Write(0x1A);
  2282  02BD  301A               	movlw	26
  2283  02BE  00F2               	movwf	I2C_Master_Write@d
  2284  02BF  3000               	movlw	0
  2285  02C0  00F3               	movwf	I2C_Master_Write@d+1
  2286  02C1  120A  118A  273C  120A  118A  	fcall	_I2C_Master_Write
  2287  02C6                     l1612:
  2288                           
  2289                           ;MPU.c: 40:     I2C_Master_Write(0b00000000);
  2290  02C6  3000               	movlw	0
  2291  02C7  00F2               	movwf	I2C_Master_Write@d
  2292  02C8  00F3               	movwf	I2C_Master_Write@d+1
  2293  02C9  120A  118A  273C  120A  118A  	fcall	_I2C_Master_Write
  2294  02CE                     l1614:
  2295                           
  2296                           ;MPU.c: 43:     I2C_Master_RepeatedStart();
  2297  02CE  120A  118A  2758  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2298  02D3                     l1616:
  2299                           
  2300                           ;MPU.c: 44:     I2C_Master_Write(0b11010010 +0);
  2301  02D3  30D2               	movlw	210
  2302  02D4  00F2               	movwf	I2C_Master_Write@d
  2303  02D5  3000               	movlw	0
  2304  02D6  00F3               	movwf	I2C_Master_Write@d+1
  2305  02D7  120A  118A  273C  120A  118A  	fcall	_I2C_Master_Write
  2306  02DC                     l1618:
  2307                           
  2308                           ;MPU.c: 45:     I2C_Master_Write(0x19);
  2309  02DC  3019               	movlw	25
  2310  02DD  00F2               	movwf	I2C_Master_Write@d
  2311  02DE  3000               	movlw	0
  2312  02DF  00F3               	movwf	I2C_Master_Write@d+1
  2313  02E0  120A  118A  273C  120A  118A  	fcall	_I2C_Master_Write
  2314  02E5                     l1620:
  2315                           
  2316                           ;MPU.c: 46:     I2C_Master_Write(0b00000111);
  2317  02E5  3007               	movlw	7
  2318  02E6  00F2               	movwf	I2C_Master_Write@d
  2319  02E7  3000               	movlw	0
  2320  02E8  00F3               	movwf	I2C_Master_Write@d+1
  2321  02E9  120A  118A  273C  120A  118A  	fcall	_I2C_Master_Write
  2322  02EE                     l1622:
  2323                           
  2324                           ;MPU.c: 48:     I2C_Master_Stop();
  2325  02EE  120A  118A  2746  120A  118A  	fcall	_I2C_Master_Stop
  2326  02F3                     l284:
  2327  02F3  0008               	return
  2328  02F4                     __end_of_InitMPU6050:
  2329                           
  2330                           	psect	text7
  2331  073C                     __ptext7:	
  2332 ;; *************** function _I2C_Master_Write *****************
  2333 ;; Defined at:
  2334 ;;		line 65 in file "I2C.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;  d               2    2[COMMON] unsigned int 
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;		None
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      void 
  2341 ;; Registers used:
  2342 ;;		wreg, status,2, status,0, pclath, cstack
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2348 ;;      Params:         2       0       0       0       0
  2349 ;;      Locals:         0       0       0       0       0
  2350 ;;      Temps:          0       0       0       0       0
  2351 ;;      Totals:         2       0       0       0       0
  2352 ;;Total ram usage:        2 bytes
  2353 ;; Hardware stack levels used: 1
  2354 ;; Hardware stack levels required when called: 2
  2355 ;; This function calls:
  2356 ;;		_I2C_Master_Wait
  2357 ;; This function is called by:
  2358 ;;		_main
  2359 ;;		_InitMPU6050
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           
  2364                           ;psect for function _I2C_Master_Write
  2365  073C                     _I2C_Master_Write:
  2366  073C                     l1462:	
  2367                           ;incstack = 0
  2368                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2369                           
  2370                           
  2371                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2372  073C  120A  118A  2723  120A  118A  	fcall	_I2C_Master_Wait
  2373  0741                     l1464:
  2374                           
  2375                           ;I2C.c: 68:     SSPBUF = d;
  2376  0741  0872               	movf	I2C_Master_Write@d,w
  2377  0742  1283               	bcf	3,5	;RP0=0, select bank0
  2378  0743  1303               	bcf	3,6	;RP1=0, select bank0
  2379  0744  0093               	movwf	19	;volatile
  2380  0745                     l180:
  2381  0745  0008               	return
  2382  0746                     __end_of_I2C_Master_Write:
  2383                           
  2384                           	psect	text8
  2385  0746                     __ptext8:	
  2386 ;; *************** function _I2C_Master_Stop *****************
  2387 ;; Defined at:
  2388 ;;		line 55 in file "I2C.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;		None
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;		None
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  1    wreg      void 
  2395 ;; Registers used:
  2396 ;;		wreg, status,2, status,0, pclath, cstack
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2402 ;;      Params:         0       0       0       0       0
  2403 ;;      Locals:         0       0       0       0       0
  2404 ;;      Temps:          0       0       0       0       0
  2405 ;;      Totals:         0       0       0       0       0
  2406 ;;Total ram usage:        0 bytes
  2407 ;; Hardware stack levels used: 1
  2408 ;; Hardware stack levels required when called: 2
  2409 ;; This function calls:
  2410 ;;		_I2C_Master_Wait
  2411 ;; This function is called by:
  2412 ;;		_main
  2413 ;;		_InitMPU6050
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           
  2418                           ;psect for function _I2C_Master_Stop
  2419  0746                     _I2C_Master_Stop:
  2420  0746                     l1466:	
  2421                           ;incstack = 0
  2422                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2423                           
  2424                           
  2425                           ;I2C.c: 57:     I2C_Master_Wait();
  2426  0746  120A  118A  2723  120A  118A  	fcall	_I2C_Master_Wait
  2427  074B                     l1468:
  2428                           
  2429                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2430  074B  1683               	bsf	3,5	;RP0=1, select bank1
  2431  074C  1303               	bcf	3,6	;RP1=0, select bank1
  2432  074D  1511               	bsf	17,2	;volatile
  2433  074E                     l177:
  2434  074E  0008               	return
  2435  074F                     __end_of_I2C_Master_Stop:
  2436                           
  2437                           	psect	text9
  2438  074F                     __ptext9:	
  2439 ;; *************** function _I2C_Master_Start *****************
  2440 ;; Defined at:
  2441 ;;		line 39 in file "I2C.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;		None
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;		None
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      void 
  2448 ;; Registers used:
  2449 ;;		wreg, status,2, status,0, pclath, cstack
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2455 ;;      Params:         0       0       0       0       0
  2456 ;;      Locals:         0       0       0       0       0
  2457 ;;      Temps:          0       0       0       0       0
  2458 ;;      Totals:         0       0       0       0       0
  2459 ;;Total ram usage:        0 bytes
  2460 ;; Hardware stack levels used: 1
  2461 ;; Hardware stack levels required when called: 2
  2462 ;; This function calls:
  2463 ;;		_I2C_Master_Wait
  2464 ;; This function is called by:
  2465 ;;		_main
  2466 ;;		_InitMPU6050
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           
  2471                           ;psect for function _I2C_Master_Start
  2472  074F                     _I2C_Master_Start:
  2473  074F                     l1458:	
  2474                           ;incstack = 0
  2475                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2476                           
  2477                           
  2478                           ;I2C.c: 41:     I2C_Master_Wait();
  2479  074F  120A  118A  2723  120A  118A  	fcall	_I2C_Master_Wait
  2480  0754                     l1460:
  2481                           
  2482                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2483  0754  1683               	bsf	3,5	;RP0=1, select bank1
  2484  0755  1303               	bcf	3,6	;RP1=0, select bank1
  2485  0756  1411               	bsf	17,0	;volatile
  2486  0757                     l171:
  2487  0757  0008               	return
  2488  0758                     __end_of_I2C_Master_Start:
  2489                           
  2490                           	psect	text10
  2491  0758                     __ptext10:	
  2492 ;; *************** function _I2C_Master_RepeatedStart *****************
  2493 ;; Defined at:
  2494 ;;		line 47 in file "I2C.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;		None
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;		None
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      void 
  2501 ;; Registers used:
  2502 ;;		wreg, status,2, status,0, pclath, cstack
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2508 ;;      Params:         0       0       0       0       0
  2509 ;;      Locals:         0       0       0       0       0
  2510 ;;      Temps:          0       0       0       0       0
  2511 ;;      Totals:         0       0       0       0       0
  2512 ;;Total ram usage:        0 bytes
  2513 ;; Hardware stack levels used: 1
  2514 ;; Hardware stack levels required when called: 2
  2515 ;; This function calls:
  2516 ;;		_I2C_Master_Wait
  2517 ;; This function is called by:
  2518 ;;		_main
  2519 ;;		_InitMPU6050
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           
  2524                           ;psect for function _I2C_Master_RepeatedStart
  2525  0758                     _I2C_Master_RepeatedStart:
  2526  0758                     l1470:	
  2527                           ;incstack = 0
  2528                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2529                           
  2530                           
  2531                           ;I2C.c: 49:     I2C_Master_Wait();
  2532  0758  120A  118A  2723  120A  118A  	fcall	_I2C_Master_Wait
  2533  075D                     l1472:
  2534                           
  2535                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  2536  075D  1683               	bsf	3,5	;RP0=1, select bank1
  2537  075E  1303               	bcf	3,6	;RP1=0, select bank1
  2538  075F  1491               	bsf	17,1	;volatile
  2539  0760                     l174:
  2540  0760  0008               	return
  2541  0761                     __end_of_I2C_Master_RepeatedStart:
  2542                           
  2543                           	psect	text11
  2544  043A                     __ptext11:	
  2545 ;; *************** function _Iniciar_LCD *****************
  2546 ;; Defined at:
  2547 ;;		line 30 in file "LCD.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;		None
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;		None
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  1    wreg      void 
  2554 ;; Registers used:
  2555 ;;		wreg, status,2, status,0, pclath, cstack
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2561 ;;      Params:         0       0       0       0       0
  2562 ;;      Locals:         0       0       0       0       0
  2563 ;;      Temps:          2       0       0       0       0
  2564 ;;      Totals:         2       0       0       0       0
  2565 ;;Total ram usage:        2 bytes
  2566 ;; Hardware stack levels used: 1
  2567 ;; Hardware stack levels required when called: 3
  2568 ;; This function calls:
  2569 ;;		_Escribir_comandoLCD
  2570 ;; This function is called by:
  2571 ;;		_setup
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           
  2576                           ;psect for function _Iniciar_LCD
  2577  043A                     _Iniciar_LCD:
  2578  043A                     l1624:	
  2579                           ;incstack = 0
  2580                           ; Regs used in _Iniciar_LCD: [wreg+status,2+status,0+pclath+cstack]
  2581                           
  2582                           
  2583                           ;LCD.c: 31:     PORTDbits.RD3 = 0;
  2584  043A  1283               	bcf	3,5	;RP0=0, select bank0
  2585  043B  1303               	bcf	3,6	;RP1=0, select bank0
  2586  043C  1188               	bcf	8,3	;volatile
  2587                           
  2588                           ;LCD.c: 32:     PORTDbits.RD4 = 0;
  2589  043D  1208               	bcf	8,4	;volatile
  2590  043E                     l1626:
  2591                           
  2592                           ;LCD.c: 34:     _delay((unsigned long)((14)*(8000000/4000.0)));
  2593  043E  3025               	movlw	37
  2594  043F  00F5               	movwf	??_Iniciar_LCD+1
  2595  0440  305B               	movlw	91
  2596  0441  00F4               	movwf	??_Iniciar_LCD
  2597  0442                     u1457:
  2598  0442  0BF4               	decfsz	??_Iniciar_LCD,f
  2599  0443  2C42               	goto	u1457
  2600  0444  0BF5               	decfsz	??_Iniciar_LCD+1,f
  2601  0445  2C42               	goto	u1457
  2602  0446  2C47               	nop2
  2603  0447                     l1628:
  2604                           
  2605                           ;LCD.c: 35:     Escribir_comandoLCD(0b00110000);
  2606  0447  3030               	movlw	48
  2607  0448  120A  118A  258B  120A  118A  	fcall	_Escribir_comandoLCD
  2608  044D                     l1630:
  2609                           
  2610                           ;LCD.c: 36:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2611  044D  300B               	movlw	11
  2612  044E  00F5               	movwf	??_Iniciar_LCD+1
  2613  044F  3062               	movlw	98
  2614  0450  00F4               	movwf	??_Iniciar_LCD
  2615  0451                     u1467:
  2616  0451  0BF4               	decfsz	??_Iniciar_LCD,f
  2617  0452  2C51               	goto	u1467
  2618  0453  0BF5               	decfsz	??_Iniciar_LCD+1,f
  2619  0454  2C51               	goto	u1467
  2620  0455  0000               	nop
  2621                           
  2622                           ;LCD.c: 37:     Escribir_comandoLCD(0b00110000);
  2623  0456  3030               	movlw	48
  2624  0457  120A  118A  258B  120A  118A  	fcall	_Escribir_comandoLCD
  2625  045C                     l1632:
  2626                           
  2627                           ;LCD.c: 38:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2628  045C  3042               	movlw	66
  2629  045D  00F4               	movwf	??_Iniciar_LCD
  2630  045E                     u1477:
  2631  045E  0BF4               	decfsz	??_Iniciar_LCD,f
  2632  045F  2C5E               	goto	u1477
  2633  0460  0000               	nop
  2634  0461                     l1634:
  2635                           
  2636                           ;LCD.c: 39:     Escribir_comandoLCD(0b00110000);
  2637  0461  3030               	movlw	48
  2638  0462  120A  118A  258B  120A  118A  	fcall	_Escribir_comandoLCD
  2639                           
  2640                           ;LCD.c: 42:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2641  0467  3042               	movlw	66
  2642  0468  00F4               	movwf	??_Iniciar_LCD
  2643  0469                     u1487:
  2644  0469  0BF4               	decfsz	??_Iniciar_LCD,f
  2645  046A  2C69               	goto	u1487
  2646  046B  0000               	nop
  2647  046C                     l1636:
  2648                           
  2649                           ;LCD.c: 43:     Escribir_comandoLCD(0b00111000);
  2650  046C  3038               	movlw	56
  2651  046D  120A  118A  258B  120A  118A  	fcall	_Escribir_comandoLCD
  2652  0472                     l1638:
  2653                           
  2654                           ;LCD.c: 44:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2655  0472  3042               	movlw	66
  2656  0473  00F4               	movwf	??_Iniciar_LCD
  2657  0474                     u1497:
  2658  0474  0BF4               	decfsz	??_Iniciar_LCD,f
  2659  0475  2C74               	goto	u1497
  2660  0476  0000               	nop
  2661                           
  2662                           ;LCD.c: 45:     Escribir_comandoLCD(0b00001000);
  2663  0477  3008               	movlw	8
  2664  0478  120A  118A  258B  120A  118A  	fcall	_Escribir_comandoLCD
  2665  047D                     l1640:
  2666                           
  2667                           ;LCD.c: 46:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2668  047D  3042               	movlw	66
  2669  047E  00F4               	movwf	??_Iniciar_LCD
  2670  047F                     u1507:
  2671  047F  0BF4               	decfsz	??_Iniciar_LCD,f
  2672  0480  2C7F               	goto	u1507
  2673  0481  0000               	nop
  2674  0482                     l1642:
  2675                           
  2676                           ;LCD.c: 47:     Escribir_comandoLCD(0b00000001);
  2677  0482  3001               	movlw	1
  2678  0483  120A  118A  258B  120A  118A  	fcall	_Escribir_comandoLCD
  2679                           
  2680                           ;LCD.c: 48:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2681  0488  3042               	movlw	66
  2682  0489  00F4               	movwf	??_Iniciar_LCD
  2683  048A                     u1517:
  2684  048A  0BF4               	decfsz	??_Iniciar_LCD,f
  2685  048B  2C8A               	goto	u1517
  2686  048C  0000               	nop
  2687  048D                     l1644:
  2688                           
  2689                           ;LCD.c: 49:     Escribir_comandoLCD(0b00000110);
  2690  048D  3006               	movlw	6
  2691  048E  120A  118A  258B  120A  118A  	fcall	_Escribir_comandoLCD
  2692  0493                     l1646:
  2693                           
  2694                           ;LCD.c: 50:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2695  0493  3042               	movlw	66
  2696  0494  00F4               	movwf	??_Iniciar_LCD
  2697  0495                     u1527:
  2698  0495  0BF4               	decfsz	??_Iniciar_LCD,f
  2699  0496  2C95               	goto	u1527
  2700  0497  0000               	nop
  2701                           
  2702                           ;LCD.c: 51:     Escribir_comandoLCD(0b00001100);
  2703  0498  300C               	movlw	12
  2704  0499  120A  118A  258B  120A  118A  	fcall	_Escribir_comandoLCD
  2705  049E                     l219:
  2706  049E  0008               	return
  2707  049F                     __end_of_Iniciar_LCD:
  2708                           
  2709                           	psect	text12
  2710  060D                     __ptext12:	
  2711 ;; *************** function _I2C_Master_Init *****************
  2712 ;; Defined at:
  2713 ;;		line 16 in file "I2C.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;  c               4    6[BANK0 ] const unsigned long 
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;		None
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  1    wreg      void 
  2720 ;; Registers used:
  2721 ;;		wreg, status,2, status,0, pclath, cstack
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2727 ;;      Params:         0       4       0       0       0
  2728 ;;      Locals:         0       0       0       0       0
  2729 ;;      Temps:          0       4       0       0       0
  2730 ;;      Totals:         0       8       0       0       0
  2731 ;;Total ram usage:        8 bytes
  2732 ;; Hardware stack levels used: 1
  2733 ;; Hardware stack levels required when called: 2
  2734 ;; This function calls:
  2735 ;;		___lldiv
  2736 ;; This function is called by:
  2737 ;;		_setup
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           
  2742                           ;psect for function _I2C_Master_Init
  2743  060D                     _I2C_Master_Init:
  2744  060D                     l2030:	
  2745                           ;incstack = 0
  2746                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2747                           
  2748                           
  2749                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2750  060D  3028               	movlw	40
  2751  060E  1283               	bcf	3,5	;RP0=0, select bank0
  2752  060F  1303               	bcf	3,6	;RP1=0, select bank0
  2753  0610  0094               	movwf	20	;volatile
  2754  0611                     l2032:
  2755                           
  2756                           ;I2C.c: 19:     SSPCON2 = 0;
  2757  0611  1683               	bsf	3,5	;RP0=1, select bank1
  2758  0612  1303               	bcf	3,6	;RP1=0, select bank1
  2759  0613  0191               	clrf	17	;volatile
  2760  0614                     l2034:
  2761                           
  2762                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2763  0614  1283               	bcf	3,5	;RP0=0, select bank0
  2764  0615  1303               	bcf	3,6	;RP1=0, select bank0
  2765  0616  083E               	movf	I2C_Master_Init@c,w
  2766  0617  00C2               	movwf	??_I2C_Master_Init
  2767  0618  083F               	movf	I2C_Master_Init@c+1,w
  2768  0619  00C3               	movwf	??_I2C_Master_Init+1
  2769  061A  0840               	movf	I2C_Master_Init@c+2,w
  2770  061B  00C4               	movwf	??_I2C_Master_Init+2
  2771  061C  0841               	movf	I2C_Master_Init@c+3,w
  2772  061D  00C5               	movwf	??_I2C_Master_Init+3
  2773  061E  3002               	movlw	2
  2774  061F                     u1285:
  2775  061F  1003               	clrc
  2776  0620  0DC2               	rlf	??_I2C_Master_Init,f
  2777  0621  0DC3               	rlf	??_I2C_Master_Init+1,f
  2778  0622  0DC4               	rlf	??_I2C_Master_Init+2,f
  2779  0623  0DC5               	rlf	??_I2C_Master_Init+3,f
  2780  0624                     u1280:
  2781  0624  3EFF               	addlw	-1
  2782  0625  1D03               	skipz
  2783  0626  2E1F               	goto	u1285
  2784  0627  0845               	movf	??_I2C_Master_Init+3,w
  2785  0628  00F5               	movwf	___lldiv@divisor+3
  2786  0629  0844               	movf	??_I2C_Master_Init+2,w
  2787  062A  00F4               	movwf	___lldiv@divisor+2
  2788  062B  0843               	movf	??_I2C_Master_Init+1,w
  2789  062C  00F3               	movwf	___lldiv@divisor+1
  2790  062D  0842               	movf	??_I2C_Master_Init,w
  2791  062E  00F2               	movwf	___lldiv@divisor
  2792  062F  3000               	movlw	0
  2793  0630  00F9               	movwf	___lldiv@dividend+3
  2794  0631  307A               	movlw	122
  2795  0632  00F8               	movwf	___lldiv@dividend+2
  2796  0633  3012               	movlw	18
  2797  0634  00F7               	movwf	___lldiv@dividend+1
  2798  0635  3000               	movlw	0
  2799  0636  00F6               	movwf	___lldiv@dividend
  2800  0637  120A  118A  23D2  120A  118A  	fcall	___lldiv
  2801  063C  0872               	movf	?___lldiv,w
  2802  063D  3EFF               	addlw	255
  2803  063E  1683               	bsf	3,5	;RP0=1, select bank1
  2804  063F  1303               	bcf	3,6	;RP1=0, select bank1
  2805  0640  0093               	movwf	19	;volatile
  2806  0641                     l2036:
  2807                           
  2808                           ;I2C.c: 21:     SSPSTAT = 0;
  2809  0641  0194               	clrf	20	;volatile
  2810  0642                     l2038:
  2811                           
  2812                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2813  0642  1587               	bsf	7,3	;volatile
  2814  0643                     l2040:
  2815                           
  2816                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2817  0643  1607               	bsf	7,4	;volatile
  2818  0644                     l162:
  2819  0644  0008               	return
  2820  0645                     __end_of_I2C_Master_Init:
  2821                           
  2822                           	psect	text13
  2823  03D2                     __ptext13:	
  2824 ;; *************** function ___lldiv *****************
  2825 ;; Defined at:
  2826 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;  divisor         4    2[COMMON] unsigned long 
  2829 ;;  dividend        4    6[COMMON] unsigned long 
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;  quotient        4    1[BANK0 ] unsigned long 
  2832 ;;  counter         1    5[BANK0 ] unsigned char 
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  4    2[COMMON] unsigned long 
  2835 ;; Registers used:
  2836 ;;		wreg, status,2, status,0
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2842 ;;      Params:         8       0       0       0       0
  2843 ;;      Locals:         0       5       0       0       0
  2844 ;;      Temps:          0       1       0       0       0
  2845 ;;      Totals:         8       6       0       0       0
  2846 ;;Total ram usage:       14 bytes
  2847 ;; Hardware stack levels used: 1
  2848 ;; Hardware stack levels required when called: 1
  2849 ;; This function calls:
  2850 ;;		Nothing
  2851 ;; This function is called by:
  2852 ;;		_I2C_Master_Init
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           
  2857                           ;psect for function ___lldiv
  2858  03D2                     ___lldiv:
  2859  03D2                     l2006:	
  2860                           ;incstack = 0
  2861                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2862                           
  2863  03D2  3000               	movlw	0
  2864  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  2865  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  2866  03D5  00BC               	movwf	___lldiv@quotient+3
  2867  03D6  3000               	movlw	0
  2868  03D7  00BB               	movwf	___lldiv@quotient+2
  2869  03D8  3000               	movlw	0
  2870  03D9  00BA               	movwf	___lldiv@quotient+1
  2871  03DA  3000               	movlw	0
  2872  03DB  00B9               	movwf	___lldiv@quotient
  2873  03DC  0875               	movf	___lldiv@divisor+3,w
  2874  03DD  0474               	iorwf	___lldiv@divisor+2,w
  2875  03DE  0473               	iorwf	___lldiv@divisor+1,w
  2876  03DF  0472               	iorwf	___lldiv@divisor,w
  2877  03E0  1903               	skipnz
  2878  03E1  2BE3               	goto	u1211
  2879  03E2  2BE4               	goto	u1210
  2880  03E3                     u1211:
  2881  03E3  2C31               	goto	l2026
  2882  03E4                     u1210:
  2883  03E4                     l2008:
  2884  03E4  01BD               	clrf	___lldiv@counter
  2885  03E5  0ABD               	incf	___lldiv@counter,f
  2886  03E6  2BF4               	goto	l2012
  2887  03E7                     l2010:
  2888  03E7  3001               	movlw	1
  2889  03E8  00B8               	movwf	??___lldiv
  2890  03E9                     u1225:
  2891  03E9  1003               	clrc
  2892  03EA  0DF2               	rlf	___lldiv@divisor,f
  2893  03EB  0DF3               	rlf	___lldiv@divisor+1,f
  2894  03EC  0DF4               	rlf	___lldiv@divisor+2,f
  2895  03ED  0DF5               	rlf	___lldiv@divisor+3,f
  2896  03EE  0BB8               	decfsz	??___lldiv,f
  2897  03EF  2BE9               	goto	u1225
  2898  03F0  3001               	movlw	1
  2899  03F1  00B8               	movwf	??___lldiv
  2900  03F2  0838               	movf	??___lldiv,w
  2901  03F3  07BD               	addwf	___lldiv@counter,f
  2902  03F4                     l2012:
  2903  03F4  1FF5               	btfss	___lldiv@divisor+3,7
  2904  03F5  2BF7               	goto	u1231
  2905  03F6  2BF8               	goto	u1230
  2906  03F7                     u1231:
  2907  03F7  2BE7               	goto	l2010
  2908  03F8                     u1230:
  2909  03F8                     l2014:
  2910  03F8  3001               	movlw	1
  2911  03F9  00B8               	movwf	??___lldiv
  2912  03FA                     u1245:
  2913  03FA  1003               	clrc
  2914  03FB  0DB9               	rlf	___lldiv@quotient,f
  2915  03FC  0DBA               	rlf	___lldiv@quotient+1,f
  2916  03FD  0DBB               	rlf	___lldiv@quotient+2,f
  2917  03FE  0DBC               	rlf	___lldiv@quotient+3,f
  2918  03FF  0BB8               	decfsz	??___lldiv,f
  2919  0400  2BFA               	goto	u1245
  2920  0401                     l2016:
  2921  0401  0875               	movf	___lldiv@divisor+3,w
  2922  0402  0279               	subwf	___lldiv@dividend+3,w
  2923  0403  1D03               	skipz
  2924  0404  2C0F               	goto	u1255
  2925  0405  0874               	movf	___lldiv@divisor+2,w
  2926  0406  0278               	subwf	___lldiv@dividend+2,w
  2927  0407  1D03               	skipz
  2928  0408  2C0F               	goto	u1255
  2929  0409  0873               	movf	___lldiv@divisor+1,w
  2930  040A  0277               	subwf	___lldiv@dividend+1,w
  2931  040B  1D03               	skipz
  2932  040C  2C0F               	goto	u1255
  2933  040D  0872               	movf	___lldiv@divisor,w
  2934  040E  0276               	subwf	___lldiv@dividend,w
  2935  040F                     u1255:
  2936  040F  1C03               	skipc
  2937  0410  2C12               	goto	u1251
  2938  0411  2C13               	goto	u1250
  2939  0412                     u1251:
  2940  0412  2C22               	goto	l2022
  2941  0413                     u1250:
  2942  0413                     l2018:
  2943  0413  0872               	movf	___lldiv@divisor,w
  2944  0414  02F6               	subwf	___lldiv@dividend,f
  2945  0415  0873               	movf	___lldiv@divisor+1,w
  2946  0416  1C03               	skipc
  2947  0417  0F73               	incfsz	___lldiv@divisor+1,w
  2948  0418  02F7               	subwf	___lldiv@dividend+1,f
  2949  0419  0874               	movf	___lldiv@divisor+2,w
  2950  041A  1C03               	skipc
  2951  041B  0F74               	incfsz	___lldiv@divisor+2,w
  2952  041C  02F8               	subwf	___lldiv@dividend+2,f
  2953  041D  0875               	movf	___lldiv@divisor+3,w
  2954  041E  1C03               	skipc
  2955  041F  0F75               	incfsz	___lldiv@divisor+3,w
  2956  0420  02F9               	subwf	___lldiv@dividend+3,f
  2957  0421                     l2020:
  2958  0421  1439               	bsf	___lldiv@quotient,0
  2959  0422                     l2022:
  2960  0422  3001               	movlw	1
  2961  0423                     u1265:
  2962  0423  1003               	clrc
  2963  0424  0CF5               	rrf	___lldiv@divisor+3,f
  2964  0425  0CF4               	rrf	___lldiv@divisor+2,f
  2965  0426  0CF3               	rrf	___lldiv@divisor+1,f
  2966  0427  0CF2               	rrf	___lldiv@divisor,f
  2967  0428  3EFF               	addlw	-1
  2968  0429  1D03               	skipz
  2969  042A  2C23               	goto	u1265
  2970  042B                     l2024:
  2971  042B  3001               	movlw	1
  2972  042C  02BD               	subwf	___lldiv@counter,f
  2973  042D  1D03               	btfss	3,2
  2974  042E  2C30               	goto	u1271
  2975  042F  2C31               	goto	u1270
  2976  0430                     u1271:
  2977  0430  2BF8               	goto	l2014
  2978  0431                     u1270:
  2979  0431                     l2026:
  2980  0431  083C               	movf	___lldiv@quotient+3,w
  2981  0432  00F5               	movwf	?___lldiv+3
  2982  0433  083B               	movf	___lldiv@quotient+2,w
  2983  0434  00F4               	movwf	?___lldiv+2
  2984  0435  083A               	movf	___lldiv@quotient+1,w
  2985  0436  00F3               	movwf	?___lldiv+1
  2986  0437  0839               	movf	___lldiv@quotient,w
  2987  0438  00F2               	movwf	?___lldiv
  2988  0439                     l406:
  2989  0439  0008               	return
  2990  043A                     __end_of___lldiv:
  2991                           
  2992                           	psect	text14
  2993  06D5                     __ptext14:	
  2994 ;; *************** function _Escribir_stringLCD *****************
  2995 ;; Defined at:
  2996 ;;		line 55 in file "LCD.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;  d               1    wreg     PTR const unsigned char 
  2999 ;;		 -> STR_3(13), STR_2(15), STR_1(16), 
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;  d               1    6[COMMON] PTR const unsigned char 
  3002 ;;		 -> STR_3(13), STR_2(15), STR_1(16), 
  3003 ;;  i               1    5[COMMON] unsigned char 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  1    wreg      void 
  3006 ;; Registers used:
  3007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3013 ;;      Params:         0       0       0       0       0
  3014 ;;      Locals:         2       0       0       0       0
  3015 ;;      Temps:          1       0       0       0       0
  3016 ;;      Totals:         3       0       0       0       0
  3017 ;;Total ram usage:        3 bytes
  3018 ;; Hardware stack levels used: 1
  3019 ;; Hardware stack levels required when called: 3
  3020 ;; This function calls:
  3021 ;;		_Escribir_comandoLCD
  3022 ;; This function is called by:
  3023 ;;		_main
  3024 ;;		_setup
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           
  3029                           ;psect for function _Escribir_stringLCD
  3030  06D5                     _Escribir_stringLCD:
  3031                           
  3032                           ;incstack = 0
  3033                           ; Regs used in _Escribir_stringLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3034                           ;Escribir_stringLCD@d stored from wreg
  3035  06D5  00F6               	movwf	Escribir_stringLCD@d
  3036  06D6                     l1542:
  3037                           
  3038                           ;LCD.c: 56:     PORTDbits.RD3 = 1; PORTDbits.RD4 = 0;
  3039  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  3040  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  3041  06D8  1588               	bsf	8,3	;volatile
  3042  06D9  1208               	bcf	8,4	;volatile
  3043  06DA                     l1544:
  3044                           
  3045                           ;LCD.c: 58:     for (char i=0; d[i]!='\0'; i++){
  3046  06DA  01F5               	clrf	Escribir_stringLCD@i
  3047  06DB  2EED               	goto	l1550
  3048  06DC                     l1546:
  3049                           
  3050                           ;LCD.c: 59:         Escribir_comandoLCD(d[i]);
  3051  06DC  0875               	movf	Escribir_stringLCD@i,w
  3052  06DD  0776               	addwf	Escribir_stringLCD@d,w
  3053  06DE  0084               	movwf	4
  3054  06DF  120A  118A  2645  120A  118A  	fcall	stringdir
  3055  06E4  120A  118A  258B  120A  118A  	fcall	_Escribir_comandoLCD
  3056  06E9                     l1548:
  3057                           
  3058                           ;LCD.c: 60:     }
  3059  06E9  3001               	movlw	1
  3060  06EA  00F4               	movwf	??_Escribir_stringLCD
  3061  06EB  0874               	movf	??_Escribir_stringLCD,w
  3062  06EC  07F5               	addwf	Escribir_stringLCD@i,f
  3063  06ED                     l1550:
  3064  06ED  0875               	movf	Escribir_stringLCD@i,w
  3065  06EE  0776               	addwf	Escribir_stringLCD@d,w
  3066  06EF  0084               	movwf	4
  3067  06F0  120A  118A  2645  120A  118A  	fcall	stringdir
  3068  06F5  3A00               	xorlw	0
  3069  06F6  1D03               	skipz
  3070  06F7  2EF9               	goto	u821
  3071  06F8  2EFA               	goto	u820
  3072  06F9                     u821:
  3073  06F9  2EDC               	goto	l1546
  3074  06FA                     u820:
  3075  06FA                     l225:
  3076  06FA  0008               	return
  3077  06FB                     __end_of_Escribir_stringLCD:
  3078                           
  3079                           	psect	text15
  3080  0195                     __ptext15:	
  3081 ;; *************** function _Config_USART *****************
  3082 ;; Defined at:
  3083 ;;		line 13 in file "UART.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;  baud_rate       2    2[COMMON] int 
  3086 ;;  Freq            2    4[COMMON] int 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;		None
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  1    wreg      void 
  3091 ;; Registers used:
  3092 ;;		wreg, status,2, status,0
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3098 ;;      Params:         4       0       0       0       0
  3099 ;;      Locals:         0       0       0       0       0
  3100 ;;      Temps:          0       0       0       0       0
  3101 ;;      Totals:         4       0       0       0       0
  3102 ;;Total ram usage:        4 bytes
  3103 ;; Hardware stack levels used: 1
  3104 ;; Hardware stack levels required when called: 1
  3105 ;; This function calls:
  3106 ;;		Nothing
  3107 ;; This function is called by:
  3108 ;;		_setup
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           
  3113                           ;psect for function _Config_USART
  3114  0195                     _Config_USART:
  3115  0195                     l1658:	
  3116                           ;incstack = 0
  3117                           ; Regs used in _Config_USART: [wreg+status,2+status,0]
  3118                           
  3119                           
  3120                           ;UART.c: 14:     if(baud_rate == 9600 && Freq == 4){
  3121  0195  3080               	movlw	128
  3122  0196  0672               	xorwf	Config_USART@baud_rate,w
  3123  0197  3025               	movlw	37
  3124  0198  1903               	skipnz
  3125  0199  0673               	xorwf	Config_USART@baud_rate+1,w
  3126  019A  1D03               	btfss	3,2
  3127  019B  299D               	goto	u881
  3128  019C  299E               	goto	u880
  3129  019D                     u881:
  3130  019D  29B1               	goto	l1668
  3131  019E                     u880:
  3132  019E                     l1660:
  3133  019E  3004               	movlw	4
  3134  019F  0674               	xorwf	Config_USART@Freq,w
  3135  01A0  0475               	iorwf	Config_USART@Freq+1,w
  3136  01A1  1D03               	btfss	3,2
  3137  01A2  29A4               	goto	u891
  3138  01A3  29A5               	goto	u890
  3139  01A4                     u891:
  3140  01A4  29B1               	goto	l1668
  3141  01A5                     u890:
  3142  01A5                     l1662:
  3143                           
  3144                           ;UART.c: 15:         TXSTAbits.SYNC = 0;
  3145  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  3146  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  3147  01A7  1218               	bcf	24,4	;volatile
  3148                           
  3149                           ;UART.c: 16:         TXSTAbits.BRGH = 1;
  3150  01A8  1518               	bsf	24,2	;volatile
  3151                           
  3152                           ;UART.c: 18:         BAUDCTLbits.BRG16 = 0;
  3153  01A9  1683               	bsf	3,5	;RP0=1, select bank3
  3154  01AA  1703               	bsf	3,6	;RP1=1, select bank3
  3155  01AB  1187               	bcf	7,3	;volatile
  3156  01AC                     l1664:
  3157                           
  3158                           ;UART.c: 20:         SPBRG = 25;
  3159  01AC  3019               	movlw	25
  3160  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  3161  01AE  1303               	bcf	3,6	;RP1=0, select bank1
  3162  01AF  0099               	movwf	25	;volatile
  3163  01B0                     l1666:
  3164                           
  3165                           ;UART.c: 21:         SPBRGH = 0;
  3166  01B0  019A               	clrf	26	;volatile
  3167  01B1                     l1668:
  3168                           
  3169                           ;UART.c: 24:     if(baud_rate == 9600 && Freq == 8){
  3170  01B1  3080               	movlw	128
  3171  01B2  0672               	xorwf	Config_USART@baud_rate,w
  3172  01B3  3025               	movlw	37
  3173  01B4  1903               	skipnz
  3174  01B5  0673               	xorwf	Config_USART@baud_rate+1,w
  3175  01B6  1D03               	btfss	3,2
  3176  01B7  29B9               	goto	u901
  3177  01B8  29BA               	goto	u900
  3178  01B9                     u901:
  3179  01B9  29CD               	goto	l1678
  3180  01BA                     u900:
  3181  01BA                     l1670:
  3182  01BA  3008               	movlw	8
  3183  01BB  0674               	xorwf	Config_USART@Freq,w
  3184  01BC  0475               	iorwf	Config_USART@Freq+1,w
  3185  01BD  1D03               	btfss	3,2
  3186  01BE  29C0               	goto	u911
  3187  01BF  29C1               	goto	u910
  3188  01C0                     u911:
  3189  01C0  29CD               	goto	l1678
  3190  01C1                     u910:
  3191  01C1                     l1672:
  3192                           
  3193                           ;UART.c: 25:         TXSTAbits.SYNC = 0;
  3194  01C1  1683               	bsf	3,5	;RP0=1, select bank1
  3195  01C2  1303               	bcf	3,6	;RP1=0, select bank1
  3196  01C3  1218               	bcf	24,4	;volatile
  3197                           
  3198                           ;UART.c: 26:         TXSTAbits.BRGH = 0;
  3199  01C4  1118               	bcf	24,2	;volatile
  3200                           
  3201                           ;UART.c: 28:         BAUDCTLbits.BRG16 = 1;
  3202  01C5  1683               	bsf	3,5	;RP0=1, select bank3
  3203  01C6  1703               	bsf	3,6	;RP1=1, select bank3
  3204  01C7  1587               	bsf	7,3	;volatile
  3205  01C8                     l1674:
  3206                           
  3207                           ;UART.c: 30:         SPBRG = 51;
  3208  01C8  3033               	movlw	51
  3209  01C9  1683               	bsf	3,5	;RP0=1, select bank1
  3210  01CA  1303               	bcf	3,6	;RP1=0, select bank1
  3211  01CB  0099               	movwf	25	;volatile
  3212  01CC                     l1676:
  3213                           
  3214                           ;UART.c: 31:         SPBRGH = 0;
  3215  01CC  019A               	clrf	26	;volatile
  3216  01CD                     l1678:
  3217                           
  3218                           ;UART.c: 34:     if(baud_rate == 9600 && Freq == 1){
  3219  01CD  3080               	movlw	128
  3220  01CE  0672               	xorwf	Config_USART@baud_rate,w
  3221  01CF  3025               	movlw	37
  3222  01D0  1903               	skipnz
  3223  01D1  0673               	xorwf	Config_USART@baud_rate+1,w
  3224  01D2  1D03               	btfss	3,2
  3225  01D3  29D5               	goto	u921
  3226  01D4  29D6               	goto	u920
  3227  01D5                     u921:
  3228  01D5  29E8               	goto	l1688
  3229  01D6                     u920:
  3230  01D6                     l1680:
  3231  01D6  0374               	decf	Config_USART@Freq,w
  3232  01D7  0475               	iorwf	Config_USART@Freq+1,w
  3233  01D8  1D03               	btfss	3,2
  3234  01D9  29DB               	goto	u931
  3235  01DA  29DC               	goto	u930
  3236  01DB                     u931:
  3237  01DB  29E8               	goto	l1688
  3238  01DC                     u930:
  3239  01DC                     l1682:
  3240                           
  3241                           ;UART.c: 35:         TXSTAbits.SYNC = 0;
  3242  01DC  1683               	bsf	3,5	;RP0=1, select bank1
  3243  01DD  1303               	bcf	3,6	;RP1=0, select bank1
  3244  01DE  1218               	bcf	24,4	;volatile
  3245                           
  3246                           ;UART.c: 36:         TXSTAbits.BRGH = 1;
  3247  01DF  1518               	bsf	24,2	;volatile
  3248                           
  3249                           ;UART.c: 38:         BAUDCTLbits.BRG16 = 1;
  3250  01E0  1683               	bsf	3,5	;RP0=1, select bank3
  3251  01E1  1703               	bsf	3,6	;RP1=1, select bank3
  3252  01E2  1587               	bsf	7,3	;volatile
  3253  01E3                     l1684:
  3254                           
  3255                           ;UART.c: 40:         SPBRG = 25;
  3256  01E3  3019               	movlw	25
  3257  01E4  1683               	bsf	3,5	;RP0=1, select bank1
  3258  01E5  1303               	bcf	3,6	;RP1=0, select bank1
  3259  01E6  0099               	movwf	25	;volatile
  3260  01E7                     l1686:
  3261                           
  3262                           ;UART.c: 41:         SPBRGH = 0;
  3263  01E7  019A               	clrf	26	;volatile
  3264  01E8                     l1688:
  3265                           
  3266                           ;UART.c: 44:     if(baud_rate == 10417 && Freq == 4){
  3267  01E8  30B1               	movlw	177
  3268  01E9  0672               	xorwf	Config_USART@baud_rate,w
  3269  01EA  3028               	movlw	40
  3270  01EB  1903               	skipnz
  3271  01EC  0673               	xorwf	Config_USART@baud_rate+1,w
  3272  01ED  1D03               	btfss	3,2
  3273  01EE  29F0               	goto	u941
  3274  01EF  29F1               	goto	u940
  3275  01F0                     u941:
  3276  01F0  2A04               	goto	l1698
  3277  01F1                     u940:
  3278  01F1                     l1690:
  3279  01F1  3004               	movlw	4
  3280  01F2  0674               	xorwf	Config_USART@Freq,w
  3281  01F3  0475               	iorwf	Config_USART@Freq+1,w
  3282  01F4  1D03               	btfss	3,2
  3283  01F5  29F7               	goto	u951
  3284  01F6  29F8               	goto	u950
  3285  01F7                     u951:
  3286  01F7  2A04               	goto	l1698
  3287  01F8                     u950:
  3288  01F8                     l1692:
  3289                           
  3290                           ;UART.c: 45:         TXSTAbits.SYNC = 0;
  3291  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  3292  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  3293  01FA  1218               	bcf	24,4	;volatile
  3294                           
  3295                           ;UART.c: 46:         TXSTAbits.BRGH = 1;
  3296  01FB  1518               	bsf	24,2	;volatile
  3297                           
  3298                           ;UART.c: 48:         BAUDCTLbits.BRG16 = 1;
  3299  01FC  1683               	bsf	3,5	;RP0=1, select bank3
  3300  01FD  1703               	bsf	3,6	;RP1=1, select bank3
  3301  01FE  1587               	bsf	7,3	;volatile
  3302  01FF                     l1694:
  3303                           
  3304                           ;UART.c: 50:         SPBRG = 23;
  3305  01FF  3017               	movlw	23
  3306  0200  1683               	bsf	3,5	;RP0=1, select bank1
  3307  0201  1303               	bcf	3,6	;RP1=0, select bank1
  3308  0202  0099               	movwf	25	;volatile
  3309  0203                     l1696:
  3310                           
  3311                           ;UART.c: 51:         SPBRGH = 0;
  3312  0203  019A               	clrf	26	;volatile
  3313  0204                     l1698:
  3314                           
  3315                           ;UART.c: 54:     if(baud_rate == 10417 && Freq == 8){
  3316  0204  30B1               	movlw	177
  3317  0205  0672               	xorwf	Config_USART@baud_rate,w
  3318  0206  3028               	movlw	40
  3319  0207  1903               	skipnz
  3320  0208  0673               	xorwf	Config_USART@baud_rate+1,w
  3321  0209  1D03               	btfss	3,2
  3322  020A  2A0C               	goto	u961
  3323  020B  2A0D               	goto	u960
  3324  020C                     u961:
  3325  020C  2A20               	goto	l1708
  3326  020D                     u960:
  3327  020D                     l1700:
  3328  020D  3008               	movlw	8
  3329  020E  0674               	xorwf	Config_USART@Freq,w
  3330  020F  0475               	iorwf	Config_USART@Freq+1,w
  3331  0210  1D03               	btfss	3,2
  3332  0211  2A13               	goto	u971
  3333  0212  2A14               	goto	u970
  3334  0213                     u971:
  3335  0213  2A20               	goto	l1708
  3336  0214                     u970:
  3337  0214                     l1702:
  3338                           
  3339                           ;UART.c: 55:         TXSTAbits.SYNC = 0;
  3340  0214  1683               	bsf	3,5	;RP0=1, select bank1
  3341  0215  1303               	bcf	3,6	;RP1=0, select bank1
  3342  0216  1218               	bcf	24,4	;volatile
  3343                           
  3344                           ;UART.c: 56:         TXSTAbits.BRGH = 0;
  3345  0217  1118               	bcf	24,2	;volatile
  3346                           
  3347                           ;UART.c: 58:         BAUDCTLbits.BRG16 = 1;
  3348  0218  1683               	bsf	3,5	;RP0=1, select bank3
  3349  0219  1703               	bsf	3,6	;RP1=1, select bank3
  3350  021A  1587               	bsf	7,3	;volatile
  3351  021B                     l1704:
  3352                           
  3353                           ;UART.c: 60:         SPBRG = 47;
  3354  021B  302F               	movlw	47
  3355  021C  1683               	bsf	3,5	;RP0=1, select bank1
  3356  021D  1303               	bcf	3,6	;RP1=0, select bank1
  3357  021E  0099               	movwf	25	;volatile
  3358  021F                     l1706:
  3359                           
  3360                           ;UART.c: 61:         SPBRGH = 0;
  3361  021F  019A               	clrf	26	;volatile
  3362  0220                     l1708:
  3363                           
  3364                           ;UART.c: 64:     if(baud_rate == 10417 && Freq == 1){
  3365  0220  30B1               	movlw	177
  3366  0221  0672               	xorwf	Config_USART@baud_rate,w
  3367  0222  3028               	movlw	40
  3368  0223  1903               	skipnz
  3369  0224  0673               	xorwf	Config_USART@baud_rate+1,w
  3370  0225  1D03               	btfss	3,2
  3371  0226  2A28               	goto	u981
  3372  0227  2A29               	goto	u980
  3373  0228                     u981:
  3374  0228  2A3B               	goto	l1718
  3375  0229                     u980:
  3376  0229                     l1710:
  3377  0229  0374               	decf	Config_USART@Freq,w
  3378  022A  0475               	iorwf	Config_USART@Freq+1,w
  3379  022B  1D03               	btfss	3,2
  3380  022C  2A2E               	goto	u991
  3381  022D  2A2F               	goto	u990
  3382  022E                     u991:
  3383  022E  2A3B               	goto	l1718
  3384  022F                     u990:
  3385  022F                     l1712:
  3386                           
  3387                           ;UART.c: 65:         TXSTAbits.SYNC = 0;
  3388  022F  1683               	bsf	3,5	;RP0=1, select bank1
  3389  0230  1303               	bcf	3,6	;RP1=0, select bank1
  3390  0231  1218               	bcf	24,4	;volatile
  3391                           
  3392                           ;UART.c: 66:         TXSTAbits.BRGH = 0;
  3393  0232  1118               	bcf	24,2	;volatile
  3394                           
  3395                           ;UART.c: 68:         BAUDCTLbits.BRG16 = 1;
  3396  0233  1683               	bsf	3,5	;RP0=1, select bank3
  3397  0234  1703               	bsf	3,6	;RP1=1, select bank3
  3398  0235  1587               	bsf	7,3	;volatile
  3399  0236                     l1714:
  3400                           
  3401                           ;UART.c: 70:         SPBRG = 5;
  3402  0236  3005               	movlw	5
  3403  0237  1683               	bsf	3,5	;RP0=1, select bank1
  3404  0238  1303               	bcf	3,6	;RP1=0, select bank1
  3405  0239  0099               	movwf	25	;volatile
  3406  023A                     l1716:
  3407                           
  3408                           ;UART.c: 71:         SPBRGH = 0;
  3409  023A  019A               	clrf	26	;volatile
  3410  023B                     l1718:
  3411                           
  3412                           ;UART.c: 74:     RCSTAbits.SPEN = 1;
  3413  023B  1283               	bcf	3,5	;RP0=0, select bank0
  3414  023C  1303               	bcf	3,6	;RP1=0, select bank0
  3415  023D  1798               	bsf	24,7	;volatile
  3416  023E                     l1720:
  3417                           
  3418                           ;UART.c: 75:     RCSTAbits.RX9 = 0;
  3419  023E  1318               	bcf	24,6	;volatile
  3420  023F                     l1722:
  3421                           
  3422                           ;UART.c: 76:     RCSTAbits.CREN = 1;
  3423  023F  1618               	bsf	24,4	;volatile
  3424  0240                     l1724:
  3425                           
  3426                           ;UART.c: 78:     TXSTAbits.TXEN = 1;
  3427  0240  1683               	bsf	3,5	;RP0=1, select bank1
  3428  0241  1303               	bcf	3,6	;RP1=0, select bank1
  3429  0242  1698               	bsf	24,5	;volatile
  3430  0243                     l1726:
  3431                           
  3432                           ;UART.c: 79:     PIE1bits.RCIE = 0;
  3433  0243  128C               	bcf	12,5	;volatile
  3434  0244                     l271:
  3435  0244  0008               	return
  3436  0245                     __end_of_Config_USART:
  3437                           
  3438                           	psect	text16
  3439  04F8                     __ptext16:	
  3440 ;; *************** function _divisor_dec *****************
  3441 ;; Defined at:
  3442 ;;		line 194 in file "Maestro I2C.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  b               1    wreg     unsigned char 
  3445 ;;  dig1            1    9[COMMON] PTR unsigned char 
  3446 ;;		 -> Giro_digx(1), 
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;  b               1    8[BANK0 ] unsigned char 
  3449 ;;  n               2    9[BANK0 ] int 
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  1    wreg      void 
  3452 ;; Registers used:
  3453 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3459 ;;      Params:         1       0       0       0       0
  3460 ;;      Locals:         0       3       0       0       0
  3461 ;;      Temps:          0       4       0       0       0
  3462 ;;      Totals:         1       7       0       0       0
  3463 ;;Total ram usage:        8 bytes
  3464 ;; Hardware stack levels used: 1
  3465 ;; Hardware stack levels required when called: 2
  3466 ;; This function calls:
  3467 ;;		___awdiv
  3468 ;;		___awmod
  3469 ;; This function is called by:
  3470 ;;		_main
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           
  3475                           ;psect for function _divisor_dec
  3476  04F8                     _divisor_dec:
  3477                           
  3478                           ;incstack = 0
  3479                           ; Regs used in _divisor_dec: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3480                           ;divisor_dec@b stored from wreg
  3481  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  3482  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  3483  04FA  00C0               	movwf	divisor_dec@b
  3484  04FB                     l2112:
  3485                           
  3486                           ;Maestro I2C.c: 195:     for(int n = 0; n<3 ; n++){
  3487  04FB  01C1               	clrf	divisor_dec@n
  3488  04FC  01C2               	clrf	divisor_dec@n+1
  3489  04FD                     l2118:
  3490                           
  3491                           ;Maestro I2C.c: 196:         dig1[n] = b % 10;
  3492  04FD  300A               	movlw	10
  3493  04FE  00F2               	movwf	___awmod@divisor
  3494  04FF  3000               	movlw	0
  3495  0500  00F3               	movwf	___awmod@divisor+1
  3496  0501  1283               	bcf	3,5	;RP0=0, select bank0
  3497  0502  1303               	bcf	3,6	;RP1=0, select bank0
  3498  0503  0840               	movf	divisor_dec@b,w
  3499  0504  00BC               	movwf	??_divisor_dec
  3500  0505  01BD               	clrf	??_divisor_dec+1
  3501  0506  083C               	movf	??_divisor_dec,w
  3502  0507  00F4               	movwf	___awmod@dividend
  3503  0508  083D               	movf	??_divisor_dec+1,w
  3504  0509  00F5               	movwf	___awmod@dividend+1
  3505  050A  120A  118A  249F  120A  118A  	fcall	___awmod
  3506  050F  0872               	movf	?___awmod,w
  3507  0510  1283               	bcf	3,5	;RP0=0, select bank0
  3508  0511  1303               	bcf	3,6	;RP1=0, select bank0
  3509  0512  00BE               	movwf	??_divisor_dec+2
  3510  0513  0841               	movf	divisor_dec@n,w
  3511  0514  0779               	addwf	divisor_dec@dig1,w
  3512  0515  00BF               	movwf	??_divisor_dec+3
  3513  0516  083F               	movf	??_divisor_dec+3,w
  3514  0517  0084               	movwf	4
  3515  0518  083E               	movf	??_divisor_dec+2,w
  3516  0519  0080               	movwf	0
  3517                           
  3518                           ;Maestro I2C.c: 197:         b = (b - dig1[n])/10;
  3519  051A  300A               	movlw	10
  3520  051B  00F2               	movwf	___awdiv@divisor
  3521  051C  3000               	movlw	0
  3522  051D  00F3               	movwf	___awdiv@divisor+1
  3523  051E  0841               	movf	divisor_dec@n,w
  3524  051F  0779               	addwf	divisor_dec@dig1,w
  3525  0520  00BC               	movwf	??_divisor_dec
  3526  0521  083C               	movf	??_divisor_dec,w
  3527  0522  0084               	movwf	4
  3528  0523  0800               	movf	0,w
  3529  0524  0240               	subwf	divisor_dec@b,w
  3530  0525  00F4               	movwf	___awdiv@dividend
  3531  0526  01F5               	clrf	___awdiv@dividend+1
  3532  0527  1C03               	skipc
  3533  0528  03F5               	decf	___awdiv@dividend+1,f
  3534  0529  120A  118A  2369  120A  118A  	fcall	___awdiv
  3535  052E  0872               	movf	?___awdiv,w
  3536  052F  1283               	bcf	3,5	;RP0=0, select bank0
  3537  0530  1303               	bcf	3,6	;RP1=0, select bank0
  3538  0531  00BD               	movwf	??_divisor_dec+1
  3539  0532  083D               	movf	??_divisor_dec+1,w
  3540  0533  00C0               	movwf	divisor_dec@b
  3541  0534                     l2120:
  3542                           
  3543                           ;Maestro I2C.c: 198:     }
  3544  0534  3001               	movlw	1
  3545  0535  07C1               	addwf	divisor_dec@n,f
  3546  0536  1803               	skipnc
  3547  0537  0AC2               	incf	divisor_dec@n+1,f
  3548  0538  3000               	movlw	0
  3549  0539  07C2               	addwf	divisor_dec@n+1,f
  3550  053A                     l2122:
  3551  053A  0842               	movf	divisor_dec@n+1,w
  3552  053B  3A80               	xorlw	128
  3553  053C  00FF               	movwf	btemp+1
  3554  053D  3080               	movlw	128
  3555  053E  027F               	subwf	btemp+1,w
  3556  053F  1D03               	skipz
  3557  0540  2D43               	goto	u1395
  3558  0541  3003               	movlw	3
  3559  0542  0241               	subwf	divisor_dec@n,w
  3560  0543                     u1395:
  3561  0543  1C03               	skipc
  3562  0544  2D46               	goto	u1391
  3563  0545  2D47               	goto	u1390
  3564  0546                     u1391:
  3565  0546  2CFD               	goto	l2118
  3566  0547                     u1390:
  3567  0547                     l117:
  3568  0547  0008               	return
  3569  0548                     __end_of_divisor_dec:
  3570                           
  3571                           	psect	text17
  3572  049F                     __ptext17:	
  3573 ;; *************** function ___awmod *****************
  3574 ;; Defined at:
  3575 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;  divisor         2    2[COMMON] int 
  3578 ;;  dividend        2    4[COMMON] int 
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;  sign            1    8[COMMON] unsigned char 
  3581 ;;  counter         1    7[COMMON] unsigned char 
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  2    2[COMMON] int 
  3584 ;; Registers used:
  3585 ;;		wreg, status,2, status,0
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3591 ;;      Params:         4       0       0       0       0
  3592 ;;      Locals:         2       0       0       0       0
  3593 ;;      Temps:          1       0       0       0       0
  3594 ;;      Totals:         7       0       0       0       0
  3595 ;;Total ram usage:        7 bytes
  3596 ;; Hardware stack levels used: 1
  3597 ;; Hardware stack levels required when called: 1
  3598 ;; This function calls:
  3599 ;;		Nothing
  3600 ;; This function is called by:
  3601 ;;		_divisor_dec
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           
  3606                           ;psect for function ___awmod
  3607  049F                     ___awmod:
  3608  049F                     l1772:	
  3609                           ;incstack = 0
  3610                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3611                           
  3612  049F  01F8               	clrf	___awmod@sign
  3613  04A0                     l1774:
  3614  04A0  1FF5               	btfss	___awmod@dividend+1,7
  3615  04A1  2CA3               	goto	u1101
  3616  04A2  2CA4               	goto	u1100
  3617  04A3                     u1101:
  3618  04A3  2CAB               	goto	l1780
  3619  04A4                     u1100:
  3620  04A4                     l1776:
  3621  04A4  09F4               	comf	___awmod@dividend,f
  3622  04A5  09F5               	comf	___awmod@dividend+1,f
  3623  04A6  0AF4               	incf	___awmod@dividend,f
  3624  04A7  1903               	skipnz
  3625  04A8  0AF5               	incf	___awmod@dividend+1,f
  3626  04A9                     l1778:
  3627  04A9  01F8               	clrf	___awmod@sign
  3628  04AA  0AF8               	incf	___awmod@sign,f
  3629  04AB                     l1780:
  3630  04AB  1FF3               	btfss	___awmod@divisor+1,7
  3631  04AC  2CAE               	goto	u1111
  3632  04AD  2CAF               	goto	u1110
  3633  04AE                     u1111:
  3634  04AE  2CB4               	goto	l1784
  3635  04AF                     u1110:
  3636  04AF                     l1782:
  3637  04AF  09F2               	comf	___awmod@divisor,f
  3638  04B0  09F3               	comf	___awmod@divisor+1,f
  3639  04B1  0AF2               	incf	___awmod@divisor,f
  3640  04B2  1903               	skipnz
  3641  04B3  0AF3               	incf	___awmod@divisor+1,f
  3642  04B4                     l1784:
  3643  04B4  0872               	movf	___awmod@divisor,w
  3644  04B5  0473               	iorwf	___awmod@divisor+1,w
  3645  04B6  1903               	btfsc	3,2
  3646  04B7  2CB9               	goto	u1121
  3647  04B8  2CBA               	goto	u1120
  3648  04B9                     u1121:
  3649  04B9  2CE9               	goto	l1802
  3650  04BA                     u1120:
  3651  04BA                     l1786:
  3652  04BA  01F7               	clrf	___awmod@counter
  3653  04BB  0AF7               	incf	___awmod@counter,f
  3654  04BC  2CC8               	goto	l1792
  3655  04BD                     l1788:
  3656  04BD  3001               	movlw	1
  3657  04BE                     u1135:
  3658  04BE  1003               	clrc
  3659  04BF  0DF2               	rlf	___awmod@divisor,f
  3660  04C0  0DF3               	rlf	___awmod@divisor+1,f
  3661  04C1  3EFF               	addlw	-1
  3662  04C2  1D03               	skipz
  3663  04C3  2CBE               	goto	u1135
  3664  04C4                     l1790:
  3665  04C4  3001               	movlw	1
  3666  04C5  00F6               	movwf	??___awmod
  3667  04C6  0876               	movf	??___awmod,w
  3668  04C7  07F7               	addwf	___awmod@counter,f
  3669  04C8                     l1792:
  3670  04C8  1FF3               	btfss	___awmod@divisor+1,7
  3671  04C9  2CCB               	goto	u1141
  3672  04CA  2CCC               	goto	u1140
  3673  04CB                     u1141:
  3674  04CB  2CBD               	goto	l1788
  3675  04CC                     u1140:
  3676  04CC                     l1794:
  3677  04CC  0873               	movf	___awmod@divisor+1,w
  3678  04CD  0275               	subwf	___awmod@dividend+1,w
  3679  04CE  1D03               	skipz
  3680  04CF  2CD2               	goto	u1155
  3681  04D0  0872               	movf	___awmod@divisor,w
  3682  04D1  0274               	subwf	___awmod@dividend,w
  3683  04D2                     u1155:
  3684  04D2  1C03               	skipc
  3685  04D3  2CD5               	goto	u1151
  3686  04D4  2CD6               	goto	u1150
  3687  04D5                     u1151:
  3688  04D5  2CDC               	goto	l1798
  3689  04D6                     u1150:
  3690  04D6                     l1796:
  3691  04D6  0872               	movf	___awmod@divisor,w
  3692  04D7  02F4               	subwf	___awmod@dividend,f
  3693  04D8  0873               	movf	___awmod@divisor+1,w
  3694  04D9  1C03               	skipc
  3695  04DA  03F5               	decf	___awmod@dividend+1,f
  3696  04DB  02F5               	subwf	___awmod@dividend+1,f
  3697  04DC                     l1798:
  3698  04DC  3001               	movlw	1
  3699  04DD                     u1165:
  3700  04DD  1003               	clrc
  3701  04DE  0CF3               	rrf	___awmod@divisor+1,f
  3702  04DF  0CF2               	rrf	___awmod@divisor,f
  3703  04E0  3EFF               	addlw	-1
  3704  04E1  1D03               	skipz
  3705  04E2  2CDD               	goto	u1165
  3706  04E3                     l1800:
  3707  04E3  3001               	movlw	1
  3708  04E4  02F7               	subwf	___awmod@counter,f
  3709  04E5  1D03               	btfss	3,2
  3710  04E6  2CE8               	goto	u1171
  3711  04E7  2CE9               	goto	u1170
  3712  04E8                     u1171:
  3713  04E8  2CCC               	goto	l1794
  3714  04E9                     u1170:
  3715  04E9                     l1802:
  3716  04E9  0878               	movf	___awmod@sign,w
  3717  04EA  1903               	btfsc	3,2
  3718  04EB  2CED               	goto	u1181
  3719  04EC  2CEE               	goto	u1180
  3720  04ED                     u1181:
  3721  04ED  2CF3               	goto	l1806
  3722  04EE                     u1180:
  3723  04EE                     l1804:
  3724  04EE  09F4               	comf	___awmod@dividend,f
  3725  04EF  09F5               	comf	___awmod@dividend+1,f
  3726  04F0  0AF4               	incf	___awmod@dividend,f
  3727  04F1  1903               	skipnz
  3728  04F2  0AF5               	incf	___awmod@dividend+1,f
  3729  04F3                     l1806:
  3730  04F3  0875               	movf	___awmod@dividend+1,w
  3731  04F4  00F3               	movwf	?___awmod+1
  3732  04F5  0874               	movf	___awmod@dividend,w
  3733  04F6  00F2               	movwf	?___awmod
  3734  04F7                     l536:
  3735  04F7  0008               	return
  3736  04F8                     __end_of___awmod:
  3737                           
  3738                           	psect	text18
  3739  0369                     __ptext18:	
  3740 ;; *************** function ___awdiv *****************
  3741 ;; Defined at:
  3742 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;  divisor         2    2[COMMON] int 
  3745 ;;  dividend        2    4[COMMON] int 
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;  quotient        2    2[BANK0 ] int 
  3748 ;;  sign            1    1[BANK0 ] unsigned char 
  3749 ;;  counter         1    0[BANK0 ] unsigned char 
  3750 ;; Return value:  Size  Location     Type
  3751 ;;                  2    2[COMMON] int 
  3752 ;; Registers used:
  3753 ;;		wreg, status,2, status,0
  3754 ;; Tracked objects:
  3755 ;;		On entry : 0/0
  3756 ;;		On exit  : 0/0
  3757 ;;		Unchanged: 0/0
  3758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3759 ;;      Params:         4       0       0       0       0
  3760 ;;      Locals:         0       4       0       0       0
  3761 ;;      Temps:          1       0       0       0       0
  3762 ;;      Totals:         5       4       0       0       0
  3763 ;;Total ram usage:        9 bytes
  3764 ;; Hardware stack levels used: 1
  3765 ;; Hardware stack levels required when called: 1
  3766 ;; This function calls:
  3767 ;;		Nothing
  3768 ;; This function is called by:
  3769 ;;		_divisor_dec
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773                           
  3774                           ;psect for function ___awdiv
  3775  0369                     ___awdiv:
  3776  0369                     l2042:	
  3777                           ;incstack = 0
  3778                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3779                           
  3780  0369  1283               	bcf	3,5	;RP0=0, select bank0
  3781  036A  1303               	bcf	3,6	;RP1=0, select bank0
  3782  036B  01B9               	clrf	___awdiv@sign
  3783  036C                     l2044:
  3784  036C  1FF3               	btfss	___awdiv@divisor+1,7
  3785  036D  2B6F               	goto	u1291
  3786  036E  2B70               	goto	u1290
  3787  036F                     u1291:
  3788  036F  2B77               	goto	l2050
  3789  0370                     u1290:
  3790  0370                     l2046:
  3791  0370  09F2               	comf	___awdiv@divisor,f
  3792  0371  09F3               	comf	___awdiv@divisor+1,f
  3793  0372  0AF2               	incf	___awdiv@divisor,f
  3794  0373  1903               	skipnz
  3795  0374  0AF3               	incf	___awdiv@divisor+1,f
  3796  0375                     l2048:
  3797  0375  01B9               	clrf	___awdiv@sign
  3798  0376  0AB9               	incf	___awdiv@sign,f
  3799  0377                     l2050:
  3800  0377  1FF5               	btfss	___awdiv@dividend+1,7
  3801  0378  2B7A               	goto	u1301
  3802  0379  2B7B               	goto	u1300
  3803  037A                     u1301:
  3804  037A  2B84               	goto	l2056
  3805  037B                     u1300:
  3806  037B                     l2052:
  3807  037B  09F4               	comf	___awdiv@dividend,f
  3808  037C  09F5               	comf	___awdiv@dividend+1,f
  3809  037D  0AF4               	incf	___awdiv@dividend,f
  3810  037E  1903               	skipnz
  3811  037F  0AF5               	incf	___awdiv@dividend+1,f
  3812  0380                     l2054:
  3813  0380  3001               	movlw	1
  3814  0381  00F6               	movwf	??___awdiv
  3815  0382  0876               	movf	??___awdiv,w
  3816  0383  06B9               	xorwf	___awdiv@sign,f
  3817  0384                     l2056:
  3818  0384  01BA               	clrf	___awdiv@quotient
  3819  0385  01BB               	clrf	___awdiv@quotient+1
  3820  0386                     l2058:
  3821  0386  0872               	movf	___awdiv@divisor,w
  3822  0387  0473               	iorwf	___awdiv@divisor+1,w
  3823  0388  1903               	btfsc	3,2
  3824  0389  2B8B               	goto	u1311
  3825  038A  2B8C               	goto	u1310
  3826  038B                     u1311:
  3827  038B  2BC3               	goto	l2078
  3828  038C                     u1310:
  3829  038C                     l2060:
  3830  038C  01B8               	clrf	___awdiv@counter
  3831  038D  0AB8               	incf	___awdiv@counter,f
  3832  038E  2B9A               	goto	l2066
  3833  038F                     l2062:
  3834  038F  3001               	movlw	1
  3835  0390                     u1325:
  3836  0390  1003               	clrc
  3837  0391  0DF2               	rlf	___awdiv@divisor,f
  3838  0392  0DF3               	rlf	___awdiv@divisor+1,f
  3839  0393  3EFF               	addlw	-1
  3840  0394  1D03               	skipz
  3841  0395  2B90               	goto	u1325
  3842  0396                     l2064:
  3843  0396  3001               	movlw	1
  3844  0397  00F6               	movwf	??___awdiv
  3845  0398  0876               	movf	??___awdiv,w
  3846  0399  07B8               	addwf	___awdiv@counter,f
  3847  039A                     l2066:
  3848  039A  1FF3               	btfss	___awdiv@divisor+1,7
  3849  039B  2B9D               	goto	u1331
  3850  039C  2B9E               	goto	u1330
  3851  039D                     u1331:
  3852  039D  2B8F               	goto	l2062
  3853  039E                     u1330:
  3854  039E                     l2068:
  3855  039E  3001               	movlw	1
  3856  039F                     u1345:
  3857  039F  1003               	clrc
  3858  03A0  0DBA               	rlf	___awdiv@quotient,f
  3859  03A1  0DBB               	rlf	___awdiv@quotient+1,f
  3860  03A2  3EFF               	addlw	-1
  3861  03A3  1D03               	skipz
  3862  03A4  2B9F               	goto	u1345
  3863  03A5  0873               	movf	___awdiv@divisor+1,w
  3864  03A6  0275               	subwf	___awdiv@dividend+1,w
  3865  03A7  1D03               	skipz
  3866  03A8  2BAB               	goto	u1355
  3867  03A9  0872               	movf	___awdiv@divisor,w
  3868  03AA  0274               	subwf	___awdiv@dividend,w
  3869  03AB                     u1355:
  3870  03AB  1C03               	skipc
  3871  03AC  2BAE               	goto	u1351
  3872  03AD  2BAF               	goto	u1350
  3873  03AE                     u1351:
  3874  03AE  2BB6               	goto	l2074
  3875  03AF                     u1350:
  3876  03AF                     l2070:
  3877  03AF  0872               	movf	___awdiv@divisor,w
  3878  03B0  02F4               	subwf	___awdiv@dividend,f
  3879  03B1  0873               	movf	___awdiv@divisor+1,w
  3880  03B2  1C03               	skipc
  3881  03B3  03F5               	decf	___awdiv@dividend+1,f
  3882  03B4  02F5               	subwf	___awdiv@dividend+1,f
  3883  03B5                     l2072:
  3884  03B5  143A               	bsf	___awdiv@quotient,0
  3885  03B6                     l2074:
  3886  03B6  3001               	movlw	1
  3887  03B7                     u1365:
  3888  03B7  1003               	clrc
  3889  03B8  0CF3               	rrf	___awdiv@divisor+1,f
  3890  03B9  0CF2               	rrf	___awdiv@divisor,f
  3891  03BA  3EFF               	addlw	-1
  3892  03BB  1D03               	skipz
  3893  03BC  2BB7               	goto	u1365
  3894  03BD                     l2076:
  3895  03BD  3001               	movlw	1
  3896  03BE  02B8               	subwf	___awdiv@counter,f
  3897  03BF  1D03               	btfss	3,2
  3898  03C0  2BC2               	goto	u1371
  3899  03C1  2BC3               	goto	u1370
  3900  03C2                     u1371:
  3901  03C2  2B9E               	goto	l2068
  3902  03C3                     u1370:
  3903  03C3                     l2078:
  3904  03C3  0839               	movf	___awdiv@sign,w
  3905  03C4  1903               	btfsc	3,2
  3906  03C5  2BC7               	goto	u1381
  3907  03C6  2BC8               	goto	u1380
  3908  03C7                     u1381:
  3909  03C7  2BCD               	goto	l2082
  3910  03C8                     u1380:
  3911  03C8                     l2080:
  3912  03C8  09BA               	comf	___awdiv@quotient,f
  3913  03C9  09BB               	comf	___awdiv@quotient+1,f
  3914  03CA  0ABA               	incf	___awdiv@quotient,f
  3915  03CB  1903               	skipnz
  3916  03CC  0ABB               	incf	___awdiv@quotient+1,f
  3917  03CD                     l2082:
  3918  03CD  083B               	movf	___awdiv@quotient+1,w
  3919  03CE  00F3               	movwf	?___awdiv+1
  3920  03CF  083A               	movf	___awdiv@quotient,w
  3921  03D0  00F2               	movwf	?___awdiv
  3922  03D1                     l523:
  3923  03D1  0008               	return
  3924  03D2                     __end_of___awdiv:
  3925                           
  3926                           	psect	text19
  3927  06A7                     __ptext19:	
  3928 ;; *************** function _I2C_Master_Read *****************
  3929 ;; Defined at:
  3930 ;;		line 74 in file "I2C.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;  a               2    2[COMMON] unsigned short 
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;  temp            2    6[COMMON] unsigned short 
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  2    2[COMMON] unsigned short 
  3937 ;; Registers used:
  3938 ;;		wreg, status,2, status,0, pclath, cstack
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3944 ;;      Params:         2       0       0       0       0
  3945 ;;      Locals:         2       0       0       0       0
  3946 ;;      Temps:          2       0       0       0       0
  3947 ;;      Totals:         6       0       0       0       0
  3948 ;;Total ram usage:        6 bytes
  3949 ;; Hardware stack levels used: 1
  3950 ;; Hardware stack levels required when called: 2
  3951 ;; This function calls:
  3952 ;;		_I2C_Master_Wait
  3953 ;; This function is called by:
  3954 ;;		_main
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           
  3959                           ;psect for function _I2C_Master_Read
  3960  06A7                     _I2C_Master_Read:
  3961  06A7                     l1836:	
  3962                           ;incstack = 0
  3963                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3964                           
  3965                           
  3966                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3967  06A7  120A  118A  2723  120A  118A  	fcall	_I2C_Master_Wait
  3968  06AC                     l1838:
  3969                           
  3970                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3971  06AC  1683               	bsf	3,5	;RP0=1, select bank1
  3972  06AD  1303               	bcf	3,6	;RP1=0, select bank1
  3973  06AE  1591               	bsf	17,3	;volatile
  3974                           
  3975                           ;I2C.c: 79:     I2C_Master_Wait();
  3976  06AF  120A  118A  2723  120A  118A  	fcall	_I2C_Master_Wait
  3977  06B4                     l1840:
  3978                           
  3979                           ;I2C.c: 80:     temp = SSPBUF;
  3980  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  3981  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  3982  06B6  0813               	movf	19,w	;volatile
  3983  06B7  00F4               	movwf	??_I2C_Master_Read
  3984  06B8  01F5               	clrf	??_I2C_Master_Read+1
  3985  06B9  0874               	movf	??_I2C_Master_Read,w
  3986  06BA  00F6               	movwf	I2C_Master_Read@temp
  3987  06BB  0875               	movf	??_I2C_Master_Read+1,w
  3988  06BC  00F7               	movwf	I2C_Master_Read@temp+1
  3989  06BD                     l1842:
  3990                           
  3991                           ;I2C.c: 81:     I2C_Master_Wait();
  3992  06BD  120A  118A  2723  120A  118A  	fcall	_I2C_Master_Wait
  3993  06C2                     l1844:
  3994                           
  3995                           ;I2C.c: 82:     if(a == 1){
  3996  06C2  0372               	decf	I2C_Master_Read@a,w
  3997  06C3  0473               	iorwf	I2C_Master_Read@a+1,w
  3998  06C4  1D03               	btfss	3,2
  3999  06C5  2EC7               	goto	u1191
  4000  06C6  2EC8               	goto	u1190
  4001  06C7                     u1191:
  4002  06C7  2ECC               	goto	l183
  4003  06C8                     u1190:
  4004  06C8                     l1846:
  4005                           
  4006                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  4007  06C8  1683               	bsf	3,5	;RP0=1, select bank1
  4008  06C9  1303               	bcf	3,6	;RP1=0, select bank1
  4009  06CA  1291               	bcf	17,5	;volatile
  4010                           
  4011                           ;I2C.c: 84:     }else{
  4012  06CB  2ECF               	goto	l184
  4013  06CC                     l183:
  4014                           
  4015                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  4016  06CC  1683               	bsf	3,5	;RP0=1, select bank1
  4017  06CD  1303               	bcf	3,6	;RP1=0, select bank1
  4018  06CE  1691               	bsf	17,5	;volatile
  4019  06CF                     l184:	
  4020                           ;I2C.c: 86:     }
  4021                           
  4022                           
  4023                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  4024  06CF  1611               	bsf	17,4	;volatile
  4025  06D0                     l1848:
  4026                           
  4027                           ;I2C.c: 88:     return temp;
  4028  06D0  0877               	movf	I2C_Master_Read@temp+1,w
  4029  06D1  00F3               	movwf	?_I2C_Master_Read+1
  4030  06D2  0876               	movf	I2C_Master_Read@temp,w
  4031  06D3  00F2               	movwf	?_I2C_Master_Read
  4032  06D4                     l185:
  4033  06D4  0008               	return
  4034  06D5                     __end_of_I2C_Master_Read:
  4035                           
  4036                           	psect	text20
  4037  0723                     __ptext20:	
  4038 ;; *************** function _I2C_Master_Wait *****************
  4039 ;; Defined at:
  4040 ;;		line 32 in file "I2C.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;		None
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;		None
  4045 ;; Return value:  Size  Location     Type
  4046 ;;                  1    wreg      void 
  4047 ;; Registers used:
  4048 ;;		wreg, status,2
  4049 ;; Tracked objects:
  4050 ;;		On entry : 0/0
  4051 ;;		On exit  : 0/0
  4052 ;;		Unchanged: 0/0
  4053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4054 ;;      Params:         0       0       0       0       0
  4055 ;;      Locals:         0       0       0       0       0
  4056 ;;      Temps:          0       0       0       0       0
  4057 ;;      Totals:         0       0       0       0       0
  4058 ;;Total ram usage:        0 bytes
  4059 ;; Hardware stack levels used: 1
  4060 ;; Hardware stack levels required when called: 1
  4061 ;; This function calls:
  4062 ;;		Nothing
  4063 ;; This function is called by:
  4064 ;;		_I2C_Master_Start
  4065 ;;		_I2C_Master_RepeatedStart
  4066 ;;		_I2C_Master_Stop
  4067 ;;		_I2C_Master_Write
  4068 ;;		_I2C_Master_Read
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072                           
  4073                           ;psect for function _I2C_Master_Wait
  4074  0723                     _I2C_Master_Wait:
  4075  0723                     l1448:	
  4076                           ;incstack = 0
  4077                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4078                           
  4079  0723                     l165:	
  4080                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4081                           
  4082  0723  1683               	bsf	3,5	;RP0=1, select bank1
  4083  0724  1303               	bcf	3,6	;RP1=0, select bank1
  4084  0725  1914               	btfsc	20,2	;volatile
  4085  0726  2F28               	goto	u611
  4086  0727  2F29               	goto	u610
  4087  0728                     u611:
  4088  0728  2F23               	goto	l165
  4089  0729                     u610:
  4090  0729                     l1450:
  4091  0729  0811               	movf	17,w	;volatile
  4092  072A  391F               	andlw	31
  4093  072B  1D03               	btfss	3,2
  4094  072C  2F2E               	goto	u621
  4095  072D  2F2F               	goto	u620
  4096  072E                     u621:
  4097  072E  2F23               	goto	l165
  4098  072F                     u620:
  4099  072F                     l168:
  4100  072F  0008               	return
  4101  0730                     __end_of_I2C_Master_Wait:
  4102                           
  4103                           	psect	text21
  4104  0730                     __ptext21:	
  4105 ;; *************** function _Escribir_caracterLCD *****************
  4106 ;; Defined at:
  4107 ;;		line 63 in file "LCD.c"
  4108 ;; Parameters:    Size  Location     Type
  4109 ;;  a               1    wreg     unsigned char 
  4110 ;; Auto vars:     Size  Location     Type
  4111 ;;  a               1    4[COMMON] unsigned char 
  4112 ;; Return value:  Size  Location     Type
  4113 ;;                  1    wreg      void 
  4114 ;; Registers used:
  4115 ;;		wreg, status,2, status,0, pclath, cstack
  4116 ;; Tracked objects:
  4117 ;;		On entry : 0/0
  4118 ;;		On exit  : 0/0
  4119 ;;		Unchanged: 0/0
  4120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4121 ;;      Params:         0       0       0       0       0
  4122 ;;      Locals:         1       0       0       0       0
  4123 ;;      Temps:          0       0       0       0       0
  4124 ;;      Totals:         1       0       0       0       0
  4125 ;;Total ram usage:        1 bytes
  4126 ;; Hardware stack levels used: 1
  4127 ;; Hardware stack levels required when called: 3
  4128 ;; This function calls:
  4129 ;;		_Escribir_comandoLCD
  4130 ;; This function is called by:
  4131 ;;		_main
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           
  4136                           ;psect for function _Escribir_caracterLCD
  4137  0730                     _Escribir_caracterLCD:
  4138                           
  4139                           ;incstack = 0
  4140                           ; Regs used in _Escribir_caracterLCD: [wreg+status,2+status,0+pclath+cstack]
  4141                           ;Escribir_caracterLCD@a stored from wreg
  4142  0730  00F4               	movwf	Escribir_caracterLCD@a
  4143  0731                     l1934:
  4144                           
  4145                           ;LCD.c: 64:     PORTDbits.RD3 = 1; PORTDbits.RD4 = 0;
  4146  0731  1283               	bcf	3,5	;RP0=0, select bank0
  4147  0732  1303               	bcf	3,6	;RP1=0, select bank0
  4148  0733  1588               	bsf	8,3	;volatile
  4149  0734  1208               	bcf	8,4	;volatile
  4150  0735                     l1936:
  4151                           
  4152                           ;LCD.c: 66:     Escribir_comandoLCD(a);
  4153  0735  0874               	movf	Escribir_caracterLCD@a,w
  4154  0736  120A  118A  258B  120A  118A  	fcall	_Escribir_comandoLCD
  4155  073B                     l228:
  4156  073B  0008               	return
  4157  073C                     __end_of_Escribir_caracterLCD:
  4158                           
  4159                           	psect	text22
  4160  058B                     __ptext22:	
  4161 ;; *************** function _Escribir_comandoLCD *****************
  4162 ;; Defined at:
  4163 ;;		line 17 in file "LCD.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;  Comando         1    wreg     unsigned char 
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;  Comando         1    3[COMMON] unsigned char 
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  1    wreg      void 
  4170 ;; Registers used:
  4171 ;;		wreg, status,2, status,0, pclath, cstack
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4177 ;;      Params:         0       0       0       0       0
  4178 ;;      Locals:         1       0       0       0       0
  4179 ;;      Temps:          0       0       0       0       0
  4180 ;;      Totals:         1       0       0       0       0
  4181 ;;Total ram usage:        1 bytes
  4182 ;; Hardware stack levels used: 1
  4183 ;; Hardware stack levels required when called: 2
  4184 ;; This function calls:
  4185 ;;		_prender_ELCD
  4186 ;; This function is called by:
  4187 ;;		_Iniciar_LCD
  4188 ;;		_Escribir_stringLCD
  4189 ;;		_Escribir_caracterLCD
  4190 ;;		_Limpiar_pantallaLCD
  4191 ;;		_set_cursor
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           
  4196                           ;psect for function _Escribir_comandoLCD
  4197  058B                     _Escribir_comandoLCD:
  4198                           
  4199                           ;incstack = 0
  4200                           ; Regs used in _Escribir_comandoLCD: [wreg+status,2+status,0+pclath+cstack]
  4201                           ;Escribir_comandoLCD@Comando stored from wreg
  4202  058B  00F3               	movwf	Escribir_comandoLCD@Comando
  4203  058C                     l1474:
  4204                           
  4205                           ;LCD.c: 18:     if((Comando & 0b00000001) == 0b00000001){PORTDbits.RD6 = 1;} else {PORTD
      +                          bits.RD6 = 0;}
  4206  058C  1C73               	btfss	Escribir_comandoLCD@Comando,0
  4207  058D  2D8F               	goto	u631
  4208  058E  2D90               	goto	u630
  4209  058F                     u631:
  4210  058F  2D94               	goto	l200
  4211  0590                     u630:
  4212  0590                     l1476:
  4213  0590  1283               	bcf	3,5	;RP0=0, select bank0
  4214  0591  1303               	bcf	3,6	;RP1=0, select bank0
  4215  0592  1708               	bsf	8,6	;volatile
  4216  0593  2D97               	goto	l201
  4217  0594                     l200:
  4218  0594  1283               	bcf	3,5	;RP0=0, select bank0
  4219  0595  1303               	bcf	3,6	;RP1=0, select bank0
  4220  0596  1308               	bcf	8,6	;volatile
  4221  0597                     l201:
  4222                           
  4223                           ;LCD.c: 19:     if((Comando & 0b00000010) == 0b00000010){PORTDbits.RD7 = 1;} else {PORTD
      +                          bits.RD7 = 0;}
  4224  0597  1CF3               	btfss	Escribir_comandoLCD@Comando,1
  4225  0598  2D9A               	goto	u641
  4226  0599  2D9B               	goto	u640
  4227  059A                     u641:
  4228  059A  2D9D               	goto	l202
  4229  059B                     u640:
  4230  059B                     l1478:
  4231  059B  1788               	bsf	8,7	;volatile
  4232  059C  2D9E               	goto	l203
  4233  059D                     l202:
  4234  059D  1388               	bcf	8,7	;volatile
  4235  059E                     l203:
  4236                           
  4237                           ;LCD.c: 20:     if((Comando & 0b00000100) == 0b00000100){PORTBbits.RB0 = 1;} else {PORTB
      +                          bits.RB0 = 0;}
  4238  059E  1D73               	btfss	Escribir_comandoLCD@Comando,2
  4239  059F  2DA1               	goto	u651
  4240  05A0  2DA2               	goto	u650
  4241  05A1                     u651:
  4242  05A1  2DA4               	goto	l204
  4243  05A2                     u650:
  4244  05A2                     l1480:
  4245  05A2  1406               	bsf	6,0	;volatile
  4246  05A3  2DA5               	goto	l205
  4247  05A4                     l204:
  4248  05A4  1006               	bcf	6,0	;volatile
  4249  05A5                     l205:
  4250                           
  4251                           ;LCD.c: 21:     if((Comando & 0b00001000) == 0b00001000){PORTBbits.RB1 = 1;} else {PORTB
      +                          bits.RB1 = 0;}
  4252  05A5  1DF3               	btfss	Escribir_comandoLCD@Comando,3
  4253  05A6  2DA8               	goto	u661
  4254  05A7  2DA9               	goto	u660
  4255  05A8                     u661:
  4256  05A8  2DAB               	goto	l206
  4257  05A9                     u660:
  4258  05A9                     l1482:
  4259  05A9  1486               	bsf	6,1	;volatile
  4260  05AA  2DAC               	goto	l207
  4261  05AB                     l206:
  4262  05AB  1086               	bcf	6,1	;volatile
  4263  05AC                     l207:
  4264                           
  4265                           ;LCD.c: 22:     if((Comando & 0b00010000) == 0b00010000){PORTBbits.RB2 = 1;} else {PORTB
      +                          bits.RB2 = 0;}
  4266  05AC  1E73               	btfss	Escribir_comandoLCD@Comando,4
  4267  05AD  2DAF               	goto	u671
  4268  05AE  2DB0               	goto	u670
  4269  05AF                     u671:
  4270  05AF  2DB2               	goto	l208
  4271  05B0                     u670:
  4272  05B0                     l1484:
  4273  05B0  1506               	bsf	6,2	;volatile
  4274  05B1  2DB3               	goto	l209
  4275  05B2                     l208:
  4276  05B2  1106               	bcf	6,2	;volatile
  4277  05B3                     l209:
  4278                           
  4279                           ;LCD.c: 23:     if((Comando & 0b00100000) == 0b00100000){PORTBbits.RB3 = 1;} else {PORTB
      +                          bits.RB3 = 0;}
  4280  05B3  1EF3               	btfss	Escribir_comandoLCD@Comando,5
  4281  05B4  2DB6               	goto	u681
  4282  05B5  2DB7               	goto	u680
  4283  05B6                     u681:
  4284  05B6  2DB9               	goto	l210
  4285  05B7                     u680:
  4286  05B7                     l1486:
  4287  05B7  1586               	bsf	6,3	;volatile
  4288  05B8  2DBA               	goto	l211
  4289  05B9                     l210:
  4290  05B9  1186               	bcf	6,3	;volatile
  4291  05BA                     l211:
  4292                           
  4293                           ;LCD.c: 24:     if((Comando & 0b01000000) == 0b01000000){PORTBbits.RB4 = 1;} else {PORTB
      +                          bits.RB4 = 0;}
  4294  05BA  1F73               	btfss	Escribir_comandoLCD@Comando,6
  4295  05BB  2DBD               	goto	u691
  4296  05BC  2DBE               	goto	u690
  4297  05BD                     u691:
  4298  05BD  2DC0               	goto	l212
  4299  05BE                     u690:
  4300  05BE                     l1488:
  4301  05BE  1606               	bsf	6,4	;volatile
  4302  05BF  2DC1               	goto	l213
  4303  05C0                     l212:
  4304  05C0  1206               	bcf	6,4	;volatile
  4305  05C1                     l213:
  4306                           
  4307                           ;LCD.c: 25:     if((Comando & 0b10000000) == 0b10000000){PORTBbits.RB5 = 1;} else {PORTB
      +                          bits.RB5 = 0;}
  4308  05C1  1FF3               	btfss	Escribir_comandoLCD@Comando,7
  4309  05C2  2DC4               	goto	u701
  4310  05C3  2DC5               	goto	u700
  4311  05C4                     u701:
  4312  05C4  2DC7               	goto	l214
  4313  05C5                     u700:
  4314  05C5                     l1490:
  4315  05C5  1686               	bsf	6,5	;volatile
  4316  05C6  2DC8               	goto	l1492
  4317  05C7                     l214:
  4318  05C7  1286               	bcf	6,5	;volatile
  4319  05C8                     l1492:
  4320                           
  4321                           ;LCD.c: 27:     prender_ELCD();
  4322  05C8  120A  118A  2715  120A  118A  	fcall	_prender_ELCD
  4323  05CD                     l216:
  4324  05CD  0008               	return
  4325  05CE                     __end_of_Escribir_comandoLCD:
  4326                           
  4327                           	psect	text23
  4328  0715                     __ptext23:	
  4329 ;; *************** function _prender_ELCD *****************
  4330 ;; Defined at:
  4331 ;;		line 11 in file "LCD.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;		None
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;		None
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  1    wreg      void 
  4338 ;; Registers used:
  4339 ;;		wreg
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4345 ;;      Params:         0       0       0       0       0
  4346 ;;      Locals:         0       0       0       0       0
  4347 ;;      Temps:          1       0       0       0       0
  4348 ;;      Totals:         1       0       0       0       0
  4349 ;;Total ram usage:        1 bytes
  4350 ;; Hardware stack levels used: 1
  4351 ;; Hardware stack levels required when called: 1
  4352 ;; This function calls:
  4353 ;;		Nothing
  4354 ;; This function is called by:
  4355 ;;		_Escribir_comandoLCD
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           
  4360                           ;psect for function _prender_ELCD
  4361  0715                     _prender_ELCD:
  4362  0715                     l1452:	
  4363                           ;incstack = 0
  4364                           ; Regs used in _prender_ELCD: [wreg]
  4365                           
  4366                           
  4367                           ;LCD.c: 12:     PORTDbits.RD5 = 1;
  4368  0715  1283               	bcf	3,5	;RP0=0, select bank0
  4369  0716  1303               	bcf	3,6	;RP1=0, select bank0
  4370  0717  1688               	bsf	8,5	;volatile
  4371  0718                     l1454:
  4372                           
  4373                           ;LCD.c: 13:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  4374  0718  30C7               	movlw	199
  4375  0719  00F2               	movwf	??_prender_ELCD
  4376  071A                     u1537:
  4377  071A  2F1B               	nop2
  4378  071B  0BF2               	decfsz	??_prender_ELCD,f
  4379  071C  2F1A               	goto	u1537
  4380  071D  2F1E               	nop2
  4381  071E  2F1F               	nop2
  4382  071F                     l1456:
  4383                           
  4384                           ;LCD.c: 14:     PORTDbits.RD5 = 0;
  4385  071F  1283               	bcf	3,5	;RP0=0, select bank0
  4386  0720  1303               	bcf	3,6	;RP1=0, select bank0
  4387  0721  1288               	bcf	8,5	;volatile
  4388  0722                     l197:
  4389  0722  0008               	return
  4390  0723                     __end_of_prender_ELCD:
  4391                           
  4392                           	psect	text24
  4393  0769                     __ptext24:	
  4394 ;; *************** function _isr *****************
  4395 ;; Defined at:
  4396 ;;		line 87 in file "Maestro I2C.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;		None
  4399 ;; Auto vars:     Size  Location     Type
  4400 ;;		None
  4401 ;; Return value:  Size  Location     Type
  4402 ;;                  1    wreg      void 
  4403 ;; Registers used:
  4404 ;;		None
  4405 ;; Tracked objects:
  4406 ;;		On entry : 0/0
  4407 ;;		On exit  : 0/0
  4408 ;;		Unchanged: 0/0
  4409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4410 ;;      Params:         0       0       0       0       0
  4411 ;;      Locals:         0       0       0       0       0
  4412 ;;      Temps:          2       0       0       0       0
  4413 ;;      Totals:         2       0       0       0       0
  4414 ;;Total ram usage:        2 bytes
  4415 ;; Hardware stack levels used: 1
  4416 ;; This function calls:
  4417 ;;		Nothing
  4418 ;; This function is called by:
  4419 ;;		Interrupt level 1
  4420 ;; This function uses a non-reentrant model
  4421 ;;
  4422                           
  4423                           
  4424                           ;psect for function _isr
  4425  0769                     _isr:
  4426  0769                     i1l101:
  4427  0769  0871               	movf	??_isr+1,w
  4428  076A  008A               	movwf	10
  4429  076B  0E70               	swapf	??_isr,w
  4430  076C  0083               	movwf	3
  4431  076D  0EFE               	swapf	btemp,f
  4432  076E  0E7E               	swapf	btemp,w
  4433  076F  0009               	retfie
  4434  0770                     __end_of_isr:
  4435  007E                     btemp	set	126	;btemp
  4436  007E                     wtemp0	set	126
  4437                           
  4438                           	psect	intentry
  4439  0004                     __pintentry:	
  4440                           ;incstack = 0
  4441                           ; Regs used in _isr: []
  4442                           
  4443  0004                     interrupt_function:
  4444  007E                     saved_w	set	btemp
  4445  0004  00FE               	movwf	btemp
  4446  0005  0E03               	swapf	3,w
  4447  0006  00F0               	movwf	??_isr
  4448  0007  080A               	movf	10,w
  4449  0008  00F1               	movwf	??_isr+1
  4450  0009  120A  118A  2F69   	ljmp	_isr
  4451                           
  4452                           	psect	config
  4453                           
  4454                           ;Config register CONFIG1 @ 0x2007
  4455                           ;	Oscillator Selection bits
  4456                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4457                           ;	Watchdog Timer Enable bit
  4458                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4459                           ;	Power-up Timer Enable bit
  4460                           ;	PWRTE = OFF, PWRT disabled
  4461                           ;	RE3/MCLR pin function select bit
  4462                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4463                           ;	Code Protection bit
  4464                           ;	CP = OFF, Program memory code protection is disabled
  4465                           ;	Data Code Protection bit
  4466                           ;	CPD = OFF, Data memory code protection is disabled
  4467                           ;	Brown Out Reset Selection bits
  4468                           ;	BOREN = OFF, BOR disabled
  4469                           ;	Internal External Switchover bit
  4470                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4471                           ;	Fail-Safe Clock Monitor Enabled bit
  4472                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4473                           ;	Low Voltage Programming Enable bit
  4474                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4475                           ;	In-Circuit Debugger Mode bit
  4476                           ;	DEBUG = 0x1, unprogrammed default
  4477  2007                     	org	8199
  4478  2007  20D4               	dw	8404
  4479                           
  4480                           ;Config register CONFIG2 @ 0x2008
  4481                           ;	Brown-out Reset Selection bit
  4482                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4483                           ;	Flash Program Memory Self Write Enable bits
  4484                           ;	WRT = OFF, Write protection off
  4485  2008                     	org	8200
  4486  2008  3FFF               	dw	16383

Data Sizes:
    Strings     44
    Constant    0
    Data        0
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     19      43
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Escribir_stringLCD@d	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_3(CODE[13]), STR_2(CODE[15]), STR_1(CODE[16]), 

    divisor_dec@dig1	PTR unsigned char  size(1) Largest target is 1
		 -> Giro_digx(COMMON[1]), 


Critical Paths under _main in COMMON

    _main->_divisor_dec
    _set_cursor->_Escribir_comandoLCD
    _Limpiar_pantallaLCD->_Escribir_comandoLCD
    _InitMPU6050->_I2C_Master_Write
    _Iniciar_LCD->_Escribir_comandoLCD
    _I2C_Master_Init->___lldiv
    _Escribir_stringLCD->_Escribir_comandoLCD
    _divisor_dec->___awmod
    _Escribir_caracterLCD->_Escribir_comandoLCD
    _Escribir_comandoLCD->_prender_ELCD

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_setup
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _divisor_dec->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8795
                                             17 BANK0      2     2      0
               _Escribir_caracterLCD
                 _Escribir_stringLCD
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                        _divisor_dec
                         _set_cursor
                              _setup
                     _tabla_numASCII
 ---------------------------------------------------------------------------------
 (1) _tabla_numASCII                                       3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                3     3      0    3722
                                             14 BANK0      3     3      0
                       _Config_USART
                 _Escribir_stringLCD
                    _I2C_Master_Init
                        _Iniciar_LCD
                        _InitMPU6050
                _Limpiar_pantallaLCD
                            _initOsc
                         _set_cursor
 ---------------------------------------------------------------------------------
 (2) _set_cursor                                           4     3      1     569
                                              4 COMMON     4     3      1
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Limpiar_pantallaLCD                                  2     2      0     176
                                              4 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _InitMPU6050                                          3     3      0    1390
                                              4 COMMON     3     3      0
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2    1390
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _Iniciar_LCD                                          2     2      0     176
                                              4 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _Escribir_stringLCD                                   3     3      0     365
                                              4 COMMON     3     3      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Config_USART                                         4     0      4     416
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _divisor_dec                                          8     7      1    1420
                                              9 COMMON     1     0      1
                                              4 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     625
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2    1109
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Escribir_caracterLCD                                 1     1      0     198
                                              4 COMMON     1     1      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (3) _Escribir_comandoLCD                                  1     1      0     176
                                              3 COMMON     1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (4) _prender_ELCD                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_caracterLCD
     _Escribir_comandoLCD
       _prender_ELCD
   _Escribir_stringLCD
     _Escribir_comandoLCD
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _divisor_dec
     ___awdiv
     ___awmod
   _set_cursor
     _Escribir_comandoLCD
   _setup
     _Config_USART
     _Escribir_stringLCD
     _I2C_Master_Init
       ___lldiv
     _Iniciar_LCD
       _Escribir_comandoLCD
     _InitMPU6050
       _I2C_Master_RepeatedStart
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
     _Limpiar_pantallaLCD
       _Escribir_comandoLCD
     _initOsc
     _set_cursor
   _tabla_numASCII

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      37       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      2B       5       53.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      37      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Mar 06 17:29:42 2022

                                pc 0002                                 _Ax 002C  
                               _Ay 002A                                 _Az 0028  
                               _Gx 0024                                 _Gy 0022  
                               _Gz 0020                       ___awdiv@sign 0039  
                               fsr 0004                    set_cursor@linea 0077  
                     ?_divisor_dec 0079                                l200 0594  
                              l112 0368                                l201 0597  
                              l210 05B9                                l202 059D  
                              l122 060C                                l211 05BA  
                              l203 059E                                l212 05C0  
                              l204 05A4                                l213 05C1  
                              l205 05A5                                l117 0547  
                              l214 05C7                                l206 05AB  
                              l207 05AC                                l231 0714  
                              l216 05CD                                l208 05B2  
                              l209 05B3                                l225 06FA  
                              l241 058A                                l162 0644  
                              l250 06A6                                l219 049E  
                              l171 0757                                l228 073B  
                              l180 0745                                l165 0723  
                              l406 0439                                l174 0760  
                              l183 06CC                                l271 0244  
                              l168 072F                                l184 06CF  
                              l185 06D4                                l177 074E  
                              l249 06A3                                l523 03D1  
                              l284 02F3                                l197 0722  
                              l536 04F7                                _GIE 005F  
                              u610 0729                                u611 0728  
                              u700 05C5                                u620 072F  
                              u701 05C4                                u621 072E  
                              u630 0590                                u631 058F  
                              u640 059B                                u800 0573  
                              u641 059A                                u801 0572  
                              u650 05A2                                u810 0581  
                              u651 05A1                                u811 0580  
                              u660 05A9                                u900 01BA  
                              u820 06FA                                u661 05A8  
                              u901 01B9                                u821 06F9  
                              u670 05B0                                u910 01C1  
                              u830 067E                                u671 05AF  
                              u911 01C0                                u831 067D  
                              u680 05B7                                u920 01D6  
                              u840 0689                                u681 05B6  
                              u921 01D5                                u841 0688  
                              u690 05BE                                u930 01DC  
                              u850 0694                                u691 05BD  
                              u931 01DB                                u851 0693  
                              u940 01F1                                u860 069E  
                              u780 0552                                u941 01F0  
                              u861 069D                                u781 0551  
                              u950 01F8                                u790 055F  
                              u951 01F7                                u791 055E  
                              u960 020D                                u880 019E  
                              u961 020C                                u881 019D  
                              u970 0214                                u890 01A5  
                              u971 0213                                u891 01A4  
                              u980 0229                                u981 0228  
                              u990 022F                                u991 022E  
                              _isr 0769                                fsr0 0004  
                              indf 0000                       ___awmod@sign 0078  
                    ??_InitMPU6050 0074                               l2010 03E7  
                             l2020 0421                               l2012 03F4  
                             l2100 0330                               l2022 0422  
                             l2014 03F8                               l2006 03D2  
                             l2030 060D                               l2110 035B  
                             l2102 0336                               l2120 0534  
                             l2112 04FB                               l2024 042B  
                             l2016 0401                               l2008 03E4  
                             l2040 0643                               l2032 0611  
                             l2104 0342                               l2050 0377  
                             l2042 0369                               l2122 053A  
                             l2018 0413                               l2026 0431  
                             l2034 0614                               l2106 0348  
                             l2130 0031                               l2060 038C  
                             l2052 037B                               l2044 036C  
                             l2036 0641                               l2108 0356  
                             l2140 006E                               l2132 003A  
                             l2124 001E                               l2070 03AF  
                             l2062 038F                               l2054 0380  
                             l2046 0370                               l2118 04FD  
                             l2038 0642                               l2150 0113  
                             l2142 008F                               l2134 003F  
                             l2126 0023                               l2080 03C8  
                             l2072 03B5                               l2064 0396  
                             l2056 0384                               l2048 0375  
                             l1600 0295                               l1520 054D  
                             l2160 0167                               l2152 0135  
                             l2144 00B0                               l2136 0044  
                             l2128 0028                               l1450 0729  
                             l2082 03CD                               l2074 03B6  
                             l2066 039A                               l2058 0386  
                             l1610 02BD                               l1602 029E  
                             l1530 056E                               l1522 0552  
                             l2090 030B                               l2170 018B  
                             l2162 016E                               l2154 0146  
                             l2146 00D1                               l2138 004D  
                             l1452 0715                               l2076 03BD  
                             l2068 039E                               l1700 020D  
                             l1460 0754                               l1620 02E5  
                             l1612 02C6                               l1604 02A7  
                             l1540 0581                               l1524 0559  
                             l2092 031A                               l2164 0174  
                             l2156 0151                               l2148 00F2  
                             l1454 0718                               l2078 03C3  
                             l1710 0229                               l1702 0214  
                             l1550 06ED                               l1542 06D6  
                             l1630 044D                               l1470 0758  
                             l1462 073C                               l1622 02EE  
                             l1614 02CE                               l1606 02AF  
                             l1534 0574                               l1526 055F  
                             l1518 0549                               l2094 031F  
                             l2086 02F4                               l2166 017B  
                             l2158 015C                               l1456 071F  
                             l1480 05A2                               l1448 0723  
                             l1800 04E3                               l1720 023E  
                             l1712 022F                               l1704 021B  
                             l1544 06DA                               l1640 047D  
                             l1632 045C                               l1624 043A  
                             l1472 075D                               l1464 0741  
                             l1616 02D3                               l1608 02B4  
                             l1560 068E                               l1552 0678  
                             l1536 057A                               l1528 0565  
                             l2096 0324                               l2088 0305  
                             l2192 05EC                               l2168 0183  
                             l1490 05C5                               l1482 05A9  
                             l1474 058C                               l1802 04E9  
                             l1722 023F                               l1714 0236  
                             l1706 021F                               l1546 06DC  
                             l1642 0482                               l1634 0461  
                             l1626 043E                               l1458 074F  
                             l1466 0746                               l1618 02DC  
                             l1650 06FB                               l1562 0694  
                             l1554 067E                               l1538 057C  
                             l2098 0329                               l1492 05C8  
                             l1484 05B0                               l1476 0590  
                             l1804 04EE                               l1724 0240  
                             l1716 023A                               l1708 0220  
                             l1660 019E                               l1548 06E9  
                             l1644 048D                               l1636 046C  
                             l1628 0447                               l1468 074B  
                             l1580 0245                               l1652 06FF  
                             l1564 0699                               l1556 0683  
                             l1486 05B7                               l1478 059B  
                             l1806 04F3                               l1726 0243  
                             l1718 023B                               l1670 01BA  
                             l1662 01A5                               l1646 0493  
                             l1638 0472                               l1590 0271  
                             l1582 0251                               l1654 0705  
                             l1566 069E                               l1558 0689  
                             l1902 05DC                               l1488 05BE  
                             l1840 06B4                               l1680 01D6  
                             l1672 01C1                               l1664 01AC  
                             l1592 0276                               l1584 0256  
                             l1656 070E                               l1920 05E2  
                             l1842 06BD                               l1690 01F1  
                             l1682 01DC                               l1674 01C8  
                             l1666 01B0                               l1658 0195  
                             l1594 027F                               l1586 025F  
                             l1914 05E0                               l1844 06C2  
                             l1836 06A7                               l1780 04AB  
                             l1772 049F                               l1692 01F8  
                             l1684 01E3                               l1676 01CC  
                             l1668 01B1                               l1596 0288  
                             l1588 0268                               l1908 05DE  
                             l1934 0731                               l1846 06C8  
                             l1838 06AC                               l1790 04C4  
                             l1782 04AF                               l1774 04A0  
                             l1694 01FF                               l1686 01E7  
                             l1678 01CD                               l1598 0290  
                             l1936 0735                               l1848 06D0  
                             l1792 04C8                               l1784 04B4  
                             l1776 04A4                               l1696 0203  
                             l1688 01E8                               l1872 05D2  
                             l1928 05E4                               l1864 05CF  
                             l1794 04CC                               l1786 04BA  
                             l1778 04A9                               l1698 0204  
                             l1890 05D8                               l1866 05D0  
                             l1796 04D6                               l1788 04BD  
                             l1884 05D6                               l1798 04DC  
                             l1878 05D4                               l1896 05DA  
                             ?_isr 0070                               STR_1 064B  
                             STR_2 065B                               STR_3 066A  
                             u1100 04A4                               u1101 04A3  
                             u1110 04AF                               u1111 04AE  
                             u1120 04BA                               u1121 04B9  
                             u1210 03E4                               u1211 03E3  
                             u1300 037B                               u1140 04CC  
                             u1301 037A                               u1141 04CB  
                             u1310 038C                               u1150 04D6  
                             u1230 03F8                               u1311 038B  
                             u1151 04D5                               u1135 04BE  
                             u1231 03F7                               u1225 03E9  
                             u1330 039E                               u1170 04E9  
                             u1250 0413                               u1331 039D  
                             u1171 04E8                               u1155 04D2  
                             u1251 0412                               u1180 04EE  
                             u1325 0390                               u1181 04ED  
                             u1165 04DD                               u1245 03FA  
                             u1190 06C8                               u1350 03AF  
                             u1270 0431                               u1191 06C7  
                             u1351 03AE                               u1271 0430  
                             u1255 040F                               u1407 0350  
                             u1280 0624                               u1345 039F  
                             u1265 0423                               u1417 0569  
                             u1370 03C3                               u1290 0370  
                             u1371 03C2                               u1355 03AB  
                             u1291 036F                               u1507 047F  
                             u1427 0585                               u1380 03C8  
                             u1381 03C7                               u1365 03B7  
                             u1285 061F                               u1517 048A  
                             u1437 0709                               u1390 0547  
                             u1391 0546                               u1527 0495  
                             u1447 024B                               u1537 071A  
                             u1457 0442                               u1395 0543  
                             u1467 0451                               u1477 045E  
                             u1487 0469                               u1497 0474  
                             _PEIE 005E                      ??_Iniciar_LCD 0074  
                             _Temp 0026   __end_of_I2C_Master_RepeatedStart 0761  
                             _main 001E                               btemp 007E  
                             start 000C               _Escribir_caracterLCD 0730  
                            ??_isr 0070                   ?_I2C_Master_Init 003E  
                 ?_I2C_Master_Read 0072                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070         __end_of_Escribir_stringLCD 06FB  
                            ?_main 0070                    __end_of___awdiv 03D2  
                  __end_of___awmod 04F8                              _ANSEL 0188  
                  __end_of___lldiv 043A                    ___awdiv@divisor 0072  
                            i1l101 0769                    ___awdiv@counter 0038  
                            _SPBRG 0099                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
                            _PORTD 0008                              _PORTE 0009  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISD 0088                              _SSPIE 0463  
                            _TRISE 0089                              _SSPIF 0063  
                            _dec_x 0037                              _dec_y 0033  
                            _dec_z 002F                              _cen_x 0036  
                            _cen_y 0032                              _cen_z 002E  
                  __end_of_initOsc 06A7                              _setup 02F4  
                            _uni_x 007A                              _uni_y 0034  
                            _uni_z 0030                _Limpiar_pantallaLCD 06FB  
                            pclath 000A                __end_of_InitMPU6050 02F4  
                            status 0003                              wtemp0 007E  
            ?_Escribir_caracterLCD 0070               __end_of_Config_USART 0245  
                  __initialization 000F                __end_of_Iniciar_LCD 049F  
                     __end_of_main 0195               ?_Limpiar_pantallaLCD 0070  
                           ??_main 0049                       divisor_dec@b 0040  
                     divisor_dec@n 0041                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0072                 ??_I2C_Master_Start 0072  
               ??_I2C_Master_Write 0074                 set_cursor@posicion 0074  
                 ___awdiv@dividend 0074                             ?_setup 0070  
                           _ANSELH 0189                             _SPBRGH 009A  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013           _I2C_Master_RepeatedStart 0758  
                 ??_tabla_numASCII 0072              ??_Limpiar_pantallaLCD 0074  
                        ??___awdiv 0076                          ??___awmod 0076  
                        ??___lldiv 0038                   ___awdiv@quotient 003A  
                  ___awmod@divisor 0072                    ___awmod@counter 0077  
                        ??_initOsc 0072               __size_of_divisor_dec 0050  
                           saved_w 007E                        _InitMPU6050 0245  
                  divisor_dec@dig1 0079            __end_of__initialization 001A  
                      _Iniciar_LCD 043A             ??_Escribir_caracterLCD 0074  
                   __pcstackCOMMON 0070                      __end_of_setup 0369  
                          ??_setup 0046                         __pbssBANK0 0020  
            __size_of_Config_USART 00B0                         __pmaintext 001E  
                       __pintentry 0004       __size_of_Escribir_comandoLCD 0043  
                     initOsc@Valor 0072                       _Config_USART 0195  
                          _SSPCON2 0091                            _SSPSTAT 0094  
               _Escribir_stringLCD 06D5                         __stringtab 0645  
                  tabla_numASCII@a 0074                ?_Escribir_stringLCD 0070  
            Escribir_caracterLCD@a 0074                            ___awdiv 0369  
                          ___awmod 049F                            ___lldiv 03D2  
                          __ptext1 05CE                            __ptext2 02F4  
                          __ptext3 0548                            __ptext4 0677  
                          __ptext5 06FB                            __ptext6 0245  
                          __ptext7 073C                            __ptext8 0746  
                          __ptext9 074F               ??_Escribir_stringLCD 0074  
                          _initOsc 0677                       __size_of_isr 0007  
                 ___awmod@dividend 0074                      ?_prender_ELCD 0070  
         __size_of_I2C_Master_Init 0038           __size_of_I2C_Master_Read 002E  
         __size_of_I2C_Master_Wait 000D           __size_of_I2C_Master_Stop 0009  
                          clrloop0 0762               end_of_initialization 001A  
       ??_I2C_Master_RepeatedStart 0072          __size_of_I2C_Master_Start 0009  
        __size_of_I2C_Master_Write 000A                    ___lldiv@divisor 0072  
                  ___lldiv@counter 003D                         _set_cursor 0548  
                        _RCSTAbits 0018                   I2C_Master_Init@c 003E  
                 I2C_Master_Read@a 0072                          _PORTBbits 0006  
                        _PORTDbits 0008                     ??_prender_ELCD 0072  
                        _TRISCbits 0087                       ?_InitMPU6050 0070  
                     ?_Iniciar_LCD 0070                          _TXSTAbits 0098  
      __end_of_Limpiar_pantallaLCD 0715                        _BAUDCTLbits 0187  
                    ??_divisor_dec 003C                          _Giro_digx 007B  
                        _Giro_digy 0035                          _Giro_digz 0031  
              start_initialization 000F                        __end_of_isr 0770  
              _Escribir_comandoLCD 058B                  ??_I2C_Master_Init 0042  
                ??_I2C_Master_Read 0074                  ??_I2C_Master_Wait 0072  
       Escribir_comandoLCD@Comando 0073                  ??_I2C_Master_Stop 0072  
    __size_of_Escribir_caracterLCD 000C                        ?_set_cursor 0074  
             ?_Escribir_comandoLCD 0070                        __pbssCOMMON 007A  
          __size_of_tabla_numASCII 003F                          ___latbits 0002  
                    __pcstackBANK0 0038                __end_of_divisor_dec 0548  
                 _I2C_Master_Start 074F                   _I2C_Master_Write 073C  
             __end_of_prender_ELCD 0723                           ?___awdiv 0072  
                         ?___awmod 0072                           ?___lldiv 0072  
            ??_Escribir_comandoLCD 0073                          __pstrings 0645  
                         ?_initOsc 0070                __size_of_set_cursor 0043  
             __size_of_InitMPU6050 00AF                     __size_of_setup 0075  
                interrupt_function 0004                          clear_ram0 0761  
                         _PIE1bits 008C               __size_of_Iniciar_LCD 0065  
                      __stringbase 064A                        _divisor_dec 04F8  
      __size_of_Escribir_stringLCD 0026                I2C_Master_Read@temp 0076  
              Escribir_stringLCD@d 0076                Escribir_stringLCD@i 0075  
__size_of_I2C_Master_RepeatedStart 0009                   __size_of___awdiv 0069  
                 __size_of___awmod 0059          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___lldiv 0068                 __end_of__stringtab 064B  
                   _tabla_numASCII 05CE                    _I2C_Master_Init 060D  
                  _I2C_Master_Read 06A7                    _I2C_Master_Wait 0723  
                  _I2C_Master_Stop 0746                   __size_of_initOsc 0030  
                         __ptext10 0758                           __ptext11 043A  
                         __ptext20 0723                           __ptext12 060D  
                         __ptext21 0730                           __ptext13 03D2  
                         __ptext22 058B                           __ptext14 06D5  
                         __ptext23 0715                           __ptext15 0195  
                         __ptext24 0769                           __ptext16 04F8  
                         __ptext17 049F                           __ptext18 0369  
                         __ptext19 06A7              __size_of_prender_ELCD 000E  
                    __size_of_main 0177                       ??_set_cursor 0075  
     __size_of_Limpiar_pantallaLCD 001A             __end_of_tabla_numASCII 060D  
         __end_of_I2C_Master_Start 0758           __end_of_I2C_Master_Write 0746  
     __end_of_Escribir_caracterLCD 073C                       _prender_ELCD 0715  
                    ?_Config_USART 0072                   Config_USART@Freq 0074  
               __end_of_set_cursor 058B                           intlevel1 0000  
                 ___lldiv@dividend 0076                          stringcode 0645  
                       _OSCCONbits 008F            __end_of_I2C_Master_Init 0645  
          __end_of_I2C_Master_Read 06D5            __end_of_I2C_Master_Wait 0730  
          __end_of_I2C_Master_Stop 074F                    ?_tabla_numASCII 0070  
                 ___lldiv@quotient 0039                  I2C_Master_Write@d 0072  
                   ??_Config_USART 0076                           stringdir 0645  
                         stringtab 0645                        _SSPCON2bits 0091  
            Config_USART@baud_rate 0072        __end_of_Escribir_comandoLCD 05CE  
