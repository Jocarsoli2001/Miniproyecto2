

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Mar 06 19:31:35 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  0105                     	;# 
   214  0107                     	;# 
   215  0108                     	;# 
   216  0109                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  0185                     	;# 
   223  0187                     	;# 
   224  0188                     	;# 
   225  0189                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  0088                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  000E                     	;# 
   322  000F                     	;# 
   323  0010                     	;# 
   324  0011                     	;# 
   325  0012                     	;# 
   326  0013                     	;# 
   327  0014                     	;# 
   328  0015                     	;# 
   329  0015                     	;# 
   330  0016                     	;# 
   331  0017                     	;# 
   332  0018                     	;# 
   333  0019                     	;# 
   334  001A                     	;# 
   335  001B                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  001D                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  0081                     	;# 
   342  0085                     	;# 
   343  0086                     	;# 
   344  0087                     	;# 
   345  0088                     	;# 
   346  0089                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  008F                     	;# 
   351  0090                     	;# 
   352  0091                     	;# 
   353  0092                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  0105                     	;# 
   370  0107                     	;# 
   371  0108                     	;# 
   372  0109                     	;# 
   373  010C                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010E                     	;# 
   377  010F                     	;# 
   378  0185                     	;# 
   379  0187                     	;# 
   380  0188                     	;# 
   381  0189                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384  0000                     	;# 
   385  0001                     	;# 
   386  0002                     	;# 
   387  0003                     	;# 
   388  0004                     	;# 
   389  0005                     	;# 
   390  0006                     	;# 
   391  0007                     	;# 
   392  0008                     	;# 
   393  0009                     	;# 
   394  000A                     	;# 
   395  000B                     	;# 
   396  000C                     	;# 
   397  000D                     	;# 
   398  000E                     	;# 
   399  000E                     	;# 
   400  000F                     	;# 
   401  0010                     	;# 
   402  0011                     	;# 
   403  0012                     	;# 
   404  0013                     	;# 
   405  0014                     	;# 
   406  0015                     	;# 
   407  0015                     	;# 
   408  0016                     	;# 
   409  0017                     	;# 
   410  0018                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  001B                     	;# 
   414  001B                     	;# 
   415  001C                     	;# 
   416  001D                     	;# 
   417  001E                     	;# 
   418  001F                     	;# 
   419  0081                     	;# 
   420  0085                     	;# 
   421  0086                     	;# 
   422  0087                     	;# 
   423  0088                     	;# 
   424  0089                     	;# 
   425  008C                     	;# 
   426  008D                     	;# 
   427  008E                     	;# 
   428  008F                     	;# 
   429  0090                     	;# 
   430  0091                     	;# 
   431  0092                     	;# 
   432  0093                     	;# 
   433  0093                     	;# 
   434  0093                     	;# 
   435  0094                     	;# 
   436  0095                     	;# 
   437  0096                     	;# 
   438  0097                     	;# 
   439  0098                     	;# 
   440  0099                     	;# 
   441  009A                     	;# 
   442  009B                     	;# 
   443  009C                     	;# 
   444  009D                     	;# 
   445  009E                     	;# 
   446  009F                     	;# 
   447  0105                     	;# 
   448  0107                     	;# 
   449  0108                     	;# 
   450  0109                     	;# 
   451  010C                     	;# 
   452  010C                     	;# 
   453  010D                     	;# 
   454  010E                     	;# 
   455  010F                     	;# 
   456  0185                     	;# 
   457  0187                     	;# 
   458  0188                     	;# 
   459  0189                     	;# 
   460  018C                     	;# 
   461  018D                     	;# 
   462  0000                     	;# 
   463  0001                     	;# 
   464  0002                     	;# 
   465  0003                     	;# 
   466  0004                     	;# 
   467  0005                     	;# 
   468  0006                     	;# 
   469  0007                     	;# 
   470  0008                     	;# 
   471  0009                     	;# 
   472  000A                     	;# 
   473  000B                     	;# 
   474  000C                     	;# 
   475  000D                     	;# 
   476  000E                     	;# 
   477  000E                     	;# 
   478  000F                     	;# 
   479  0010                     	;# 
   480  0011                     	;# 
   481  0012                     	;# 
   482  0013                     	;# 
   483  0014                     	;# 
   484  0015                     	;# 
   485  0015                     	;# 
   486  0016                     	;# 
   487  0017                     	;# 
   488  0018                     	;# 
   489  0019                     	;# 
   490  001A                     	;# 
   491  001B                     	;# 
   492  001B                     	;# 
   493  001C                     	;# 
   494  001D                     	;# 
   495  001E                     	;# 
   496  001F                     	;# 
   497  0081                     	;# 
   498  0085                     	;# 
   499  0086                     	;# 
   500  0087                     	;# 
   501  0088                     	;# 
   502  0089                     	;# 
   503  008C                     	;# 
   504  008D                     	;# 
   505  008E                     	;# 
   506  008F                     	;# 
   507  0090                     	;# 
   508  0091                     	;# 
   509  0092                     	;# 
   510  0093                     	;# 
   511  0093                     	;# 
   512  0093                     	;# 
   513  0094                     	;# 
   514  0095                     	;# 
   515  0096                     	;# 
   516  0097                     	;# 
   517  0098                     	;# 
   518  0099                     	;# 
   519  009A                     	;# 
   520  009B                     	;# 
   521  009C                     	;# 
   522  009D                     	;# 
   523  009E                     	;# 
   524  009F                     	;# 
   525  0105                     	;# 
   526  0107                     	;# 
   527  0108                     	;# 
   528  0109                     	;# 
   529  010C                     	;# 
   530  010C                     	;# 
   531  010D                     	;# 
   532  010E                     	;# 
   533  010F                     	;# 
   534  0185                     	;# 
   535  0187                     	;# 
   536  0188                     	;# 
   537  0189                     	;# 
   538  018C                     	;# 
   539  018D                     	;# 
   540  0000                     	;# 
   541  0001                     	;# 
   542  0002                     	;# 
   543  0003                     	;# 
   544  0004                     	;# 
   545  0005                     	;# 
   546  0006                     	;# 
   547  0007                     	;# 
   548  0008                     	;# 
   549  0009                     	;# 
   550  000A                     	;# 
   551  000B                     	;# 
   552  000C                     	;# 
   553  000D                     	;# 
   554  000E                     	;# 
   555  000E                     	;# 
   556  000F                     	;# 
   557  0010                     	;# 
   558  0011                     	;# 
   559  0012                     	;# 
   560  0013                     	;# 
   561  0014                     	;# 
   562  0015                     	;# 
   563  0015                     	;# 
   564  0016                     	;# 
   565  0017                     	;# 
   566  0018                     	;# 
   567  0019                     	;# 
   568  001A                     	;# 
   569  001B                     	;# 
   570  001B                     	;# 
   571  001C                     	;# 
   572  001D                     	;# 
   573  001E                     	;# 
   574  001F                     	;# 
   575  0081                     	;# 
   576  0085                     	;# 
   577  0086                     	;# 
   578  0087                     	;# 
   579  0088                     	;# 
   580  0089                     	;# 
   581  008C                     	;# 
   582  008D                     	;# 
   583  008E                     	;# 
   584  008F                     	;# 
   585  0090                     	;# 
   586  0091                     	;# 
   587  0092                     	;# 
   588  0093                     	;# 
   589  0093                     	;# 
   590  0093                     	;# 
   591  0094                     	;# 
   592  0095                     	;# 
   593  0096                     	;# 
   594  0097                     	;# 
   595  0098                     	;# 
   596  0099                     	;# 
   597  009A                     	;# 
   598  009B                     	;# 
   599  009C                     	;# 
   600  009D                     	;# 
   601  009E                     	;# 
   602  009F                     	;# 
   603  0105                     	;# 
   604  0107                     	;# 
   605  0108                     	;# 
   606  0109                     	;# 
   607  010C                     	;# 
   608  010C                     	;# 
   609  010D                     	;# 
   610  010E                     	;# 
   611  010F                     	;# 
   612  0185                     	;# 
   613  0187                     	;# 
   614  0188                     	;# 
   615  0189                     	;# 
   616  018C                     	;# 
   617  018D                     	;# 
   618  0018                     _RCSTAbits	set	24
   619  0006                     _PORTBbits	set	6
   620  0008                     _PORTDbits	set	8
   621  0013                     _SSPBUF	set	19
   622  0014                     _SSPCON	set	20
   623  000B                     _INTCONbits	set	11
   624  0014                     _SSPCONbits	set	20
   625  0006                     _PORTB	set	6
   626  0005                     _PORTA	set	5
   627  0063                     _SSPIF	set	99
   628  00A4                     _CKP	set	164
   629  009A                     _SPBRGH	set	154
   630  0099                     _SPBRG	set	153
   631  0098                     _TXSTAbits	set	152
   632  008F                     _OSCCONbits	set	143
   633  0091                     _SSPCON2bits	set	145
   634  008C                     _PIE1bits	set	140
   635  0093                     _SSPADD	set	147
   636  0094                     _SSPSTAT	set	148
   637  0091                     _SSPCON2	set	145
   638  0094                     _SSPSTATbits	set	148
   639  0085                     _TRISAbits	set	133
   640  0087                     _TRISCbits	set	135
   641  0086                     _TRISB	set	134
   642  0085                     _TRISA	set	133
   643  04A1                     _UA	set	1185
   644  0187                     _BAUDCTLbits	set	391
   645  0189                     _ANSELH	set	393
   646  0188                     _ANSEL	set	392
   647                           
   648                           	psect	strings
   649  0603                     __pstrings:
   650  0603                     stringtab:
   651  0603                     __stringtab:
   652  0603                     stringcode:	
   653                           ;	String table - string pointers are 1 byte each
   654                           
   655  0603                     stringdir:
   656  0603  3006               	movlw	high stringdir
   657  0604  008A               	movwf	10
   658  0605  0804               	movf	4,w
   659  0606  0A84               	incf	4,f
   660  0607  0782               	addwf	2,f
   661  0608                     __stringbase:
   662  0608  3400               	retlw	0
   663  0609                     __end_of__stringtab:
   664  0609                     STR_1:
   665  0609  3458               	retlw	88	;'X'
   666  060A  343A               	retlw	58	;':'
   667  060B  3420               	retlw	32	;' '
   668  060C  3420               	retlw	32	;' '
   669  060D  3420               	retlw	32	;' '
   670  060E  3420               	retlw	32	;' '
   671  060F  3459               	retlw	89	;'Y'
   672  0610  343A               	retlw	58	;':'
   673  0611  3420               	retlw	32	;' '
   674  0612  3420               	retlw	32	;' '
   675  0613  3420               	retlw	32	;' '
   676  0614  3420               	retlw	32	;' '
   677  0615  3420               	retlw	32	;' '
   678  0616  3453               	retlw	83	;'S'
   679  0617  343A               	retlw	58	;':'
   680  0618  3400               	retlw	0
   681  0619                     STR_2:
   682  0619  344D               	retlw	77	;'M'
   683  061A  3469               	retlw	105	;'i'
   684  061B  346E               	retlw	110	;'n'
   685  061C  3469               	retlw	105	;'i'
   686  061D  3470               	retlw	112	;'p'
   687  061E  3472               	retlw	114	;'r'
   688  061F  346F               	retlw	111	;'o'
   689  0620  3479               	retlw	121	;'y'
   690  0621  3465               	retlw	101	;'e'
   691  0622  3463               	retlw	99	;'c'
   692  0623  3474               	retlw	116	;'t'
   693  0624  346F               	retlw	111	;'o'
   694  0625  3420               	retlw	32	;' '
   695  0626  3432               	retlw	50	;'2'
   696  0627  3400               	retlw	0
   697  0628                     STR_3:
   698  0628  344A               	retlw	74	;'J'
   699  0629  346F               	retlw	111	;'o'
   700  062A  3473               	retlw	115	;'s'
   701  062B  3465               	retlw	101	;'e'
   702  062C  3420               	retlw	32	;' '
   703  062D  3453               	retlw	83	;'S'
   704  062E  3461               	retlw	97	;'a'
   705  062F  346E               	retlw	110	;'n'
   706  0630  3474               	retlw	116	;'t'
   707  0631  3469               	retlw	105	;'i'
   708  0632  347A               	retlw	122	;'z'
   709  0633  346F               	retlw	111	;'o'
   710  0634  3400               	retlw	0
   711                           
   712                           	psect	cinit
   713  000F                     start_initialization:	
   714                           ; #config settings
   715                           
   716  000F                     __initialization:
   717                           
   718                           ; Clear objects allocated to COMMON
   719  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   720  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   721                           
   722                           ; Clear objects allocated to BANK0
   723  0011  1383               	bcf	3,7	;select IRP bank0
   724  0012  3020               	movlw	low __pbssBANK0
   725  0013  0084               	movwf	4
   726  0014  3038               	movlw	low (__pbssBANK0+24)
   727  0015  120A  118A  2722  120A  118A  	fcall	clear_ram0
   728  001A                     end_of_initialization:	
   729                           ;End of C runtime variable initialization code
   730                           
   731  001A                     __end_of__initialization:
   732  001A  0183               	clrf	3
   733  001B  120A  118A  281E   	ljmp	_main	;jump to C main() function
   734                           
   735                           	psect	bssCOMMON
   736  007A                     __pbssCOMMON:
   737  007A                     _Giro_digy:
   738  007A                     	ds	1
   739  007B                     _Giro_digx:
   740  007B                     	ds	1
   741                           
   742                           	psect	bssBANK0
   743  0020                     __pbssBANK0:
   744  0020                     _Gz:
   745  0020                     	ds	2
   746  0022                     _Gy:
   747  0022                     	ds	2
   748  0024                     _Gx:
   749  0024                     	ds	2
   750  0026                     _Temp:
   751  0026                     	ds	2
   752  0028                     _Az:
   753  0028                     	ds	2
   754  002A                     _Ay:
   755  002A                     	ds	2
   756  002C                     _Ax:
   757  002C                     	ds	2
   758  002E                     _cen_z:
   759  002E                     	ds	1
   760  002F                     _dec_z:
   761  002F                     	ds	1
   762  0030                     _uni_z:
   763  0030                     	ds	1
   764  0031                     _Giro_digz:
   765  0031                     	ds	1
   766  0032                     _cen_y:
   767  0032                     	ds	1
   768  0033                     _dec_y:
   769  0033                     	ds	1
   770  0034                     _uni_y:
   771  0034                     	ds	1
   772  0035                     _cen_x:
   773  0035                     	ds	1
   774  0036                     _dec_x:
   775  0036                     	ds	1
   776  0037                     _uni_x:
   777  0037                     	ds	1
   778                           
   779                           	psect	clrtext
   780  0722                     clear_ram0:	
   781                           ;	Called with FSR containing the base address, and
   782                           ;	W with the last address+1
   783                           
   784  0722  0064               	clrwdt	;clear the watchdog before getting into this loop
   785  0723                     clrloop0:
   786  0723  0180               	clrf	0	;clear RAM location pointed to by FSR
   787  0724  0A84               	incf	4,f	;increment pointer
   788  0725  0604               	xorwf	4,w	;XOR with final address
   789  0726  1903               	btfsc	3,2	;have we reached the end yet?
   790  0727  3400               	retlw	0	;all done for this memory range, return
   791  0728  0604               	xorwf	4,w	;XOR again to restore value
   792  0729  2F23               	goto	clrloop0	;do the next byte
   793                           
   794                           	psect	cstackCOMMON
   795  0070                     __pcstackCOMMON:
   796  0070                     ?_setup:
   797  0070                     ?_I2C_Master_Start:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0070                     ?_I2CMasterWrite:	
   801                           ; 1 bytes @ 0x0
   802                           
   803  0070                     ?_I2CMasterRead:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0070                     ?_I2CMasterStop:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0070                     ?_tabla_numASCII:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0070                     ?_Escribir_stringLCD:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0070                     ?_Escribir_caracterLCD:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0070                     ?_initOsc:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     ?_InitMPU6050:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0070                     ?_Iniciar_LCD:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     ?_Limpiar_pantallaLCD:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0070                     ?_isr:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     ??_isr:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0070                     ?_main:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ?_I2CMasterCheck:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0070                     ?_prender_ELCD:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0070                     ?_Escribir_comandoLCD:	
   846                           ; 1 bytes @ 0x0
   847                           
   848                           
   849                           ; 1 bytes @ 0x0
   850  0070                     	ds	2
   851  0072                     ??_I2C_Master_Start:
   852  0072                     ??_I2CMasterWrite:	
   853                           ; 1 bytes @ 0x2
   854                           
   855  0072                     ??_I2CMasterRead:	
   856                           ; 1 bytes @ 0x2
   857                           
   858  0072                     ??_I2CMasterStop:	
   859                           ; 1 bytes @ 0x2
   860                           
   861  0072                     ??_tabla_numASCII:	
   862                           ; 1 bytes @ 0x2
   863                           
   864  0072                     ??_initOsc:	
   865                           ; 1 bytes @ 0x2
   866                           
   867  0072                     ??_I2CMasterCheck:	
   868                           ; 1 bytes @ 0x2
   869                           
   870  0072                     ??_prender_ELCD:	
   871                           ; 1 bytes @ 0x2
   872                           
   873  0072                     ?___awdiv:	
   874                           ; 1 bytes @ 0x2
   875                           
   876  0072                     ?___awmod:	
   877                           ; 2 bytes @ 0x2
   878                           
   879  0072                     ?___lldiv:	
   880                           ; 2 bytes @ 0x2
   881                           
   882  0072                     I2C_Master_Start@Modo_Inicio:	
   883                           ; 4 bytes @ 0x2
   884                           
   885  0072                     I2CMasterWrite@Datos:	
   886                           ; 1 bytes @ 0x2
   887                           
   888  0072                     initOsc@Valor:	
   889                           ; 1 bytes @ 0x2
   890                           
   891  0072                     ___awdiv@divisor:	
   892                           ; 1 bytes @ 0x2
   893                           
   894  0072                     ___awmod@divisor:	
   895                           ; 2 bytes @ 0x2
   896                           
   897  0072                     ___lldiv@divisor:	
   898                           ; 2 bytes @ 0x2
   899                           
   900                           
   901                           ; 4 bytes @ 0x2
   902  0072                     	ds	1
   903  0073                     ??_InitMPU6050:
   904  0073                     ??_Escribir_comandoLCD:	
   905                           ; 1 bytes @ 0x3
   906                           
   907  0073                     I2CMasterRead@ACK:	
   908                           ; 1 bytes @ 0x3
   909                           
   910  0073                     Escribir_comandoLCD@Comando:	
   911                           ; 1 bytes @ 0x3
   912                           
   913                           
   914                           ; 1 bytes @ 0x3
   915  0073                     	ds	1
   916  0074                     ?_set_cursor:
   917  0074                     ??_Escribir_stringLCD:	
   918                           ; 1 bytes @ 0x4
   919                           
   920  0074                     ??_Escribir_caracterLCD:	
   921                           ; 1 bytes @ 0x4
   922                           
   923  0074                     ??_Iniciar_LCD:	
   924                           ; 1 bytes @ 0x4
   925                           
   926  0074                     ??_Limpiar_pantallaLCD:	
   927                           ; 1 bytes @ 0x4
   928                           
   929  0074                     tabla_numASCII@a:	
   930                           ; 1 bytes @ 0x4
   931                           
   932  0074                     I2CMasterRead@Datos:	
   933                           ; 1 bytes @ 0x4
   934                           
   935  0074                     Escribir_caracterLCD@a:	
   936                           ; 1 bytes @ 0x4
   937                           
   938  0074                     set_cursor@posicion:	
   939                           ; 1 bytes @ 0x4
   940                           
   941  0074                     ___awdiv@dividend:	
   942                           ; 1 bytes @ 0x4
   943                           
   944  0074                     ___awmod@dividend:	
   945                           ; 2 bytes @ 0x4
   946                           
   947                           
   948                           ; 2 bytes @ 0x4
   949  0074                     	ds	1
   950  0075                     ??_set_cursor:
   951  0075                     Escribir_stringLCD@i:	
   952                           ; 1 bytes @ 0x5
   953                           
   954                           
   955                           ; 1 bytes @ 0x5
   956  0075                     	ds	1
   957  0076                     ??___awdiv:
   958  0076                     ??___awmod:	
   959                           ; 1 bytes @ 0x6
   960                           
   961  0076                     Escribir_stringLCD@d:	
   962                           ; 1 bytes @ 0x6
   963                           
   964  0076                     ___lldiv@dividend:	
   965                           ; 1 bytes @ 0x6
   966                           
   967                           
   968                           ; 4 bytes @ 0x6
   969  0076                     	ds	1
   970  0077                     set_cursor@linea:
   971  0077                     ___awmod@counter:	
   972                           ; 1 bytes @ 0x7
   973                           
   974                           
   975                           ; 1 bytes @ 0x7
   976  0077                     	ds	1
   977  0078                     ___awmod@sign:
   978                           
   979                           ; 1 bytes @ 0x8
   980  0078                     	ds	2
   981                           
   982                           	psect	cstackBANK0
   983  0038                     __pcstackBANK0:
   984  0038                     ??___lldiv:
   985  0038                     ___awdiv@counter:	
   986                           ; 1 bytes @ 0x0
   987                           
   988                           
   989                           ; 1 bytes @ 0x0
   990  0038                     	ds	1
   991  0039                     ___awdiv@sign:
   992  0039                     ___lldiv@quotient:	
   993                           ; 1 bytes @ 0x1
   994                           
   995                           
   996                           ; 4 bytes @ 0x1
   997  0039                     	ds	1
   998  003A                     ___awdiv@quotient:
   999                           
  1000                           ; 2 bytes @ 0x2
  1001  003A                     	ds	2
  1002  003C                     ?_divisor_dec:
  1003  003C                     divisor_dec@b:	
  1004                           ; 1 bytes @ 0x4
  1005                           
  1006                           
  1007                           ; 2 bytes @ 0x4
  1008  003C                     	ds	1
  1009  003D                     ___lldiv@counter:
  1010                           
  1011                           ; 1 bytes @ 0x5
  1012  003D                     	ds	1
  1013  003E                     ?_InitMSSP:
  1014  003E                     divisor_dec@dig1:	
  1015                           ; 1 bytes @ 0x6
  1016                           
  1017  003E                     InitMSSP@Dato:	
  1018                           ; 1 bytes @ 0x6
  1019                           
  1020                           
  1021                           ; 4 bytes @ 0x6
  1022  003E                     	ds	1
  1023  003F                     ??_divisor_dec:
  1024                           
  1025                           ; 1 bytes @ 0x7
  1026  003F                     	ds	2
  1027  0041                     divisor_dec@n:
  1028                           
  1029                           ; 2 bytes @ 0x9
  1030  0041                     	ds	1
  1031  0042                     ??_InitMSSP:
  1032                           
  1033                           ; 1 bytes @ 0xA
  1034  0042                     	ds	4
  1035  0046                     InitMSSP@Modo:
  1036                           
  1037                           ; 1 bytes @ 0xE
  1038  0046                     	ds	1
  1039  0047                     ??_setup:
  1040                           
  1041                           ; 1 bytes @ 0xF
  1042  0047                     	ds	3
  1043  004A                     ??_main:
  1044                           
  1045                           ; 1 bytes @ 0x12
  1046  004A                     	ds	4
  1047                           
  1048                           	psect	maintext
  1049  001E                     __pmaintext:	
  1050 ;;
  1051 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1052 ;;
  1053 ;; *************** function _main *****************
  1054 ;; Defined at:
  1055 ;;		line 92 in file "Maestro I2C.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;		None
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      void 
  1062 ;; Registers used:
  1063 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1064 ;; Tracked objects:
  1065 ;;		On entry : B00/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1069 ;;      Params:         0       0       0       0       0
  1070 ;;      Locals:         0       0       0       0       0
  1071 ;;      Temps:          0       4       0       0       0
  1072 ;;      Totals:         0       4       0       0       0
  1073 ;;Total ram usage:        4 bytes
  1074 ;; Hardware stack levels required when called: 5
  1075 ;; This function calls:
  1076 ;;		_Escribir_caracterLCD
  1077 ;;		_Escribir_stringLCD
  1078 ;;		_I2CMasterRead
  1079 ;;		_I2CMasterStop
  1080 ;;		_I2CMasterWrite
  1081 ;;		_I2C_Master_Start
  1082 ;;		_divisor_dec
  1083 ;;		_set_cursor
  1084 ;;		_setup
  1085 ;;		_tabla_numASCII
  1086 ;; This function is called by:
  1087 ;;		Startup code after reset
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           
  1092                           ;psect for function _main
  1093  001E                     _main:
  1094  001E                     l2171:	
  1095                           ;incstack = 0
  1096                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1097                           
  1098                           
  1099                           ;Maestro I2C.c: 93:     setup();
  1100  001E  120A  118A  2434  120A  118A  	fcall	_setup
  1101  0023                     l2173:
  1102                           
  1103                           ;Maestro I2C.c: 98:         I2C_Master_Start(Standard);
  1104  0023  3001               	movlw	1
  1105  0024  120A  118A  26CD  120A  118A  	fcall	_I2C_Master_Start
  1106  0029                     l2175:
  1107                           
  1108                           ;Maestro I2C.c: 99:         I2CMasterWrite(0b11010010 +0);
  1109  0029  30D2               	movlw	210
  1110  002A  120A  118A  270E  120A  118A  	fcall	_I2CMasterWrite
  1111  002F                     l2177:
  1112                           
  1113                           ;Maestro I2C.c: 100:         I2CMasterWrite(0x3B);
  1114  002F  303B               	movlw	59
  1115  0030  120A  118A  270E  120A  118A  	fcall	_I2CMasterWrite
  1116  0035                     l2179:
  1117                           
  1118                           ;Maestro I2C.c: 102:         I2C_Master_Start(Repeated);
  1119  0035  3000               	movlw	0
  1120  0036  120A  118A  26CD  120A  118A  	fcall	_I2C_Master_Start
  1121  003B                     l2181:
  1122                           
  1123                           ;Maestro I2C.c: 103:         I2CMasterWrite(0b11010010 +1);
  1124  003B  30D3               	movlw	211
  1125  003C  120A  118A  270E  120A  118A  	fcall	_I2CMasterWrite
  1126  0041                     l2183:
  1127                           
  1128                           ;Maestro I2C.c: 116:         Ax = (I2CMasterRead(ACK)<<8) | I2CMasterRead(ACK);
  1129  0041  3000               	movlw	0
  1130  0042  120A  118A  2665  120A  118A  	fcall	_I2CMasterRead
  1131  0047  1283               	bcf	3,5	;RP0=0, select bank0
  1132  0048  1303               	bcf	3,6	;RP1=0, select bank0
  1133  0049  00CA               	movwf	??_main
  1134  004A  01CB               	clrf	??_main+1
  1135  004B  3000               	movlw	0
  1136  004C  120A  118A  2665  120A  118A  	fcall	_I2CMasterRead
  1137  0051  1283               	bcf	3,5	;RP0=0, select bank0
  1138  0052  1303               	bcf	3,6	;RP1=0, select bank0
  1139  0053  00CC               	movwf	??_main+2
  1140  0054  01CD               	clrf	??_main+3
  1141  0055  084C               	movf	??_main+2,w
  1142  0056  00CD               	movwf	??_main+3
  1143  0057  01CC               	clrf	??_main+2
  1144  0058  084A               	movf	??_main,w
  1145  0059  044C               	iorwf	??_main+2,w
  1146  005A  00AC               	movwf	_Ax
  1147  005B  084B               	movf	??_main+1,w
  1148  005C  044D               	iorwf	??_main+3,w
  1149  005D  00AD               	movwf	_Ax+1
  1150  005E                     l2185:
  1151                           
  1152                           ;Maestro I2C.c: 117:         Ay = (I2CMasterRead(ACK)<<8) | I2CMasterRead(ACK);
  1153  005E  3000               	movlw	0
  1154  005F  120A  118A  2665  120A  118A  	fcall	_I2CMasterRead
  1155  0064  1283               	bcf	3,5	;RP0=0, select bank0
  1156  0065  1303               	bcf	3,6	;RP1=0, select bank0
  1157  0066  00CA               	movwf	??_main
  1158  0067  01CB               	clrf	??_main+1
  1159  0068  3000               	movlw	0
  1160  0069  120A  118A  2665  120A  118A  	fcall	_I2CMasterRead
  1161  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1162  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1163  0070  00CC               	movwf	??_main+2
  1164  0071  01CD               	clrf	??_main+3
  1165  0072  084C               	movf	??_main+2,w
  1166  0073  00CD               	movwf	??_main+3
  1167  0074  01CC               	clrf	??_main+2
  1168  0075  084A               	movf	??_main,w
  1169  0076  044C               	iorwf	??_main+2,w
  1170  0077  00AA               	movwf	_Ay
  1171  0078  084B               	movf	??_main+1,w
  1172  0079  044D               	iorwf	??_main+3,w
  1173  007A  00AB               	movwf	_Ay+1
  1174  007B                     l2187:
  1175                           
  1176                           ;Maestro I2C.c: 118:         Az = (I2CMasterRead(ACK)<<8) | I2CMasterRead(ACK);
  1177  007B  3000               	movlw	0
  1178  007C  120A  118A  2665  120A  118A  	fcall	_I2CMasterRead
  1179  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1180  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1181  0083  00CA               	movwf	??_main
  1182  0084  01CB               	clrf	??_main+1
  1183  0085  3000               	movlw	0
  1184  0086  120A  118A  2665  120A  118A  	fcall	_I2CMasterRead
  1185  008B  1283               	bcf	3,5	;RP0=0, select bank0
  1186  008C  1303               	bcf	3,6	;RP1=0, select bank0
  1187  008D  00CC               	movwf	??_main+2
  1188  008E  01CD               	clrf	??_main+3
  1189  008F  084C               	movf	??_main+2,w
  1190  0090  00CD               	movwf	??_main+3
  1191  0091  01CC               	clrf	??_main+2
  1192  0092  084A               	movf	??_main,w
  1193  0093  044C               	iorwf	??_main+2,w
  1194  0094  00A8               	movwf	_Az
  1195  0095  084B               	movf	??_main+1,w
  1196  0096  044D               	iorwf	??_main+3,w
  1197  0097  00A9               	movwf	_Az+1
  1198  0098                     l2189:
  1199                           
  1200                           ;Maestro I2C.c: 119:         Temp = (I2CMasterRead(ACK)<<8) | I2CMasterRead(ACK);
  1201  0098  3000               	movlw	0
  1202  0099  120A  118A  2665  120A  118A  	fcall	_I2CMasterRead
  1203  009E  1283               	bcf	3,5	;RP0=0, select bank0
  1204  009F  1303               	bcf	3,6	;RP1=0, select bank0
  1205  00A0  00CA               	movwf	??_main
  1206  00A1  01CB               	clrf	??_main+1
  1207  00A2  3000               	movlw	0
  1208  00A3  120A  118A  2665  120A  118A  	fcall	_I2CMasterRead
  1209  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1210  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1211  00AA  00CC               	movwf	??_main+2
  1212  00AB  01CD               	clrf	??_main+3
  1213  00AC  084C               	movf	??_main+2,w
  1214  00AD  00CD               	movwf	??_main+3
  1215  00AE  01CC               	clrf	??_main+2
  1216  00AF  084A               	movf	??_main,w
  1217  00B0  044C               	iorwf	??_main+2,w
  1218  00B1  00A6               	movwf	_Temp
  1219  00B2  084B               	movf	??_main+1,w
  1220  00B3  044D               	iorwf	??_main+3,w
  1221  00B4  00A7               	movwf	_Temp+1
  1222  00B5                     l2191:
  1223                           
  1224                           ;Maestro I2C.c: 120:         Gx = (I2CMasterRead(ACK)<<8) | I2CMasterRead(ACK);
  1225  00B5  3000               	movlw	0
  1226  00B6  120A  118A  2665  120A  118A  	fcall	_I2CMasterRead
  1227  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1228  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1229  00BD  00CA               	movwf	??_main
  1230  00BE  01CB               	clrf	??_main+1
  1231  00BF  3000               	movlw	0
  1232  00C0  120A  118A  2665  120A  118A  	fcall	_I2CMasterRead
  1233  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1234  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1235  00C7  00CC               	movwf	??_main+2
  1236  00C8  01CD               	clrf	??_main+3
  1237  00C9  084C               	movf	??_main+2,w
  1238  00CA  00CD               	movwf	??_main+3
  1239  00CB  01CC               	clrf	??_main+2
  1240  00CC  084A               	movf	??_main,w
  1241  00CD  044C               	iorwf	??_main+2,w
  1242  00CE  00A4               	movwf	_Gx
  1243  00CF  084B               	movf	??_main+1,w
  1244  00D0  044D               	iorwf	??_main+3,w
  1245  00D1  00A5               	movwf	_Gx+1
  1246  00D2                     l2193:
  1247                           
  1248                           ;Maestro I2C.c: 121:         Gy = (I2CMasterRead(ACK)<<8) | I2CMasterRead(ACK);
  1249  00D2  3000               	movlw	0
  1250  00D3  120A  118A  2665  120A  118A  	fcall	_I2CMasterRead
  1251  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1252  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1253  00DA  00CA               	movwf	??_main
  1254  00DB  01CB               	clrf	??_main+1
  1255  00DC  3000               	movlw	0
  1256  00DD  120A  118A  2665  120A  118A  	fcall	_I2CMasterRead
  1257  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1258  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1259  00E4  00CC               	movwf	??_main+2
  1260  00E5  01CD               	clrf	??_main+3
  1261  00E6  084C               	movf	??_main+2,w
  1262  00E7  00CD               	movwf	??_main+3
  1263  00E8  01CC               	clrf	??_main+2
  1264  00E9  084A               	movf	??_main,w
  1265  00EA  044C               	iorwf	??_main+2,w
  1266  00EB  00A2               	movwf	_Gy
  1267  00EC  084B               	movf	??_main+1,w
  1268  00ED  044D               	iorwf	??_main+3,w
  1269  00EE  00A3               	movwf	_Gy+1
  1270  00EF                     l2195:
  1271                           
  1272                           ;Maestro I2C.c: 122:         Gz = (I2CMasterRead(ACK)<<8) | I2CMasterRead(NACK);
  1273  00EF  3001               	movlw	1
  1274  00F0  120A  118A  2665  120A  118A  	fcall	_I2CMasterRead
  1275  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1276  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1277  00F7  00CA               	movwf	??_main
  1278  00F8  01CB               	clrf	??_main+1
  1279  00F9  3000               	movlw	0
  1280  00FA  120A  118A  2665  120A  118A  	fcall	_I2CMasterRead
  1281  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1282  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1283  0101  00CC               	movwf	??_main+2
  1284  0102  01CD               	clrf	??_main+3
  1285  0103  084C               	movf	??_main+2,w
  1286  0104  00CD               	movwf	??_main+3
  1287  0105  01CC               	clrf	??_main+2
  1288  0106  084A               	movf	??_main,w
  1289  0107  044C               	iorwf	??_main+2,w
  1290  0108  00A0               	movwf	_Gz
  1291  0109  084B               	movf	??_main+1,w
  1292  010A  044D               	iorwf	??_main+3,w
  1293  010B  00A1               	movwf	_Gz+1
  1294  010C                     l2197:
  1295                           
  1296                           ;Maestro I2C.c: 124:         I2CMasterStop();
  1297  010C  120A  118A  2719  120A  118A  	fcall	_I2CMasterStop
  1298  0111                     l2199:
  1299                           
  1300                           ;Maestro I2C.c: 131:         divisor_dec(Gx,Giro_digx);
  1301  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1302  0112  1303               	bcf	3,6	;RP1=0, select bank0
  1303  0113  0825               	movf	_Gx+1,w
  1304  0114  00BD               	movwf	divisor_dec@b+1
  1305  0115  0824               	movf	_Gx,w
  1306  0116  00BC               	movwf	divisor_dec@b
  1307  0117  307B               	movlw	(low (_Giro_digx| 0))& (0+255)
  1308  0118  00CA               	movwf	??_main
  1309  0119  084A               	movf	??_main,w
  1310  011A  00BE               	movwf	divisor_dec@dig1
  1311  011B  120A  118A  24F1  120A  118A  	fcall	_divisor_dec
  1312  0120                     l2201:
  1313                           
  1314                           ;Maestro I2C.c: 134:         uni_x = tabla_numASCII(Giro_digx[0]);
  1315  0120  087B               	movf	_Giro_digx,w
  1316  0121  120A  118A  25C4  120A  118A  	fcall	_tabla_numASCII
  1317  0126  1283               	bcf	3,5	;RP0=0, select bank0
  1318  0127  1303               	bcf	3,6	;RP1=0, select bank0
  1319  0128  00CA               	movwf	??_main
  1320  0129  084A               	movf	??_main,w
  1321  012A  00B7               	movwf	_uni_x
  1322  012B                     l2203:
  1323                           
  1324                           ;Maestro I2C.c: 135:         dec_x = tabla_numASCII(Giro_digx[1]);
  1325  012B  087C               	movf	_Giro_digx+1,w
  1326  012C  120A  118A  25C4  120A  118A  	fcall	_tabla_numASCII
  1327  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1328  0132  1303               	bcf	3,6	;RP1=0, select bank0
  1329  0133  00CA               	movwf	??_main
  1330  0134  084A               	movf	??_main,w
  1331  0135  00B6               	movwf	_dec_x
  1332  0136                     l2205:
  1333                           
  1334                           ;Maestro I2C.c: 136:         cen_x = tabla_numASCII(Giro_digx[2]);
  1335  0136  087D               	movf	_Giro_digx+2,w
  1336  0137  120A  118A  25C4  120A  118A  	fcall	_tabla_numASCII
  1337  013C  1283               	bcf	3,5	;RP0=0, select bank0
  1338  013D  1303               	bcf	3,6	;RP1=0, select bank0
  1339  013E  00CA               	movwf	??_main
  1340  013F  084A               	movf	??_main,w
  1341  0140  00B5               	movwf	_cen_x
  1342  0141                     l2207:
  1343                           
  1344                           ;Maestro I2C.c: 139:         set_cursor(1,0);
  1345  0141  01F4               	clrf	set_cursor@posicion
  1346  0142  3001               	movlw	1
  1347  0143  120A  118A  253E  120A  118A  	fcall	_set_cursor
  1348                           
  1349                           ;Maestro I2C.c: 140:         Escribir_stringLCD("X:    Y:     S:");
  1350  0148  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1351  0149  120A  118A  268D  120A  118A  	fcall	_Escribir_stringLCD
  1352  014E                     l2209:
  1353                           
  1354                           ;Maestro I2C.c: 142:         set_cursor(2,0);
  1355  014E  01F4               	clrf	set_cursor@posicion
  1356  014F  3002               	movlw	2
  1357  0150  120A  118A  253E  120A  118A  	fcall	_set_cursor
  1358  0155                     l2211:
  1359                           
  1360                           ;Maestro I2C.c: 143:         Escribir_caracterLCD(cen_x);
  1361  0155  1283               	bcf	3,5	;RP0=0, select bank0
  1362  0156  1303               	bcf	3,6	;RP1=0, select bank0
  1363  0157  0835               	movf	_cen_x,w
  1364  0158  120A  118A  2702  120A  118A  	fcall	_Escribir_caracterLCD
  1365  015D                     l2213:
  1366                           
  1367                           ;Maestro I2C.c: 144:         Escribir_caracterLCD(dec_x);
  1368  015D  1283               	bcf	3,5	;RP0=0, select bank0
  1369  015E  1303               	bcf	3,6	;RP1=0, select bank0
  1370  015F  0836               	movf	_dec_x,w
  1371  0160  120A  118A  2702  120A  118A  	fcall	_Escribir_caracterLCD
  1372  0165                     l2215:
  1373                           
  1374                           ;Maestro I2C.c: 145:         Escribir_caracterLCD(uni_x);
  1375  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1376  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1377  0167  0837               	movf	_uni_x,w
  1378  0168  120A  118A  2702  120A  118A  	fcall	_Escribir_caracterLCD
  1379  016D                     l2217:
  1380                           
  1381                           ;Maestro I2C.c: 148:         divisor_dec(Gy,Giro_digy);
  1382  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1383  016E  1303               	bcf	3,6	;RP1=0, select bank0
  1384  016F  0823               	movf	_Gy+1,w
  1385  0170  00BD               	movwf	divisor_dec@b+1
  1386  0171  0822               	movf	_Gy,w
  1387  0172  00BC               	movwf	divisor_dec@b
  1388  0173  307A               	movlw	(low (_Giro_digy| 0))& (0+255)
  1389  0174  00CA               	movwf	??_main
  1390  0175  084A               	movf	??_main,w
  1391  0176  00BE               	movwf	divisor_dec@dig1
  1392  0177  120A  118A  24F1  120A  118A  	fcall	_divisor_dec
  1393  017C                     l2219:
  1394                           
  1395                           ;Maestro I2C.c: 151:         uni_y = tabla_numASCII(Giro_digy[0]);
  1396  017C  087A               	movf	_Giro_digy,w
  1397  017D  120A  118A  25C4  120A  118A  	fcall	_tabla_numASCII
  1398  0182  1283               	bcf	3,5	;RP0=0, select bank0
  1399  0183  1303               	bcf	3,6	;RP1=0, select bank0
  1400  0184  00CA               	movwf	??_main
  1401  0185  084A               	movf	??_main,w
  1402  0186  00B4               	movwf	_uni_y
  1403  0187                     l2221:
  1404                           
  1405                           ;Maestro I2C.c: 152:         dec_y = tabla_numASCII(Giro_digy[1]);
  1406  0187  087B               	movf	_Giro_digy+1,w
  1407  0188  120A  118A  25C4  120A  118A  	fcall	_tabla_numASCII
  1408  018D  1283               	bcf	3,5	;RP0=0, select bank0
  1409  018E  1303               	bcf	3,6	;RP1=0, select bank0
  1410  018F  00CA               	movwf	??_main
  1411  0190  084A               	movf	??_main,w
  1412  0191  00B3               	movwf	_dec_y
  1413  0192                     l2223:
  1414                           
  1415                           ;Maestro I2C.c: 153:         cen_y = tabla_numASCII(Giro_digy[2]);
  1416  0192  087C               	movf	_Giro_digy+2,w
  1417  0193  120A  118A  25C4  120A  118A  	fcall	_tabla_numASCII
  1418  0198  1283               	bcf	3,5	;RP0=0, select bank0
  1419  0199  1303               	bcf	3,6	;RP1=0, select bank0
  1420  019A  00CA               	movwf	??_main
  1421  019B  084A               	movf	??_main,w
  1422  019C  00B2               	movwf	_cen_y
  1423  019D                     l2225:
  1424                           
  1425                           ;Maestro I2C.c: 155:         set_cursor(2,6);
  1426  019D  3006               	movlw	6
  1427  019E  00CA               	movwf	??_main
  1428  019F  084A               	movf	??_main,w
  1429  01A0  00F4               	movwf	set_cursor@posicion
  1430  01A1  3002               	movlw	2
  1431  01A2  120A  118A  253E  120A  118A  	fcall	_set_cursor
  1432  01A7                     l2227:
  1433                           
  1434                           ;Maestro I2C.c: 156:         Escribir_caracterLCD(cen_y);
  1435  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  1436  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  1437  01A9  0832               	movf	_cen_y,w
  1438  01AA  120A  118A  2702  120A  118A  	fcall	_Escribir_caracterLCD
  1439  01AF                     l2229:
  1440                           
  1441                           ;Maestro I2C.c: 157:         Escribir_caracterLCD(dec_y);
  1442  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1443  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1444  01B1  0833               	movf	_dec_y,w
  1445  01B2  120A  118A  2702  120A  118A  	fcall	_Escribir_caracterLCD
  1446  01B7                     l2231:
  1447                           
  1448                           ;Maestro I2C.c: 158:         Escribir_caracterLCD(uni_y);
  1449  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1450  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  1451  01B9  0834               	movf	_uni_y,w
  1452  01BA  120A  118A  2702  120A  118A  	fcall	_Escribir_caracterLCD
  1453  01BF  2823               	goto	l2173
  1454  01C0  120A  118A  280C   	ljmp	start
  1455  01C3                     __end_of_main:
  1456                           
  1457                           	psect	text1
  1458  05C4                     __ptext1:	
  1459 ;; *************** function _tabla_numASCII *****************
  1460 ;; Defined at:
  1461 ;;		line 208 in file "Maestro I2C.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;  a               1    wreg     unsigned char 
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;  a               1    4[COMMON] unsigned char 
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  1    wreg      unsigned char 
  1468 ;; Registers used:
  1469 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1475 ;;      Params:         0       0       0       0       0
  1476 ;;      Locals:         1       0       0       0       0
  1477 ;;      Temps:          2       0       0       0       0
  1478 ;;      Totals:         3       0       0       0       0
  1479 ;;Total ram usage:        3 bytes
  1480 ;; Hardware stack levels used: 1
  1481 ;; Hardware stack levels required when called: 1
  1482 ;; This function calls:
  1483 ;;		Nothing
  1484 ;; This function is called by:
  1485 ;;		_main
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           
  1490                           ;psect for function _tabla_numASCII
  1491  05C4                     _tabla_numASCII:
  1492                           
  1493                           ;incstack = 0
  1494                           ; Regs used in _tabla_numASCII: [wreg-fsr0h+status,2+status,0]
  1495                           ;tabla_numASCII@a stored from wreg
  1496  05C4  00F4               	movwf	tabla_numASCII@a
  1497  05C5                     l1863:
  1498                           
  1499                           ;Maestro I2C.c: 209:     switch(a){
  1500  05C5  2DDA               	goto	l1927
  1501  05C6                     l1865:
  1502                           
  1503                           ;Maestro I2C.c: 211:             return 48;
  1504  05C6  3030               	movlw	48
  1505  05C7  2E02               	goto	l108
  1506  05C8                     l1871:
  1507                           
  1508                           ;Maestro I2C.c: 214:             return 49;
  1509  05C8  3031               	movlw	49
  1510  05C9  2E02               	goto	l108
  1511  05CA                     l1877:
  1512                           
  1513                           ;Maestro I2C.c: 217:             return 50;
  1514  05CA  3032               	movlw	50
  1515  05CB  2E02               	goto	l108
  1516  05CC                     l1883:
  1517                           
  1518                           ;Maestro I2C.c: 220:             return 51;
  1519  05CC  3033               	movlw	51
  1520  05CD  2E02               	goto	l108
  1521  05CE                     l1889:
  1522                           
  1523                           ;Maestro I2C.c: 223:             return 52;
  1524  05CE  3034               	movlw	52
  1525  05CF  2E02               	goto	l108
  1526  05D0                     l1895:
  1527                           
  1528                           ;Maestro I2C.c: 226:             return 53;
  1529  05D0  3035               	movlw	53
  1530  05D1  2E02               	goto	l108
  1531  05D2                     l1901:
  1532                           
  1533                           ;Maestro I2C.c: 229:             return 54;
  1534  05D2  3036               	movlw	54
  1535  05D3  2E02               	goto	l108
  1536  05D4                     l1907:
  1537                           
  1538                           ;Maestro I2C.c: 232:             return 55;
  1539  05D4  3037               	movlw	55
  1540  05D5  2E02               	goto	l108
  1541  05D6                     l1913:
  1542                           
  1543                           ;Maestro I2C.c: 235:             return 56;
  1544  05D6  3038               	movlw	56
  1545  05D7  2E02               	goto	l108
  1546  05D8                     l1919:
  1547                           
  1548                           ;Maestro I2C.c: 238:             return 57;
  1549  05D8  3039               	movlw	57
  1550  05D9  2E02               	goto	l108
  1551  05DA                     l1927:
  1552  05DA  0874               	movf	tabla_numASCII@a,w
  1553  05DB  00F2               	movwf	??_tabla_numASCII
  1554  05DC  01F3               	clrf	??_tabla_numASCII+1
  1555                           
  1556                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1557                           ; Switch size 1, requested type "simple"
  1558                           ; Number of cases is 1, Range of values is 0 to 0
  1559                           ; switch strategies available:
  1560                           ; Name         Instructions Cycles
  1561                           ; simple_byte            4     3 (average)
  1562                           ; direct_byte           11     8 (fixed)
  1563                           ; jumptable            260     6 (fixed)
  1564                           ;	Chosen strategy is simple_byte
  1565  05DD  0873               	movf	??_tabla_numASCII+1,w
  1566  05DE  3A00               	xorlw	0	; case 0
  1567  05DF  1903               	skipnz
  1568  05E0  2DE2               	goto	l2253
  1569  05E1  2E02               	goto	l108
  1570  05E2                     l2253:
  1571                           
  1572                           ; Switch size 1, requested type "simple"
  1573                           ; Number of cases is 10, Range of values is 0 to 9
  1574                           ; switch strategies available:
  1575                           ; Name         Instructions Cycles
  1576                           ; simple_byte           31    16 (average)
  1577                           ; direct_byte           38     8 (fixed)
  1578                           ; jumptable            260     6 (fixed)
  1579                           ;	Chosen strategy is simple_byte
  1580  05E2  0872               	movf	??_tabla_numASCII,w
  1581  05E3  3A00               	xorlw	0	; case 0
  1582  05E4  1903               	skipnz
  1583  05E5  2DC6               	goto	l1865
  1584  05E6  3A01               	xorlw	1	; case 1
  1585  05E7  1903               	skipnz
  1586  05E8  2DC8               	goto	l1871
  1587  05E9  3A03               	xorlw	3	; case 2
  1588  05EA  1903               	skipnz
  1589  05EB  2DCA               	goto	l1877
  1590  05EC  3A01               	xorlw	1	; case 3
  1591  05ED  1903               	skipnz
  1592  05EE  2DCC               	goto	l1883
  1593  05EF  3A07               	xorlw	7	; case 4
  1594  05F0  1903               	skipnz
  1595  05F1  2DCE               	goto	l1889
  1596  05F2  3A01               	xorlw	1	; case 5
  1597  05F3  1903               	skipnz
  1598  05F4  2DD0               	goto	l1895
  1599  05F5  3A03               	xorlw	3	; case 6
  1600  05F6  1903               	skipnz
  1601  05F7  2DD2               	goto	l1901
  1602  05F8  3A01               	xorlw	1	; case 7
  1603  05F9  1903               	skipnz
  1604  05FA  2DD4               	goto	l1907
  1605  05FB  3A0F               	xorlw	15	; case 8
  1606  05FC  1903               	skipnz
  1607  05FD  2DD6               	goto	l1913
  1608  05FE  3A01               	xorlw	1	; case 9
  1609  05FF  1903               	skipnz
  1610  0600  2DD8               	goto	l1919
  1611  0601  2E02               	goto	l108
  1612  0602                     l108:
  1613  0602  0008               	return
  1614  0603                     __end_of_tabla_numASCII:
  1615                           
  1616                           	psect	text2
  1617  0434                     __ptext2:	
  1618 ;; *************** function _setup *****************
  1619 ;; Defined at:
  1620 ;;		line 164 in file "Maestro I2C.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;		None
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;		None
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      void 
  1627 ;; Registers used:
  1628 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1634 ;;      Params:         0       0       0       0       0
  1635 ;;      Locals:         0       0       0       0       0
  1636 ;;      Temps:          0       3       0       0       0
  1637 ;;      Totals:         0       3       0       0       0
  1638 ;;Total ram usage:        3 bytes
  1639 ;; Hardware stack levels used: 1
  1640 ;; Hardware stack levels required when called: 4
  1641 ;; This function calls:
  1642 ;;		_Escribir_stringLCD
  1643 ;;		_Iniciar_LCD
  1644 ;;		_InitMPU6050
  1645 ;;		_InitMSSP
  1646 ;;		_Limpiar_pantallaLCD
  1647 ;;		_initOsc
  1648 ;;		_set_cursor
  1649 ;; This function is called by:
  1650 ;;		_main
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           
  1655                           ;psect for function _setup
  1656  0434                     _setup:
  1657  0434                     l2135:	
  1658                           ;incstack = 0
  1659                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1660                           
  1661                           
  1662                           ;Maestro I2C.c: 167:     ANSEL = 0;
  1663  0434  1683               	bsf	3,5	;RP0=1, select bank3
  1664  0435  1703               	bsf	3,6	;RP1=1, select bank3
  1665  0436  0188               	clrf	8	;volatile
  1666                           
  1667                           ;Maestro I2C.c: 168:     ANSELH = 0;
  1668  0437  0189               	clrf	9	;volatile
  1669                           
  1670                           ;Maestro I2C.c: 170:     TRISA = 0;
  1671  0438  1683               	bsf	3,5	;RP0=1, select bank1
  1672  0439  1303               	bcf	3,6	;RP1=0, select bank1
  1673  043A  0185               	clrf	5	;volatile
  1674                           
  1675                           ;Maestro I2C.c: 171:     TRISB = 0;
  1676  043B  0186               	clrf	6	;volatile
  1677                           
  1678                           ;Maestro I2C.c: 173:     PORTA = 0;
  1679  043C  1283               	bcf	3,5	;RP0=0, select bank0
  1680  043D  1303               	bcf	3,6	;RP1=0, select bank0
  1681  043E  0185               	clrf	5	;volatile
  1682                           
  1683                           ;Maestro I2C.c: 174:     PORTB = 0;
  1684  043F  0186               	clrf	6	;volatile
  1685  0440                     l2137:
  1686                           
  1687                           ;Maestro I2C.c: 177:     initOsc(4);
  1688  0440  3004               	movlw	4
  1689  0441  120A  118A  2635  120A  118A  	fcall	_initOsc
  1690  0446                     l2139:
  1691                           
  1692                           ;Maestro I2C.c: 181:     InitMSSP(I2C_MASTER_FOSC, 100000);
  1693  0446  3000               	movlw	0
  1694  0447  1283               	bcf	3,5	;RP0=0, select bank0
  1695  0448  1303               	bcf	3,6	;RP1=0, select bank0
  1696  0449  00C1               	movwf	InitMSSP@Dato+3
  1697  044A  3001               	movlw	1
  1698  044B  00C0               	movwf	InitMSSP@Dato+2
  1699  044C  3086               	movlw	134
  1700  044D  00BF               	movwf	InitMSSP@Dato+1
  1701  044E  30A0               	movlw	160
  1702  044F  00BE               	movwf	InitMSSP@Dato
  1703  0450  3008               	movlw	8
  1704  0451  120A  118A  21C3  120A  118A  	fcall	_InitMSSP
  1705  0456                     l2141:
  1706                           
  1707                           ;Maestro I2C.c: 184:     InitMPU6050();
  1708  0456  120A  118A  2274  120A  118A  	fcall	_InitMPU6050
  1709  045B                     l2143:
  1710                           
  1711                           ;Maestro I2C.c: 187:     Iniciar_LCD();
  1712  045B  120A  118A  23CF  120A  118A  	fcall	_Iniciar_LCD
  1713  0460                     l2145:
  1714                           
  1715                           ;Maestro I2C.c: 188:     Limpiar_pantallaLCD();
  1716  0460  120A  118A  26B3  120A  118A  	fcall	_Limpiar_pantallaLCD
  1717  0465                     l2147:
  1718                           
  1719                           ;Maestro I2C.c: 189:     set_cursor(1,0);
  1720  0465  01F4               	clrf	set_cursor@posicion
  1721  0466  3001               	movlw	1
  1722  0467  120A  118A  253E  120A  118A  	fcall	_set_cursor
  1723  046C                     l2149:
  1724                           
  1725                           ;Maestro I2C.c: 190:     Escribir_stringLCD("Miniproyecto 2");
  1726  046C  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1727  046D  120A  118A  268D  120A  118A  	fcall	_Escribir_stringLCD
  1728  0472                     l2151:
  1729                           
  1730                           ;Maestro I2C.c: 191:     set_cursor(2,2);
  1731  0472  3002               	movlw	2
  1732  0473  1283               	bcf	3,5	;RP0=0, select bank0
  1733  0474  1303               	bcf	3,6	;RP1=0, select bank0
  1734  0475  00C7               	movwf	??_setup
  1735  0476  0847               	movf	??_setup,w
  1736  0477  00F4               	movwf	set_cursor@posicion
  1737  0478  3002               	movlw	2
  1738  0479  120A  118A  253E  120A  118A  	fcall	_set_cursor
  1739  047E                     l2153:
  1740                           
  1741                           ;Maestro I2C.c: 192:     Escribir_stringLCD("Jose Santizo");
  1742  047E  3020               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1743  047F  120A  118A  268D  120A  118A  	fcall	_Escribir_stringLCD
  1744  0484                     l2155:
  1745                           
  1746                           ;Maestro I2C.c: 193:     _delay((unsigned long)((5000)*(8000000/4000.0)));
  1747  0484  3033               	movlw	51
  1748  0485  1283               	bcf	3,5	;RP0=0, select bank0
  1749  0486  1303               	bcf	3,6	;RP1=0, select bank0
  1750  0487  00C9               	movwf	??_setup+2
  1751  0488  30BB               	movlw	187
  1752  0489  00C8               	movwf	??_setup+1
  1753  048A  30DF               	movlw	223
  1754  048B  00C7               	movwf	??_setup
  1755  048C                     u1537:
  1756  048C  0BC7               	decfsz	??_setup,f
  1757  048D  2C8C               	goto	u1537
  1758  048E  0BC8               	decfsz	??_setup+1,f
  1759  048F  2C8C               	goto	u1537
  1760  0490  0BC9               	decfsz	??_setup+2,f
  1761  0491  2C8C               	goto	u1537
  1762  0492                     l2157:
  1763                           
  1764                           ;Maestro I2C.c: 194:     Limpiar_pantallaLCD();
  1765  0492  120A  118A  26B3  120A  118A  	fcall	_Limpiar_pantallaLCD
  1766  0497                     l98:
  1767  0497  0008               	return
  1768  0498                     __end_of_setup:
  1769                           
  1770                           	psect	text3
  1771  053E                     __ptext3:	
  1772 ;; *************** function _set_cursor *****************
  1773 ;; Defined at:
  1774 ;;		line 77 in file "LCD.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;  linea           1    wreg     unsigned char 
  1777 ;;  posicion        1    4[COMMON] unsigned char 
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;  linea           1    7[COMMON] unsigned char 
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  1    wreg      void 
  1782 ;; Registers used:
  1783 ;;		wreg, status,2, status,0, pclath, cstack
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1789 ;;      Params:         1       0       0       0       0
  1790 ;;      Locals:         1       0       0       0       0
  1791 ;;      Temps:          2       0       0       0       0
  1792 ;;      Totals:         4       0       0       0       0
  1793 ;;Total ram usage:        4 bytes
  1794 ;; Hardware stack levels used: 1
  1795 ;; Hardware stack levels required when called: 3
  1796 ;; This function calls:
  1797 ;;		_Escribir_comandoLCD
  1798 ;; This function is called by:
  1799 ;;		_main
  1800 ;;		_setup
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           
  1805                           ;psect for function _set_cursor
  1806  053E                     _set_cursor:
  1807                           
  1808                           ;incstack = 0
  1809                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1810                           ;set_cursor@linea stored from wreg
  1811  053E  00F7               	movwf	set_cursor@linea
  1812  053F                     l1553:
  1813                           
  1814                           ;LCD.c: 78:     PORTDbits.RD3 = 0; PORTDbits.RD4 = 0;
  1815  053F  1283               	bcf	3,5	;RP0=0, select bank0
  1816  0540  1303               	bcf	3,6	;RP1=0, select bank0
  1817  0541  1188               	bcf	8,3	;volatile
  1818  0542  1208               	bcf	8,4	;volatile
  1819  0543                     l1555:
  1820                           
  1821                           ;LCD.c: 81:     if (linea == 1){ Escribir_comandoLCD(0b10000000);}
  1822  0543  0377               	decf	set_cursor@linea,w
  1823  0544  1D03               	btfss	3,2
  1824  0545  2D47               	goto	u891
  1825  0546  2D48               	goto	u890
  1826  0547                     u891:
  1827  0547  2D4F               	goto	l1559
  1828  0548                     u890:
  1829  0548                     l1557:
  1830  0548  3080               	movlw	128
  1831  0549  120A  118A  2581  120A  118A  	fcall	_Escribir_comandoLCD
  1832  054E  2D5B               	goto	l1563
  1833  054F                     l1559:
  1834  054F  3002               	movlw	2
  1835  0550  0677               	xorwf	set_cursor@linea,w
  1836  0551  1D03               	btfss	3,2
  1837  0552  2D54               	goto	u901
  1838  0553  2D55               	goto	u900
  1839  0554                     u901:
  1840  0554  2D5B               	goto	l1563
  1841  0555                     u900:
  1842  0555                     l1561:
  1843  0555  30C0               	movlw	192
  1844  0556  120A  118A  2581  120A  118A  	fcall	_Escribir_comandoLCD
  1845  055B                     l1563:
  1846                           
  1847                           ;LCD.c: 84:     _delay((unsigned long)((40)*(8000000/4000.0)));
  1848  055B  3068               	movlw	104
  1849  055C  00F6               	movwf	??_set_cursor+1
  1850  055D  30E4               	movlw	228
  1851  055E  00F5               	movwf	??_set_cursor
  1852  055F                     u1547:
  1853  055F  0BF5               	decfsz	??_set_cursor,f
  1854  0560  2D5F               	goto	u1547
  1855  0561  0BF6               	decfsz	??_set_cursor+1,f
  1856  0562  2D5F               	goto	u1547
  1857  0563  0000               	nop
  1858  0564                     l1565:
  1859                           
  1860                           ;LCD.c: 86:     if (posicion != 0){
  1861  0564  0874               	movf	set_cursor@posicion,w
  1862  0565  1903               	btfsc	3,2
  1863  0566  2D68               	goto	u911
  1864  0567  2D69               	goto	u910
  1865  0568                     u911:
  1866  0568  2D80               	goto	l240
  1867  0569                     u910:
  1868  0569  2D72               	goto	l1573
  1869  056A                     l1569:
  1870                           
  1871                           ;LCD.c: 88:             Escribir_comandoLCD(0b00010100);
  1872  056A  3014               	movlw	20
  1873  056B  120A  118A  2581  120A  118A  	fcall	_Escribir_comandoLCD
  1874  0570                     l1571:
  1875                           
  1876                           ;LCD.c: 89:             posicion--;
  1877  0570  3001               	movlw	1
  1878  0571  02F4               	subwf	set_cursor@posicion,f
  1879  0572                     l1573:
  1880                           
  1881                           ;LCD.c: 87:         while(posicion > 0){
  1882  0572  0874               	movf	set_cursor@posicion,w
  1883  0573  1D03               	btfss	3,2
  1884  0574  2D76               	goto	u921
  1885  0575  2D77               	goto	u920
  1886  0576                     u921:
  1887  0576  2D6A               	goto	l1569
  1888  0577                     u920:
  1889  0577                     l1575:
  1890                           
  1891                           ;LCD.c: 92:         _delay((unsigned long)((40)*(8000000/4000.0)));
  1892  0577  3068               	movlw	104
  1893  0578  00F6               	movwf	??_set_cursor+1
  1894  0579  30E4               	movlw	228
  1895  057A  00F5               	movwf	??_set_cursor
  1896  057B                     u1557:
  1897  057B  0BF5               	decfsz	??_set_cursor,f
  1898  057C  2D7B               	goto	u1557
  1899  057D  0BF6               	decfsz	??_set_cursor+1,f
  1900  057E  2D7B               	goto	u1557
  1901  057F  0000               	nop
  1902  0580                     l240:
  1903  0580  0008               	return
  1904  0581                     __end_of_set_cursor:
  1905                           
  1906                           	psect	text4
  1907  0635                     __ptext4:	
  1908 ;; *************** function _initOsc *****************
  1909 ;; Defined at:
  1910 ;;		line 12 in file "Oscilador.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;  Valor           1    wreg     unsigned char 
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;  Valor           1    2[COMMON] unsigned char 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      void 
  1917 ;; Registers used:
  1918 ;;		wreg, status,2, status,0
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1924 ;;      Params:         0       0       0       0       0
  1925 ;;      Locals:         1       0       0       0       0
  1926 ;;      Temps:          0       0       0       0       0
  1927 ;;      Totals:         1       0       0       0       0
  1928 ;;Total ram usage:        1 bytes
  1929 ;; Hardware stack levels used: 1
  1930 ;; Hardware stack levels required when called: 1
  1931 ;; This function calls:
  1932 ;;		Nothing
  1933 ;; This function is called by:
  1934 ;;		_setup
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           
  1939                           ;psect for function _initOsc
  1940  0635                     _initOsc:
  1941                           
  1942                           ;incstack = 0
  1943                           ; Regs used in _initOsc: [wreg+status,2+status,0]
  1944                           ;initOsc@Valor stored from wreg
  1945  0635  00F2               	movwf	initOsc@Valor
  1946  0636                     l1587:
  1947                           
  1948                           ;Oscilador.c: 14:     if(Valor == 8){
  1949  0636  3008               	movlw	8
  1950  0637  0672               	xorwf	initOsc@Valor,w
  1951  0638  1D03               	btfss	3,2
  1952  0639  2E3B               	goto	u941
  1953  063A  2E3C               	goto	u940
  1954  063B                     u941:
  1955  063B  2E41               	goto	l1591
  1956  063C                     u940:
  1957  063C                     l1589:
  1958                           
  1959                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
  1960  063C  1683               	bsf	3,5	;RP0=1, select bank1
  1961  063D  1303               	bcf	3,6	;RP1=0, select bank1
  1962  063E  160F               	bsf	15,4	;volatile
  1963                           
  1964                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
  1965  063F  168F               	bsf	15,5	;volatile
  1966                           
  1967                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
  1968  0640  170F               	bsf	15,6	;volatile
  1969  0641                     l1591:
  1970                           
  1971                           ;Oscilador.c: 19:     if(Valor == 4){
  1972  0641  3004               	movlw	4
  1973  0642  0672               	xorwf	initOsc@Valor,w
  1974  0643  1D03               	btfss	3,2
  1975  0644  2E46               	goto	u951
  1976  0645  2E47               	goto	u950
  1977  0646                     u951:
  1978  0646  2E4C               	goto	l1595
  1979  0647                     u950:
  1980  0647                     l1593:
  1981                           
  1982                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
  1983  0647  1683               	bsf	3,5	;RP0=1, select bank1
  1984  0648  1303               	bcf	3,6	;RP1=0, select bank1
  1985  0649  120F               	bcf	15,4	;volatile
  1986                           
  1987                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
  1988  064A  168F               	bsf	15,5	;volatile
  1989                           
  1990                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
  1991  064B  170F               	bsf	15,6	;volatile
  1992  064C                     l1595:
  1993                           
  1994                           ;Oscilador.c: 24:     if(Valor == 2){
  1995  064C  3002               	movlw	2
  1996  064D  0672               	xorwf	initOsc@Valor,w
  1997  064E  1D03               	btfss	3,2
  1998  064F  2E51               	goto	u961
  1999  0650  2E52               	goto	u960
  2000  0651                     u961:
  2001  0651  2E57               	goto	l1599
  2002  0652                     u960:
  2003  0652                     l1597:
  2004                           
  2005                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
  2006  0652  1683               	bsf	3,5	;RP0=1, select bank1
  2007  0653  1303               	bcf	3,6	;RP1=0, select bank1
  2008  0654  160F               	bsf	15,4	;volatile
  2009                           
  2010                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
  2011  0655  128F               	bcf	15,5	;volatile
  2012                           
  2013                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
  2014  0656  170F               	bsf	15,6	;volatile
  2015  0657                     l1599:
  2016                           
  2017                           ;Oscilador.c: 29:     if(Valor == 1){
  2018  0657  0372               	decf	initOsc@Valor,w
  2019  0658  1D03               	btfss	3,2
  2020  0659  2E5B               	goto	u971
  2021  065A  2E5C               	goto	u970
  2022  065B                     u971:
  2023  065B  2E61               	goto	l248
  2024  065C                     u970:
  2025  065C                     l1601:
  2026                           
  2027                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
  2028  065C  1683               	bsf	3,5	;RP0=1, select bank1
  2029  065D  1303               	bcf	3,6	;RP1=0, select bank1
  2030  065E  120F               	bcf	15,4	;volatile
  2031                           
  2032                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
  2033  065F  128F               	bcf	15,5	;volatile
  2034                           
  2035                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
  2036  0660  170F               	bsf	15,6	;volatile
  2037  0661                     l248:	
  2038                           ;Oscilador.c: 33:     }
  2039                           
  2040                           
  2041                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
  2042  0661  1683               	bsf	3,5	;RP0=1, select bank1
  2043  0662  1303               	bcf	3,6	;RP1=0, select bank1
  2044  0663  140F               	bsf	15,0	;volatile
  2045  0664                     l249:
  2046  0664  0008               	return
  2047  0665                     __end_of_initOsc:
  2048                           
  2049                           	psect	text5
  2050  06B3                     __ptext5:	
  2051 ;; *************** function _Limpiar_pantallaLCD *****************
  2052 ;; Defined at:
  2053 ;;		line 69 in file "LCD.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;		None
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;		None
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg, status,2, status,0, pclath, cstack
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2067 ;;      Params:         0       0       0       0       0
  2068 ;;      Locals:         0       0       0       0       0
  2069 ;;      Temps:          2       0       0       0       0
  2070 ;;      Totals:         2       0       0       0       0
  2071 ;;Total ram usage:        2 bytes
  2072 ;; Hardware stack levels used: 1
  2073 ;; Hardware stack levels required when called: 3
  2074 ;; This function calls:
  2075 ;;		_Escribir_comandoLCD
  2076 ;; This function is called by:
  2077 ;;		_setup
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           
  2082                           ;psect for function _Limpiar_pantallaLCD
  2083  06B3                     _Limpiar_pantallaLCD:
  2084  06B3                     l1721:	
  2085                           ;incstack = 0
  2086                           ; Regs used in _Limpiar_pantallaLCD: [wreg+status,2+status,0+pclath+cstack]
  2087                           
  2088                           
  2089                           ;LCD.c: 70:     PORTDbits.RD3 = 0; PORTDbits.RD4 = 0;
  2090  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  2091  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  2092  06B5  1188               	bcf	8,3	;volatile
  2093  06B6  1208               	bcf	8,4	;volatile
  2094  06B7                     l1723:
  2095                           
  2096                           ;LCD.c: 72:     Escribir_comandoLCD(0b00000001);
  2097  06B7  3001               	movlw	1
  2098  06B8  120A  118A  2581  120A  118A  	fcall	_Escribir_comandoLCD
  2099  06BD                     l1725:
  2100                           
  2101                           ;LCD.c: 73:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2102  06BD  301A               	movlw	26
  2103  06BE  00F5               	movwf	??_Limpiar_pantallaLCD+1
  2104  06BF  30F8               	movlw	248
  2105  06C0  00F4               	movwf	??_Limpiar_pantallaLCD
  2106  06C1                     u1567:
  2107  06C1  0BF4               	decfsz	??_Limpiar_pantallaLCD,f
  2108  06C2  2EC1               	goto	u1567
  2109  06C3  0BF5               	decfsz	??_Limpiar_pantallaLCD+1,f
  2110  06C4  2EC1               	goto	u1567
  2111  06C5  0000               	nop
  2112  06C6                     l1727:
  2113                           
  2114                           ;LCD.c: 74:     Escribir_comandoLCD(0b00000010);
  2115  06C6  3002               	movlw	2
  2116  06C7  120A  118A  2581  120A  118A  	fcall	_Escribir_comandoLCD
  2117  06CC                     l230:
  2118  06CC  0008               	return
  2119  06CD                     __end_of_Limpiar_pantallaLCD:
  2120                           
  2121                           	psect	text6
  2122  01C3                     __ptext6:	
  2123 ;; *************** function _InitMSSP *****************
  2124 ;; Defined at:
  2125 ;;		line 5 in file "I2C.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;  Modo            1    wreg     enum E1292
  2128 ;;  Dato            4    6[BANK0 ] unsigned long 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;  Modo            1   14[BANK0 ] enum E1292
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      void 
  2133 ;; Registers used:
  2134 ;;		wreg, status,2, status,0, pclath, cstack
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2140 ;;      Params:         0       4       0       0       0
  2141 ;;      Locals:         0       1       0       0       0
  2142 ;;      Temps:          0       4       0       0       0
  2143 ;;      Totals:         0       9       0       0       0
  2144 ;;Total ram usage:        9 bytes
  2145 ;; Hardware stack levels used: 1
  2146 ;; Hardware stack levels required when called: 2
  2147 ;; This function calls:
  2148 ;;		___lldiv
  2149 ;; This function is called by:
  2150 ;;		_setup
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           
  2155                           ;psect for function _InitMSSP
  2156  01C3                     _InitMSSP:
  2157                           
  2158                           ;incstack = 0
  2159                           ; Regs used in _InitMSSP: [wreg+status,2+status,0+pclath+cstack]
  2160                           ;InitMSSP@Modo stored from wreg
  2161  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2162  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2163  01C5  00C6               	movwf	InitMSSP@Modo
  2164  01C6                     l2043:
  2165                           
  2166                           ;I2C.c: 9:     SSPCONbits.SSPEN = 0;
  2167  01C6  1294               	bcf	20,5	;volatile
  2168  01C7                     l2045:
  2169                           
  2170                           ;I2C.c: 10:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2171  01C7  301A               	movlw	26
  2172  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  2173  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  2174  01CA  00C3               	movwf	??_InitMSSP+1
  2175  01CB  30F7               	movlw	247
  2176  01CC  00C2               	movwf	??_InitMSSP
  2177  01CD                     u1577:
  2178  01CD  0BC2               	decfsz	??_InitMSSP,f
  2179  01CE  29CD               	goto	u1577
  2180  01CF  0BC3               	decfsz	??_InitMSSP+1,f
  2181  01D0  29CD               	goto	u1577
  2182  01D1  29D2               	nop2
  2183  01D2                     l2047:
  2184                           
  2185                           ;I2C.c: 11:     SSPCONbits.SSPEN = 1;
  2186  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  2187  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  2188  01D4  1694               	bsf	20,5	;volatile
  2189                           
  2190                           ;I2C.c: 14:     if (Modo < 0b00000110){
  2191  01D5  3006               	movlw	6
  2192  01D6  0246               	subwf	InitMSSP@Modo,w
  2193  01D7  1803               	skipnc
  2194  01D8  29DA               	goto	u1341
  2195  01D9  29DB               	goto	u1340
  2196  01DA                     u1341:
  2197  01DA  29FF               	goto	l2059
  2198  01DB                     u1340:
  2199  01DB                     l2049:
  2200                           
  2201                           ;I2C.c: 17:         TRISCbits.TRISC5 = 0;
  2202  01DB  1683               	bsf	3,5	;RP0=1, select bank1
  2203  01DC  1303               	bcf	3,6	;RP1=0, select bank1
  2204  01DD  1287               	bcf	7,5	;volatile
  2205                           
  2206                           ;I2C.c: 18:         TRISCbits.TRISC4 = 1;
  2207  01DE  1607               	bsf	7,4	;volatile
  2208  01DF                     l2051:
  2209                           
  2210                           ;I2C.c: 20:         if (Modo < 0b00000100){
  2211  01DF  3004               	movlw	4
  2212  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  2213  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  2214  01E2  0246               	subwf	InitMSSP@Modo,w
  2215  01E3  1803               	skipnc
  2216  01E4  29E6               	goto	u1351
  2217  01E5  29E7               	goto	u1350
  2218  01E6                     u1351:
  2219  01E6  29EB               	goto	l155
  2220  01E7                     u1350:
  2221  01E7                     l2053:
  2222                           
  2223                           ;I2C.c: 21:             TRISCbits.TRISC3 = 0;
  2224  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  2225  01E8  1303               	bcf	3,6	;RP1=0, select bank1
  2226  01E9  1187               	bcf	7,3	;volatile
  2227                           
  2228                           ;I2C.c: 22:         }
  2229  01EA  29EE               	goto	l2055
  2230  01EB                     l155:	
  2231                           ;I2C.c: 23:         else {
  2232                           
  2233                           
  2234                           ;I2C.c: 24:             TRISCbits.TRISC3 = 1;
  2235  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  2236  01EC  1303               	bcf	3,6	;RP1=0, select bank1
  2237  01ED  1587               	bsf	7,3	;volatile
  2238  01EE                     l2055:
  2239                           
  2240                           ;I2C.c: 27:         if (Modo == 0b00000100){ TRISAbits.TRISA5 = 1;}
  2241  01EE  3004               	movlw	4
  2242  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  2243  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  2244  01F1  0646               	xorwf	InitMSSP@Modo,w
  2245  01F2  1D03               	btfss	3,2
  2246  01F3  29F5               	goto	u1361
  2247  01F4  29F6               	goto	u1360
  2248  01F5                     u1361:
  2249  01F5  29F9               	goto	l157
  2250  01F6                     u1360:
  2251  01F6                     l2057:
  2252  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  2253  01F7  1303               	bcf	3,6	;RP1=0, select bank1
  2254  01F8  1685               	bsf	5,5	;volatile
  2255  01F9                     l157:
  2256                           
  2257                           ;I2C.c: 31:         SSPCONbits.CKP = 0;
  2258  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  2259  01FA  1214               	bcf	20,4	;volatile
  2260                           
  2261                           ;I2C.c: 36:         SSPSTATbits.SMP = 1;
  2262  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  2263  01FC  1303               	bcf	3,6	;RP1=0, select bank1
  2264  01FD  1794               	bsf	20,7	;volatile
  2265                           
  2266                           ;I2C.c: 38:     }
  2267  01FE  2A6C               	goto	l2087
  2268  01FF                     l2059:
  2269  01FF  3006               	movlw	6
  2270  0200  0246               	subwf	InitMSSP@Modo,w
  2271  0201  1C03               	skipc
  2272  0202  2A04               	goto	u1371
  2273  0203  2A05               	goto	u1370
  2274  0204                     u1371:
  2275  0204  2A6C               	goto	l2087
  2276  0205                     u1370:
  2277  0205                     l2061:
  2278                           
  2279                           ;I2C.c: 42:         TRISCbits.TRISC3 = 1;
  2280  0205  1683               	bsf	3,5	;RP0=1, select bank1
  2281  0206  1303               	bcf	3,6	;RP1=0, select bank1
  2282  0207  1587               	bsf	7,3	;volatile
  2283                           
  2284                           ;I2C.c: 43:         TRISCbits.TRISC4 = 1;
  2285  0208  1607               	bsf	7,4	;volatile
  2286                           
  2287                           ;I2C.c: 44:         SSPCONbits.SSPEN = 1;
  2288  0209  1283               	bcf	3,5	;RP0=0, select bank0
  2289  020A  1303               	bcf	3,6	;RP1=0, select bank0
  2290  020B  1694               	bsf	20,5	;volatile
  2291                           
  2292                           ;I2C.c: 45:         SSPSTATbits.SMP = 1;
  2293  020C  1683               	bsf	3,5	;RP0=1, select bank1
  2294  020D  1303               	bcf	3,6	;RP1=0, select bank1
  2295  020E  1794               	bsf	20,7	;volatile
  2296  020F                     l2063:
  2297                           
  2298                           ;I2C.c: 46:         if (Modo == 0b00000111 || Modo == 0b00001111){
  2299  020F  3007               	movlw	7
  2300  0210  1283               	bcf	3,5	;RP0=0, select bank0
  2301  0211  1303               	bcf	3,6	;RP1=0, select bank0
  2302  0212  0646               	xorwf	InitMSSP@Modo,w
  2303  0213  1903               	btfsc	3,2
  2304  0214  2A16               	goto	u1381
  2305  0215  2A17               	goto	u1380
  2306  0216                     u1381:
  2307  0216  2A1D               	goto	l162
  2308  0217                     u1380:
  2309  0217                     l2065:
  2310  0217  300F               	movlw	15
  2311  0218  0646               	xorwf	InitMSSP@Modo,w
  2312  0219  1D03               	btfss	3,2
  2313  021A  2A1C               	goto	u1391
  2314  021B  2A1D               	goto	u1390
  2315  021C                     u1391:
  2316  021C  2A20               	goto	l2067
  2317  021D                     u1390:
  2318  021D                     l162:
  2319                           
  2320                           ;I2C.c: 47:             UA = 0;
  2321  021D  1683               	bsf	3,5	;RP0=1, select bank1
  2322  021E  1303               	bcf	3,6	;RP1=0, select bank1
  2323  021F  1094               	bcf	20,1	;volatile
  2324  0220                     l2067:
  2325                           
  2326                           ;I2C.c: 50:         if (Modo == 0b00001000){
  2327  0220  3008               	movlw	8
  2328  0221  1283               	bcf	3,5	;RP0=0, select bank0
  2329  0222  0646               	xorwf	InitMSSP@Modo,w
  2330  0223  1D03               	btfss	3,2
  2331  0224  2A26               	goto	u1401
  2332  0225  2A27               	goto	u1400
  2333  0226                     u1401:
  2334  0226  2A5B               	goto	l163
  2335  0227                     u1400:
  2336  0227                     l2069:
  2337                           
  2338                           ;I2C.c: 51:             CKP = 0;
  2339  0227  1214               	bcf	20,4	;volatile
  2340  0228                     l2071:
  2341                           
  2342                           ;I2C.c: 52:             SSPCON2 = 0;
  2343  0228  1683               	bsf	3,5	;RP0=1, select bank1
  2344  0229  1303               	bcf	3,6	;RP1=0, select bank1
  2345  022A  0191               	clrf	17	;volatile
  2346                           
  2347                           ;I2C.c: 53:             SSPSTAT = 0;
  2348  022B  0194               	clrf	20	;volatile
  2349  022C                     l2073:
  2350                           
  2351                           ;I2C.c: 54:             SSPADD = (8000000/(Dato*4))-1;
  2352  022C  1283               	bcf	3,5	;RP0=0, select bank0
  2353  022D  1303               	bcf	3,6	;RP1=0, select bank0
  2354  022E  083E               	movf	InitMSSP@Dato,w
  2355  022F  00C2               	movwf	??_InitMSSP
  2356  0230  083F               	movf	InitMSSP@Dato+1,w
  2357  0231  00C3               	movwf	??_InitMSSP+1
  2358  0232  0840               	movf	InitMSSP@Dato+2,w
  2359  0233  00C4               	movwf	??_InitMSSP+2
  2360  0234  0841               	movf	InitMSSP@Dato+3,w
  2361  0235  00C5               	movwf	??_InitMSSP+3
  2362  0236  3002               	movlw	2
  2363  0237                     u1415:
  2364  0237  1003               	clrc
  2365  0238  0DC2               	rlf	??_InitMSSP,f
  2366  0239  0DC3               	rlf	??_InitMSSP+1,f
  2367  023A  0DC4               	rlf	??_InitMSSP+2,f
  2368  023B  0DC5               	rlf	??_InitMSSP+3,f
  2369  023C                     u1410:
  2370  023C  3EFF               	addlw	-1
  2371  023D  1D03               	skipz
  2372  023E  2A37               	goto	u1415
  2373  023F  0845               	movf	??_InitMSSP+3,w
  2374  0240  00F5               	movwf	___lldiv@divisor+3
  2375  0241  0844               	movf	??_InitMSSP+2,w
  2376  0242  00F4               	movwf	___lldiv@divisor+2
  2377  0243  0843               	movf	??_InitMSSP+1,w
  2378  0244  00F3               	movwf	___lldiv@divisor+1
  2379  0245  0842               	movf	??_InitMSSP,w
  2380  0246  00F2               	movwf	___lldiv@divisor
  2381  0247  3000               	movlw	0
  2382  0248  00F9               	movwf	___lldiv@dividend+3
  2383  0249  307A               	movlw	122
  2384  024A  00F8               	movwf	___lldiv@dividend+2
  2385  024B  3012               	movlw	18
  2386  024C  00F7               	movwf	___lldiv@dividend+1
  2387  024D  3000               	movlw	0
  2388  024E  00F6               	movwf	___lldiv@dividend
  2389  024F  120A  118A  2367  120A  118A  	fcall	___lldiv
  2390  0254  0872               	movf	?___lldiv,w
  2391  0255  3EFF               	addlw	255
  2392  0256  1683               	bsf	3,5	;RP0=1, select bank1
  2393  0257  1303               	bcf	3,6	;RP1=0, select bank1
  2394  0258  0093               	movwf	19	;volatile
  2395  0259                     l2075:
  2396                           
  2397                           ;I2C.c: 55:             PIE1bits.SSPIE = 0;
  2398  0259  118C               	bcf	12,3	;volatile
  2399                           
  2400                           ;I2C.c: 56:         }
  2401  025A  2A6C               	goto	l2087
  2402  025B                     l163:	
  2403                           ;I2C.c: 57:         else {
  2404                           
  2405                           
  2406                           ;I2C.c: 58:             CKP = 1;
  2407  025B  1614               	bsf	20,4	;volatile
  2408                           
  2409                           ;I2C.c: 59:             SSPCON2bits.GCEN = 0;
  2410  025C  1683               	bsf	3,5	;RP0=1, select bank1
  2411  025D  1303               	bcf	3,6	;RP1=0, select bank1
  2412  025E  1391               	bcf	17,7	;volatile
  2413                           
  2414                           ;I2C.c: 60:             SSPCON2bits.SEN = 1;
  2415  025F  1411               	bsf	17,0	;volatile
  2416  0260                     l2077:
  2417                           
  2418                           ;I2C.c: 61:             SSPADD = Dato;
  2419  0260  1283               	bcf	3,5	;RP0=0, select bank0
  2420  0261  1303               	bcf	3,6	;RP1=0, select bank0
  2421  0262  083E               	movf	InitMSSP@Dato,w
  2422  0263  1683               	bsf	3,5	;RP0=1, select bank1
  2423  0264  1303               	bcf	3,6	;RP1=0, select bank1
  2424  0265  0093               	movwf	19	;volatile
  2425  0266                     l2079:
  2426                           
  2427                           ;I2C.c: 62:             INTCONbits.GIE = 1;
  2428  0266  178B               	bsf	11,7	;volatile
  2429  0267                     l2081:
  2430                           
  2431                           ;I2C.c: 63:             INTCONbits.PEIE = 1;
  2432  0267  170B               	bsf	11,6	;volatile
  2433  0268                     l2083:
  2434                           
  2435                           ;I2C.c: 64:             PIE1bits.SSPIE = 1;
  2436  0268  158C               	bsf	12,3	;volatile
  2437  0269                     l2085:
  2438                           
  2439                           ;I2C.c: 65:             SSPIF = 0;
  2440  0269  1283               	bcf	3,5	;RP0=0, select bank0
  2441  026A  1303               	bcf	3,6	;RP1=0, select bank0
  2442  026B  118C               	bcf	12,3	;volatile
  2443  026C                     l2087:
  2444                           
  2445                           ;I2C.c: 72:     SSPCON = SSPCON | Modo;
  2446  026C  1283               	bcf	3,5	;RP0=0, select bank0
  2447  026D  0814               	movf	20,w	;volatile
  2448  026E  0446               	iorwf	InitMSSP@Modo,w	;volatile
  2449  026F  0094               	movwf	20	;volatile
  2450  0270                     l2089:
  2451                           
  2452                           ;I2C.c: 77:     SSPSTATbits.CKE = 0;
  2453  0270  1683               	bsf	3,5	;RP0=1, select bank1
  2454  0271  1303               	bcf	3,6	;RP1=0, select bank1
  2455  0272  1314               	bcf	20,6	;volatile
  2456  0273                     l165:
  2457  0273  0008               	return
  2458  0274                     __end_of_InitMSSP:
  2459                           
  2460                           	psect	text7
  2461  0367                     __ptext7:	
  2462 ;; *************** function ___lldiv *****************
  2463 ;; Defined at:
  2464 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;  divisor         4    2[COMMON] unsigned long 
  2467 ;;  dividend        4    6[COMMON] unsigned long 
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;  quotient        4    1[BANK0 ] unsigned long 
  2470 ;;  counter         1    5[BANK0 ] unsigned char 
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  4    2[COMMON] unsigned long 
  2473 ;; Registers used:
  2474 ;;		wreg, status,2, status,0
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2480 ;;      Params:         8       0       0       0       0
  2481 ;;      Locals:         0       5       0       0       0
  2482 ;;      Temps:          0       1       0       0       0
  2483 ;;      Totals:         8       6       0       0       0
  2484 ;;Total ram usage:       14 bytes
  2485 ;; Hardware stack levels used: 1
  2486 ;; Hardware stack levels required when called: 1
  2487 ;; This function calls:
  2488 ;;		Nothing
  2489 ;; This function is called by:
  2490 ;;		_InitMSSP
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           
  2495                           ;psect for function ___lldiv
  2496  0367                     ___lldiv:
  2497  0367                     l2019:	
  2498                           ;incstack = 0
  2499                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2500                           
  2501  0367  3000               	movlw	0
  2502  0368  1283               	bcf	3,5	;RP0=0, select bank0
  2503  0369  1303               	bcf	3,6	;RP1=0, select bank0
  2504  036A  00BC               	movwf	___lldiv@quotient+3
  2505  036B  3000               	movlw	0
  2506  036C  00BB               	movwf	___lldiv@quotient+2
  2507  036D  3000               	movlw	0
  2508  036E  00BA               	movwf	___lldiv@quotient+1
  2509  036F  3000               	movlw	0
  2510  0370  00B9               	movwf	___lldiv@quotient
  2511  0371  0875               	movf	___lldiv@divisor+3,w
  2512  0372  0474               	iorwf	___lldiv@divisor+2,w
  2513  0373  0473               	iorwf	___lldiv@divisor+1,w
  2514  0374  0472               	iorwf	___lldiv@divisor,w
  2515  0375  1903               	skipnz
  2516  0376  2B78               	goto	u1271
  2517  0377  2B79               	goto	u1270
  2518  0378                     u1271:
  2519  0378  2BC6               	goto	l2039
  2520  0379                     u1270:
  2521  0379                     l2021:
  2522  0379  01BD               	clrf	___lldiv@counter
  2523  037A  0ABD               	incf	___lldiv@counter,f
  2524  037B  2B89               	goto	l2025
  2525  037C                     l2023:
  2526  037C  3001               	movlw	1
  2527  037D  00B8               	movwf	??___lldiv
  2528  037E                     u1285:
  2529  037E  1003               	clrc
  2530  037F  0DF2               	rlf	___lldiv@divisor,f
  2531  0380  0DF3               	rlf	___lldiv@divisor+1,f
  2532  0381  0DF4               	rlf	___lldiv@divisor+2,f
  2533  0382  0DF5               	rlf	___lldiv@divisor+3,f
  2534  0383  0BB8               	decfsz	??___lldiv,f
  2535  0384  2B7E               	goto	u1285
  2536  0385  3001               	movlw	1
  2537  0386  00B8               	movwf	??___lldiv
  2538  0387  0838               	movf	??___lldiv,w
  2539  0388  07BD               	addwf	___lldiv@counter,f
  2540  0389                     l2025:
  2541  0389  1FF5               	btfss	___lldiv@divisor+3,7
  2542  038A  2B8C               	goto	u1291
  2543  038B  2B8D               	goto	u1290
  2544  038C                     u1291:
  2545  038C  2B7C               	goto	l2023
  2546  038D                     u1290:
  2547  038D                     l2027:
  2548  038D  3001               	movlw	1
  2549  038E  00B8               	movwf	??___lldiv
  2550  038F                     u1305:
  2551  038F  1003               	clrc
  2552  0390  0DB9               	rlf	___lldiv@quotient,f
  2553  0391  0DBA               	rlf	___lldiv@quotient+1,f
  2554  0392  0DBB               	rlf	___lldiv@quotient+2,f
  2555  0393  0DBC               	rlf	___lldiv@quotient+3,f
  2556  0394  0BB8               	decfsz	??___lldiv,f
  2557  0395  2B8F               	goto	u1305
  2558  0396                     l2029:
  2559  0396  0875               	movf	___lldiv@divisor+3,w
  2560  0397  0279               	subwf	___lldiv@dividend+3,w
  2561  0398  1D03               	skipz
  2562  0399  2BA4               	goto	u1315
  2563  039A  0874               	movf	___lldiv@divisor+2,w
  2564  039B  0278               	subwf	___lldiv@dividend+2,w
  2565  039C  1D03               	skipz
  2566  039D  2BA4               	goto	u1315
  2567  039E  0873               	movf	___lldiv@divisor+1,w
  2568  039F  0277               	subwf	___lldiv@dividend+1,w
  2569  03A0  1D03               	skipz
  2570  03A1  2BA4               	goto	u1315
  2571  03A2  0872               	movf	___lldiv@divisor,w
  2572  03A3  0276               	subwf	___lldiv@dividend,w
  2573  03A4                     u1315:
  2574  03A4  1C03               	skipc
  2575  03A5  2BA7               	goto	u1311
  2576  03A6  2BA8               	goto	u1310
  2577  03A7                     u1311:
  2578  03A7  2BB7               	goto	l2035
  2579  03A8                     u1310:
  2580  03A8                     l2031:
  2581  03A8  0872               	movf	___lldiv@divisor,w
  2582  03A9  02F6               	subwf	___lldiv@dividend,f
  2583  03AA  0873               	movf	___lldiv@divisor+1,w
  2584  03AB  1C03               	skipc
  2585  03AC  0F73               	incfsz	___lldiv@divisor+1,w
  2586  03AD  02F7               	subwf	___lldiv@dividend+1,f
  2587  03AE  0874               	movf	___lldiv@divisor+2,w
  2588  03AF  1C03               	skipc
  2589  03B0  0F74               	incfsz	___lldiv@divisor+2,w
  2590  03B1  02F8               	subwf	___lldiv@dividend+2,f
  2591  03B2  0875               	movf	___lldiv@divisor+3,w
  2592  03B3  1C03               	skipc
  2593  03B4  0F75               	incfsz	___lldiv@divisor+3,w
  2594  03B5  02F9               	subwf	___lldiv@dividend+3,f
  2595  03B6                     l2033:
  2596  03B6  1439               	bsf	___lldiv@quotient,0
  2597  03B7                     l2035:
  2598  03B7  3001               	movlw	1
  2599  03B8                     u1325:
  2600  03B8  1003               	clrc
  2601  03B9  0CF5               	rrf	___lldiv@divisor+3,f
  2602  03BA  0CF4               	rrf	___lldiv@divisor+2,f
  2603  03BB  0CF3               	rrf	___lldiv@divisor+1,f
  2604  03BC  0CF2               	rrf	___lldiv@divisor,f
  2605  03BD  3EFF               	addlw	-1
  2606  03BE  1D03               	skipz
  2607  03BF  2BB8               	goto	u1325
  2608  03C0                     l2037:
  2609  03C0  3001               	movlw	1
  2610  03C1  02BD               	subwf	___lldiv@counter,f
  2611  03C2  1D03               	btfss	3,2
  2612  03C3  2BC5               	goto	u1331
  2613  03C4  2BC6               	goto	u1330
  2614  03C5                     u1331:
  2615  03C5  2B8D               	goto	l2027
  2616  03C6                     u1330:
  2617  03C6                     l2039:
  2618  03C6  083C               	movf	___lldiv@quotient+3,w
  2619  03C7  00F5               	movwf	?___lldiv+3
  2620  03C8  083B               	movf	___lldiv@quotient+2,w
  2621  03C9  00F4               	movwf	?___lldiv+2
  2622  03CA  083A               	movf	___lldiv@quotient+1,w
  2623  03CB  00F3               	movwf	?___lldiv+1
  2624  03CC  0839               	movf	___lldiv@quotient,w
  2625  03CD  00F2               	movwf	?___lldiv
  2626  03CE                     l403:
  2627  03CE  0008               	return
  2628  03CF                     __end_of___lldiv:
  2629                           
  2630                           	psect	text8
  2631  0274                     __ptext8:	
  2632 ;; *************** function _InitMPU6050 *****************
  2633 ;; Defined at:
  2634 ;;		line 13 in file "MPU.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;		None
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;		None
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		wreg, status,2, status,0, pclath, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2648 ;;      Params:         0       0       0       0       0
  2649 ;;      Locals:         0       0       0       0       0
  2650 ;;      Temps:          3       0       0       0       0
  2651 ;;      Totals:         3       0       0       0       0
  2652 ;;Total ram usage:        3 bytes
  2653 ;; Hardware stack levels used: 1
  2654 ;; Hardware stack levels required when called: 3
  2655 ;; This function calls:
  2656 ;;		_I2CMasterStop
  2657 ;;		_I2CMasterWrite
  2658 ;;		_I2C_Master_Start
  2659 ;; This function is called by:
  2660 ;;		_setup
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           
  2665                           ;psect for function _InitMPU6050
  2666  0274                     _InitMPU6050:
  2667  0274                     l1651:	
  2668                           ;incstack = 0
  2669                           ; Regs used in _InitMPU6050: [wreg+status,2+status,0+pclath+cstack]
  2670                           
  2671                           
  2672                           ;MPU.c: 14:     _delay((unsigned long)((150)*(8000000/4000.0)));
  2673  0274  3002               	movlw	2
  2674  0275  00F5               	movwf	??_InitMPU6050+2
  2675  0276  3086               	movlw	134
  2676  0277  00F4               	movwf	??_InitMPU6050+1
  2677  0278  3099               	movlw	153
  2678  0279  00F3               	movwf	??_InitMPU6050
  2679  027A                     u1587:
  2680  027A  0BF3               	decfsz	??_InitMPU6050,f
  2681  027B  2A7A               	goto	u1587
  2682  027C  0BF4               	decfsz	??_InitMPU6050+1,f
  2683  027D  2A7A               	goto	u1587
  2684  027E  0BF5               	decfsz	??_InitMPU6050+2,f
  2685  027F  2A7A               	goto	u1587
  2686  0280                     l1653:
  2687                           
  2688                           ;MPU.c: 17:     I2C_Master_Start(Standard);
  2689  0280  3001               	movlw	1
  2690  0281  120A  118A  26CD  120A  118A  	fcall	_I2C_Master_Start
  2691  0286                     l1655:
  2692                           
  2693                           ;MPU.c: 18:     I2CMasterWrite(0b11010010 +0);
  2694  0286  30D2               	movlw	210
  2695  0287  120A  118A  270E  120A  118A  	fcall	_I2CMasterWrite
  2696  028C                     l1657:
  2697                           
  2698                           ;MPU.c: 19:     I2CMasterWrite(0x6B);
  2699  028C  306B               	movlw	107
  2700  028D  120A  118A  270E  120A  118A  	fcall	_I2CMasterWrite
  2701  0292                     l1659:
  2702                           
  2703                           ;MPU.c: 20:     I2CMasterWrite(0b00000001);
  2704  0292  3001               	movlw	1
  2705  0293  120A  118A  270E  120A  118A  	fcall	_I2CMasterWrite
  2706  0298                     l1661:
  2707                           
  2708                           ;MPU.c: 24:     I2C_Master_Start(Repeated);
  2709  0298  3000               	movlw	0
  2710  0299  120A  118A  26CD  120A  118A  	fcall	_I2C_Master_Start
  2711  029E                     l1663:
  2712                           
  2713                           ;MPU.c: 25:     I2CMasterWrite(0b11010010 +0);
  2714  029E  30D2               	movlw	210
  2715  029F  120A  118A  270E  120A  118A  	fcall	_I2CMasterWrite
  2716  02A4                     l1665:
  2717                           
  2718                           ;MPU.c: 26:     I2CMasterWrite(0x1B);
  2719  02A4  301B               	movlw	27
  2720  02A5  120A  118A  270E  120A  118A  	fcall	_I2CMasterWrite
  2721  02AA                     l1667:
  2722                           
  2723                           ;MPU.c: 27:     I2CMasterWrite(0b00000000);
  2724  02AA  3000               	movlw	0
  2725  02AB  120A  118A  270E  120A  118A  	fcall	_I2CMasterWrite
  2726  02B0                     l1669:
  2727                           
  2728                           ;MPU.c: 31:     I2C_Master_Start(Repeated);
  2729  02B0  3000               	movlw	0
  2730  02B1  120A  118A  26CD  120A  118A  	fcall	_I2C_Master_Start
  2731  02B6                     l1671:
  2732                           
  2733                           ;MPU.c: 32:     I2CMasterWrite(0b11010010 +0);
  2734  02B6  30D2               	movlw	210
  2735  02B7  120A  118A  270E  120A  118A  	fcall	_I2CMasterWrite
  2736  02BC                     l1673:
  2737                           
  2738                           ;MPU.c: 33:     I2CMasterWrite(0x1C);
  2739  02BC  301C               	movlw	28
  2740  02BD  120A  118A  270E  120A  118A  	fcall	_I2CMasterWrite
  2741  02C2                     l1675:
  2742                           
  2743                           ;MPU.c: 34:     I2CMasterWrite(0b00000000);
  2744  02C2  3000               	movlw	0
  2745  02C3  120A  118A  270E  120A  118A  	fcall	_I2CMasterWrite
  2746  02C8                     l1677:
  2747                           
  2748                           ;MPU.c: 37:     I2C_Master_Start(Repeated);
  2749  02C8  3000               	movlw	0
  2750  02C9  120A  118A  26CD  120A  118A  	fcall	_I2C_Master_Start
  2751  02CE                     l1679:
  2752                           
  2753                           ;MPU.c: 38:     I2CMasterWrite(0b11010010 +0);
  2754  02CE  30D2               	movlw	210
  2755  02CF  120A  118A  270E  120A  118A  	fcall	_I2CMasterWrite
  2756  02D4                     l1681:
  2757                           
  2758                           ;MPU.c: 39:     I2CMasterWrite(0x1A);
  2759  02D4  301A               	movlw	26
  2760  02D5  120A  118A  270E  120A  118A  	fcall	_I2CMasterWrite
  2761  02DA                     l1683:
  2762                           
  2763                           ;MPU.c: 40:     I2CMasterWrite(0b00000000);
  2764  02DA  3000               	movlw	0
  2765  02DB  120A  118A  270E  120A  118A  	fcall	_I2CMasterWrite
  2766  02E0                     l1685:
  2767                           
  2768                           ;MPU.c: 43:     I2C_Master_Start(Repeated);
  2769  02E0  3000               	movlw	0
  2770  02E1  120A  118A  26CD  120A  118A  	fcall	_I2C_Master_Start
  2771  02E6                     l1687:
  2772                           
  2773                           ;MPU.c: 44:     I2CMasterWrite(0b11010010 +0);
  2774  02E6  30D2               	movlw	210
  2775  02E7  120A  118A  270E  120A  118A  	fcall	_I2CMasterWrite
  2776  02EC                     l1689:
  2777                           
  2778                           ;MPU.c: 45:     I2CMasterWrite(0x19);
  2779  02EC  3019               	movlw	25
  2780  02ED  120A  118A  270E  120A  118A  	fcall	_I2CMasterWrite
  2781  02F2                     l1691:
  2782                           
  2783                           ;MPU.c: 46:     I2CMasterWrite(0b00000111);
  2784  02F2  3007               	movlw	7
  2785  02F3  120A  118A  270E  120A  118A  	fcall	_I2CMasterWrite
  2786  02F8                     l1693:
  2787                           
  2788                           ;MPU.c: 48:     I2CMasterStop();
  2789  02F8  120A  118A  2719  120A  118A  	fcall	_I2CMasterStop
  2790  02FD                     l281:
  2791  02FD  0008               	return
  2792  02FE                     __end_of_InitMPU6050:
  2793                           
  2794                           	psect	text9
  2795  06CD                     __ptext9:	
  2796 ;; *************** function _I2C_Master_Start *****************
  2797 ;; Defined at:
  2798 ;;		line 96 in file "I2C.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;  Modo_Inicio     1    wreg     enum E1305
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;  Modo_Inicio     1    2[COMMON] enum E1305
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  1    wreg      void 
  2805 ;; Registers used:
  2806 ;;		wreg, status,2, status,0, pclath, cstack
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2812 ;;      Params:         0       0       0       0       0
  2813 ;;      Locals:         1       0       0       0       0
  2814 ;;      Temps:          0       0       0       0       0
  2815 ;;      Totals:         1       0       0       0       0
  2816 ;;Total ram usage:        1 bytes
  2817 ;; Hardware stack levels used: 1
  2818 ;; Hardware stack levels required when called: 2
  2819 ;; This function calls:
  2820 ;;		_I2CMasterCheck
  2821 ;; This function is called by:
  2822 ;;		_main
  2823 ;;		_InitMPU6050
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           
  2828                           ;psect for function _I2C_Master_Start
  2829  06CD                     _I2C_Master_Start:
  2830                           
  2831                           ;incstack = 0
  2832                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2833                           ;I2C_Master_Start@Modo_Inicio stored from wreg
  2834  06CD  00F2               	movwf	I2C_Master_Start@Modo_Inicio
  2835  06CE                     l1491:
  2836                           
  2837                           ;I2C.c: 97:     I2CMasterCheck();
  2838  06CE  120A  118A  26F5  120A  118A  	fcall	_I2CMasterCheck
  2839  06D3                     l1493:
  2840                           
  2841                           ;I2C.c: 98:     if (Modo_Inicio == 1) SSPCON2bits.SEN = 1;
  2842  06D3  0372               	decf	I2C_Master_Start@Modo_Inicio,w
  2843  06D4  1D03               	btfss	3,2
  2844  06D5  2ED7               	goto	u721
  2845  06D6  2ED8               	goto	u720
  2846  06D7                     u721:
  2847  06D7  2EDB               	goto	l1497
  2848  06D8                     u720:
  2849  06D8                     l1495:
  2850  06D8  1683               	bsf	3,5	;RP0=1, select bank1
  2851  06D9  1303               	bcf	3,6	;RP1=0, select bank1
  2852  06DA  1411               	bsf	17,0	;volatile
  2853  06DB                     l1497:
  2854                           
  2855                           ;I2C.c: 99:     if (Modo_Inicio == 0) SSPCON2bits.RSEN = 1;
  2856  06DB  0872               	movf	I2C_Master_Start@Modo_Inicio,w
  2857  06DC  1D03               	btfss	3,2
  2858  06DD  2EDF               	goto	u731
  2859  06DE  2EE0               	goto	u730
  2860  06DF                     u731:
  2861  06DF  2EE3               	goto	l175
  2862  06E0                     u730:
  2863  06E0                     l1499:
  2864  06E0  1683               	bsf	3,5	;RP0=1, select bank1
  2865  06E1  1303               	bcf	3,6	;RP1=0, select bank1
  2866  06E2  1491               	bsf	17,1	;volatile
  2867  06E3                     l175:
  2868                           
  2869                           ;I2C.c: 100:     SSPIF = 0;
  2870  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  2871  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  2872  06E5  118C               	bcf	12,3	;volatile
  2873  06E6                     l176:
  2874  06E6  0008               	return
  2875  06E7                     __end_of_I2C_Master_Start:
  2876                           
  2877                           	psect	text10
  2878  070E                     __ptext10:	
  2879 ;; *************** function _I2CMasterWrite *****************
  2880 ;; Defined at:
  2881 ;;		line 110 in file "I2C.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;  Datos           1    wreg     unsigned char 
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;  Datos           1    2[COMMON] unsigned char 
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      void 
  2888 ;; Registers used:
  2889 ;;		wreg, status,2, status,0, pclath, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2895 ;;      Params:         0       0       0       0       0
  2896 ;;      Locals:         1       0       0       0       0
  2897 ;;      Temps:          0       0       0       0       0
  2898 ;;      Totals:         1       0       0       0       0
  2899 ;;Total ram usage:        1 bytes
  2900 ;; Hardware stack levels used: 1
  2901 ;; Hardware stack levels required when called: 2
  2902 ;; This function calls:
  2903 ;;		_I2CMasterCheck
  2904 ;; This function is called by:
  2905 ;;		_main
  2906 ;;		_InitMPU6050
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           
  2911                           ;psect for function _I2CMasterWrite
  2912  070E                     _I2CMasterWrite:
  2913                           
  2914                           ;incstack = 0
  2915                           ; Regs used in _I2CMasterWrite: [wreg+status,2+status,0+pclath+cstack]
  2916                           ;I2CMasterWrite@Datos stored from wreg
  2917  070E  00F2               	movwf	I2CMasterWrite@Datos
  2918  070F                     l1501:
  2919                           
  2920                           ;I2C.c: 111:     I2CMasterCheck();
  2921  070F  120A  118A  26F5  120A  118A  	fcall	_I2CMasterCheck
  2922  0714                     l1503:
  2923                           
  2924                           ;I2C.c: 112:     SSPBUF = Datos;
  2925  0714  0872               	movf	I2CMasterWrite@Datos,w
  2926  0715  1283               	bcf	3,5	;RP0=0, select bank0
  2927  0716  1303               	bcf	3,6	;RP1=0, select bank0
  2928  0717  0093               	movwf	19	;volatile
  2929  0718                     l182:
  2930  0718  0008               	return
  2931  0719                     __end_of_I2CMasterWrite:
  2932                           
  2933                           	psect	text11
  2934  0719                     __ptext11:	
  2935 ;; *************** function _I2CMasterStop *****************
  2936 ;; Defined at:
  2937 ;;		line 104 in file "I2C.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;		None
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;		None
  2942 ;; Return value:  Size  Location     Type
  2943 ;;                  1    wreg      void 
  2944 ;; Registers used:
  2945 ;;		wreg, status,2, status,0, pclath, cstack
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/0
  2948 ;;		On exit  : 0/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2951 ;;      Params:         0       0       0       0       0
  2952 ;;      Locals:         0       0       0       0       0
  2953 ;;      Temps:          0       0       0       0       0
  2954 ;;      Totals:         0       0       0       0       0
  2955 ;;Total ram usage:        0 bytes
  2956 ;; Hardware stack levels used: 1
  2957 ;; Hardware stack levels required when called: 2
  2958 ;; This function calls:
  2959 ;;		_I2CMasterCheck
  2960 ;; This function is called by:
  2961 ;;		_main
  2962 ;;		_InitMPU6050
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           
  2967                           ;psect for function _I2CMasterStop
  2968  0719                     _I2CMasterStop:
  2969  0719                     l1505:	
  2970                           ;incstack = 0
  2971                           ; Regs used in _I2CMasterStop: [wreg+status,2+status,0+pclath+cstack]
  2972                           
  2973                           
  2974                           ;I2C.c: 105:     I2CMasterCheck();
  2975  0719  120A  118A  26F5  120A  118A  	fcall	_I2CMasterCheck
  2976  071E                     l1507:
  2977                           
  2978                           ;I2C.c: 106:     SSPCON2bits.PEN = 1;
  2979  071E  1683               	bsf	3,5	;RP0=1, select bank1
  2980  071F  1303               	bcf	3,6	;RP1=0, select bank1
  2981  0720  1511               	bsf	17,2	;volatile
  2982  0721                     l179:
  2983  0721  0008               	return
  2984  0722                     __end_of_I2CMasterStop:
  2985                           
  2986                           	psect	text12
  2987  03CF                     __ptext12:	
  2988 ;; *************** function _Iniciar_LCD *****************
  2989 ;; Defined at:
  2990 ;;		line 30 in file "LCD.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;		None
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;		None
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  1    wreg      void 
  2997 ;; Registers used:
  2998 ;;		wreg, status,2, status,0, pclath, cstack
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3004 ;;      Params:         0       0       0       0       0
  3005 ;;      Locals:         0       0       0       0       0
  3006 ;;      Temps:          2       0       0       0       0
  3007 ;;      Totals:         2       0       0       0       0
  3008 ;;Total ram usage:        2 bytes
  3009 ;; Hardware stack levels used: 1
  3010 ;; Hardware stack levels required when called: 3
  3011 ;; This function calls:
  3012 ;;		_Escribir_comandoLCD
  3013 ;; This function is called by:
  3014 ;;		_setup
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           
  3019                           ;psect for function _Iniciar_LCD
  3020  03CF                     _Iniciar_LCD:
  3021  03CF                     l1695:	
  3022                           ;incstack = 0
  3023                           ; Regs used in _Iniciar_LCD: [wreg+status,2+status,0+pclath+cstack]
  3024                           
  3025                           
  3026                           ;LCD.c: 31:     PORTDbits.RD3 = 0;
  3027  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  3028  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  3029  03D1  1188               	bcf	8,3	;volatile
  3030                           
  3031                           ;LCD.c: 32:     PORTDbits.RD4 = 0;
  3032  03D2  1208               	bcf	8,4	;volatile
  3033  03D3                     l1697:
  3034                           
  3035                           ;LCD.c: 34:     _delay((unsigned long)((14)*(8000000/4000.0)));
  3036  03D3  3025               	movlw	37
  3037  03D4  00F5               	movwf	??_Iniciar_LCD+1
  3038  03D5  305B               	movlw	91
  3039  03D6  00F4               	movwf	??_Iniciar_LCD
  3040  03D7                     u1597:
  3041  03D7  0BF4               	decfsz	??_Iniciar_LCD,f
  3042  03D8  2BD7               	goto	u1597
  3043  03D9  0BF5               	decfsz	??_Iniciar_LCD+1,f
  3044  03DA  2BD7               	goto	u1597
  3045  03DB  2BDC               	nop2
  3046  03DC                     l1699:
  3047                           
  3048                           ;LCD.c: 35:     Escribir_comandoLCD(0b00110000);
  3049  03DC  3030               	movlw	48
  3050  03DD  120A  118A  2581  120A  118A  	fcall	_Escribir_comandoLCD
  3051  03E2                     l1701:
  3052                           
  3053                           ;LCD.c: 36:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3054  03E2  300B               	movlw	11
  3055  03E3  00F5               	movwf	??_Iniciar_LCD+1
  3056  03E4  3062               	movlw	98
  3057  03E5  00F4               	movwf	??_Iniciar_LCD
  3058  03E6                     u1607:
  3059  03E6  0BF4               	decfsz	??_Iniciar_LCD,f
  3060  03E7  2BE6               	goto	u1607
  3061  03E8  0BF5               	decfsz	??_Iniciar_LCD+1,f
  3062  03E9  2BE6               	goto	u1607
  3063  03EA  0000               	nop
  3064                           
  3065                           ;LCD.c: 37:     Escribir_comandoLCD(0b00110000);
  3066  03EB  3030               	movlw	48
  3067  03EC  120A  118A  2581  120A  118A  	fcall	_Escribir_comandoLCD
  3068  03F1                     l1703:
  3069                           
  3070                           ;LCD.c: 38:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3071  03F1  3042               	movlw	66
  3072  03F2  00F4               	movwf	??_Iniciar_LCD
  3073  03F3                     u1617:
  3074  03F3  0BF4               	decfsz	??_Iniciar_LCD,f
  3075  03F4  2BF3               	goto	u1617
  3076  03F5  0000               	nop
  3077  03F6                     l1705:
  3078                           
  3079                           ;LCD.c: 39:     Escribir_comandoLCD(0b00110000);
  3080  03F6  3030               	movlw	48
  3081  03F7  120A  118A  2581  120A  118A  	fcall	_Escribir_comandoLCD
  3082                           
  3083                           ;LCD.c: 42:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3084  03FC  3042               	movlw	66
  3085  03FD  00F4               	movwf	??_Iniciar_LCD
  3086  03FE                     u1627:
  3087  03FE  0BF4               	decfsz	??_Iniciar_LCD,f
  3088  03FF  2BFE               	goto	u1627
  3089  0400  0000               	nop
  3090  0401                     l1707:
  3091                           
  3092                           ;LCD.c: 43:     Escribir_comandoLCD(0b00111000);
  3093  0401  3038               	movlw	56
  3094  0402  120A  118A  2581  120A  118A  	fcall	_Escribir_comandoLCD
  3095  0407                     l1709:
  3096                           
  3097                           ;LCD.c: 44:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3098  0407  3042               	movlw	66
  3099  0408  00F4               	movwf	??_Iniciar_LCD
  3100  0409                     u1637:
  3101  0409  0BF4               	decfsz	??_Iniciar_LCD,f
  3102  040A  2C09               	goto	u1637
  3103  040B  0000               	nop
  3104                           
  3105                           ;LCD.c: 45:     Escribir_comandoLCD(0b00001000);
  3106  040C  3008               	movlw	8
  3107  040D  120A  118A  2581  120A  118A  	fcall	_Escribir_comandoLCD
  3108  0412                     l1711:
  3109                           
  3110                           ;LCD.c: 46:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3111  0412  3042               	movlw	66
  3112  0413  00F4               	movwf	??_Iniciar_LCD
  3113  0414                     u1647:
  3114  0414  0BF4               	decfsz	??_Iniciar_LCD,f
  3115  0415  2C14               	goto	u1647
  3116  0416  0000               	nop
  3117  0417                     l1713:
  3118                           
  3119                           ;LCD.c: 47:     Escribir_comandoLCD(0b00000001);
  3120  0417  3001               	movlw	1
  3121  0418  120A  118A  2581  120A  118A  	fcall	_Escribir_comandoLCD
  3122                           
  3123                           ;LCD.c: 48:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3124  041D  3042               	movlw	66
  3125  041E  00F4               	movwf	??_Iniciar_LCD
  3126  041F                     u1657:
  3127  041F  0BF4               	decfsz	??_Iniciar_LCD,f
  3128  0420  2C1F               	goto	u1657
  3129  0421  0000               	nop
  3130  0422                     l1715:
  3131                           
  3132                           ;LCD.c: 49:     Escribir_comandoLCD(0b00000110);
  3133  0422  3006               	movlw	6
  3134  0423  120A  118A  2581  120A  118A  	fcall	_Escribir_comandoLCD
  3135  0428                     l1717:
  3136                           
  3137                           ;LCD.c: 50:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3138  0428  3042               	movlw	66
  3139  0429  00F4               	movwf	??_Iniciar_LCD
  3140  042A                     u1667:
  3141  042A  0BF4               	decfsz	??_Iniciar_LCD,f
  3142  042B  2C2A               	goto	u1667
  3143  042C  0000               	nop
  3144                           
  3145                           ;LCD.c: 51:     Escribir_comandoLCD(0b00001100);
  3146  042D  300C               	movlw	12
  3147  042E  120A  118A  2581  120A  118A  	fcall	_Escribir_comandoLCD
  3148  0433                     l218:
  3149  0433  0008               	return
  3150  0434                     __end_of_Iniciar_LCD:
  3151                           
  3152                           	psect	text13
  3153  068D                     __ptext13:	
  3154 ;; *************** function _Escribir_stringLCD *****************
  3155 ;; Defined at:
  3156 ;;		line 55 in file "LCD.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;  d               1    wreg     PTR const unsigned char 
  3159 ;;		 -> STR_3(13), STR_2(15), STR_1(16), 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  d               1    6[COMMON] PTR const unsigned char 
  3162 ;;		 -> STR_3(13), STR_2(15), STR_1(16), 
  3163 ;;  i               1    5[COMMON] unsigned char 
  3164 ;; Return value:  Size  Location     Type
  3165 ;;                  1    wreg      void 
  3166 ;; Registers used:
  3167 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3173 ;;      Params:         0       0       0       0       0
  3174 ;;      Locals:         2       0       0       0       0
  3175 ;;      Temps:          1       0       0       0       0
  3176 ;;      Totals:         3       0       0       0       0
  3177 ;;Total ram usage:        3 bytes
  3178 ;; Hardware stack levels used: 1
  3179 ;; Hardware stack levels required when called: 3
  3180 ;; This function calls:
  3181 ;;		_Escribir_comandoLCD
  3182 ;; This function is called by:
  3183 ;;		_main
  3184 ;;		_setup
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           
  3188                           
  3189                           ;psect for function _Escribir_stringLCD
  3190  068D                     _Escribir_stringLCD:
  3191                           
  3192                           ;incstack = 0
  3193                           ; Regs used in _Escribir_stringLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3194                           ;Escribir_stringLCD@d stored from wreg
  3195  068D  00F6               	movwf	Escribir_stringLCD@d
  3196  068E                     l1577:
  3197                           
  3198                           ;LCD.c: 56:     PORTDbits.RD3 = 1; PORTDbits.RD4 = 0;
  3199  068E  1283               	bcf	3,5	;RP0=0, select bank0
  3200  068F  1303               	bcf	3,6	;RP1=0, select bank0
  3201  0690  1588               	bsf	8,3	;volatile
  3202  0691  1208               	bcf	8,4	;volatile
  3203  0692                     l1579:
  3204                           
  3205                           ;LCD.c: 58:     for (char i=0; d[i]!='\0'; i++){
  3206  0692  01F5               	clrf	Escribir_stringLCD@i
  3207  0693  2EA5               	goto	l1585
  3208  0694                     l1581:
  3209                           
  3210                           ;LCD.c: 59:         Escribir_comandoLCD(d[i]);
  3211  0694  0875               	movf	Escribir_stringLCD@i,w
  3212  0695  0776               	addwf	Escribir_stringLCD@d,w
  3213  0696  0084               	movwf	4
  3214  0697  120A  118A  2603  120A  118A  	fcall	stringdir
  3215  069C  120A  118A  2581  120A  118A  	fcall	_Escribir_comandoLCD
  3216  06A1                     l1583:
  3217                           
  3218                           ;LCD.c: 60:     }
  3219  06A1  3001               	movlw	1
  3220  06A2  00F4               	movwf	??_Escribir_stringLCD
  3221  06A3  0874               	movf	??_Escribir_stringLCD,w
  3222  06A4  07F5               	addwf	Escribir_stringLCD@i,f
  3223  06A5                     l1585:
  3224  06A5  0875               	movf	Escribir_stringLCD@i,w
  3225  06A6  0776               	addwf	Escribir_stringLCD@d,w
  3226  06A7  0084               	movwf	4
  3227  06A8  120A  118A  2603  120A  118A  	fcall	stringdir
  3228  06AD  3A00               	xorlw	0
  3229  06AE  1D03               	skipz
  3230  06AF  2EB1               	goto	u931
  3231  06B0  2EB2               	goto	u930
  3232  06B1                     u931:
  3233  06B1  2E94               	goto	l1581
  3234  06B2                     u930:
  3235  06B2                     l224:
  3236  06B2  0008               	return
  3237  06B3                     __end_of_Escribir_stringLCD:
  3238                           
  3239                           	psect	text14
  3240  04F1                     __ptext14:	
  3241 ;; *************** function _divisor_dec *****************
  3242 ;; Defined at:
  3243 ;;		line 201 in file "Maestro I2C.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;  b               2    4[BANK0 ] int 
  3246 ;;  dig1            1    6[BANK0 ] PTR unsigned char 
  3247 ;;		 -> Giro_digy(1), Giro_digx(1), 
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;  n               2    9[BANK0 ] int 
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  1    wreg      void 
  3252 ;; Registers used:
  3253 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3259 ;;      Params:         0       3       0       0       0
  3260 ;;      Locals:         0       2       0       0       0
  3261 ;;      Temps:          0       2       0       0       0
  3262 ;;      Totals:         0       7       0       0       0
  3263 ;;Total ram usage:        7 bytes
  3264 ;; Hardware stack levels used: 1
  3265 ;; Hardware stack levels required when called: 2
  3266 ;; This function calls:
  3267 ;;		___awdiv
  3268 ;;		___awmod
  3269 ;; This function is called by:
  3270 ;;		_main
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           
  3275                           ;psect for function _divisor_dec
  3276  04F1                     _divisor_dec:
  3277  04F1                     l2159:	
  3278                           ;incstack = 0
  3279                           ; Regs used in _divisor_dec: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3280                           
  3281                           
  3282                           ;Maestro I2C.c: 202:     for(int n = 0; n<3 ; n++){
  3283  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  3284  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  3285  04F3  01C1               	clrf	divisor_dec@n
  3286  04F4  01C2               	clrf	divisor_dec@n+1
  3287  04F5                     l2165:
  3288                           
  3289                           ;Maestro I2C.c: 203:         dig1[n] = b % 10;
  3290  04F5  300A               	movlw	10
  3291  04F6  00F2               	movwf	___awmod@divisor
  3292  04F7  3000               	movlw	0
  3293  04F8  00F3               	movwf	___awmod@divisor+1
  3294  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  3295  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  3296  04FB  083D               	movf	divisor_dec@b+1,w
  3297  04FC  00F5               	movwf	___awmod@dividend+1
  3298  04FD  083C               	movf	divisor_dec@b,w
  3299  04FE  00F4               	movwf	___awmod@dividend
  3300  04FF  120A  118A  2498  120A  118A  	fcall	___awmod
  3301  0504  0872               	movf	?___awmod,w
  3302  0505  1283               	bcf	3,5	;RP0=0, select bank0
  3303  0506  1303               	bcf	3,6	;RP1=0, select bank0
  3304  0507  00BF               	movwf	??_divisor_dec
  3305  0508  0841               	movf	divisor_dec@n,w
  3306  0509  073E               	addwf	divisor_dec@dig1,w
  3307  050A  00C0               	movwf	??_divisor_dec+1
  3308  050B  0840               	movf	??_divisor_dec+1,w
  3309  050C  0084               	movwf	4
  3310  050D  083F               	movf	??_divisor_dec,w
  3311  050E  0080               	movwf	0
  3312                           
  3313                           ;Maestro I2C.c: 204:         b = (b - dig1[n])/10;
  3314  050F  300A               	movlw	10
  3315  0510  00F2               	movwf	___awdiv@divisor
  3316  0511  3000               	movlw	0
  3317  0512  00F3               	movwf	___awdiv@divisor+1
  3318  0513  0841               	movf	divisor_dec@n,w
  3319  0514  073E               	addwf	divisor_dec@dig1,w
  3320  0515  00BF               	movwf	??_divisor_dec
  3321  0516  083F               	movf	??_divisor_dec,w
  3322  0517  0084               	movwf	4
  3323  0518  0800               	movf	0,w
  3324  0519  023C               	subwf	divisor_dec@b,w
  3325  051A  00F4               	movwf	___awdiv@dividend
  3326  051B  083D               	movf	divisor_dec@b+1,w
  3327  051C  1C03               	skipc
  3328  051D  033D               	decf	divisor_dec@b+1,w
  3329  051E  00F5               	movwf	___awdiv@dividend+1
  3330  051F  120A  118A  22FE  120A  118A  	fcall	___awdiv
  3331  0524  0873               	movf	?___awdiv+1,w
  3332  0525  1283               	bcf	3,5	;RP0=0, select bank0
  3333  0526  1303               	bcf	3,6	;RP1=0, select bank0
  3334  0527  00BD               	movwf	divisor_dec@b+1
  3335  0528  0872               	movf	?___awdiv,w
  3336  0529  00BC               	movwf	divisor_dec@b
  3337  052A                     l2167:
  3338                           
  3339                           ;Maestro I2C.c: 205:     }
  3340  052A  3001               	movlw	1
  3341  052B  07C1               	addwf	divisor_dec@n,f
  3342  052C  1803               	skipnc
  3343  052D  0AC2               	incf	divisor_dec@n+1,f
  3344  052E  3000               	movlw	0
  3345  052F  07C2               	addwf	divisor_dec@n+1,f
  3346  0530                     l2169:
  3347  0530  0842               	movf	divisor_dec@n+1,w
  3348  0531  3A80               	xorlw	128
  3349  0532  00FF               	movwf	btemp+1
  3350  0533  3080               	movlw	128
  3351  0534  027F               	subwf	btemp+1,w
  3352  0535  1D03               	skipz
  3353  0536  2D39               	goto	u1525
  3354  0537  3003               	movlw	3
  3355  0538  0241               	subwf	divisor_dec@n,w
  3356  0539                     u1525:
  3357  0539  1C03               	skipc
  3358  053A  2D3C               	goto	u1521
  3359  053B  2D3D               	goto	u1520
  3360  053C                     u1521:
  3361  053C  2CF5               	goto	l2165
  3362  053D                     u1520:
  3363  053D                     l103:
  3364  053D  0008               	return
  3365  053E                     __end_of_divisor_dec:
  3366                           
  3367                           	psect	text15
  3368  0498                     __ptext15:	
  3369 ;; *************** function ___awmod *****************
  3370 ;; Defined at:
  3371 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  divisor         2    2[COMMON] int 
  3374 ;;  dividend        2    4[COMMON] int 
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;  sign            1    8[COMMON] unsigned char 
  3377 ;;  counter         1    7[COMMON] unsigned char 
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  2    2[COMMON] int 
  3380 ;; Registers used:
  3381 ;;		wreg, status,2, status,0
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3387 ;;      Params:         4       0       0       0       0
  3388 ;;      Locals:         2       0       0       0       0
  3389 ;;      Temps:          1       0       0       0       0
  3390 ;;      Totals:         7       0       0       0       0
  3391 ;;Total ram usage:        7 bytes
  3392 ;; Hardware stack levels used: 1
  3393 ;; Hardware stack levels required when called: 1
  3394 ;; This function calls:
  3395 ;;		Nothing
  3396 ;; This function is called by:
  3397 ;;		_divisor_dec
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           
  3402                           ;psect for function ___awmod
  3403  0498                     ___awmod:
  3404  0498                     l1773:	
  3405                           ;incstack = 0
  3406                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3407                           
  3408  0498  01F8               	clrf	___awmod@sign
  3409  0499                     l1775:
  3410  0499  1FF5               	btfss	___awmod@dividend+1,7
  3411  049A  2C9C               	goto	u1161
  3412  049B  2C9D               	goto	u1160
  3413  049C                     u1161:
  3414  049C  2CA4               	goto	l1781
  3415  049D                     u1160:
  3416  049D                     l1777:
  3417  049D  09F4               	comf	___awmod@dividend,f
  3418  049E  09F5               	comf	___awmod@dividend+1,f
  3419  049F  0AF4               	incf	___awmod@dividend,f
  3420  04A0  1903               	skipnz
  3421  04A1  0AF5               	incf	___awmod@dividend+1,f
  3422  04A2                     l1779:
  3423  04A2  01F8               	clrf	___awmod@sign
  3424  04A3  0AF8               	incf	___awmod@sign,f
  3425  04A4                     l1781:
  3426  04A4  1FF3               	btfss	___awmod@divisor+1,7
  3427  04A5  2CA7               	goto	u1171
  3428  04A6  2CA8               	goto	u1170
  3429  04A7                     u1171:
  3430  04A7  2CAD               	goto	l1785
  3431  04A8                     u1170:
  3432  04A8                     l1783:
  3433  04A8  09F2               	comf	___awmod@divisor,f
  3434  04A9  09F3               	comf	___awmod@divisor+1,f
  3435  04AA  0AF2               	incf	___awmod@divisor,f
  3436  04AB  1903               	skipnz
  3437  04AC  0AF3               	incf	___awmod@divisor+1,f
  3438  04AD                     l1785:
  3439  04AD  0872               	movf	___awmod@divisor,w
  3440  04AE  0473               	iorwf	___awmod@divisor+1,w
  3441  04AF  1903               	btfsc	3,2
  3442  04B0  2CB2               	goto	u1181
  3443  04B1  2CB3               	goto	u1180
  3444  04B2                     u1181:
  3445  04B2  2CE2               	goto	l1803
  3446  04B3                     u1180:
  3447  04B3                     l1787:
  3448  04B3  01F7               	clrf	___awmod@counter
  3449  04B4  0AF7               	incf	___awmod@counter,f
  3450  04B5  2CC1               	goto	l1793
  3451  04B6                     l1789:
  3452  04B6  3001               	movlw	1
  3453  04B7                     u1195:
  3454  04B7  1003               	clrc
  3455  04B8  0DF2               	rlf	___awmod@divisor,f
  3456  04B9  0DF3               	rlf	___awmod@divisor+1,f
  3457  04BA  3EFF               	addlw	-1
  3458  04BB  1D03               	skipz
  3459  04BC  2CB7               	goto	u1195
  3460  04BD                     l1791:
  3461  04BD  3001               	movlw	1
  3462  04BE  00F6               	movwf	??___awmod
  3463  04BF  0876               	movf	??___awmod,w
  3464  04C0  07F7               	addwf	___awmod@counter,f
  3465  04C1                     l1793:
  3466  04C1  1FF3               	btfss	___awmod@divisor+1,7
  3467  04C2  2CC4               	goto	u1201
  3468  04C3  2CC5               	goto	u1200
  3469  04C4                     u1201:
  3470  04C4  2CB6               	goto	l1789
  3471  04C5                     u1200:
  3472  04C5                     l1795:
  3473  04C5  0873               	movf	___awmod@divisor+1,w
  3474  04C6  0275               	subwf	___awmod@dividend+1,w
  3475  04C7  1D03               	skipz
  3476  04C8  2CCB               	goto	u1215
  3477  04C9  0872               	movf	___awmod@divisor,w
  3478  04CA  0274               	subwf	___awmod@dividend,w
  3479  04CB                     u1215:
  3480  04CB  1C03               	skipc
  3481  04CC  2CCE               	goto	u1211
  3482  04CD  2CCF               	goto	u1210
  3483  04CE                     u1211:
  3484  04CE  2CD5               	goto	l1799
  3485  04CF                     u1210:
  3486  04CF                     l1797:
  3487  04CF  0872               	movf	___awmod@divisor,w
  3488  04D0  02F4               	subwf	___awmod@dividend,f
  3489  04D1  0873               	movf	___awmod@divisor+1,w
  3490  04D2  1C03               	skipc
  3491  04D3  03F5               	decf	___awmod@dividend+1,f
  3492  04D4  02F5               	subwf	___awmod@dividend+1,f
  3493  04D5                     l1799:
  3494  04D5  3001               	movlw	1
  3495  04D6                     u1225:
  3496  04D6  1003               	clrc
  3497  04D7  0CF3               	rrf	___awmod@divisor+1,f
  3498  04D8  0CF2               	rrf	___awmod@divisor,f
  3499  04D9  3EFF               	addlw	-1
  3500  04DA  1D03               	skipz
  3501  04DB  2CD6               	goto	u1225
  3502  04DC                     l1801:
  3503  04DC  3001               	movlw	1
  3504  04DD  02F7               	subwf	___awmod@counter,f
  3505  04DE  1D03               	btfss	3,2
  3506  04DF  2CE1               	goto	u1231
  3507  04E0  2CE2               	goto	u1230
  3508  04E1                     u1231:
  3509  04E1  2CC5               	goto	l1795
  3510  04E2                     u1230:
  3511  04E2                     l1803:
  3512  04E2  0878               	movf	___awmod@sign,w
  3513  04E3  1903               	btfsc	3,2
  3514  04E4  2CE6               	goto	u1241
  3515  04E5  2CE7               	goto	u1240
  3516  04E6                     u1241:
  3517  04E6  2CEC               	goto	l1807
  3518  04E7                     u1240:
  3519  04E7                     l1805:
  3520  04E7  09F4               	comf	___awmod@dividend,f
  3521  04E8  09F5               	comf	___awmod@dividend+1,f
  3522  04E9  0AF4               	incf	___awmod@dividend,f
  3523  04EA  1903               	skipnz
  3524  04EB  0AF5               	incf	___awmod@dividend+1,f
  3525  04EC                     l1807:
  3526  04EC  0875               	movf	___awmod@dividend+1,w
  3527  04ED  00F3               	movwf	?___awmod+1
  3528  04EE  0874               	movf	___awmod@dividend,w
  3529  04EF  00F2               	movwf	?___awmod
  3530  04F0                     l533:
  3531  04F0  0008               	return
  3532  04F1                     __end_of___awmod:
  3533                           
  3534                           	psect	text16
  3535  02FE                     __ptext16:	
  3536 ;; *************** function ___awdiv *****************
  3537 ;; Defined at:
  3538 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;  divisor         2    2[COMMON] int 
  3541 ;;  dividend        2    4[COMMON] int 
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;  quotient        2    2[BANK0 ] int 
  3544 ;;  sign            1    1[BANK0 ] unsigned char 
  3545 ;;  counter         1    0[BANK0 ] unsigned char 
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  2    2[COMMON] int 
  3548 ;; Registers used:
  3549 ;;		wreg, status,2, status,0
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3555 ;;      Params:         4       0       0       0       0
  3556 ;;      Locals:         0       4       0       0       0
  3557 ;;      Temps:          1       0       0       0       0
  3558 ;;      Totals:         5       4       0       0       0
  3559 ;;Total ram usage:        9 bytes
  3560 ;; Hardware stack levels used: 1
  3561 ;; Hardware stack levels required when called: 1
  3562 ;; This function calls:
  3563 ;;		Nothing
  3564 ;; This function is called by:
  3565 ;;		_divisor_dec
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           
  3570                           ;psect for function ___awdiv
  3571  02FE                     ___awdiv:
  3572  02FE                     l2091:	
  3573                           ;incstack = 0
  3574                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3575                           
  3576  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  3577  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  3578  0300  01B9               	clrf	___awdiv@sign
  3579  0301                     l2093:
  3580  0301  1FF3               	btfss	___awdiv@divisor+1,7
  3581  0302  2B04               	goto	u1421
  3582  0303  2B05               	goto	u1420
  3583  0304                     u1421:
  3584  0304  2B0C               	goto	l2099
  3585  0305                     u1420:
  3586  0305                     l2095:
  3587  0305  09F2               	comf	___awdiv@divisor,f
  3588  0306  09F3               	comf	___awdiv@divisor+1,f
  3589  0307  0AF2               	incf	___awdiv@divisor,f
  3590  0308  1903               	skipnz
  3591  0309  0AF3               	incf	___awdiv@divisor+1,f
  3592  030A                     l2097:
  3593  030A  01B9               	clrf	___awdiv@sign
  3594  030B  0AB9               	incf	___awdiv@sign,f
  3595  030C                     l2099:
  3596  030C  1FF5               	btfss	___awdiv@dividend+1,7
  3597  030D  2B0F               	goto	u1431
  3598  030E  2B10               	goto	u1430
  3599  030F                     u1431:
  3600  030F  2B19               	goto	l2105
  3601  0310                     u1430:
  3602  0310                     l2101:
  3603  0310  09F4               	comf	___awdiv@dividend,f
  3604  0311  09F5               	comf	___awdiv@dividend+1,f
  3605  0312  0AF4               	incf	___awdiv@dividend,f
  3606  0313  1903               	skipnz
  3607  0314  0AF5               	incf	___awdiv@dividend+1,f
  3608  0315                     l2103:
  3609  0315  3001               	movlw	1
  3610  0316  00F6               	movwf	??___awdiv
  3611  0317  0876               	movf	??___awdiv,w
  3612  0318  06B9               	xorwf	___awdiv@sign,f
  3613  0319                     l2105:
  3614  0319  01BA               	clrf	___awdiv@quotient
  3615  031A  01BB               	clrf	___awdiv@quotient+1
  3616  031B                     l2107:
  3617  031B  0872               	movf	___awdiv@divisor,w
  3618  031C  0473               	iorwf	___awdiv@divisor+1,w
  3619  031D  1903               	btfsc	3,2
  3620  031E  2B20               	goto	u1441
  3621  031F  2B21               	goto	u1440
  3622  0320                     u1441:
  3623  0320  2B58               	goto	l2127
  3624  0321                     u1440:
  3625  0321                     l2109:
  3626  0321  01B8               	clrf	___awdiv@counter
  3627  0322  0AB8               	incf	___awdiv@counter,f
  3628  0323  2B2F               	goto	l2115
  3629  0324                     l2111:
  3630  0324  3001               	movlw	1
  3631  0325                     u1455:
  3632  0325  1003               	clrc
  3633  0326  0DF2               	rlf	___awdiv@divisor,f
  3634  0327  0DF3               	rlf	___awdiv@divisor+1,f
  3635  0328  3EFF               	addlw	-1
  3636  0329  1D03               	skipz
  3637  032A  2B25               	goto	u1455
  3638  032B                     l2113:
  3639  032B  3001               	movlw	1
  3640  032C  00F6               	movwf	??___awdiv
  3641  032D  0876               	movf	??___awdiv,w
  3642  032E  07B8               	addwf	___awdiv@counter,f
  3643  032F                     l2115:
  3644  032F  1FF3               	btfss	___awdiv@divisor+1,7
  3645  0330  2B32               	goto	u1461
  3646  0331  2B33               	goto	u1460
  3647  0332                     u1461:
  3648  0332  2B24               	goto	l2111
  3649  0333                     u1460:
  3650  0333                     l2117:
  3651  0333  3001               	movlw	1
  3652  0334                     u1475:
  3653  0334  1003               	clrc
  3654  0335  0DBA               	rlf	___awdiv@quotient,f
  3655  0336  0DBB               	rlf	___awdiv@quotient+1,f
  3656  0337  3EFF               	addlw	-1
  3657  0338  1D03               	skipz
  3658  0339  2B34               	goto	u1475
  3659  033A  0873               	movf	___awdiv@divisor+1,w
  3660  033B  0275               	subwf	___awdiv@dividend+1,w
  3661  033C  1D03               	skipz
  3662  033D  2B40               	goto	u1485
  3663  033E  0872               	movf	___awdiv@divisor,w
  3664  033F  0274               	subwf	___awdiv@dividend,w
  3665  0340                     u1485:
  3666  0340  1C03               	skipc
  3667  0341  2B43               	goto	u1481
  3668  0342  2B44               	goto	u1480
  3669  0343                     u1481:
  3670  0343  2B4B               	goto	l2123
  3671  0344                     u1480:
  3672  0344                     l2119:
  3673  0344  0872               	movf	___awdiv@divisor,w
  3674  0345  02F4               	subwf	___awdiv@dividend,f
  3675  0346  0873               	movf	___awdiv@divisor+1,w
  3676  0347  1C03               	skipc
  3677  0348  03F5               	decf	___awdiv@dividend+1,f
  3678  0349  02F5               	subwf	___awdiv@dividend+1,f
  3679  034A                     l2121:
  3680  034A  143A               	bsf	___awdiv@quotient,0
  3681  034B                     l2123:
  3682  034B  3001               	movlw	1
  3683  034C                     u1495:
  3684  034C  1003               	clrc
  3685  034D  0CF3               	rrf	___awdiv@divisor+1,f
  3686  034E  0CF2               	rrf	___awdiv@divisor,f
  3687  034F  3EFF               	addlw	-1
  3688  0350  1D03               	skipz
  3689  0351  2B4C               	goto	u1495
  3690  0352                     l2125:
  3691  0352  3001               	movlw	1
  3692  0353  02B8               	subwf	___awdiv@counter,f
  3693  0354  1D03               	btfss	3,2
  3694  0355  2B57               	goto	u1501
  3695  0356  2B58               	goto	u1500
  3696  0357                     u1501:
  3697  0357  2B33               	goto	l2117
  3698  0358                     u1500:
  3699  0358                     l2127:
  3700  0358  0839               	movf	___awdiv@sign,w
  3701  0359  1903               	btfsc	3,2
  3702  035A  2B5C               	goto	u1511
  3703  035B  2B5D               	goto	u1510
  3704  035C                     u1511:
  3705  035C  2B62               	goto	l2131
  3706  035D                     u1510:
  3707  035D                     l2129:
  3708  035D  09BA               	comf	___awdiv@quotient,f
  3709  035E  09BB               	comf	___awdiv@quotient+1,f
  3710  035F  0ABA               	incf	___awdiv@quotient,f
  3711  0360  1903               	skipnz
  3712  0361  0ABB               	incf	___awdiv@quotient+1,f
  3713  0362                     l2131:
  3714  0362  083B               	movf	___awdiv@quotient+1,w
  3715  0363  00F3               	movwf	?___awdiv+1
  3716  0364  083A               	movf	___awdiv@quotient,w
  3717  0365  00F2               	movwf	?___awdiv
  3718  0366                     l520:
  3719  0366  0008               	return
  3720  0367                     __end_of___awdiv:
  3721                           
  3722                           	psect	text17
  3723  0665                     __ptext17:	
  3724 ;; *************** function _I2CMasterRead *****************
  3725 ;; Defined at:
  3726 ;;		line 116 in file "I2C.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;  ACK             1    wreg     enum E1309
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;  ACK             1    3[COMMON] enum E1309
  3731 ;;  Datos           1    4[COMMON] unsigned char 
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  1    wreg      unsigned char 
  3734 ;; Registers used:
  3735 ;;		wreg, status,2, status,0, pclath, cstack
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3741 ;;      Params:         0       0       0       0       0
  3742 ;;      Locals:         2       0       0       0       0
  3743 ;;      Temps:          1       0       0       0       0
  3744 ;;      Totals:         3       0       0       0       0
  3745 ;;Total ram usage:        3 bytes
  3746 ;; Hardware stack levels used: 1
  3747 ;; Hardware stack levels required when called: 2
  3748 ;; This function calls:
  3749 ;;		_I2CMasterCheck
  3750 ;; This function is called by:
  3751 ;;		_main
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           
  3755                           
  3756                           ;psect for function _I2CMasterRead
  3757  0665                     _I2CMasterRead:
  3758                           
  3759                           ;incstack = 0
  3760                           ; Regs used in _I2CMasterRead: [wreg+status,2+status,0+pclath+cstack]
  3761                           ;I2CMasterRead@ACK stored from wreg
  3762  0665  00F3               	movwf	I2CMasterRead@ACK
  3763  0666                     l1835:
  3764                           
  3765                           ;I2C.c: 117:     char Datos;;I2C.c: 118:     I2CMasterCheck();
  3766  0666  120A  118A  26F5  120A  118A  	fcall	_I2CMasterCheck
  3767  066B                     l1837:
  3768                           
  3769                           ;I2C.c: 119:     SSPCON2bits.RCEN = 1;
  3770  066B  1683               	bsf	3,5	;RP0=1, select bank1
  3771  066C  1303               	bcf	3,6	;RP1=0, select bank1
  3772  066D  1591               	bsf	17,3	;volatile
  3773                           
  3774                           ;I2C.c: 120:     I2CMasterCheck();
  3775  066E  120A  118A  26F5  120A  118A  	fcall	_I2CMasterCheck
  3776  0673                     l1839:
  3777                           
  3778                           ;I2C.c: 121:     Datos = SSPBUF;
  3779  0673  1283               	bcf	3,5	;RP0=0, select bank0
  3780  0674  1303               	bcf	3,6	;RP1=0, select bank0
  3781  0675  0813               	movf	19,w	;volatile
  3782  0676  00F2               	movwf	??_I2CMasterRead
  3783  0677  0872               	movf	??_I2CMasterRead,w
  3784  0678  00F4               	movwf	I2CMasterRead@Datos
  3785  0679                     l1841:
  3786                           
  3787                           ;I2C.c: 122:     I2CMasterCheck();
  3788  0679  120A  118A  26F5  120A  118A  	fcall	_I2CMasterCheck
  3789  067E                     l1843:
  3790                           
  3791                           ;I2C.c: 123:     if (ACK == 0) SSPCON2bits.ACKDT = 0;
  3792  067E  0873               	movf	I2CMasterRead@ACK,w
  3793  067F  1D03               	btfss	3,2
  3794  0680  2E82               	goto	u1251
  3795  0681  2E83               	goto	u1250
  3796  0682                     u1251:
  3797  0682  2E87               	goto	l185
  3798  0683                     u1250:
  3799  0683                     l1845:
  3800  0683  1683               	bsf	3,5	;RP0=1, select bank1
  3801  0684  1303               	bcf	3,6	;RP1=0, select bank1
  3802  0685  1291               	bcf	17,5	;volatile
  3803  0686  2E8A               	goto	l186
  3804  0687                     l185:	
  3805                           ;I2C.c: 124:     else SSPCON2bits.ACKDT = 1;
  3806                           
  3807  0687  1683               	bsf	3,5	;RP0=1, select bank1
  3808  0688  1303               	bcf	3,6	;RP1=0, select bank1
  3809  0689  1691               	bsf	17,5	;volatile
  3810  068A                     l186:
  3811                           
  3812                           ;I2C.c: 125:     SSPCON2bits.ACKEN = 1;
  3813  068A  1611               	bsf	17,4	;volatile
  3814  068B                     l1847:
  3815                           
  3816                           ;I2C.c: 126:     return Datos;
  3817  068B  0874               	movf	I2CMasterRead@Datos,w
  3818  068C                     l187:
  3819  068C  0008               	return
  3820  068D                     __end_of_I2CMasterRead:
  3821                           
  3822                           	psect	text18
  3823  06F5                     __ptext18:	
  3824 ;; *************** function _I2CMasterCheck *****************
  3825 ;; Defined at:
  3826 ;;		line 91 in file "I2C.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;		None
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;		None
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  1    wreg      void 
  3833 ;; Registers used:
  3834 ;;		wreg, status,2
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3840 ;;      Params:         0       0       0       0       0
  3841 ;;      Locals:         0       0       0       0       0
  3842 ;;      Temps:          0       0       0       0       0
  3843 ;;      Totals:         0       0       0       0       0
  3844 ;;Total ram usage:        0 bytes
  3845 ;; Hardware stack levels used: 1
  3846 ;; Hardware stack levels required when called: 1
  3847 ;; This function calls:
  3848 ;;		Nothing
  3849 ;; This function is called by:
  3850 ;;		_I2C_Master_Start
  3851 ;;		_I2CMasterStop
  3852 ;;		_I2CMasterWrite
  3853 ;;		_I2CMasterRead
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           
  3858                           ;psect for function _I2CMasterCheck
  3859  06F5                     _I2CMasterCheck:
  3860  06F5                     l1481:	
  3861                           ;incstack = 0
  3862                           ; Regs used in _I2CMasterCheck: [wreg+status,2]
  3863                           
  3864  06F5                     l168:	
  3865                           ;I2C.c: 92:     while((SSPSTAT & 0x04)|| (SSPCON2 & 0x1F));
  3866                           
  3867  06F5  1683               	bsf	3,5	;RP0=1, select bank1
  3868  06F6  1303               	bcf	3,6	;RP1=0, select bank1
  3869  06F7  1914               	btfsc	20,2	;volatile
  3870  06F8  2EFA               	goto	u701
  3871  06F9  2EFB               	goto	u700
  3872  06FA                     u701:
  3873  06FA  2EF5               	goto	l168
  3874  06FB                     u700:
  3875  06FB                     l1483:
  3876  06FB  0811               	movf	17,w	;volatile
  3877  06FC  391F               	andlw	31
  3878  06FD  1D03               	btfss	3,2
  3879  06FE  2F00               	goto	u711
  3880  06FF  2F01               	goto	u710
  3881  0700                     u711:
  3882  0700  2EF5               	goto	l168
  3883  0701                     u710:
  3884  0701                     l171:
  3885  0701  0008               	return
  3886  0702                     __end_of_I2CMasterCheck:
  3887                           
  3888                           	psect	text19
  3889  0702                     __ptext19:	
  3890 ;; *************** function _Escribir_caracterLCD *****************
  3891 ;; Defined at:
  3892 ;;		line 63 in file "LCD.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;  a               1    wreg     unsigned char 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;  a               1    4[COMMON] unsigned char 
  3897 ;; Return value:  Size  Location     Type
  3898 ;;                  1    wreg      void 
  3899 ;; Registers used:
  3900 ;;		wreg, status,2, status,0, pclath, cstack
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3906 ;;      Params:         0       0       0       0       0
  3907 ;;      Locals:         1       0       0       0       0
  3908 ;;      Temps:          0       0       0       0       0
  3909 ;;      Totals:         1       0       0       0       0
  3910 ;;Total ram usage:        1 bytes
  3911 ;; Hardware stack levels used: 1
  3912 ;; Hardware stack levels required when called: 3
  3913 ;; This function calls:
  3914 ;;		_Escribir_comandoLCD
  3915 ;; This function is called by:
  3916 ;;		_main
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           
  3921                           ;psect for function _Escribir_caracterLCD
  3922  0702                     _Escribir_caracterLCD:
  3923                           
  3924                           ;incstack = 0
  3925                           ; Regs used in _Escribir_caracterLCD: [wreg+status,2+status,0+pclath+cstack]
  3926                           ;Escribir_caracterLCD@a stored from wreg
  3927  0702  00F4               	movwf	Escribir_caracterLCD@a
  3928  0703                     l1933:
  3929                           
  3930                           ;LCD.c: 64:     PORTDbits.RD3 = 1; PORTDbits.RD4 = 0;
  3931  0703  1283               	bcf	3,5	;RP0=0, select bank0
  3932  0704  1303               	bcf	3,6	;RP1=0, select bank0
  3933  0705  1588               	bsf	8,3	;volatile
  3934  0706  1208               	bcf	8,4	;volatile
  3935  0707                     l1935:
  3936                           
  3937                           ;LCD.c: 66:     Escribir_comandoLCD(a);
  3938  0707  0874               	movf	Escribir_caracterLCD@a,w
  3939  0708  120A  118A  2581  120A  118A  	fcall	_Escribir_comandoLCD
  3940  070D                     l227:
  3941  070D  0008               	return
  3942  070E                     __end_of_Escribir_caracterLCD:
  3943                           
  3944                           	psect	text20
  3945  0581                     __ptext20:	
  3946 ;; *************** function _Escribir_comandoLCD *****************
  3947 ;; Defined at:
  3948 ;;		line 17 in file "LCD.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;  Comando         1    wreg     unsigned char 
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;  Comando         1    3[COMMON] unsigned char 
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  1    wreg      void 
  3955 ;; Registers used:
  3956 ;;		wreg, status,2, status,0, pclath, cstack
  3957 ;; Tracked objects:
  3958 ;;		On entry : 0/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3962 ;;      Params:         0       0       0       0       0
  3963 ;;      Locals:         1       0       0       0       0
  3964 ;;      Temps:          0       0       0       0       0
  3965 ;;      Totals:         1       0       0       0       0
  3966 ;;Total ram usage:        1 bytes
  3967 ;; Hardware stack levels used: 1
  3968 ;; Hardware stack levels required when called: 2
  3969 ;; This function calls:
  3970 ;;		_prender_ELCD
  3971 ;; This function is called by:
  3972 ;;		_Iniciar_LCD
  3973 ;;		_Escribir_stringLCD
  3974 ;;		_Escribir_caracterLCD
  3975 ;;		_Limpiar_pantallaLCD
  3976 ;;		_set_cursor
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           
  3981                           ;psect for function _Escribir_comandoLCD
  3982  0581                     _Escribir_comandoLCD:
  3983                           
  3984                           ;incstack = 0
  3985                           ; Regs used in _Escribir_comandoLCD: [wreg+status,2+status,0+pclath+cstack]
  3986                           ;Escribir_comandoLCD@Comando stored from wreg
  3987  0581  00F3               	movwf	Escribir_comandoLCD@Comando
  3988  0582                     l1509:
  3989                           
  3990                           ;LCD.c: 18:     if((Comando & 0b00000001) == 0b00000001){PORTDbits.RD6 = 1;} else {PORTD
      +                          bits.RD6 = 0;}
  3991  0582  1C73               	btfss	Escribir_comandoLCD@Comando,0
  3992  0583  2D85               	goto	u741
  3993  0584  2D86               	goto	u740
  3994  0585                     u741:
  3995  0585  2D8A               	goto	l199
  3996  0586                     u740:
  3997  0586                     l1511:
  3998  0586  1283               	bcf	3,5	;RP0=0, select bank0
  3999  0587  1303               	bcf	3,6	;RP1=0, select bank0
  4000  0588  1708               	bsf	8,6	;volatile
  4001  0589  2D8D               	goto	l200
  4002  058A                     l199:
  4003  058A  1283               	bcf	3,5	;RP0=0, select bank0
  4004  058B  1303               	bcf	3,6	;RP1=0, select bank0
  4005  058C  1308               	bcf	8,6	;volatile
  4006  058D                     l200:
  4007                           
  4008                           ;LCD.c: 19:     if((Comando & 0b00000010) == 0b00000010){PORTDbits.RD7 = 1;} else {PORTD
      +                          bits.RD7 = 0;}
  4009  058D  1CF3               	btfss	Escribir_comandoLCD@Comando,1
  4010  058E  2D90               	goto	u751
  4011  058F  2D91               	goto	u750
  4012  0590                     u751:
  4013  0590  2D93               	goto	l201
  4014  0591                     u750:
  4015  0591                     l1513:
  4016  0591  1788               	bsf	8,7	;volatile
  4017  0592  2D94               	goto	l202
  4018  0593                     l201:
  4019  0593  1388               	bcf	8,7	;volatile
  4020  0594                     l202:
  4021                           
  4022                           ;LCD.c: 20:     if((Comando & 0b00000100) == 0b00000100){PORTBbits.RB0 = 1;} else {PORTB
      +                          bits.RB0 = 0;}
  4023  0594  1D73               	btfss	Escribir_comandoLCD@Comando,2
  4024  0595  2D97               	goto	u761
  4025  0596  2D98               	goto	u760
  4026  0597                     u761:
  4027  0597  2D9A               	goto	l203
  4028  0598                     u760:
  4029  0598                     l1515:
  4030  0598  1406               	bsf	6,0	;volatile
  4031  0599  2D9B               	goto	l204
  4032  059A                     l203:
  4033  059A  1006               	bcf	6,0	;volatile
  4034  059B                     l204:
  4035                           
  4036                           ;LCD.c: 21:     if((Comando & 0b00001000) == 0b00001000){PORTBbits.RB1 = 1;} else {PORTB
      +                          bits.RB1 = 0;}
  4037  059B  1DF3               	btfss	Escribir_comandoLCD@Comando,3
  4038  059C  2D9E               	goto	u771
  4039  059D  2D9F               	goto	u770
  4040  059E                     u771:
  4041  059E  2DA1               	goto	l205
  4042  059F                     u770:
  4043  059F                     l1517:
  4044  059F  1486               	bsf	6,1	;volatile
  4045  05A0  2DA2               	goto	l206
  4046  05A1                     l205:
  4047  05A1  1086               	bcf	6,1	;volatile
  4048  05A2                     l206:
  4049                           
  4050                           ;LCD.c: 22:     if((Comando & 0b00010000) == 0b00010000){PORTBbits.RB2 = 1;} else {PORTB
      +                          bits.RB2 = 0;}
  4051  05A2  1E73               	btfss	Escribir_comandoLCD@Comando,4
  4052  05A3  2DA5               	goto	u781
  4053  05A4  2DA6               	goto	u780
  4054  05A5                     u781:
  4055  05A5  2DA8               	goto	l207
  4056  05A6                     u780:
  4057  05A6                     l1519:
  4058  05A6  1506               	bsf	6,2	;volatile
  4059  05A7  2DA9               	goto	l208
  4060  05A8                     l207:
  4061  05A8  1106               	bcf	6,2	;volatile
  4062  05A9                     l208:
  4063                           
  4064                           ;LCD.c: 23:     if((Comando & 0b00100000) == 0b00100000){PORTBbits.RB3 = 1;} else {PORTB
      +                          bits.RB3 = 0;}
  4065  05A9  1EF3               	btfss	Escribir_comandoLCD@Comando,5
  4066  05AA  2DAC               	goto	u791
  4067  05AB  2DAD               	goto	u790
  4068  05AC                     u791:
  4069  05AC  2DAF               	goto	l209
  4070  05AD                     u790:
  4071  05AD                     l1521:
  4072  05AD  1586               	bsf	6,3	;volatile
  4073  05AE  2DB0               	goto	l210
  4074  05AF                     l209:
  4075  05AF  1186               	bcf	6,3	;volatile
  4076  05B0                     l210:
  4077                           
  4078                           ;LCD.c: 24:     if((Comando & 0b01000000) == 0b01000000){PORTBbits.RB4 = 1;} else {PORTB
      +                          bits.RB4 = 0;}
  4079  05B0  1F73               	btfss	Escribir_comandoLCD@Comando,6
  4080  05B1  2DB3               	goto	u801
  4081  05B2  2DB4               	goto	u800
  4082  05B3                     u801:
  4083  05B3  2DB6               	goto	l211
  4084  05B4                     u800:
  4085  05B4                     l1523:
  4086  05B4  1606               	bsf	6,4	;volatile
  4087  05B5  2DB7               	goto	l212
  4088  05B6                     l211:
  4089  05B6  1206               	bcf	6,4	;volatile
  4090  05B7                     l212:
  4091                           
  4092                           ;LCD.c: 25:     if((Comando & 0b10000000) == 0b10000000){PORTBbits.RB5 = 1;} else {PORTB
      +                          bits.RB5 = 0;}
  4093  05B7  1FF3               	btfss	Escribir_comandoLCD@Comando,7
  4094  05B8  2DBA               	goto	u811
  4095  05B9  2DBB               	goto	u810
  4096  05BA                     u811:
  4097  05BA  2DBD               	goto	l213
  4098  05BB                     u810:
  4099  05BB                     l1525:
  4100  05BB  1686               	bsf	6,5	;volatile
  4101  05BC  2DBE               	goto	l1527
  4102  05BD                     l213:
  4103  05BD  1286               	bcf	6,5	;volatile
  4104  05BE                     l1527:
  4105                           
  4106                           ;LCD.c: 27:     prender_ELCD();
  4107  05BE  120A  118A  26E7  120A  118A  	fcall	_prender_ELCD
  4108  05C3                     l215:
  4109  05C3  0008               	return
  4110  05C4                     __end_of_Escribir_comandoLCD:
  4111                           
  4112                           	psect	text21
  4113  06E7                     __ptext21:	
  4114 ;; *************** function _prender_ELCD *****************
  4115 ;; Defined at:
  4116 ;;		line 11 in file "LCD.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;		None
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;		None
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  1    wreg      void 
  4123 ;; Registers used:
  4124 ;;		wreg
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4130 ;;      Params:         0       0       0       0       0
  4131 ;;      Locals:         0       0       0       0       0
  4132 ;;      Temps:          1       0       0       0       0
  4133 ;;      Totals:         1       0       0       0       0
  4134 ;;Total ram usage:        1 bytes
  4135 ;; Hardware stack levels used: 1
  4136 ;; Hardware stack levels required when called: 1
  4137 ;; This function calls:
  4138 ;;		Nothing
  4139 ;; This function is called by:
  4140 ;;		_Escribir_comandoLCD
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144                           
  4145                           ;psect for function _prender_ELCD
  4146  06E7                     _prender_ELCD:
  4147  06E7                     l1485:	
  4148                           ;incstack = 0
  4149                           ; Regs used in _prender_ELCD: [wreg]
  4150                           
  4151                           
  4152                           ;LCD.c: 12:     PORTDbits.RD5 = 1;
  4153  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  4154  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  4155  06E9  1688               	bsf	8,5	;volatile
  4156  06EA                     l1487:
  4157                           
  4158                           ;LCD.c: 13:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  4159  06EA  30C7               	movlw	199
  4160  06EB  00F2               	movwf	??_prender_ELCD
  4161  06EC                     u1677:
  4162  06EC  2EED               	nop2
  4163  06ED  0BF2               	decfsz	??_prender_ELCD,f
  4164  06EE  2EEC               	goto	u1677
  4165  06EF  2EF0               	nop2
  4166  06F0  2EF1               	nop2
  4167  06F1                     l1489:
  4168                           
  4169                           ;LCD.c: 14:     PORTDbits.RD5 = 0;
  4170  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  4171  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  4172  06F3  1288               	bcf	8,5	;volatile
  4173  06F4                     l196:
  4174  06F4  0008               	return
  4175  06F5                     __end_of_prender_ELCD:
  4176                           
  4177                           	psect	text22
  4178  072A                     __ptext22:	
  4179 ;; *************** function _isr *****************
  4180 ;; Defined at:
  4181 ;;		line 86 in file "Maestro I2C.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;		None
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;		None
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  1    wreg      void 
  4188 ;; Registers used:
  4189 ;;		None
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4195 ;;      Params:         0       0       0       0       0
  4196 ;;      Locals:         0       0       0       0       0
  4197 ;;      Temps:          2       0       0       0       0
  4198 ;;      Totals:         2       0       0       0       0
  4199 ;;Total ram usage:        2 bytes
  4200 ;; Hardware stack levels used: 1
  4201 ;; This function calls:
  4202 ;;		Nothing
  4203 ;; This function is called by:
  4204 ;;		Interrupt level 1
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           
  4209                           ;psect for function _isr
  4210  072A                     _isr:
  4211  072A                     i1l87:
  4212  072A  0871               	movf	??_isr+1,w
  4213  072B  008A               	movwf	10
  4214  072C  0E70               	swapf	??_isr,w
  4215  072D  0083               	movwf	3
  4216  072E  0EFE               	swapf	btemp,f
  4217  072F  0E7E               	swapf	btemp,w
  4218  0730  0009               	retfie
  4219  0731                     __end_of_isr:
  4220  007E                     btemp	set	126	;btemp
  4221  007E                     wtemp0	set	126
  4222                           
  4223                           	psect	intentry
  4224  0004                     __pintentry:	
  4225                           ;incstack = 0
  4226                           ; Regs used in _isr: []
  4227                           
  4228  0004                     interrupt_function:
  4229  007E                     saved_w	set	btemp
  4230  0004  00FE               	movwf	btemp
  4231  0005  0E03               	swapf	3,w
  4232  0006  00F0               	movwf	??_isr
  4233  0007  080A               	movf	10,w
  4234  0008  00F1               	movwf	??_isr+1
  4235  0009  120A  118A  2F2A   	ljmp	_isr
  4236                           
  4237                           	psect	config
  4238                           
  4239                           ;Config register CONFIG1 @ 0x2007
  4240                           ;	Oscillator Selection bits
  4241                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4242                           ;	Watchdog Timer Enable bit
  4243                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4244                           ;	Power-up Timer Enable bit
  4245                           ;	PWRTE = OFF, PWRT disabled
  4246                           ;	RE3/MCLR pin function select bit
  4247                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4248                           ;	Code Protection bit
  4249                           ;	CP = OFF, Program memory code protection is disabled
  4250                           ;	Data Code Protection bit
  4251                           ;	CPD = OFF, Data memory code protection is disabled
  4252                           ;	Brown Out Reset Selection bits
  4253                           ;	BOREN = OFF, BOR disabled
  4254                           ;	Internal External Switchover bit
  4255                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4256                           ;	Fail-Safe Clock Monitor Enabled bit
  4257                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4258                           ;	Low Voltage Programming Enable bit
  4259                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4260                           ;	In-Circuit Debugger Mode bit
  4261                           ;	DEBUG = 0x1, unprogrammed default
  4262  2007                     	org	8199
  4263  2007  20D4               	dw	8404
  4264                           
  4265                           ;Config register CONFIG2 @ 0x2008
  4266                           ;	Brown-out Reset Selection bit
  4267                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4268                           ;	Flash Program Memory Self Write Enable bits
  4269                           ;	WRT = OFF, Write protection off
  4270  2008                     	org	8200
  4271  2008  3FFF               	dw	16383

Data Sizes:
    Strings     44
    Constant    0
    Data        0
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     22      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Escribir_stringLCD@d	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_3(CODE[13]), STR_2(CODE[15]), STR_1(CODE[16]), 

    divisor_dec@dig1	PTR unsigned char  size(1) Largest target is 1
		 -> Giro_digy(COMMON[1]), Giro_digx(COMMON[1]), 


Critical Paths under _main in COMMON

    _set_cursor->_Escribir_comandoLCD
    _Limpiar_pantallaLCD->_Escribir_comandoLCD
    _InitMSSP->___lldiv
    _InitMPU6050->_I2CMasterWrite
    _InitMPU6050->_I2C_Master_Start
    _Iniciar_LCD->_Escribir_comandoLCD
    _Escribir_stringLCD->_Escribir_comandoLCD
    _divisor_dec->___awmod
    _Escribir_caracterLCD->_Escribir_comandoLCD
    _Escribir_comandoLCD->_prender_ELCD

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_setup
    _setup->_InitMSSP
    _InitMSSP->___lldiv
    _divisor_dec->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    5368
                                             18 BANK0      4     4      0
               _Escribir_caracterLCD
                 _Escribir_stringLCD
                      _I2CMasterRead
                      _I2CMasterStop
                     _I2CMasterWrite
                   _I2C_Master_Start
                        _divisor_dec
                         _set_cursor
                              _setup
                     _tabla_numASCII
 ---------------------------------------------------------------------------------
 (1) _tabla_numASCII                                       3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                3     3      0    2337
                                             15 BANK0      3     3      0
                 _Escribir_stringLCD
                        _Iniciar_LCD
                        _InitMPU6050
                           _InitMSSP
                _Limpiar_pantallaLCD
                            _initOsc
                         _set_cursor
 ---------------------------------------------------------------------------------
 (2) _set_cursor                                           4     3      1     645
                                              4 COMMON     4     3      1
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Limpiar_pantallaLCD                                  2     2      0     176
                                              4 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _InitMSSP                                             9     5      4     821
                                              6 BANK0      9     5      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _InitMPU6050                                          3     3      0      66
                                              3 COMMON     3     3      0
                      _I2CMasterStop
                     _I2CMasterWrite
                   _I2C_Master_Start
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     1     1      0      44
                                              2 COMMON     1     1      0
                     _I2CMasterCheck
 ---------------------------------------------------------------------------------
 (3) _I2CMasterWrite                                       1     1      0      22
                                              2 COMMON     1     1      0
                     _I2CMasterCheck
 ---------------------------------------------------------------------------------
 (3) _I2CMasterStop                                        0     0      0       0
                     _I2CMasterCheck
 ---------------------------------------------------------------------------------
 (2) _Iniciar_LCD                                          2     2      0     176
                                              4 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Escribir_stringLCD                                   3     3      0     365
                                              4 COMMON     3     3      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _divisor_dec                                          7     4      3    1690
                                              4 BANK0      7     4      3
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     625
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _I2CMasterRead                                        3     3      0      45
                                              2 COMMON     3     3      0
                     _I2CMasterCheck
 ---------------------------------------------------------------------------------
 (4) _I2CMasterCheck                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Escribir_caracterLCD                                 1     1      0     198
                                              4 COMMON     1     1      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (3) _Escribir_comandoLCD                                  1     1      0     176
                                              3 COMMON     1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (4) _prender_ELCD                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_caracterLCD
     _Escribir_comandoLCD
       _prender_ELCD
   _Escribir_stringLCD
     _Escribir_comandoLCD
   _I2CMasterRead
     _I2CMasterCheck
   _I2CMasterStop
     _I2CMasterCheck
   _I2CMasterWrite
     _I2CMasterCheck
   _I2C_Master_Start
     _I2CMasterCheck
   _divisor_dec
     ___awdiv
     ___awmod
   _set_cursor
     _Escribir_comandoLCD
   _setup
     _Escribir_stringLCD
     _Iniciar_LCD
       _Escribir_comandoLCD
     _InitMPU6050
       _I2CMasterStop
       _I2CMasterWrite
       _I2C_Master_Start
     _InitMSSP
       ___lldiv
     _Limpiar_pantallaLCD
       _Escribir_comandoLCD
     _initOsc
     _set_cursor
   _tabla_numASCII

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      2E       5       57.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3A      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Mar 06 19:31:35 2022

                            pc 0002                    _SSPSTATbits 0094                             l98 0497  
                           _UA 04A1                             _Ax 002C                             _Ay 002A  
                           _Az 0028                             _Gx 0024                             _Gy 0022  
                           _Gz 0020                   ___awdiv@sign 0039                             fsr 0004  
              set_cursor@linea 0077                   ?_divisor_dec 003C                            l103 053D  
                          l200 058D                            l201 0593                            l210 05B0  
                          l202 0594                            l211 05B6                            l203 059A  
                          l212 05B7                            l204 059B                            l108 0602  
                          l213 05BD                            l205 05A1                            l206 05A2  
                          l230 06CC                            l215 05C3                            l207 05A8  
                          l208 05A9                            l224 06B2                            l240 0580  
                          l209 05AF                            l218 0433                            l162 021D  
                          l227 070D                            l171 0701                            l403 03CE  
                          l163 025B                            l155 01EB                            l165 0273  
                          l157 01F9                            l182 0718                            l175 06E3  
                          l168 06F5                            l520 0366                            l176 06E6  
                          l248 0661                            l185 0687                            l281 02FD  
                          l249 0664                            l186 068A                            l187 068C  
                          l179 0721                            l196 06F4                            l533 04F0  
                          l199 058A                            _CKP 00A4                            u700 06FB  
                          u701 06FA                            u710 0701                            u711 0700  
                          u800 05B4                            u720 06D8                            u801 05B3  
                          u721 06D7                            u810 05BB                            u730 06E0  
                          u811 05BA                            u731 06DF                            u740 0586  
                          u900 0555                            u741 0585                            u901 0554  
                          u750 0591                            u910 0569                            u751 0590  
                          u911 0568                            u760 0598                            u920 0577  
                          u761 0597                            u921 0576                            u770 059F  
                          u930 06B2                            u771 059E                            u931 06B1  
                          u780 05A6                            u940 063C                            u781 05A5  
                          u941 063B                            u790 05AD                            u950 0647  
                          u791 05AC                            u951 0646                            u960 0652  
                          u961 0651                            u970 065C                            u890 0548  
                          u971 065B                            u891 0547                            _isr 072A  
                          fsr0 0004                            indf 0000                   ___awmod@sign 0078  
                ??_InitMPU6050 0073                           l2101 0310                           l2021 0379  
                         l2111 0324                           l2103 0315                           l2031 03A8  
                         l2023 037C                           l2121 034A                           l2113 032B  
                         l2105 0319                           l2033 03B6                           l2025 0389  
                         l2201 0120                           l2131 0362                           l2123 034B  
                         l2115 032F                           l2107 031B                           l2035 03B7  
                         l2027 038D                           l2019 0367                           l2051 01DF  
                         l2043 01C6                           l2211 0155                           l2203 012B  
                         l2125 0352                           l2117 0333                           l2109 0321  
                         l1501 070F                           l2037 03C0                           l2029 0396  
                         l2061 0205                           l2053 01E7                           l2045 01C7  
                         l2141 0456                           l2221 0187                           l2213 015D  
                         l2205 0136                           l1511 0586                           l2119 0344  
                         l2127 0358                           l1503 0714                           l2039 03C6  
                         l2071 0228                           l2063 020F                           l2055 01EE  
                         l2047 01D2                           l2151 0472                           l2143 045B  
                         l2135 0434                           l2231 01B7                           l2223 0192  
                         l2215 0165                           l2207 0141                           l1521 05AD  
                         l1513 0591                           l2129 035D                           l1505 0719  
                         l2081 0267                           l2073 022C                           l2065 0217  
                         l2057 01F6                           l2049 01DB                           l1601 065C  
                         l2153 047E                           l2145 0460                           l2137 0440  
                         l2225 019D                           l2217 016D                           l2209 014E  
                         l1523 05B4                           l1515 0598                           l2091 02FE  
                         l1507 071E                           l2083 0268                           l2075 0259  
                         l2067 0220                           l2059 01FF                           l2155 0484  
                         l2147 0465                           l2139 0446                           l2227 01A7  
                         l2219 017C                           l2171 001E                           l1525 05BB  
                         l1517 059F                           l1509 0582                           l2093 0301  
                         l2165 04F5                           l1701 03E2                           l2085 0269  
                         l2077 0260                           l2069 0227                           l2157 0492  
                         l2149 046C                           l2253 05E2                           l2229 01AF  
                         l2181 003B                           l2173 0023                           l1527 05BE  
                         l1519 05A6                           l2095 0305                           l2167 052A  
                         l2159 04F1                           l1711 0412                           l1703 03F1  
                         l2079 0266                           l2087 026C                           l2191 00B5  
                         l2183 0041                           l2175 0029                           l1481 06F5  
                         l2097 030A                           l1801 04DC                           l2169 0530  
                         l1713 0417                           l1705 03F6                           l2089 0270  
                         l1721 06B3                           l1561 0555                           l1553 053F  
                         l2193 00D2                           l2185 005E                           l2177 002F  
                         l1483 06FB                           l2099 030C                           l1803 04E2  
                         l1715 0422                           l1707 0401                           l1491 06CE  
                         l1651 0274                           l1723 06B7                           l1571 0570  
                         l1563 055B                           l1555 0543                           l2195 00EF  
                         l2187 007B                           l2179 0035                           l1485 06E7  
                         l1805 04E7                           l1581 0694                           l1717 0428  
                         l1709 0407                           l1493 06D3                           l1661 0298  
                         l1653 0280                           l1725 06BD                           l1573 0572  
                         l1565 0564                           l1557 0548                           l1901 05D2  
                         l2197 010C                           l2189 0098                           l1487 06EA  
                         l1807 04EC                           l1583 06A1                           l1495 06D8  
                         l1671 02B6                           l1663 029E                           l1655 0286  
                         l1727 06C6                           l1591 0641                           l1575 0577  
                         l1559 054F                           l2199 0111                           l1489 06F1  
                         l1841 0679                           l1585 06A5                           l1577 068E  
                         l1497 06DB                           l1681 02D4                           l1673 02BC  
                         l1665 02A4                           l1657 028C                           l1593 0647  
                         l1569 056A                           l1913 05D6                           l1843 067E  
                         l1835 0666                           l1579 0692                           l1499 06E0  
                         l1691 02F2                           l1683 02DA                           l1675 02C2  
                         l1667 02AA                           l1659 0292                           l1595 064C  
                         l1587 0636                           l1907 05D4                           l1933 0703  
                         l1845 0683                           l1837 066B                           l1781 04A4  
                         l1773 0498                           l1693 02F8                           l1685 02E0  
                         l1677 02C8                           l1669 02B0                           l1597 0652  
                         l1589 063C                           l1935 0707                           l1847 068B  
                         l1839 0673                           l1791 04BD                           l1783 04A8  
                         l1775 0499                           l1695 03CF                           l1687 02E6  
                         l1679 02CE                           l1599 0657                           l1919 05D8  
                         l1871 05C8                           l1927 05DA                           l1863 05C5  
                         l1793 04C1                           l1785 04AD                           l1777 049D  
                         l1697 03D3                           l1689 02EC                           l1865 05C6  
                         l1795 04C5                           l1787 04B3                           l1779 04A2  
                         l1699 03DC                           l1883 05CC                           l1797 04CF  
                         l1789 04B6                           l1877 05CA                           l1799 04D5  
                         l1895 05D0                           l1889 05CE                           ?_isr 0070  
                         STR_1 0609                           STR_2 0619                           STR_3 0628  
                         u1200 04C5                           u1201 04C4                           u1210 04CF  
                         u1211 04CE                           u1230 04E2                           u1310 03A8  
                         u1231 04E1                           u1215 04CB                           u1311 03A7  
                         u1240 04E7                           u1160 049D                           u1400 0227  
                         u1241 04E6                           u1225 04D6                           u1161 049C  
                         u1305 038F                           u1401 0226                           u1250 0683  
                         u1170 04A8                           u1330 03C6                           u1410 023C  
                         u1251 0682                           u1171 04A7                           u1331 03C5  
                         u1315 03A4                           u1500 0358                           u1420 0305  
                         u1180 04B3                           u1340 01DB                           u1501 0357  
                         u1421 0304                           u1181 04B2                           u1325 03B8  
                         u1341 01DA                           u1510 035D                           u1430 0310  
                         u1270 0379                           u1350 01E7                           u1511 035C  
                         u1431 030F                           u1271 0378                           u1415 0237  
                         u1351 01E6                           u1440 0321                           u1520 053D  
                         u1360 01F6                           u1441 0320                           u1521 053C  
                         u1361 01F5                           u1290 038D                           u1370 0205  
                         u1195 04B7                           u1291 038C                           u1371 0204  
                         u1460 0333                           u1380 0217                           u1461 0332  
                         u1525 0539                           u1285 037E                           u1381 0216  
                         u1390 021D                           u1455 0325                           u1607 03E6  
                         u1391 021C                           u1480 0344                           u1481 0343  
                         u1617 03F3                           u1537 048C                           u1475 0334  
                         u1627 03FE                           u1547 055F                           u1485 0340  
                         u1637 0409                           u1557 057B                           u1495 034C  
                         u1647 0414                           u1567 06C1                           u1657 041F  
                         u1577 01CD                           u1667 042A                           u1587 027A  
                         u1677 06EC                           u1597 03D7                           i1l87 072A  
                ??_Iniciar_LCD 0074                           _Temp 0026                           _main 001E  
                         btemp 007E                           start 000C           _Escribir_caracterLCD 0702  
       __size_of_I2CMasterRead 0028         __size_of_I2CMasterStop 0009                          ??_isr 0070  
   __end_of_Escribir_stringLCD 06B3                          ?_main 0070                __end_of___awdiv 0367  
              __end_of___awmod 04F1                          _ANSEL 0188                __end_of___lldiv 03CF  
              ___awdiv@divisor 0072                ___awdiv@counter 0038                          _SPBRG 0099  
                        _PORTA 0005                          _PORTB 0006                          _TRISA 0085  
                        _TRISB 0086                          _SSPIF 0063                   InitMSSP@Dato 003E  
                 InitMSSP@Modo 0046                          _dec_x 0036                          _dec_y 0033  
                        _dec_z 002F                          _cen_x 0035                          _cen_y 0032  
                        _cen_z 002E                __end_of_initOsc 0665                          _setup 0434  
                        _uni_x 0037                          _uni_y 0034                          _uni_z 0030  
          _Limpiar_pantallaLCD 06B3                          pclath 000A            __end_of_InitMPU6050 02FE  
                        status 0003                          wtemp0 007E          ?_Escribir_caracterLCD 0070  
              __initialization 000F            __end_of_Iniciar_LCD 0434                   __end_of_main 01C3  
      __size_of_I2CMasterCheck 000D               __end_of_InitMSSP 0274           ?_Limpiar_pantallaLCD 0070  
      __size_of_I2CMasterWrite 000B                         ??_main 004A                   divisor_dec@b 003C  
                 divisor_dec@n 0041              ?_I2C_Master_Start 0070                  _I2CMasterRead 0665  
           ??_I2C_Master_Start 0072                  _I2CMasterStop 0719             set_cursor@posicion 0074  
             ___awdiv@dividend 0074                         ?_setup 0070                         _ANSELH 0189  
                       _SPBRGH 009A                         _SSPADD 0093                         _SSPCON 0014  
                       _SSPBUF 0013               ??_tabla_numASCII 0072          ??_Limpiar_pantallaLCD 0074  
                    ??___awdiv 0076                      ??___awmod 0076                      ??___lldiv 0038  
             ___awdiv@quotient 003A                ___awmod@divisor 0072                ___awmod@counter 0077  
                    ??_initOsc 0072           __size_of_divisor_dec 004D                         saved_w 007E  
                  _InitMPU6050 0274                 ?_I2CMasterRead 0070                 ?_I2CMasterStop 0070  
              divisor_dec@dig1 003E        __end_of__initialization 001A                    _Iniciar_LCD 03CF  
       ??_Escribir_caracterLCD 0074                 __pcstackCOMMON 0070                  __end_of_setup 0498  
                      ??_setup 0047                     __pbssBANK0 0020                      ?_InitMSSP 003E  
                   __pmaintext 001E                 _I2CMasterCheck 06F5                     __pintentry 0004  
               _I2CMasterWrite 070E   __size_of_Escribir_comandoLCD 0043            I2CMasterWrite@Datos 0072  
                 initOsc@Valor 0072                ??_I2CMasterRead 0072                ??_I2CMasterStop 0072  
                      _SSPCON2 0091                        _SSPSTAT 0094             _Escribir_stringLCD 068D  
                   __stringtab 0603                     ??_InitMSSP 0042                tabla_numASCII@a 0074  
          ?_Escribir_stringLCD 0070         __end_of_I2CMasterCheck 0702          Escribir_caracterLCD@a 0074  
       __end_of_I2CMasterWrite 0719                        ___awdiv 02FE                        ___awmod 0498  
                      ___lldiv 0367                        __ptext1 05C4                        __ptext2 0434  
                      __ptext3 053E                        __ptext4 0635                        __ptext5 06B3  
                      __ptext6 01C3                        __ptext7 0367                        __ptext8 0274  
                      __ptext9 06CD           ??_Escribir_stringLCD 0074                        _initOsc 0635  
                 __size_of_isr 0007               ___awmod@dividend 0074                  ?_prender_ELCD 0070  
                      clrloop0 0723           end_of_initialization 001A      __size_of_I2C_Master_Start 001A  
              ___lldiv@divisor 0072                ___lldiv@counter 003D                ?_I2CMasterCheck 0070  
                   _set_cursor 053E                      _RCSTAbits 0018                ?_I2CMasterWrite 0070  
                    _PORTBbits 0006                      _PORTDbits 0008                 ??_prender_ELCD 0072  
                    _TRISAbits 0085                      _TRISCbits 0087                   ?_InitMPU6050 0070  
                 ?_Iniciar_LCD 0070                      _TXSTAbits 0098    __end_of_Limpiar_pantallaLCD 06CD  
           I2CMasterRead@Datos 0074                    _BAUDCTLbits 0187                  ??_divisor_dec 003F  
                    _Giro_digx 007B                      _Giro_digy 007A                      _Giro_digz 0031  
          start_initialization 000F                    __end_of_isr 0731            _Escribir_comandoLCD 0581  
   Escribir_comandoLCD@Comando 0073              __size_of_InitMSSP 00B1  __size_of_Escribir_caracterLCD 000C  
                  ?_set_cursor 0074           ?_Escribir_comandoLCD 0070                    __pbssCOMMON 007A  
      __size_of_tabla_numASCII 003F                      ___latbits 0002                  __pcstackBANK0 0038  
          __end_of_divisor_dec 053E               _I2C_Master_Start 06CD           __end_of_prender_ELCD 06F5  
                     ?___awdiv 0072                       ?___awmod 0072                       ?___lldiv 0072  
        ??_Escribir_comandoLCD 0073                      __pstrings 0603                       ?_initOsc 0070  
        __end_of_I2CMasterRead 068D          __end_of_I2CMasterStop 0722            __size_of_set_cursor 0043  
         __size_of_InitMPU6050 008A                 __size_of_setup 0064               ??_I2CMasterCheck 0072  
            interrupt_function 0004    I2C_Master_Start@Modo_Inicio 0072               ??_I2CMasterWrite 0072  
                    clear_ram0 0722                       _PIE1bits 008C           __size_of_Iniciar_LCD 0065  
                  __stringbase 0608                    _divisor_dec 04F1    __size_of_Escribir_stringLCD 0026  
                     _InitMSSP 01C3            Escribir_stringLCD@d 0076            Escribir_stringLCD@i 0075  
             __size_of___awdiv 0069               __size_of___awmod 0059               __size_of___lldiv 0068  
           __end_of__stringtab 0609                 _tabla_numASCII 05C4               __size_of_initOsc 0030  
                     __ptext10 070E                       __ptext11 0719                       __ptext20 0581  
                     __ptext12 03CF                       __ptext21 06E7                       __ptext13 068D  
                     __ptext22 072A                       __ptext14 04F1                       __ptext15 0498  
                     __ptext16 02FE                       __ptext17 0665                       __ptext18 06F5  
                     __ptext19 0702          __size_of_prender_ELCD 000E                  __size_of_main 01A5  
                 ??_set_cursor 0075   __size_of_Limpiar_pantallaLCD 001A               I2CMasterRead@ACK 0073  
       __end_of_tabla_numASCII 0603       __end_of_I2C_Master_Start 06E7                     _INTCONbits 000B  
 __end_of_Escribir_caracterLCD 070E                   _prender_ELCD 06E7             __end_of_set_cursor 0581  
                     intlevel1 0000               ___lldiv@dividend 0076                      stringcode 0603  
                   _OSCCONbits 008F                ?_tabla_numASCII 0070               ___lldiv@quotient 0039  
                     stringdir 0603                       stringtab 0603                    _SSPCON2bits 0091  
                   _SSPCONbits 0014    __end_of_Escribir_comandoLCD 05C4  
