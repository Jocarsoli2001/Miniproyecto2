

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Mar 06 21:16:54 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  008F                     	;# 
   274  0090                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  0105                     	;# 
   293  0107                     	;# 
   294  0108                     	;# 
   295  0109                     	;# 
   296  010C                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  0185                     	;# 
   302  0187                     	;# 
   303  0188                     	;# 
   304  0189                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  000E                     	;# 
   323  000F                     	;# 
   324  0010                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001D                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0086                     	;# 
   345  0087                     	;# 
   346  0088                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  008F                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  0105                     	;# 
   371  0107                     	;# 
   372  0108                     	;# 
   373  0109                     	;# 
   374  010C                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  0185                     	;# 
   380  0187                     	;# 
   381  0188                     	;# 
   382  0189                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385  0000                     	;# 
   386  0001                     	;# 
   387  0002                     	;# 
   388  0003                     	;# 
   389  0004                     	;# 
   390  0005                     	;# 
   391  0006                     	;# 
   392  0007                     	;# 
   393  0008                     	;# 
   394  0009                     	;# 
   395  000A                     	;# 
   396  000B                     	;# 
   397  000C                     	;# 
   398  000D                     	;# 
   399  000E                     	;# 
   400  000E                     	;# 
   401  000F                     	;# 
   402  0010                     	;# 
   403  0011                     	;# 
   404  0012                     	;# 
   405  0013                     	;# 
   406  0014                     	;# 
   407  0015                     	;# 
   408  0015                     	;# 
   409  0016                     	;# 
   410  0017                     	;# 
   411  0018                     	;# 
   412  0019                     	;# 
   413  001A                     	;# 
   414  001B                     	;# 
   415  001B                     	;# 
   416  001C                     	;# 
   417  001D                     	;# 
   418  001E                     	;# 
   419  001F                     	;# 
   420  0081                     	;# 
   421  0085                     	;# 
   422  0086                     	;# 
   423  0087                     	;# 
   424  0088                     	;# 
   425  0089                     	;# 
   426  008C                     	;# 
   427  008D                     	;# 
   428  008E                     	;# 
   429  008F                     	;# 
   430  0090                     	;# 
   431  0091                     	;# 
   432  0092                     	;# 
   433  0093                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0094                     	;# 
   437  0095                     	;# 
   438  0096                     	;# 
   439  0097                     	;# 
   440  0098                     	;# 
   441  0099                     	;# 
   442  009A                     	;# 
   443  009B                     	;# 
   444  009C                     	;# 
   445  009D                     	;# 
   446  009E                     	;# 
   447  009F                     	;# 
   448  0105                     	;# 
   449  0107                     	;# 
   450  0108                     	;# 
   451  0109                     	;# 
   452  010C                     	;# 
   453  010C                     	;# 
   454  010D                     	;# 
   455  010E                     	;# 
   456  010F                     	;# 
   457  0185                     	;# 
   458  0187                     	;# 
   459  0188                     	;# 
   460  0189                     	;# 
   461  018C                     	;# 
   462  018D                     	;# 
   463  0000                     	;# 
   464  0001                     	;# 
   465  0002                     	;# 
   466  0003                     	;# 
   467  0004                     	;# 
   468  0005                     	;# 
   469  0006                     	;# 
   470  0007                     	;# 
   471  0008                     	;# 
   472  0009                     	;# 
   473  000A                     	;# 
   474  000B                     	;# 
   475  000C                     	;# 
   476  000D                     	;# 
   477  000E                     	;# 
   478  000E                     	;# 
   479  000F                     	;# 
   480  0010                     	;# 
   481  0011                     	;# 
   482  0012                     	;# 
   483  0013                     	;# 
   484  0014                     	;# 
   485  0015                     	;# 
   486  0015                     	;# 
   487  0016                     	;# 
   488  0017                     	;# 
   489  0018                     	;# 
   490  0019                     	;# 
   491  001A                     	;# 
   492  001B                     	;# 
   493  001B                     	;# 
   494  001C                     	;# 
   495  001D                     	;# 
   496  001E                     	;# 
   497  001F                     	;# 
   498  0081                     	;# 
   499  0085                     	;# 
   500  0086                     	;# 
   501  0087                     	;# 
   502  0088                     	;# 
   503  0089                     	;# 
   504  008C                     	;# 
   505  008D                     	;# 
   506  008E                     	;# 
   507  008F                     	;# 
   508  0090                     	;# 
   509  0091                     	;# 
   510  0092                     	;# 
   511  0093                     	;# 
   512  0093                     	;# 
   513  0093                     	;# 
   514  0094                     	;# 
   515  0095                     	;# 
   516  0096                     	;# 
   517  0097                     	;# 
   518  0098                     	;# 
   519  0099                     	;# 
   520  009A                     	;# 
   521  009B                     	;# 
   522  009C                     	;# 
   523  009D                     	;# 
   524  009E                     	;# 
   525  009F                     	;# 
   526  0105                     	;# 
   527  0107                     	;# 
   528  0108                     	;# 
   529  0109                     	;# 
   530  010C                     	;# 
   531  010C                     	;# 
   532  010D                     	;# 
   533  010E                     	;# 
   534  010F                     	;# 
   535  0185                     	;# 
   536  0187                     	;# 
   537  0188                     	;# 
   538  0189                     	;# 
   539  018C                     	;# 
   540  018D                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000D                     	;# 
   555  000E                     	;# 
   556  000E                     	;# 
   557  000F                     	;# 
   558  0010                     	;# 
   559  0011                     	;# 
   560  0012                     	;# 
   561  0013                     	;# 
   562  0014                     	;# 
   563  0015                     	;# 
   564  0015                     	;# 
   565  0016                     	;# 
   566  0017                     	;# 
   567  0018                     	;# 
   568  0019                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001B                     	;# 
   572  001C                     	;# 
   573  001D                     	;# 
   574  001E                     	;# 
   575  001F                     	;# 
   576  0081                     	;# 
   577  0085                     	;# 
   578  0086                     	;# 
   579  0087                     	;# 
   580  0088                     	;# 
   581  0089                     	;# 
   582  008C                     	;# 
   583  008D                     	;# 
   584  008E                     	;# 
   585  008F                     	;# 
   586  0090                     	;# 
   587  0091                     	;# 
   588  0092                     	;# 
   589  0093                     	;# 
   590  0093                     	;# 
   591  0093                     	;# 
   592  0094                     	;# 
   593  0095                     	;# 
   594  0096                     	;# 
   595  0097                     	;# 
   596  0098                     	;# 
   597  0099                     	;# 
   598  009A                     	;# 
   599  009B                     	;# 
   600  009C                     	;# 
   601  009D                     	;# 
   602  009E                     	;# 
   603  009F                     	;# 
   604  0105                     	;# 
   605  0107                     	;# 
   606  0108                     	;# 
   607  0109                     	;# 
   608  010C                     	;# 
   609  010C                     	;# 
   610  010D                     	;# 
   611  010E                     	;# 
   612  010F                     	;# 
   613  0185                     	;# 
   614  0187                     	;# 
   615  0188                     	;# 
   616  0189                     	;# 
   617  018C                     	;# 
   618  018D                     	;# 
   619  0018                     _RCSTAbits	set	24
   620  0006                     _PORTBbits	set	6
   621  0008                     _PORTDbits	set	8
   622  0013                     _SSPBUF	set	19
   623  0014                     _SSPCON	set	20
   624  000B                     _INTCONbits	set	11
   625  0014                     _SSPCONbits	set	20
   626  0008                     _PORTD	set	8
   627  0006                     _PORTB	set	6
   628  0005                     _PORTA	set	5
   629  0063                     _SSPIF	set	99
   630  00A4                     _CKP	set	164
   631  009A                     _SPBRGH	set	154
   632  0099                     _SPBRG	set	153
   633  0098                     _TXSTAbits	set	152
   634  008F                     _OSCCONbits	set	143
   635  0091                     _SSPCON2bits	set	145
   636  008C                     _PIE1bits	set	140
   637  0093                     _SSPADD	set	147
   638  0094                     _SSPSTAT	set	148
   639  0091                     _SSPCON2	set	145
   640  0094                     _SSPSTATbits	set	148
   641  0085                     _TRISAbits	set	133
   642  0087                     _TRISCbits	set	135
   643  0088                     _TRISD	set	136
   644  0086                     _TRISB	set	134
   645  0085                     _TRISA	set	133
   646  04A1                     _UA	set	1185
   647  0187                     _BAUDCTLbits	set	391
   648  0189                     _ANSELH	set	393
   649  0188                     _ANSEL	set	392
   650                           
   651                           	psect	strings
   652  06CD                     __pstrings:
   653  06CD                     stringtab:
   654  06CD                     __stringtab:
   655  06CD                     stringcode:	
   656                           ;	String table - string pointers are 1 byte each
   657                           
   658  06CD                     stringdir:
   659  06CD  3006               	movlw	high stringdir
   660  06CE  008A               	movwf	10
   661  06CF  0804               	movf	4,w
   662  06D0  0A84               	incf	4,f
   663  06D1  0782               	addwf	2,f
   664  06D2                     __stringbase:
   665  06D2  3400               	retlw	0
   666  06D3                     __end_of__stringtab:
   667  06D3                     STR_1:
   668  06D3  3458               	retlw	88	;'X'
   669  06D4  343A               	retlw	58	;':'
   670  06D5  3420               	retlw	32	;' '
   671  06D6  3420               	retlw	32	;' '
   672  06D7  3420               	retlw	32	;' '
   673  06D8  3420               	retlw	32	;' '
   674  06D9  3459               	retlw	89	;'Y'
   675  06DA  343A               	retlw	58	;':'
   676  06DB  3420               	retlw	32	;' '
   677  06DC  3420               	retlw	32	;' '
   678  06DD  3420               	retlw	32	;' '
   679  06DE  3420               	retlw	32	;' '
   680  06DF  3420               	retlw	32	;' '
   681  06E0  3453               	retlw	83	;'S'
   682  06E1  343A               	retlw	58	;':'
   683  06E2  3400               	retlw	0
   684  06E3                     STR_2:
   685  06E3  344D               	retlw	77	;'M'
   686  06E4  3469               	retlw	105	;'i'
   687  06E5  346E               	retlw	110	;'n'
   688  06E6  3469               	retlw	105	;'i'
   689  06E7  3470               	retlw	112	;'p'
   690  06E8  3472               	retlw	114	;'r'
   691  06E9  346F               	retlw	111	;'o'
   692  06EA  3479               	retlw	121	;'y'
   693  06EB  3465               	retlw	101	;'e'
   694  06EC  3463               	retlw	99	;'c'
   695  06ED  3474               	retlw	116	;'t'
   696  06EE  346F               	retlw	111	;'o'
   697  06EF  3420               	retlw	32	;' '
   698  06F0  3432               	retlw	50	;'2'
   699  06F1  3400               	retlw	0
   700  06F2                     STR_3:
   701  06F2  344A               	retlw	74	;'J'
   702  06F3  346F               	retlw	111	;'o'
   703  06F4  3473               	retlw	115	;'s'
   704  06F5  3465               	retlw	101	;'e'
   705  06F6  3420               	retlw	32	;' '
   706  06F7  3453               	retlw	83	;'S'
   707  06F8  3461               	retlw	97	;'a'
   708  06F9  346E               	retlw	110	;'n'
   709  06FA  3474               	retlw	116	;'t'
   710  06FB  3469               	retlw	105	;'i'
   711  06FC  347A               	retlw	122	;'z'
   712  06FD  346F               	retlw	111	;'o'
   713  06FE  3400               	retlw	0
   714                           
   715                           	psect	cinit
   716  000F                     start_initialization:	
   717                           ; #config settings
   718                           
   719  000F                     __initialization:
   720                           
   721                           ; Clear objects allocated to COMMON
   722  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   723  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   724                           
   725                           ; Clear objects allocated to BANK0
   726  0011  1383               	bcf	3,7	;select IRP bank0
   727  0012  3020               	movlw	low __pbssBANK0
   728  0013  0084               	movwf	4
   729  0014  3039               	movlw	low (__pbssBANK0+25)
   730  0015  120A  118A  27EC  120A  118A  	fcall	clear_ram0
   731  001A                     end_of_initialization:	
   732                           ;End of C runtime variable initialization code
   733                           
   734  001A                     __end_of__initialization:
   735  001A  0183               	clrf	3
   736  001B  120A  118A  281E   	ljmp	_main	;jump to C main() function
   737                           
   738                           	psect	bssCOMMON
   739  007A                     __pbssCOMMON:
   740  007A                     _Giro_digy:
   741  007A                     	ds	1
   742  007B                     _Giro_digx:
   743  007B                     	ds	1
   744                           
   745                           	psect	bssBANK0
   746  0020                     __pbssBANK0:
   747  0020                     _Gz:
   748  0020                     	ds	2
   749  0022                     _Gy:
   750  0022                     	ds	2
   751  0024                     _Gx:
   752  0024                     	ds	2
   753  0026                     _Temp:
   754  0026                     	ds	2
   755  0028                     _Az:
   756  0028                     	ds	2
   757  002A                     _Ay:
   758  002A                     	ds	2
   759  002C                     _Ax:
   760  002C                     	ds	2
   761  002E                     _output:
   762  002E                     	ds	1
   763  002F                     _cen_z:
   764  002F                     	ds	1
   765  0030                     _dec_z:
   766  0030                     	ds	1
   767  0031                     _uni_z:
   768  0031                     	ds	1
   769  0032                     _Giro_digz:
   770  0032                     	ds	1
   771  0033                     _cen_y:
   772  0033                     	ds	1
   773  0034                     _dec_y:
   774  0034                     	ds	1
   775  0035                     _uni_y:
   776  0035                     	ds	1
   777  0036                     _cen_x:
   778  0036                     	ds	1
   779  0037                     _dec_x:
   780  0037                     	ds	1
   781  0038                     _uni_x:
   782  0038                     	ds	1
   783                           
   784                           	psect	clrtext
   785  07EC                     clear_ram0:	
   786                           ;	Called with FSR containing the base address, and
   787                           ;	W with the last address+1
   788                           
   789  07EC  0064               	clrwdt	;clear the watchdog before getting into this loop
   790  07ED                     clrloop0:
   791  07ED  0180               	clrf	0	;clear RAM location pointed to by FSR
   792  07EE  0A84               	incf	4,f	;increment pointer
   793  07EF  0604               	xorwf	4,w	;XOR with final address
   794  07F0  1903               	btfsc	3,2	;have we reached the end yet?
   795  07F1  3400               	retlw	0	;all done for this memory range, return
   796  07F2  0604               	xorwf	4,w	;XOR again to restore value
   797  07F3  2FED               	goto	clrloop0	;do the next byte
   798                           
   799                           	psect	cstackCOMMON
   800  0070                     __pcstackCOMMON:
   801  0070                     ?_setup:
   802  0070                     ?_I2C_Master_Start:	
   803                           ; 1 bytes @ 0x0
   804                           
   805  0070                     ?_I2CMasterWrite:	
   806                           ; 1 bytes @ 0x0
   807                           
   808  0070                     ?_I2CMasterRead:	
   809                           ; 1 bytes @ 0x0
   810                           
   811  0070                     ?_I2CMasterStop:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0070                     ?_tabla_numASCII:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0070                     ?_Escribir_stringLCD:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0070                     ?_Escribir_caracterLCD:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0070                     ?_initOsc:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0070                     ?_InitMPU6050:	
   827                           ; 1 bytes @ 0x0
   828                           
   829  0070                     ?_Iniciar_LCD:	
   830                           ; 1 bytes @ 0x0
   831                           
   832  0070                     ?_Limpiar_pantallaLCD:	
   833                           ; 1 bytes @ 0x0
   834                           
   835  0070                     ?_isr:	
   836                           ; 1 bytes @ 0x0
   837                           
   838  0070                     ??_isr:	
   839                           ; 1 bytes @ 0x0
   840                           
   841  0070                     ?_main:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0070                     ?_I2CMasterCheck:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0070                     ?_prender_ELCD:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0070                     ?_Escribir_comandoLCD:	
   851                           ; 1 bytes @ 0x0
   852                           
   853                           
   854                           ; 1 bytes @ 0x0
   855  0070                     	ds	2
   856  0072                     ??_I2C_Master_Start:
   857  0072                     ??_I2CMasterWrite:	
   858                           ; 1 bytes @ 0x2
   859                           
   860  0072                     ??_I2CMasterRead:	
   861                           ; 1 bytes @ 0x2
   862                           
   863  0072                     ??_I2CMasterStop:	
   864                           ; 1 bytes @ 0x2
   865                           
   866  0072                     ??_tabla_numASCII:	
   867                           ; 1 bytes @ 0x2
   868                           
   869  0072                     ??_initOsc:	
   870                           ; 1 bytes @ 0x2
   871                           
   872  0072                     ?_Config_USART:	
   873                           ; 1 bytes @ 0x2
   874                           
   875  0072                     ??_I2CMasterCheck:	
   876                           ; 1 bytes @ 0x2
   877                           
   878  0072                     ??_prender_ELCD:	
   879                           ; 1 bytes @ 0x2
   880                           
   881  0072                     ?___awdiv:	
   882                           ; 1 bytes @ 0x2
   883                           
   884  0072                     ?___awmod:	
   885                           ; 2 bytes @ 0x2
   886                           
   887  0072                     ?___lldiv:	
   888                           ; 2 bytes @ 0x2
   889                           
   890  0072                     I2C_Master_Start@Modo_Inicio:	
   891                           ; 4 bytes @ 0x2
   892                           
   893  0072                     I2CMasterWrite@Datos:	
   894                           ; 1 bytes @ 0x2
   895                           
   896  0072                     initOsc@Valor:	
   897                           ; 1 bytes @ 0x2
   898                           
   899  0072                     Config_USART@baud_rate:	
   900                           ; 1 bytes @ 0x2
   901                           
   902  0072                     ___awdiv@divisor:	
   903                           ; 2 bytes @ 0x2
   904                           
   905  0072                     ___awmod@divisor:	
   906                           ; 2 bytes @ 0x2
   907                           
   908  0072                     ___lldiv@divisor:	
   909                           ; 2 bytes @ 0x2
   910                           
   911                           
   912                           ; 4 bytes @ 0x2
   913  0072                     	ds	1
   914  0073                     ??_InitMPU6050:
   915  0073                     ??_Escribir_comandoLCD:	
   916                           ; 1 bytes @ 0x3
   917                           
   918  0073                     I2CMasterRead@ACK:	
   919                           ; 1 bytes @ 0x3
   920                           
   921  0073                     Escribir_comandoLCD@Comando:	
   922                           ; 1 bytes @ 0x3
   923                           
   924                           
   925                           ; 1 bytes @ 0x3
   926  0073                     	ds	1
   927  0074                     ?_set_cursor:
   928  0074                     ??_Escribir_stringLCD:	
   929                           ; 1 bytes @ 0x4
   930                           
   931  0074                     ??_Escribir_caracterLCD:	
   932                           ; 1 bytes @ 0x4
   933                           
   934  0074                     ??_Iniciar_LCD:	
   935                           ; 1 bytes @ 0x4
   936                           
   937  0074                     ??_Limpiar_pantallaLCD:	
   938                           ; 1 bytes @ 0x4
   939                           
   940  0074                     tabla_numASCII@a:	
   941                           ; 1 bytes @ 0x4
   942                           
   943  0074                     I2CMasterRead@Datos:	
   944                           ; 1 bytes @ 0x4
   945                           
   946  0074                     Escribir_caracterLCD@a:	
   947                           ; 1 bytes @ 0x4
   948                           
   949  0074                     set_cursor@posicion:	
   950                           ; 1 bytes @ 0x4
   951                           
   952  0074                     Config_USART@Freq:	
   953                           ; 1 bytes @ 0x4
   954                           
   955  0074                     ___awdiv@dividend:	
   956                           ; 2 bytes @ 0x4
   957                           
   958  0074                     ___awmod@dividend:	
   959                           ; 2 bytes @ 0x4
   960                           
   961                           
   962                           ; 2 bytes @ 0x4
   963  0074                     	ds	1
   964  0075                     ??_set_cursor:
   965  0075                     Escribir_stringLCD@i:	
   966                           ; 1 bytes @ 0x5
   967                           
   968                           
   969                           ; 1 bytes @ 0x5
   970  0075                     	ds	1
   971  0076                     ??_Config_USART:
   972  0076                     ??___awdiv:	
   973                           ; 1 bytes @ 0x6
   974                           
   975  0076                     ??___awmod:	
   976                           ; 1 bytes @ 0x6
   977                           
   978  0076                     Escribir_stringLCD@d:	
   979                           ; 1 bytes @ 0x6
   980                           
   981  0076                     ___lldiv@dividend:	
   982                           ; 1 bytes @ 0x6
   983                           
   984                           
   985                           ; 4 bytes @ 0x6
   986  0076                     	ds	1
   987  0077                     set_cursor@linea:
   988  0077                     ___awmod@counter:	
   989                           ; 1 bytes @ 0x7
   990                           
   991                           
   992                           ; 1 bytes @ 0x7
   993  0077                     	ds	1
   994  0078                     ___awmod@sign:
   995                           
   996                           ; 1 bytes @ 0x8
   997  0078                     	ds	2
   998                           
   999                           	psect	cstackBANK0
  1000  0039                     __pcstackBANK0:
  1001  0039                     ??___lldiv:
  1002  0039                     ___awdiv@counter:	
  1003                           ; 1 bytes @ 0x0
  1004                           
  1005                           
  1006                           ; 1 bytes @ 0x0
  1007  0039                     	ds	1
  1008  003A                     ___awdiv@sign:
  1009  003A                     ___lldiv@quotient:	
  1010                           ; 1 bytes @ 0x1
  1011                           
  1012                           
  1013                           ; 4 bytes @ 0x1
  1014  003A                     	ds	1
  1015  003B                     ___awdiv@quotient:
  1016                           
  1017                           ; 2 bytes @ 0x2
  1018  003B                     	ds	2
  1019  003D                     ?_divisor_dec:
  1020  003D                     divisor_dec@b:	
  1021                           ; 1 bytes @ 0x4
  1022                           
  1023                           
  1024                           ; 2 bytes @ 0x4
  1025  003D                     	ds	1
  1026  003E                     ___lldiv@counter:
  1027                           
  1028                           ; 1 bytes @ 0x5
  1029  003E                     	ds	1
  1030  003F                     ?_InitMSSP:
  1031  003F                     divisor_dec@dig1:	
  1032                           ; 1 bytes @ 0x6
  1033                           
  1034  003F                     InitMSSP@Dato:	
  1035                           ; 1 bytes @ 0x6
  1036                           
  1037                           
  1038                           ; 4 bytes @ 0x6
  1039  003F                     	ds	1
  1040  0040                     ??_divisor_dec:
  1041                           
  1042                           ; 1 bytes @ 0x7
  1043  0040                     	ds	2
  1044  0042                     divisor_dec@n:
  1045                           
  1046                           ; 2 bytes @ 0x9
  1047  0042                     	ds	1
  1048  0043                     ??_InitMSSP:
  1049                           
  1050                           ; 1 bytes @ 0xA
  1051  0043                     	ds	4
  1052  0047                     InitMSSP@Modo:
  1053                           
  1054                           ; 1 bytes @ 0xE
  1055  0047                     	ds	1
  1056  0048                     ??_setup:
  1057                           
  1058                           ; 1 bytes @ 0xF
  1059  0048                     	ds	3
  1060  004B                     ??_main:
  1061                           
  1062                           ; 1 bytes @ 0x12
  1063  004B                     	ds	4
  1064                           
  1065                           	psect	maintext
  1066  001E                     __pmaintext:	
  1067 ;;
  1068 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1069 ;;
  1070 ;; *************** function _main *****************
  1071 ;; Defined at:
  1072 ;;		line 93 in file "Maestro I2C.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;		None
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : B00/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1086 ;;      Params:         0       0       0       0       0
  1087 ;;      Locals:         0       0       0       0       0
  1088 ;;      Temps:          0       4       0       0       0
  1089 ;;      Totals:         0       4       0       0       0
  1090 ;;Total ram usage:        4 bytes
  1091 ;; Hardware stack levels required when called: 5
  1092 ;; This function calls:
  1093 ;;		_Escribir_caracterLCD
  1094 ;;		_Escribir_stringLCD
  1095 ;;		_I2CMasterRead
  1096 ;;		_I2CMasterStop
  1097 ;;		_I2CMasterWrite
  1098 ;;		_I2C_Master_Start
  1099 ;;		_divisor_dec
  1100 ;;		_set_cursor
  1101 ;;		_setup
  1102 ;;		_tabla_numASCII
  1103 ;; This function is called by:
  1104 ;;		Startup code after reset
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           
  1109                           ;psect for function _main
  1110  001E                     _main:
  1111  001E                     l2263:	
  1112                           ;incstack = 0
  1113                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1114                           
  1115                           
  1116                           ;Maestro I2C.c: 94:     setup();
  1117  001E  120A  118A  23B9  120A  118A  	fcall	_setup
  1118  0023                     l2265:
  1119                           
  1120                           ;Maestro I2C.c: 99:         I2C_Master_Start(Standard);
  1121  0023  3001               	movlw	1
  1122  0024  120A  118A  2797  120A  118A  	fcall	_I2C_Master_Start
  1123  0029                     l2267:
  1124                           
  1125                           ;Maestro I2C.c: 100:         I2CMasterWrite(0b11010010 +0);
  1126  0029  30D2               	movlw	210
  1127  002A  120A  118A  27D8  120A  118A  	fcall	_I2CMasterWrite
  1128  002F                     l2269:
  1129                           
  1130                           ;Maestro I2C.c: 101:         I2CMasterWrite(0x3B);
  1131  002F  303B               	movlw	59
  1132  0030  120A  118A  27D8  120A  118A  	fcall	_I2CMasterWrite
  1133  0035                     l2271:
  1134                           
  1135                           ;Maestro I2C.c: 103:         I2C_Master_Start(Standard);
  1136  0035  3001               	movlw	1
  1137  0036  120A  118A  2797  120A  118A  	fcall	_I2C_Master_Start
  1138  003B                     l2273:
  1139                           
  1140                           ;Maestro I2C.c: 104:         I2CMasterWrite(0b11010010 +1);
  1141  003B  30D3               	movlw	211
  1142  003C  120A  118A  27D8  120A  118A  	fcall	_I2CMasterWrite
  1143  0041                     l2275:
  1144                           
  1145                           ;Maestro I2C.c: 121:         Ax = ((int)I2CMasterRead(ACK)<<8) | (int)I2CMasterRead(ACK)
      +                          ;
  1146  0041  3000               	movlw	0
  1147  0042  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1148  0047  1283               	bcf	3,5	;RP0=0, select bank0
  1149  0048  1303               	bcf	3,6	;RP1=0, select bank0
  1150  0049  00CB               	movwf	??_main
  1151  004A  01CC               	clrf	??_main+1
  1152  004B  3000               	movlw	0
  1153  004C  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1154  0051  1283               	bcf	3,5	;RP0=0, select bank0
  1155  0052  1303               	bcf	3,6	;RP1=0, select bank0
  1156  0053  00CD               	movwf	??_main+2
  1157  0054  01CE               	clrf	??_main+3
  1158  0055  084D               	movf	??_main+2,w
  1159  0056  00CE               	movwf	??_main+3
  1160  0057  01CD               	clrf	??_main+2
  1161  0058  084B               	movf	??_main,w
  1162  0059  044D               	iorwf	??_main+2,w
  1163  005A  00AC               	movwf	_Ax
  1164  005B  084C               	movf	??_main+1,w
  1165  005C  044E               	iorwf	??_main+3,w
  1166  005D  00AD               	movwf	_Ax+1
  1167  005E                     l2277:
  1168                           
  1169                           ;Maestro I2C.c: 122:         Ay = ((int)I2CMasterRead(ACK)<<8) | (int)I2CMasterRead(ACK)
      +                          ;
  1170  005E  3000               	movlw	0
  1171  005F  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1172  0064  1283               	bcf	3,5	;RP0=0, select bank0
  1173  0065  1303               	bcf	3,6	;RP1=0, select bank0
  1174  0066  00CB               	movwf	??_main
  1175  0067  01CC               	clrf	??_main+1
  1176  0068  3000               	movlw	0
  1177  0069  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1178  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1179  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1180  0070  00CD               	movwf	??_main+2
  1181  0071  01CE               	clrf	??_main+3
  1182  0072  084D               	movf	??_main+2,w
  1183  0073  00CE               	movwf	??_main+3
  1184  0074  01CD               	clrf	??_main+2
  1185  0075  084B               	movf	??_main,w
  1186  0076  044D               	iorwf	??_main+2,w
  1187  0077  00AA               	movwf	_Ay
  1188  0078  084C               	movf	??_main+1,w
  1189  0079  044E               	iorwf	??_main+3,w
  1190  007A  00AB               	movwf	_Ay+1
  1191  007B                     l2279:
  1192                           
  1193                           ;Maestro I2C.c: 123:         Az = ((int)I2CMasterRead(ACK)<<8) | (int)I2CMasterRead(ACK)
      +                          ;
  1194  007B  3000               	movlw	0
  1195  007C  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1196  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1197  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1198  0083  00CB               	movwf	??_main
  1199  0084  01CC               	clrf	??_main+1
  1200  0085  3000               	movlw	0
  1201  0086  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1202  008B  1283               	bcf	3,5	;RP0=0, select bank0
  1203  008C  1303               	bcf	3,6	;RP1=0, select bank0
  1204  008D  00CD               	movwf	??_main+2
  1205  008E  01CE               	clrf	??_main+3
  1206  008F  084D               	movf	??_main+2,w
  1207  0090  00CE               	movwf	??_main+3
  1208  0091  01CD               	clrf	??_main+2
  1209  0092  084B               	movf	??_main,w
  1210  0093  044D               	iorwf	??_main+2,w
  1211  0094  00A8               	movwf	_Az
  1212  0095  084C               	movf	??_main+1,w
  1213  0096  044E               	iorwf	??_main+3,w
  1214  0097  00A9               	movwf	_Az+1
  1215  0098                     l2281:
  1216                           
  1217                           ;Maestro I2C.c: 124:         Temp = ((int)I2CMasterRead(ACK)<<8) | (int)I2CMasterRead(AC
      +                          K);
  1218  0098  3000               	movlw	0
  1219  0099  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1220  009E  1283               	bcf	3,5	;RP0=0, select bank0
  1221  009F  1303               	bcf	3,6	;RP1=0, select bank0
  1222  00A0  00CB               	movwf	??_main
  1223  00A1  01CC               	clrf	??_main+1
  1224  00A2  3000               	movlw	0
  1225  00A3  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1226  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1227  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1228  00AA  00CD               	movwf	??_main+2
  1229  00AB  01CE               	clrf	??_main+3
  1230  00AC  084D               	movf	??_main+2,w
  1231  00AD  00CE               	movwf	??_main+3
  1232  00AE  01CD               	clrf	??_main+2
  1233  00AF  084B               	movf	??_main,w
  1234  00B0  044D               	iorwf	??_main+2,w
  1235  00B1  00A6               	movwf	_Temp
  1236  00B2  084C               	movf	??_main+1,w
  1237  00B3  044E               	iorwf	??_main+3,w
  1238  00B4  00A7               	movwf	_Temp+1
  1239  00B5                     l2283:
  1240                           
  1241                           ;Maestro I2C.c: 125:         Gx = ((int)I2CMasterRead(ACK)<<8) | (int)I2CMasterRead(ACK)
      +                          ;
  1242  00B5  3000               	movlw	0
  1243  00B6  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1244  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1245  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1246  00BD  00CB               	movwf	??_main
  1247  00BE  01CC               	clrf	??_main+1
  1248  00BF  3000               	movlw	0
  1249  00C0  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1250  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1251  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1252  00C7  00CD               	movwf	??_main+2
  1253  00C8  01CE               	clrf	??_main+3
  1254  00C9  084D               	movf	??_main+2,w
  1255  00CA  00CE               	movwf	??_main+3
  1256  00CB  01CD               	clrf	??_main+2
  1257  00CC  084B               	movf	??_main,w
  1258  00CD  044D               	iorwf	??_main+2,w
  1259  00CE  00A4               	movwf	_Gx
  1260  00CF  084C               	movf	??_main+1,w
  1261  00D0  044E               	iorwf	??_main+3,w
  1262  00D1  00A5               	movwf	_Gx+1
  1263  00D2                     l2285:
  1264                           
  1265                           ;Maestro I2C.c: 126:         Gy = ((int)I2CMasterRead(ACK)<<8) | (int)I2CMasterRead(ACK)
      +                          ;
  1266  00D2  3000               	movlw	0
  1267  00D3  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1268  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1269  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1270  00DA  00CB               	movwf	??_main
  1271  00DB  01CC               	clrf	??_main+1
  1272  00DC  3000               	movlw	0
  1273  00DD  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1274  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1275  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1276  00E4  00CD               	movwf	??_main+2
  1277  00E5  01CE               	clrf	??_main+3
  1278  00E6  084D               	movf	??_main+2,w
  1279  00E7  00CE               	movwf	??_main+3
  1280  00E8  01CD               	clrf	??_main+2
  1281  00E9  084B               	movf	??_main,w
  1282  00EA  044D               	iorwf	??_main+2,w
  1283  00EB  00A2               	movwf	_Gy
  1284  00EC  084C               	movf	??_main+1,w
  1285  00ED  044E               	iorwf	??_main+3,w
  1286  00EE  00A3               	movwf	_Gy+1
  1287  00EF                     l2287:
  1288                           
  1289                           ;Maestro I2C.c: 127:         Gz = ((int)I2CMasterRead(ACK)<<8) | (int)I2CMasterRead(NACK
      +                          );
  1290  00EF  3001               	movlw	1
  1291  00F0  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1292  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1293  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1294  00F7  00CB               	movwf	??_main
  1295  00F8  01CC               	clrf	??_main+1
  1296  00F9  3000               	movlw	0
  1297  00FA  120A  118A  272F  120A  118A  	fcall	_I2CMasterRead
  1298  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1299  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1300  0101  00CD               	movwf	??_main+2
  1301  0102  01CE               	clrf	??_main+3
  1302  0103  084D               	movf	??_main+2,w
  1303  0104  00CE               	movwf	??_main+3
  1304  0105  01CD               	clrf	??_main+2
  1305  0106  084B               	movf	??_main,w
  1306  0107  044D               	iorwf	??_main+2,w
  1307  0108  00A0               	movwf	_Gz
  1308  0109  084C               	movf	??_main+1,w
  1309  010A  044E               	iorwf	??_main+3,w
  1310  010B  00A1               	movwf	_Gz+1
  1311  010C                     l2289:
  1312                           
  1313                           ;Maestro I2C.c: 129:         I2CMasterStop();
  1314  010C  120A  118A  27E3  120A  118A  	fcall	_I2CMasterStop
  1315  0111                     l2291:
  1316                           
  1317                           ;Maestro I2C.c: 130:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1318  0111  301A               	movlw	26
  1319  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1320  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1321  0114  00CC               	movwf	??_main+1
  1322  0115  30F7               	movlw	247
  1323  0116  00CB               	movwf	??_main
  1324  0117                     u1657:
  1325  0117  0BCB               	decfsz	??_main,f
  1326  0118  2917               	goto	u1657
  1327  0119  0BCC               	decfsz	??_main+1,f
  1328  011A  2917               	goto	u1657
  1329  011B  291C               	nop2
  1330  011C                     l2293:
  1331                           
  1332                           ;Maestro I2C.c: 137:         divisor_dec(Gx,Giro_digx);
  1333  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1334  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1335  011E  0825               	movf	_Gx+1,w
  1336  011F  00BE               	movwf	divisor_dec@b+1
  1337  0120  0824               	movf	_Gx,w
  1338  0121  00BD               	movwf	divisor_dec@b
  1339  0122  307B               	movlw	(low (_Giro_digx| 0))& (0+255)
  1340  0123  00CB               	movwf	??_main
  1341  0124  084B               	movf	??_main,w
  1342  0125  00BF               	movwf	divisor_dec@dig1
  1343  0126  120A  118A  25BB  120A  118A  	fcall	_divisor_dec
  1344  012B                     l2295:
  1345                           
  1346                           ;Maestro I2C.c: 140:         uni_x = tabla_numASCII(Giro_digx[0]);
  1347  012B  087B               	movf	_Giro_digx,w
  1348  012C  120A  118A  268E  120A  118A  	fcall	_tabla_numASCII
  1349  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1350  0132  1303               	bcf	3,6	;RP1=0, select bank0
  1351  0133  00CB               	movwf	??_main
  1352  0134  084B               	movf	??_main,w
  1353  0135  00B8               	movwf	_uni_x
  1354  0136                     l2297:
  1355                           
  1356                           ;Maestro I2C.c: 141:         dec_x = tabla_numASCII(Giro_digx[1]);
  1357  0136  087C               	movf	_Giro_digx+1,w
  1358  0137  120A  118A  268E  120A  118A  	fcall	_tabla_numASCII
  1359  013C  1283               	bcf	3,5	;RP0=0, select bank0
  1360  013D  1303               	bcf	3,6	;RP1=0, select bank0
  1361  013E  00CB               	movwf	??_main
  1362  013F  084B               	movf	??_main,w
  1363  0140  00B7               	movwf	_dec_x
  1364  0141                     l2299:
  1365                           
  1366                           ;Maestro I2C.c: 142:         cen_x = tabla_numASCII(Giro_digx[2]);
  1367  0141  087D               	movf	_Giro_digx+2,w
  1368  0142  120A  118A  268E  120A  118A  	fcall	_tabla_numASCII
  1369  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1370  0148  1303               	bcf	3,6	;RP1=0, select bank0
  1371  0149  00CB               	movwf	??_main
  1372  014A  084B               	movf	??_main,w
  1373  014B  00B6               	movwf	_cen_x
  1374  014C                     l2301:
  1375                           
  1376                           ;Maestro I2C.c: 145:         set_cursor(1,0);
  1377  014C  01F4               	clrf	set_cursor@posicion
  1378  014D  3001               	movlw	1
  1379  014E  120A  118A  2608  120A  118A  	fcall	_set_cursor
  1380  0153                     l2303:
  1381                           
  1382                           ;Maestro I2C.c: 146:         Escribir_stringLCD("X:    Y:     S:");
  1383  0153  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1384  0154  120A  118A  2757  120A  118A  	fcall	_Escribir_stringLCD
  1385  0159                     l2305:
  1386                           
  1387                           ;Maestro I2C.c: 148:         set_cursor(2,0);
  1388  0159  01F4               	clrf	set_cursor@posicion
  1389  015A  3002               	movlw	2
  1390  015B  120A  118A  2608  120A  118A  	fcall	_set_cursor
  1391  0160                     l2307:
  1392                           
  1393                           ;Maestro I2C.c: 149:         Escribir_caracterLCD(cen_x);
  1394  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1395  0161  1303               	bcf	3,6	;RP1=0, select bank0
  1396  0162  0836               	movf	_cen_x,w
  1397  0163  120A  118A  27CC  120A  118A  	fcall	_Escribir_caracterLCD
  1398  0168                     l2309:
  1399                           
  1400                           ;Maestro I2C.c: 150:         Escribir_caracterLCD(dec_x);
  1401  0168  1283               	bcf	3,5	;RP0=0, select bank0
  1402  0169  1303               	bcf	3,6	;RP1=0, select bank0
  1403  016A  0837               	movf	_dec_x,w
  1404  016B  120A  118A  27CC  120A  118A  	fcall	_Escribir_caracterLCD
  1405  0170                     l2311:
  1406                           
  1407                           ;Maestro I2C.c: 151:         Escribir_caracterLCD(uni_x);
  1408  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1409  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1410  0172  0838               	movf	_uni_x,w
  1411  0173  120A  118A  27CC  120A  118A  	fcall	_Escribir_caracterLCD
  1412  0178                     l2313:
  1413                           
  1414                           ;Maestro I2C.c: 154:         divisor_dec(Gy,Giro_digy);
  1415  0178  1283               	bcf	3,5	;RP0=0, select bank0
  1416  0179  1303               	bcf	3,6	;RP1=0, select bank0
  1417  017A  0823               	movf	_Gy+1,w
  1418  017B  00BE               	movwf	divisor_dec@b+1
  1419  017C  0822               	movf	_Gy,w
  1420  017D  00BD               	movwf	divisor_dec@b
  1421  017E  307A               	movlw	(low (_Giro_digy| 0))& (0+255)
  1422  017F  00CB               	movwf	??_main
  1423  0180  084B               	movf	??_main,w
  1424  0181  00BF               	movwf	divisor_dec@dig1
  1425  0182  120A  118A  25BB  120A  118A  	fcall	_divisor_dec
  1426  0187                     l2315:
  1427                           
  1428                           ;Maestro I2C.c: 157:         uni_y = tabla_numASCII(Giro_digy[0]);
  1429  0187  087A               	movf	_Giro_digy,w
  1430  0188  120A  118A  268E  120A  118A  	fcall	_tabla_numASCII
  1431  018D  1283               	bcf	3,5	;RP0=0, select bank0
  1432  018E  1303               	bcf	3,6	;RP1=0, select bank0
  1433  018F  00CB               	movwf	??_main
  1434  0190  084B               	movf	??_main,w
  1435  0191  00B5               	movwf	_uni_y
  1436  0192                     l2317:
  1437                           
  1438                           ;Maestro I2C.c: 158:         dec_y = tabla_numASCII(Giro_digy[1]);
  1439  0192  087B               	movf	_Giro_digy+1,w
  1440  0193  120A  118A  268E  120A  118A  	fcall	_tabla_numASCII
  1441  0198  1283               	bcf	3,5	;RP0=0, select bank0
  1442  0199  1303               	bcf	3,6	;RP1=0, select bank0
  1443  019A  00CB               	movwf	??_main
  1444  019B  084B               	movf	??_main,w
  1445  019C  00B4               	movwf	_dec_y
  1446  019D                     l2319:
  1447                           
  1448                           ;Maestro I2C.c: 159:         cen_y = tabla_numASCII(Giro_digy[2]);
  1449  019D  087C               	movf	_Giro_digy+2,w
  1450  019E  120A  118A  268E  120A  118A  	fcall	_tabla_numASCII
  1451  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1452  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1453  01A5  00CB               	movwf	??_main
  1454  01A6  084B               	movf	??_main,w
  1455  01A7  00B3               	movwf	_cen_y
  1456  01A8                     l2321:
  1457                           
  1458                           ;Maestro I2C.c: 161:         set_cursor(2,6);
  1459  01A8  3006               	movlw	6
  1460  01A9  00CB               	movwf	??_main
  1461  01AA  084B               	movf	??_main,w
  1462  01AB  00F4               	movwf	set_cursor@posicion
  1463  01AC  3002               	movlw	2
  1464  01AD  120A  118A  2608  120A  118A  	fcall	_set_cursor
  1465  01B2                     l2323:
  1466                           
  1467                           ;Maestro I2C.c: 162:         Escribir_caracterLCD(cen_y);
  1468  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1469  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1470  01B4  0833               	movf	_cen_y,w
  1471  01B5  120A  118A  27CC  120A  118A  	fcall	_Escribir_caracterLCD
  1472  01BA                     l2325:
  1473                           
  1474                           ;Maestro I2C.c: 163:         Escribir_caracterLCD(dec_y);
  1475  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1476  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1477  01BC  0834               	movf	_dec_y,w
  1478  01BD  120A  118A  27CC  120A  118A  	fcall	_Escribir_caracterLCD
  1479  01C2                     l2327:
  1480                           
  1481                           ;Maestro I2C.c: 164:         Escribir_caracterLCD(uni_y);
  1482  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  1483  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  1484  01C4  0835               	movf	_uni_y,w
  1485  01C5  120A  118A  27CC  120A  118A  	fcall	_Escribir_caracterLCD
  1486  01CA  2823               	goto	l2265
  1487  01CB  120A  118A  280C   	ljmp	start
  1488  01CE                     __end_of_main:
  1489                           
  1490                           	psect	text1
  1491  068E                     __ptext1:	
  1492 ;; *************** function _tabla_numASCII *****************
  1493 ;; Defined at:
  1494 ;;		line 216 in file "Maestro I2C.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  a               1    wreg     unsigned char 
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;  a               1    4[COMMON] unsigned char 
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      unsigned char 
  1501 ;; Registers used:
  1502 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1508 ;;      Params:         0       0       0       0       0
  1509 ;;      Locals:         1       0       0       0       0
  1510 ;;      Temps:          2       0       0       0       0
  1511 ;;      Totals:         3       0       0       0       0
  1512 ;;Total ram usage:        3 bytes
  1513 ;; Hardware stack levels used: 1
  1514 ;; Hardware stack levels required when called: 1
  1515 ;; This function calls:
  1516 ;;		Nothing
  1517 ;; This function is called by:
  1518 ;;		_main
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           
  1523                           ;psect for function _tabla_numASCII
  1524  068E                     _tabla_numASCII:
  1525                           
  1526                           ;incstack = 0
  1527                           ; Regs used in _tabla_numASCII: [wreg-fsr0h+status,2+status,0]
  1528                           ;tabla_numASCII@a stored from wreg
  1529  068E  00F4               	movwf	tabla_numASCII@a
  1530  068F                     l1949:
  1531                           
  1532                           ;Maestro I2C.c: 217:     switch(a){
  1533  068F  2EA4               	goto	l2013
  1534  0690                     l1951:
  1535                           
  1536                           ;Maestro I2C.c: 219:             return 48;
  1537  0690  3030               	movlw	48
  1538  0691  2ECC               	goto	l116
  1539  0692                     l1957:
  1540                           
  1541                           ;Maestro I2C.c: 222:             return 49;
  1542  0692  3031               	movlw	49
  1543  0693  2ECC               	goto	l116
  1544  0694                     l1963:
  1545                           
  1546                           ;Maestro I2C.c: 225:             return 50;
  1547  0694  3032               	movlw	50
  1548  0695  2ECC               	goto	l116
  1549  0696                     l1969:
  1550                           
  1551                           ;Maestro I2C.c: 228:             return 51;
  1552  0696  3033               	movlw	51
  1553  0697  2ECC               	goto	l116
  1554  0698                     l1975:
  1555                           
  1556                           ;Maestro I2C.c: 231:             return 52;
  1557  0698  3034               	movlw	52
  1558  0699  2ECC               	goto	l116
  1559  069A                     l1981:
  1560                           
  1561                           ;Maestro I2C.c: 234:             return 53;
  1562  069A  3035               	movlw	53
  1563  069B  2ECC               	goto	l116
  1564  069C                     l1987:
  1565                           
  1566                           ;Maestro I2C.c: 237:             return 54;
  1567  069C  3036               	movlw	54
  1568  069D  2ECC               	goto	l116
  1569  069E                     l1993:
  1570                           
  1571                           ;Maestro I2C.c: 240:             return 55;
  1572  069E  3037               	movlw	55
  1573  069F  2ECC               	goto	l116
  1574  06A0                     l1999:
  1575                           
  1576                           ;Maestro I2C.c: 243:             return 56;
  1577  06A0  3038               	movlw	56
  1578  06A1  2ECC               	goto	l116
  1579  06A2                     l2005:
  1580                           
  1581                           ;Maestro I2C.c: 246:             return 57;
  1582  06A2  3039               	movlw	57
  1583  06A3  2ECC               	goto	l116
  1584  06A4                     l2013:
  1585  06A4  0874               	movf	tabla_numASCII@a,w
  1586  06A5  00F2               	movwf	??_tabla_numASCII
  1587  06A6  01F3               	clrf	??_tabla_numASCII+1
  1588                           
  1589                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1590                           ; Switch size 1, requested type "simple"
  1591                           ; Number of cases is 1, Range of values is 0 to 0
  1592                           ; switch strategies available:
  1593                           ; Name         Instructions Cycles
  1594                           ; simple_byte            4     3 (average)
  1595                           ; direct_byte           11     8 (fixed)
  1596                           ; jumptable            260     6 (fixed)
  1597                           ;	Chosen strategy is simple_byte
  1598  06A7  0873               	movf	??_tabla_numASCII+1,w
  1599  06A8  3A00               	xorlw	0	; case 0
  1600  06A9  1903               	skipnz
  1601  06AA  2EAC               	goto	l2349
  1602  06AB  2ECC               	goto	l116
  1603  06AC                     l2349:
  1604                           
  1605                           ; Switch size 1, requested type "simple"
  1606                           ; Number of cases is 10, Range of values is 0 to 9
  1607                           ; switch strategies available:
  1608                           ; Name         Instructions Cycles
  1609                           ; simple_byte           31    16 (average)
  1610                           ; direct_byte           38     8 (fixed)
  1611                           ; jumptable            260     6 (fixed)
  1612                           ;	Chosen strategy is simple_byte
  1613  06AC  0872               	movf	??_tabla_numASCII,w
  1614  06AD  3A00               	xorlw	0	; case 0
  1615  06AE  1903               	skipnz
  1616  06AF  2E90               	goto	l1951
  1617  06B0  3A01               	xorlw	1	; case 1
  1618  06B1  1903               	skipnz
  1619  06B2  2E92               	goto	l1957
  1620  06B3  3A03               	xorlw	3	; case 2
  1621  06B4  1903               	skipnz
  1622  06B5  2E94               	goto	l1963
  1623  06B6  3A01               	xorlw	1	; case 3
  1624  06B7  1903               	skipnz
  1625  06B8  2E96               	goto	l1969
  1626  06B9  3A07               	xorlw	7	; case 4
  1627  06BA  1903               	skipnz
  1628  06BB  2E98               	goto	l1975
  1629  06BC  3A01               	xorlw	1	; case 5
  1630  06BD  1903               	skipnz
  1631  06BE  2E9A               	goto	l1981
  1632  06BF  3A03               	xorlw	3	; case 6
  1633  06C0  1903               	skipnz
  1634  06C1  2E9C               	goto	l1987
  1635  06C2  3A01               	xorlw	1	; case 7
  1636  06C3  1903               	skipnz
  1637  06C4  2E9E               	goto	l1993
  1638  06C5  3A0F               	xorlw	15	; case 8
  1639  06C6  1903               	skipnz
  1640  06C7  2EA0               	goto	l1999
  1641  06C8  3A01               	xorlw	1	; case 9
  1642  06C9  1903               	skipnz
  1643  06CA  2EA2               	goto	l2005
  1644  06CB  2ECC               	goto	l116
  1645  06CC                     l116:
  1646  06CC  0008               	return
  1647  06CD                     __end_of_tabla_numASCII:
  1648                           
  1649                           	psect	text2
  1650  03B9                     __ptext2:	
  1651 ;; *************** function _setup *****************
  1652 ;; Defined at:
  1653 ;;		line 170 in file "Maestro I2C.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;		None
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;		None
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  1    wreg      void 
  1660 ;; Registers used:
  1661 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1667 ;;      Params:         0       0       0       0       0
  1668 ;;      Locals:         0       0       0       0       0
  1669 ;;      Temps:          0       3       0       0       0
  1670 ;;      Totals:         0       3       0       0       0
  1671 ;;Total ram usage:        3 bytes
  1672 ;; Hardware stack levels used: 1
  1673 ;; Hardware stack levels required when called: 4
  1674 ;; This function calls:
  1675 ;;		_Config_USART
  1676 ;;		_Escribir_stringLCD
  1677 ;;		_Iniciar_LCD
  1678 ;;		_InitMPU6050
  1679 ;;		_InitMSSP
  1680 ;;		_Limpiar_pantallaLCD
  1681 ;;		_initOsc
  1682 ;;		_set_cursor
  1683 ;; This function is called by:
  1684 ;;		_main
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           
  1689                           ;psect for function _setup
  1690  03B9                     _setup:
  1691  03B9                     l2225:	
  1692                           ;incstack = 0
  1693                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1694                           
  1695                           
  1696                           ;Maestro I2C.c: 173:     ANSEL = 0;
  1697  03B9  1683               	bsf	3,5	;RP0=1, select bank3
  1698  03BA  1703               	bsf	3,6	;RP1=1, select bank3
  1699  03BB  0188               	clrf	8	;volatile
  1700                           
  1701                           ;Maestro I2C.c: 174:     ANSELH = 0;
  1702  03BC  0189               	clrf	9	;volatile
  1703                           
  1704                           ;Maestro I2C.c: 176:     TRISA = 0;
  1705  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  1706  03BE  1303               	bcf	3,6	;RP1=0, select bank1
  1707  03BF  0185               	clrf	5	;volatile
  1708                           
  1709                           ;Maestro I2C.c: 177:     TRISB = 0;
  1710  03C0  0186               	clrf	6	;volatile
  1711                           
  1712                           ;Maestro I2C.c: 178:     TRISD = 0;
  1713  03C1  0188               	clrf	8	;volatile
  1714                           
  1715                           ;Maestro I2C.c: 180:     PORTA = 0;
  1716  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  1717  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  1718  03C4  0185               	clrf	5	;volatile
  1719                           
  1720                           ;Maestro I2C.c: 181:     PORTB = 0;
  1721  03C5  0186               	clrf	6	;volatile
  1722                           
  1723                           ;Maestro I2C.c: 182:     PORTD = 0;
  1724  03C6  0188               	clrf	8	;volatile
  1725  03C7                     l2227:
  1726                           
  1727                           ;Maestro I2C.c: 185:     initOsc(4);
  1728  03C7  3004               	movlw	4
  1729  03C8  120A  118A  26FF  120A  118A  	fcall	_initOsc
  1730  03CD                     l2229:
  1731                           
  1732                           ;Maestro I2C.c: 189:     InitMSSP(I2C_MASTER_FOSC, 100000);
  1733  03CD  3000               	movlw	0
  1734  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  1735  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  1736  03D0  00C2               	movwf	InitMSSP@Dato+3
  1737  03D1  3001               	movlw	1
  1738  03D2  00C1               	movwf	InitMSSP@Dato+2
  1739  03D3  3086               	movlw	134
  1740  03D4  00C0               	movwf	InitMSSP@Dato+1
  1741  03D5  30A0               	movlw	160
  1742  03D6  00BF               	movwf	InitMSSP@Dato
  1743  03D7  3008               	movlw	8
  1744  03D8  120A  118A  21CE  120A  118A  	fcall	_InitMSSP
  1745  03DD                     l2231:
  1746                           
  1747                           ;Maestro I2C.c: 192:     InitMPU6050();
  1748  03DD  120A  118A  232F  120A  118A  	fcall	_InitMPU6050
  1749  03E2                     l2233:
  1750                           
  1751                           ;Maestro I2C.c: 195:     Iniciar_LCD();
  1752  03E2  120A  118A  24FD  120A  118A  	fcall	_Iniciar_LCD
  1753  03E7                     l2235:
  1754                           
  1755                           ;Maestro I2C.c: 196:     Limpiar_pantallaLCD();
  1756  03E7  120A  118A  277D  120A  118A  	fcall	_Limpiar_pantallaLCD
  1757  03EC                     l2237:
  1758                           
  1759                           ;Maestro I2C.c: 197:     set_cursor(1,0);
  1760  03EC  01F4               	clrf	set_cursor@posicion
  1761  03ED  3001               	movlw	1
  1762  03EE  120A  118A  2608  120A  118A  	fcall	_set_cursor
  1763  03F3                     l2239:
  1764                           
  1765                           ;Maestro I2C.c: 198:     Escribir_stringLCD("Miniproyecto 2");
  1766  03F3  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1767  03F4  120A  118A  2757  120A  118A  	fcall	_Escribir_stringLCD
  1768  03F9                     l2241:
  1769                           
  1770                           ;Maestro I2C.c: 199:     set_cursor(2,2);
  1771  03F9  3002               	movlw	2
  1772  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  1773  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  1774  03FC  00C8               	movwf	??_setup
  1775  03FD  0848               	movf	??_setup,w
  1776  03FE  00F4               	movwf	set_cursor@posicion
  1777  03FF  3002               	movlw	2
  1778  0400  120A  118A  2608  120A  118A  	fcall	_set_cursor
  1779  0405                     l2243:
  1780                           
  1781                           ;Maestro I2C.c: 200:     Escribir_stringLCD("Jose Santizo");
  1782  0405  3020               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1783  0406  120A  118A  2757  120A  118A  	fcall	_Escribir_stringLCD
  1784  040B                     l2245:
  1785                           
  1786                           ;Maestro I2C.c: 201:     _delay((unsigned long)((5000)*(8000000/4000.0)));
  1787  040B  3033               	movlw	51
  1788  040C  1283               	bcf	3,5	;RP0=0, select bank0
  1789  040D  1303               	bcf	3,6	;RP1=0, select bank0
  1790  040E  00CA               	movwf	??_setup+2
  1791  040F  30BB               	movlw	187
  1792  0410  00C9               	movwf	??_setup+1
  1793  0411  30DF               	movlw	223
  1794  0412  00C8               	movwf	??_setup
  1795  0413                     u1667:
  1796  0413  0BC8               	decfsz	??_setup,f
  1797  0414  2C13               	goto	u1667
  1798  0415  0BC9               	decfsz	??_setup+1,f
  1799  0416  2C13               	goto	u1667
  1800  0417  0BCA               	decfsz	??_setup+2,f
  1801  0418  2C13               	goto	u1667
  1802  0419                     l2247:
  1803                           
  1804                           ;Maestro I2C.c: 202:     Limpiar_pantallaLCD();
  1805  0419  120A  118A  277D  120A  118A  	fcall	_Limpiar_pantallaLCD
  1806  041E                     l2249:
  1807                           
  1808                           ;Maestro I2C.c: 205:     Config_USART(9600,4);
  1809  041E  3080               	movlw	128
  1810  041F  00F2               	movwf	Config_USART@baud_rate
  1811  0420  3025               	movlw	37
  1812  0421  00F3               	movwf	Config_USART@baud_rate+1
  1813  0422  3004               	movlw	4
  1814  0423  00F4               	movwf	Config_USART@Freq
  1815  0424  3000               	movlw	0
  1816  0425  00F5               	movwf	Config_USART@Freq+1
  1817  0426  120A  118A  227F  120A  118A  	fcall	_Config_USART
  1818  042B                     l106:
  1819  042B  0008               	return
  1820  042C                     __end_of_setup:
  1821                           
  1822                           	psect	text3
  1823  0608                     __ptext3:	
  1824 ;; *************** function _set_cursor *****************
  1825 ;; Defined at:
  1826 ;;		line 77 in file "LCD.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;  linea           1    wreg     unsigned char 
  1829 ;;  posicion        1    4[COMMON] unsigned char 
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;  linea           1    7[COMMON] unsigned char 
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      void 
  1834 ;; Registers used:
  1835 ;;		wreg, status,2, status,0, pclath, cstack
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1841 ;;      Params:         1       0       0       0       0
  1842 ;;      Locals:         1       0       0       0       0
  1843 ;;      Temps:          2       0       0       0       0
  1844 ;;      Totals:         4       0       0       0       0
  1845 ;;Total ram usage:        4 bytes
  1846 ;; Hardware stack levels used: 1
  1847 ;; Hardware stack levels required when called: 3
  1848 ;; This function calls:
  1849 ;;		_Escribir_comandoLCD
  1850 ;; This function is called by:
  1851 ;;		_main
  1852 ;;		_setup
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           
  1857                           ;psect for function _set_cursor
  1858  0608                     _set_cursor:
  1859                           
  1860                           ;incstack = 0
  1861                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1862                           ;set_cursor@linea stored from wreg
  1863  0608  00F7               	movwf	set_cursor@linea
  1864  0609                     l1567:
  1865                           
  1866                           ;LCD.c: 78:     PORTDbits.RD3 = 0; PORTDbits.RD4 = 0;
  1867  0609  1283               	bcf	3,5	;RP0=0, select bank0
  1868  060A  1303               	bcf	3,6	;RP1=0, select bank0
  1869  060B  1188               	bcf	8,3	;volatile
  1870  060C  1208               	bcf	8,4	;volatile
  1871  060D                     l1569:
  1872                           
  1873                           ;LCD.c: 81:     if (linea == 1){ Escribir_comandoLCD(0b10000000);}
  1874  060D  0377               	decf	set_cursor@linea,w
  1875  060E  1D03               	btfss	3,2
  1876  060F  2E11               	goto	u891
  1877  0610  2E12               	goto	u890
  1878  0611                     u891:
  1879  0611  2E19               	goto	l1573
  1880  0612                     u890:
  1881  0612                     l1571:
  1882  0612  3080               	movlw	128
  1883  0613  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  1884  0618  2E25               	goto	l1577
  1885  0619                     l1573:
  1886  0619  3002               	movlw	2
  1887  061A  0677               	xorwf	set_cursor@linea,w
  1888  061B  1D03               	btfss	3,2
  1889  061C  2E1E               	goto	u901
  1890  061D  2E1F               	goto	u900
  1891  061E                     u901:
  1892  061E  2E25               	goto	l1577
  1893  061F                     u900:
  1894  061F                     l1575:
  1895  061F  30C0               	movlw	192
  1896  0620  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  1897  0625                     l1577:
  1898                           
  1899                           ;LCD.c: 84:     _delay((unsigned long)((40)*(8000000/4000.0)));
  1900  0625  3068               	movlw	104
  1901  0626  00F6               	movwf	??_set_cursor+1
  1902  0627  30E4               	movlw	228
  1903  0628  00F5               	movwf	??_set_cursor
  1904  0629                     u1677:
  1905  0629  0BF5               	decfsz	??_set_cursor,f
  1906  062A  2E29               	goto	u1677
  1907  062B  0BF6               	decfsz	??_set_cursor+1,f
  1908  062C  2E29               	goto	u1677
  1909  062D  0000               	nop
  1910  062E                     l1579:
  1911                           
  1912                           ;LCD.c: 86:     if (posicion != 0){
  1913  062E  0874               	movf	set_cursor@posicion,w
  1914  062F  1903               	btfsc	3,2
  1915  0630  2E32               	goto	u911
  1916  0631  2E33               	goto	u910
  1917  0632                     u911:
  1918  0632  2E4A               	goto	l248
  1919  0633                     u910:
  1920  0633  2E3C               	goto	l1587
  1921  0634                     l1583:
  1922                           
  1923                           ;LCD.c: 88:             Escribir_comandoLCD(0b00010100);
  1924  0634  3014               	movlw	20
  1925  0635  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  1926  063A                     l1585:
  1927                           
  1928                           ;LCD.c: 89:             posicion--;
  1929  063A  3001               	movlw	1
  1930  063B  02F4               	subwf	set_cursor@posicion,f
  1931  063C                     l1587:
  1932                           
  1933                           ;LCD.c: 87:         while(posicion > 0){
  1934  063C  0874               	movf	set_cursor@posicion,w
  1935  063D  1D03               	btfss	3,2
  1936  063E  2E40               	goto	u921
  1937  063F  2E41               	goto	u920
  1938  0640                     u921:
  1939  0640  2E34               	goto	l1583
  1940  0641                     u920:
  1941  0641                     l1589:
  1942                           
  1943                           ;LCD.c: 92:         _delay((unsigned long)((40)*(8000000/4000.0)));
  1944  0641  3068               	movlw	104
  1945  0642  00F6               	movwf	??_set_cursor+1
  1946  0643  30E4               	movlw	228
  1947  0644  00F5               	movwf	??_set_cursor
  1948  0645                     u1687:
  1949  0645  0BF5               	decfsz	??_set_cursor,f
  1950  0646  2E45               	goto	u1687
  1951  0647  0BF6               	decfsz	??_set_cursor+1,f
  1952  0648  2E45               	goto	u1687
  1953  0649  0000               	nop
  1954  064A                     l248:
  1955  064A  0008               	return
  1956  064B                     __end_of_set_cursor:
  1957                           
  1958                           	psect	text4
  1959  06FF                     __ptext4:	
  1960 ;; *************** function _initOsc *****************
  1961 ;; Defined at:
  1962 ;;		line 12 in file "Oscilador.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;  Valor           1    wreg     unsigned char 
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;  Valor           1    2[COMMON] unsigned char 
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  1    wreg      void 
  1969 ;; Registers used:
  1970 ;;		wreg, status,2, status,0
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1976 ;;      Params:         0       0       0       0       0
  1977 ;;      Locals:         1       0       0       0       0
  1978 ;;      Temps:          0       0       0       0       0
  1979 ;;      Totals:         1       0       0       0       0
  1980 ;;Total ram usage:        1 bytes
  1981 ;; Hardware stack levels used: 1
  1982 ;; Hardware stack levels required when called: 1
  1983 ;; This function calls:
  1984 ;;		Nothing
  1985 ;; This function is called by:
  1986 ;;		_setup
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           
  1991                           ;psect for function _initOsc
  1992  06FF                     _initOsc:
  1993                           
  1994                           ;incstack = 0
  1995                           ; Regs used in _initOsc: [wreg+status,2+status,0]
  1996                           ;initOsc@Valor stored from wreg
  1997  06FF  00F2               	movwf	initOsc@Valor
  1998  0700                     l1601:
  1999                           
  2000                           ;Oscilador.c: 14:     if(Valor == 8){
  2001  0700  3008               	movlw	8
  2002  0701  0672               	xorwf	initOsc@Valor,w
  2003  0702  1D03               	btfss	3,2
  2004  0703  2F05               	goto	u941
  2005  0704  2F06               	goto	u940
  2006  0705                     u941:
  2007  0705  2F0B               	goto	l1605
  2008  0706                     u940:
  2009  0706                     l1603:
  2010                           
  2011                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
  2012  0706  1683               	bsf	3,5	;RP0=1, select bank1
  2013  0707  1303               	bcf	3,6	;RP1=0, select bank1
  2014  0708  160F               	bsf	15,4	;volatile
  2015                           
  2016                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
  2017  0709  168F               	bsf	15,5	;volatile
  2018                           
  2019                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
  2020  070A  170F               	bsf	15,6	;volatile
  2021  070B                     l1605:
  2022                           
  2023                           ;Oscilador.c: 19:     if(Valor == 4){
  2024  070B  3004               	movlw	4
  2025  070C  0672               	xorwf	initOsc@Valor,w
  2026  070D  1D03               	btfss	3,2
  2027  070E  2F10               	goto	u951
  2028  070F  2F11               	goto	u950
  2029  0710                     u951:
  2030  0710  2F16               	goto	l1609
  2031  0711                     u950:
  2032  0711                     l1607:
  2033                           
  2034                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
  2035  0711  1683               	bsf	3,5	;RP0=1, select bank1
  2036  0712  1303               	bcf	3,6	;RP1=0, select bank1
  2037  0713  120F               	bcf	15,4	;volatile
  2038                           
  2039                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
  2040  0714  168F               	bsf	15,5	;volatile
  2041                           
  2042                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
  2043  0715  170F               	bsf	15,6	;volatile
  2044  0716                     l1609:
  2045                           
  2046                           ;Oscilador.c: 24:     if(Valor == 2){
  2047  0716  3002               	movlw	2
  2048  0717  0672               	xorwf	initOsc@Valor,w
  2049  0718  1D03               	btfss	3,2
  2050  0719  2F1B               	goto	u961
  2051  071A  2F1C               	goto	u960
  2052  071B                     u961:
  2053  071B  2F21               	goto	l1613
  2054  071C                     u960:
  2055  071C                     l1611:
  2056                           
  2057                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
  2058  071C  1683               	bsf	3,5	;RP0=1, select bank1
  2059  071D  1303               	bcf	3,6	;RP1=0, select bank1
  2060  071E  160F               	bsf	15,4	;volatile
  2061                           
  2062                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
  2063  071F  128F               	bcf	15,5	;volatile
  2064                           
  2065                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
  2066  0720  170F               	bsf	15,6	;volatile
  2067  0721                     l1613:
  2068                           
  2069                           ;Oscilador.c: 29:     if(Valor == 1){
  2070  0721  0372               	decf	initOsc@Valor,w
  2071  0722  1D03               	btfss	3,2
  2072  0723  2F25               	goto	u971
  2073  0724  2F26               	goto	u970
  2074  0725                     u971:
  2075  0725  2F2B               	goto	l256
  2076  0726                     u970:
  2077  0726                     l1615:
  2078                           
  2079                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
  2080  0726  1683               	bsf	3,5	;RP0=1, select bank1
  2081  0727  1303               	bcf	3,6	;RP1=0, select bank1
  2082  0728  120F               	bcf	15,4	;volatile
  2083                           
  2084                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
  2085  0729  128F               	bcf	15,5	;volatile
  2086                           
  2087                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
  2088  072A  170F               	bsf	15,6	;volatile
  2089  072B                     l256:	
  2090                           ;Oscilador.c: 33:     }
  2091                           
  2092                           
  2093                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
  2094  072B  1683               	bsf	3,5	;RP0=1, select bank1
  2095  072C  1303               	bcf	3,6	;RP1=0, select bank1
  2096  072D  140F               	bsf	15,0	;volatile
  2097  072E                     l257:
  2098  072E  0008               	return
  2099  072F                     __end_of_initOsc:
  2100                           
  2101                           	psect	text5
  2102  077D                     __ptext5:	
  2103 ;; *************** function _Limpiar_pantallaLCD *****************
  2104 ;; Defined at:
  2105 ;;		line 69 in file "LCD.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;		None
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;		None
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  1    wreg      void 
  2112 ;; Registers used:
  2113 ;;		wreg, status,2, status,0, pclath, cstack
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2119 ;;      Params:         0       0       0       0       0
  2120 ;;      Locals:         0       0       0       0       0
  2121 ;;      Temps:          2       0       0       0       0
  2122 ;;      Totals:         2       0       0       0       0
  2123 ;;Total ram usage:        2 bytes
  2124 ;; Hardware stack levels used: 1
  2125 ;; Hardware stack levels required when called: 3
  2126 ;; This function calls:
  2127 ;;		_Escribir_comandoLCD
  2128 ;; This function is called by:
  2129 ;;		_setup
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           
  2134                           ;psect for function _Limpiar_pantallaLCD
  2135  077D                     _Limpiar_pantallaLCD:
  2136  077D                     l1735:	
  2137                           ;incstack = 0
  2138                           ; Regs used in _Limpiar_pantallaLCD: [wreg+status,2+status,0+pclath+cstack]
  2139                           
  2140                           
  2141                           ;LCD.c: 70:     PORTDbits.RD3 = 0; PORTDbits.RD4 = 0;
  2142  077D  1283               	bcf	3,5	;RP0=0, select bank0
  2143  077E  1303               	bcf	3,6	;RP1=0, select bank0
  2144  077F  1188               	bcf	8,3	;volatile
  2145  0780  1208               	bcf	8,4	;volatile
  2146  0781                     l1737:
  2147                           
  2148                           ;LCD.c: 72:     Escribir_comandoLCD(0b00000001);
  2149  0781  3001               	movlw	1
  2150  0782  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  2151  0787                     l1739:
  2152                           
  2153                           ;LCD.c: 73:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2154  0787  301A               	movlw	26
  2155  0788  00F5               	movwf	??_Limpiar_pantallaLCD+1
  2156  0789  30F8               	movlw	248
  2157  078A  00F4               	movwf	??_Limpiar_pantallaLCD
  2158  078B                     u1697:
  2159  078B  0BF4               	decfsz	??_Limpiar_pantallaLCD,f
  2160  078C  2F8B               	goto	u1697
  2161  078D  0BF5               	decfsz	??_Limpiar_pantallaLCD+1,f
  2162  078E  2F8B               	goto	u1697
  2163  078F  0000               	nop
  2164  0790                     l1741:
  2165                           
  2166                           ;LCD.c: 74:     Escribir_comandoLCD(0b00000010);
  2167  0790  3002               	movlw	2
  2168  0791  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  2169  0796                     l238:
  2170  0796  0008               	return
  2171  0797                     __end_of_Limpiar_pantallaLCD:
  2172                           
  2173                           	psect	text6
  2174  01CE                     __ptext6:	
  2175 ;; *************** function _InitMSSP *****************
  2176 ;; Defined at:
  2177 ;;		line 5 in file "I2C.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  Modo            1    wreg     enum E1292
  2180 ;;  Dato            4    6[BANK0 ] unsigned long 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;  Modo            1   14[BANK0 ] enum E1292
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      void 
  2185 ;; Registers used:
  2186 ;;		wreg, status,2, status,0, pclath, cstack
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2192 ;;      Params:         0       4       0       0       0
  2193 ;;      Locals:         0       1       0       0       0
  2194 ;;      Temps:          0       4       0       0       0
  2195 ;;      Totals:         0       9       0       0       0
  2196 ;;Total ram usage:        9 bytes
  2197 ;; Hardware stack levels used: 1
  2198 ;; Hardware stack levels required when called: 2
  2199 ;; This function calls:
  2200 ;;		___lldiv
  2201 ;; This function is called by:
  2202 ;;		_setup
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           
  2207                           ;psect for function _InitMSSP
  2208  01CE                     _InitMSSP:
  2209                           
  2210                           ;incstack = 0
  2211                           ; Regs used in _InitMSSP: [wreg+status,2+status,0+pclath+cstack]
  2212                           ;InitMSSP@Modo stored from wreg
  2213  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  2214  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  2215  01D0  00C7               	movwf	InitMSSP@Modo
  2216  01D1                     l2133:
  2217                           
  2218                           ;I2C.c: 9:     SSPCONbits.SSPEN = 0;
  2219  01D1  1294               	bcf	20,5	;volatile
  2220  01D2                     l2135:
  2221                           
  2222                           ;I2C.c: 10:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2223  01D2  301A               	movlw	26
  2224  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  2225  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  2226  01D5  00C4               	movwf	??_InitMSSP+1
  2227  01D6  30F7               	movlw	247
  2228  01D7  00C3               	movwf	??_InitMSSP
  2229  01D8                     u1707:
  2230  01D8  0BC3               	decfsz	??_InitMSSP,f
  2231  01D9  29D8               	goto	u1707
  2232  01DA  0BC4               	decfsz	??_InitMSSP+1,f
  2233  01DB  29D8               	goto	u1707
  2234  01DC  29DD               	nop2
  2235  01DD                     l2137:
  2236                           
  2237                           ;I2C.c: 11:     SSPCONbits.SSPEN = 1;
  2238  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  2239  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  2240  01DF  1694               	bsf	20,5	;volatile
  2241                           
  2242                           ;I2C.c: 14:     if (Modo < 0b00000110){
  2243  01E0  3006               	movlw	6
  2244  01E1  0247               	subwf	InitMSSP@Modo,w
  2245  01E2  1803               	skipnc
  2246  01E3  29E5               	goto	u1461
  2247  01E4  29E6               	goto	u1460
  2248  01E5                     u1461:
  2249  01E5  2A0A               	goto	l2149
  2250  01E6                     u1460:
  2251  01E6                     l2139:
  2252                           
  2253                           ;I2C.c: 17:         TRISCbits.TRISC5 = 0;
  2254  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  2255  01E7  1303               	bcf	3,6	;RP1=0, select bank1
  2256  01E8  1287               	bcf	7,5	;volatile
  2257                           
  2258                           ;I2C.c: 18:         TRISCbits.TRISC4 = 1;
  2259  01E9  1607               	bsf	7,4	;volatile
  2260  01EA                     l2141:
  2261                           
  2262                           ;I2C.c: 20:         if (Modo < 0b00000100){
  2263  01EA  3004               	movlw	4
  2264  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  2265  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  2266  01ED  0247               	subwf	InitMSSP@Modo,w
  2267  01EE  1803               	skipnc
  2268  01EF  29F1               	goto	u1471
  2269  01F0  29F2               	goto	u1470
  2270  01F1                     u1471:
  2271  01F1  29F6               	goto	l163
  2272  01F2                     u1470:
  2273  01F2                     l2143:
  2274                           
  2275                           ;I2C.c: 21:             TRISCbits.TRISC3 = 0;
  2276  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  2277  01F3  1303               	bcf	3,6	;RP1=0, select bank1
  2278  01F4  1187               	bcf	7,3	;volatile
  2279                           
  2280                           ;I2C.c: 22:         }
  2281  01F5  29F9               	goto	l2145
  2282  01F6                     l163:	
  2283                           ;I2C.c: 23:         else {
  2284                           
  2285                           
  2286                           ;I2C.c: 24:             TRISCbits.TRISC3 = 1;
  2287  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  2288  01F7  1303               	bcf	3,6	;RP1=0, select bank1
  2289  01F8  1587               	bsf	7,3	;volatile
  2290  01F9                     l2145:
  2291                           
  2292                           ;I2C.c: 27:         if (Modo == 0b00000100){ TRISAbits.TRISA5 = 1;}
  2293  01F9  3004               	movlw	4
  2294  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  2295  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  2296  01FC  0647               	xorwf	InitMSSP@Modo,w
  2297  01FD  1D03               	btfss	3,2
  2298  01FE  2A00               	goto	u1481
  2299  01FF  2A01               	goto	u1480
  2300  0200                     u1481:
  2301  0200  2A04               	goto	l165
  2302  0201                     u1480:
  2303  0201                     l2147:
  2304  0201  1683               	bsf	3,5	;RP0=1, select bank1
  2305  0202  1303               	bcf	3,6	;RP1=0, select bank1
  2306  0203  1685               	bsf	5,5	;volatile
  2307  0204                     l165:
  2308                           
  2309                           ;I2C.c: 31:         SSPCONbits.CKP = 0;
  2310  0204  1283               	bcf	3,5	;RP0=0, select bank0
  2311  0205  1214               	bcf	20,4	;volatile
  2312                           
  2313                           ;I2C.c: 36:         SSPSTATbits.SMP = 1;
  2314  0206  1683               	bsf	3,5	;RP0=1, select bank1
  2315  0207  1303               	bcf	3,6	;RP1=0, select bank1
  2316  0208  1794               	bsf	20,7	;volatile
  2317                           
  2318                           ;I2C.c: 38:     }
  2319  0209  2A77               	goto	l2177
  2320  020A                     l2149:
  2321  020A  3006               	movlw	6
  2322  020B  0247               	subwf	InitMSSP@Modo,w
  2323  020C  1C03               	skipc
  2324  020D  2A0F               	goto	u1491
  2325  020E  2A10               	goto	u1490
  2326  020F                     u1491:
  2327  020F  2A77               	goto	l2177
  2328  0210                     u1490:
  2329  0210                     l2151:
  2330                           
  2331                           ;I2C.c: 42:         TRISCbits.TRISC3 = 1;
  2332  0210  1683               	bsf	3,5	;RP0=1, select bank1
  2333  0211  1303               	bcf	3,6	;RP1=0, select bank1
  2334  0212  1587               	bsf	7,3	;volatile
  2335                           
  2336                           ;I2C.c: 43:         TRISCbits.TRISC4 = 1;
  2337  0213  1607               	bsf	7,4	;volatile
  2338                           
  2339                           ;I2C.c: 44:         SSPCONbits.SSPEN = 1;
  2340  0214  1283               	bcf	3,5	;RP0=0, select bank0
  2341  0215  1303               	bcf	3,6	;RP1=0, select bank0
  2342  0216  1694               	bsf	20,5	;volatile
  2343                           
  2344                           ;I2C.c: 45:         SSPSTATbits.SMP = 1;
  2345  0217  1683               	bsf	3,5	;RP0=1, select bank1
  2346  0218  1303               	bcf	3,6	;RP1=0, select bank1
  2347  0219  1794               	bsf	20,7	;volatile
  2348  021A                     l2153:
  2349                           
  2350                           ;I2C.c: 46:         if (Modo == 0b00000111 || Modo == 0b00001111){
  2351  021A  3007               	movlw	7
  2352  021B  1283               	bcf	3,5	;RP0=0, select bank0
  2353  021C  1303               	bcf	3,6	;RP1=0, select bank0
  2354  021D  0647               	xorwf	InitMSSP@Modo,w
  2355  021E  1903               	btfsc	3,2
  2356  021F  2A21               	goto	u1501
  2357  0220  2A22               	goto	u1500
  2358  0221                     u1501:
  2359  0221  2A28               	goto	l170
  2360  0222                     u1500:
  2361  0222                     l2155:
  2362  0222  300F               	movlw	15
  2363  0223  0647               	xorwf	InitMSSP@Modo,w
  2364  0224  1D03               	btfss	3,2
  2365  0225  2A27               	goto	u1511
  2366  0226  2A28               	goto	u1510
  2367  0227                     u1511:
  2368  0227  2A2B               	goto	l2157
  2369  0228                     u1510:
  2370  0228                     l170:
  2371                           
  2372                           ;I2C.c: 47:             UA = 0;
  2373  0228  1683               	bsf	3,5	;RP0=1, select bank1
  2374  0229  1303               	bcf	3,6	;RP1=0, select bank1
  2375  022A  1094               	bcf	20,1	;volatile
  2376  022B                     l2157:
  2377                           
  2378                           ;I2C.c: 50:         if (Modo == 0b00001000){
  2379  022B  3008               	movlw	8
  2380  022C  1283               	bcf	3,5	;RP0=0, select bank0
  2381  022D  0647               	xorwf	InitMSSP@Modo,w
  2382  022E  1D03               	btfss	3,2
  2383  022F  2A31               	goto	u1521
  2384  0230  2A32               	goto	u1520
  2385  0231                     u1521:
  2386  0231  2A66               	goto	l171
  2387  0232                     u1520:
  2388  0232                     l2159:
  2389                           
  2390                           ;I2C.c: 51:             CKP = 0;
  2391  0232  1214               	bcf	20,4	;volatile
  2392  0233                     l2161:
  2393                           
  2394                           ;I2C.c: 52:             SSPCON2 = 0;
  2395  0233  1683               	bsf	3,5	;RP0=1, select bank1
  2396  0234  1303               	bcf	3,6	;RP1=0, select bank1
  2397  0235  0191               	clrf	17	;volatile
  2398                           
  2399                           ;I2C.c: 53:             SSPSTAT = 0;
  2400  0236  0194               	clrf	20	;volatile
  2401  0237                     l2163:
  2402                           
  2403                           ;I2C.c: 54:             SSPADD = (8000000/(Dato*4))-1;
  2404  0237  1283               	bcf	3,5	;RP0=0, select bank0
  2405  0238  1303               	bcf	3,6	;RP1=0, select bank0
  2406  0239  083F               	movf	InitMSSP@Dato,w
  2407  023A  00C3               	movwf	??_InitMSSP
  2408  023B  0840               	movf	InitMSSP@Dato+1,w
  2409  023C  00C4               	movwf	??_InitMSSP+1
  2410  023D  0841               	movf	InitMSSP@Dato+2,w
  2411  023E  00C5               	movwf	??_InitMSSP+2
  2412  023F  0842               	movf	InitMSSP@Dato+3,w
  2413  0240  00C6               	movwf	??_InitMSSP+3
  2414  0241  3002               	movlw	2
  2415  0242                     u1535:
  2416  0242  1003               	clrc
  2417  0243  0DC3               	rlf	??_InitMSSP,f
  2418  0244  0DC4               	rlf	??_InitMSSP+1,f
  2419  0245  0DC5               	rlf	??_InitMSSP+2,f
  2420  0246  0DC6               	rlf	??_InitMSSP+3,f
  2421  0247                     u1530:
  2422  0247  3EFF               	addlw	-1
  2423  0248  1D03               	skipz
  2424  0249  2A42               	goto	u1535
  2425  024A  0846               	movf	??_InitMSSP+3,w
  2426  024B  00F5               	movwf	___lldiv@divisor+3
  2427  024C  0845               	movf	??_InitMSSP+2,w
  2428  024D  00F4               	movwf	___lldiv@divisor+2
  2429  024E  0844               	movf	??_InitMSSP+1,w
  2430  024F  00F3               	movwf	___lldiv@divisor+1
  2431  0250  0843               	movf	??_InitMSSP,w
  2432  0251  00F2               	movwf	___lldiv@divisor
  2433  0252  3000               	movlw	0
  2434  0253  00F9               	movwf	___lldiv@dividend+3
  2435  0254  307A               	movlw	122
  2436  0255  00F8               	movwf	___lldiv@dividend+2
  2437  0256  3012               	movlw	18
  2438  0257  00F7               	movwf	___lldiv@dividend+1
  2439  0258  3000               	movlw	0
  2440  0259  00F6               	movwf	___lldiv@dividend
  2441  025A  120A  118A  2495  120A  118A  	fcall	___lldiv
  2442  025F  0872               	movf	?___lldiv,w
  2443  0260  3EFF               	addlw	255
  2444  0261  1683               	bsf	3,5	;RP0=1, select bank1
  2445  0262  1303               	bcf	3,6	;RP1=0, select bank1
  2446  0263  0093               	movwf	19	;volatile
  2447  0264                     l2165:
  2448                           
  2449                           ;I2C.c: 55:             PIE1bits.SSPIE = 0;
  2450  0264  118C               	bcf	12,3	;volatile
  2451                           
  2452                           ;I2C.c: 56:         }
  2453  0265  2A77               	goto	l2177
  2454  0266                     l171:	
  2455                           ;I2C.c: 57:         else {
  2456                           
  2457                           
  2458                           ;I2C.c: 58:             CKP = 1;
  2459  0266  1614               	bsf	20,4	;volatile
  2460                           
  2461                           ;I2C.c: 59:             SSPCON2bits.GCEN = 0;
  2462  0267  1683               	bsf	3,5	;RP0=1, select bank1
  2463  0268  1303               	bcf	3,6	;RP1=0, select bank1
  2464  0269  1391               	bcf	17,7	;volatile
  2465                           
  2466                           ;I2C.c: 60:             SSPCON2bits.SEN = 1;
  2467  026A  1411               	bsf	17,0	;volatile
  2468  026B                     l2167:
  2469                           
  2470                           ;I2C.c: 61:             SSPADD = Dato;
  2471  026B  1283               	bcf	3,5	;RP0=0, select bank0
  2472  026C  1303               	bcf	3,6	;RP1=0, select bank0
  2473  026D  083F               	movf	InitMSSP@Dato,w
  2474  026E  1683               	bsf	3,5	;RP0=1, select bank1
  2475  026F  1303               	bcf	3,6	;RP1=0, select bank1
  2476  0270  0093               	movwf	19	;volatile
  2477  0271                     l2169:
  2478                           
  2479                           ;I2C.c: 62:             INTCONbits.GIE = 1;
  2480  0271  178B               	bsf	11,7	;volatile
  2481  0272                     l2171:
  2482                           
  2483                           ;I2C.c: 63:             INTCONbits.PEIE = 1;
  2484  0272  170B               	bsf	11,6	;volatile
  2485  0273                     l2173:
  2486                           
  2487                           ;I2C.c: 64:             PIE1bits.SSPIE = 1;
  2488  0273  158C               	bsf	12,3	;volatile
  2489  0274                     l2175:
  2490                           
  2491                           ;I2C.c: 65:             SSPIF = 0;
  2492  0274  1283               	bcf	3,5	;RP0=0, select bank0
  2493  0275  1303               	bcf	3,6	;RP1=0, select bank0
  2494  0276  118C               	bcf	12,3	;volatile
  2495  0277                     l2177:
  2496                           
  2497                           ;I2C.c: 72:     SSPCON = SSPCON | Modo;
  2498  0277  1283               	bcf	3,5	;RP0=0, select bank0
  2499  0278  0814               	movf	20,w	;volatile
  2500  0279  0447               	iorwf	InitMSSP@Modo,w	;volatile
  2501  027A  0094               	movwf	20	;volatile
  2502  027B                     l2179:
  2503                           
  2504                           ;I2C.c: 77:     SSPSTATbits.CKE = 0;
  2505  027B  1683               	bsf	3,5	;RP0=1, select bank1
  2506  027C  1303               	bcf	3,6	;RP1=0, select bank1
  2507  027D  1314               	bcf	20,6	;volatile
  2508  027E                     l173:
  2509  027E  0008               	return
  2510  027F                     __end_of_InitMSSP:
  2511                           
  2512                           	psect	text7
  2513  0495                     __ptext7:	
  2514 ;; *************** function ___lldiv *****************
  2515 ;; Defined at:
  2516 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;  divisor         4    2[COMMON] unsigned long 
  2519 ;;  dividend        4    6[COMMON] unsigned long 
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;  quotient        4    1[BANK0 ] unsigned long 
  2522 ;;  counter         1    5[BANK0 ] unsigned char 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  4    2[COMMON] unsigned long 
  2525 ;; Registers used:
  2526 ;;		wreg, status,2, status,0
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2532 ;;      Params:         8       0       0       0       0
  2533 ;;      Locals:         0       5       0       0       0
  2534 ;;      Temps:          0       1       0       0       0
  2535 ;;      Totals:         8       6       0       0       0
  2536 ;;Total ram usage:       14 bytes
  2537 ;; Hardware stack levels used: 1
  2538 ;; Hardware stack levels required when called: 1
  2539 ;; This function calls:
  2540 ;;		Nothing
  2541 ;; This function is called by:
  2542 ;;		_InitMSSP
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546                           
  2547                           ;psect for function ___lldiv
  2548  0495                     ___lldiv:
  2549  0495                     l2109:	
  2550                           ;incstack = 0
  2551                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2552                           
  2553  0495  3000               	movlw	0
  2554  0496  1283               	bcf	3,5	;RP0=0, select bank0
  2555  0497  1303               	bcf	3,6	;RP1=0, select bank0
  2556  0498  00BD               	movwf	___lldiv@quotient+3
  2557  0499  3000               	movlw	0
  2558  049A  00BC               	movwf	___lldiv@quotient+2
  2559  049B  3000               	movlw	0
  2560  049C  00BB               	movwf	___lldiv@quotient+1
  2561  049D  3000               	movlw	0
  2562  049E  00BA               	movwf	___lldiv@quotient
  2563  049F  0875               	movf	___lldiv@divisor+3,w
  2564  04A0  0474               	iorwf	___lldiv@divisor+2,w
  2565  04A1  0473               	iorwf	___lldiv@divisor+1,w
  2566  04A2  0472               	iorwf	___lldiv@divisor,w
  2567  04A3  1903               	skipnz
  2568  04A4  2CA6               	goto	u1391
  2569  04A5  2CA7               	goto	u1390
  2570  04A6                     u1391:
  2571  04A6  2CF4               	goto	l2129
  2572  04A7                     u1390:
  2573  04A7                     l2111:
  2574  04A7  01BE               	clrf	___lldiv@counter
  2575  04A8  0ABE               	incf	___lldiv@counter,f
  2576  04A9  2CB7               	goto	l2115
  2577  04AA                     l2113:
  2578  04AA  3001               	movlw	1
  2579  04AB  00B9               	movwf	??___lldiv
  2580  04AC                     u1405:
  2581  04AC  1003               	clrc
  2582  04AD  0DF2               	rlf	___lldiv@divisor,f
  2583  04AE  0DF3               	rlf	___lldiv@divisor+1,f
  2584  04AF  0DF4               	rlf	___lldiv@divisor+2,f
  2585  04B0  0DF5               	rlf	___lldiv@divisor+3,f
  2586  04B1  0BB9               	decfsz	??___lldiv,f
  2587  04B2  2CAC               	goto	u1405
  2588  04B3  3001               	movlw	1
  2589  04B4  00B9               	movwf	??___lldiv
  2590  04B5  0839               	movf	??___lldiv,w
  2591  04B6  07BE               	addwf	___lldiv@counter,f
  2592  04B7                     l2115:
  2593  04B7  1FF5               	btfss	___lldiv@divisor+3,7
  2594  04B8  2CBA               	goto	u1411
  2595  04B9  2CBB               	goto	u1410
  2596  04BA                     u1411:
  2597  04BA  2CAA               	goto	l2113
  2598  04BB                     u1410:
  2599  04BB                     l2117:
  2600  04BB  3001               	movlw	1
  2601  04BC  00B9               	movwf	??___lldiv
  2602  04BD                     u1425:
  2603  04BD  1003               	clrc
  2604  04BE  0DBA               	rlf	___lldiv@quotient,f
  2605  04BF  0DBB               	rlf	___lldiv@quotient+1,f
  2606  04C0  0DBC               	rlf	___lldiv@quotient+2,f
  2607  04C1  0DBD               	rlf	___lldiv@quotient+3,f
  2608  04C2  0BB9               	decfsz	??___lldiv,f
  2609  04C3  2CBD               	goto	u1425
  2610  04C4                     l2119:
  2611  04C4  0875               	movf	___lldiv@divisor+3,w
  2612  04C5  0279               	subwf	___lldiv@dividend+3,w
  2613  04C6  1D03               	skipz
  2614  04C7  2CD2               	goto	u1435
  2615  04C8  0874               	movf	___lldiv@divisor+2,w
  2616  04C9  0278               	subwf	___lldiv@dividend+2,w
  2617  04CA  1D03               	skipz
  2618  04CB  2CD2               	goto	u1435
  2619  04CC  0873               	movf	___lldiv@divisor+1,w
  2620  04CD  0277               	subwf	___lldiv@dividend+1,w
  2621  04CE  1D03               	skipz
  2622  04CF  2CD2               	goto	u1435
  2623  04D0  0872               	movf	___lldiv@divisor,w
  2624  04D1  0276               	subwf	___lldiv@dividend,w
  2625  04D2                     u1435:
  2626  04D2  1C03               	skipc
  2627  04D3  2CD5               	goto	u1431
  2628  04D4  2CD6               	goto	u1430
  2629  04D5                     u1431:
  2630  04D5  2CE5               	goto	l2125
  2631  04D6                     u1430:
  2632  04D6                     l2121:
  2633  04D6  0872               	movf	___lldiv@divisor,w
  2634  04D7  02F6               	subwf	___lldiv@dividend,f
  2635  04D8  0873               	movf	___lldiv@divisor+1,w
  2636  04D9  1C03               	skipc
  2637  04DA  0F73               	incfsz	___lldiv@divisor+1,w
  2638  04DB  02F7               	subwf	___lldiv@dividend+1,f
  2639  04DC  0874               	movf	___lldiv@divisor+2,w
  2640  04DD  1C03               	skipc
  2641  04DE  0F74               	incfsz	___lldiv@divisor+2,w
  2642  04DF  02F8               	subwf	___lldiv@dividend+2,f
  2643  04E0  0875               	movf	___lldiv@divisor+3,w
  2644  04E1  1C03               	skipc
  2645  04E2  0F75               	incfsz	___lldiv@divisor+3,w
  2646  04E3  02F9               	subwf	___lldiv@dividend+3,f
  2647  04E4                     l2123:
  2648  04E4  143A               	bsf	___lldiv@quotient,0
  2649  04E5                     l2125:
  2650  04E5  3001               	movlw	1
  2651  04E6                     u1445:
  2652  04E6  1003               	clrc
  2653  04E7  0CF5               	rrf	___lldiv@divisor+3,f
  2654  04E8  0CF4               	rrf	___lldiv@divisor+2,f
  2655  04E9  0CF3               	rrf	___lldiv@divisor+1,f
  2656  04EA  0CF2               	rrf	___lldiv@divisor,f
  2657  04EB  3EFF               	addlw	-1
  2658  04EC  1D03               	skipz
  2659  04ED  2CE6               	goto	u1445
  2660  04EE                     l2127:
  2661  04EE  3001               	movlw	1
  2662  04EF  02BE               	subwf	___lldiv@counter,f
  2663  04F0  1D03               	btfss	3,2
  2664  04F1  2CF3               	goto	u1451
  2665  04F2  2CF4               	goto	u1450
  2666  04F3                     u1451:
  2667  04F3  2CBB               	goto	l2117
  2668  04F4                     u1450:
  2669  04F4                     l2129:
  2670  04F4  083D               	movf	___lldiv@quotient+3,w
  2671  04F5  00F5               	movwf	?___lldiv+3
  2672  04F6  083C               	movf	___lldiv@quotient+2,w
  2673  04F7  00F4               	movwf	?___lldiv+2
  2674  04F8  083B               	movf	___lldiv@quotient+1,w
  2675  04F9  00F3               	movwf	?___lldiv+1
  2676  04FA  083A               	movf	___lldiv@quotient,w
  2677  04FB  00F2               	movwf	?___lldiv
  2678  04FC                     l411:
  2679  04FC  0008               	return
  2680  04FD                     __end_of___lldiv:
  2681                           
  2682                           	psect	text8
  2683  032F                     __ptext8:	
  2684 ;; *************** function _InitMPU6050 *****************
  2685 ;; Defined at:
  2686 ;;		line 13 in file "MPU.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;		None
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;		None
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  1    wreg      void 
  2693 ;; Registers used:
  2694 ;;		wreg, status,2, status,0, pclath, cstack
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2700 ;;      Params:         0       0       0       0       0
  2701 ;;      Locals:         0       0       0       0       0
  2702 ;;      Temps:          3       0       0       0       0
  2703 ;;      Totals:         3       0       0       0       0
  2704 ;;Total ram usage:        3 bytes
  2705 ;; Hardware stack levels used: 1
  2706 ;; Hardware stack levels required when called: 3
  2707 ;; This function calls:
  2708 ;;		_I2CMasterStop
  2709 ;;		_I2CMasterWrite
  2710 ;;		_I2C_Master_Start
  2711 ;; This function is called by:
  2712 ;;		_setup
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           
  2717                           ;psect for function _InitMPU6050
  2718  032F                     _InitMPU6050:
  2719  032F                     l1665:	
  2720                           ;incstack = 0
  2721                           ; Regs used in _InitMPU6050: [wreg+status,2+status,0+pclath+cstack]
  2722                           
  2723                           
  2724                           ;MPU.c: 14:     _delay((unsigned long)((150)*(8000000/4000.0)));
  2725  032F  3002               	movlw	2
  2726  0330  00F5               	movwf	??_InitMPU6050+2
  2727  0331  3086               	movlw	134
  2728  0332  00F4               	movwf	??_InitMPU6050+1
  2729  0333  3099               	movlw	153
  2730  0334  00F3               	movwf	??_InitMPU6050
  2731  0335                     u1717:
  2732  0335  0BF3               	decfsz	??_InitMPU6050,f
  2733  0336  2B35               	goto	u1717
  2734  0337  0BF4               	decfsz	??_InitMPU6050+1,f
  2735  0338  2B35               	goto	u1717
  2736  0339  0BF5               	decfsz	??_InitMPU6050+2,f
  2737  033A  2B35               	goto	u1717
  2738  033B                     l1667:
  2739                           
  2740                           ;MPU.c: 17:     I2C_Master_Start(Standard);
  2741  033B  3001               	movlw	1
  2742  033C  120A  118A  2797  120A  118A  	fcall	_I2C_Master_Start
  2743  0341                     l1669:
  2744                           
  2745                           ;MPU.c: 18:     I2CMasterWrite(0b11010010 +0);
  2746  0341  30D2               	movlw	210
  2747  0342  120A  118A  27D8  120A  118A  	fcall	_I2CMasterWrite
  2748  0347                     l1671:
  2749                           
  2750                           ;MPU.c: 19:     I2CMasterWrite(0x6B);
  2751  0347  306B               	movlw	107
  2752  0348  120A  118A  27D8  120A  118A  	fcall	_I2CMasterWrite
  2753  034D                     l1673:
  2754                           
  2755                           ;MPU.c: 20:     I2CMasterWrite(0b00000001);
  2756  034D  3001               	movlw	1
  2757  034E  120A  118A  27D8  120A  118A  	fcall	_I2CMasterWrite
  2758  0353                     l1675:
  2759                           
  2760                           ;MPU.c: 24:     I2C_Master_Start(Repeated);
  2761  0353  3000               	movlw	0
  2762  0354  120A  118A  2797  120A  118A  	fcall	_I2C_Master_Start
  2763  0359                     l1677:
  2764                           
  2765                           ;MPU.c: 25:     I2CMasterWrite(0b11010010 +0);
  2766  0359  30D2               	movlw	210
  2767  035A  120A  118A  27D8  120A  118A  	fcall	_I2CMasterWrite
  2768  035F                     l1679:
  2769                           
  2770                           ;MPU.c: 26:     I2CMasterWrite(0x1B);
  2771  035F  301B               	movlw	27
  2772  0360  120A  118A  27D8  120A  118A  	fcall	_I2CMasterWrite
  2773  0365                     l1681:
  2774                           
  2775                           ;MPU.c: 27:     I2CMasterWrite(0b00000000);
  2776  0365  3000               	movlw	0
  2777  0366  120A  118A  27D8  120A  118A  	fcall	_I2CMasterWrite
  2778  036B                     l1683:
  2779                           
  2780                           ;MPU.c: 31:     I2C_Master_Start(Repeated);
  2781  036B  3000               	movlw	0
  2782  036C  120A  118A  2797  120A  118A  	fcall	_I2C_Master_Start
  2783  0371                     l1685:
  2784                           
  2785                           ;MPU.c: 32:     I2CMasterWrite(0b11010010 +0);
  2786  0371  30D2               	movlw	210
  2787  0372  120A  118A  27D8  120A  118A  	fcall	_I2CMasterWrite
  2788  0377                     l1687:
  2789                           
  2790                           ;MPU.c: 33:     I2CMasterWrite(0x1C);
  2791  0377  301C               	movlw	28
  2792  0378  120A  118A  27D8  120A  118A  	fcall	_I2CMasterWrite
  2793  037D                     l1689:
  2794                           
  2795                           ;MPU.c: 34:     I2CMasterWrite(0b00000000);
  2796  037D  3000               	movlw	0
  2797  037E  120A  118A  27D8  120A  118A  	fcall	_I2CMasterWrite
  2798  0383                     l1691:
  2799                           
  2800                           ;MPU.c: 37:     I2C_Master_Start(Repeated);
  2801  0383  3000               	movlw	0
  2802  0384  120A  118A  2797  120A  118A  	fcall	_I2C_Master_Start
  2803  0389                     l1693:
  2804                           
  2805                           ;MPU.c: 38:     I2CMasterWrite(0b11010010 +0);
  2806  0389  30D2               	movlw	210
  2807  038A  120A  118A  27D8  120A  118A  	fcall	_I2CMasterWrite
  2808  038F                     l1695:
  2809                           
  2810                           ;MPU.c: 39:     I2CMasterWrite(0x1A);
  2811  038F  301A               	movlw	26
  2812  0390  120A  118A  27D8  120A  118A  	fcall	_I2CMasterWrite
  2813  0395                     l1697:
  2814                           
  2815                           ;MPU.c: 40:     I2CMasterWrite(0b00000000);
  2816  0395  3000               	movlw	0
  2817  0396  120A  118A  27D8  120A  118A  	fcall	_I2CMasterWrite
  2818  039B                     l1699:
  2819                           
  2820                           ;MPU.c: 43:     I2C_Master_Start(Repeated);
  2821  039B  3000               	movlw	0
  2822  039C  120A  118A  2797  120A  118A  	fcall	_I2C_Master_Start
  2823  03A1                     l1701:
  2824                           
  2825                           ;MPU.c: 44:     I2CMasterWrite(0b11010010 +0);
  2826  03A1  30D2               	movlw	210
  2827  03A2  120A  118A  27D8  120A  118A  	fcall	_I2CMasterWrite
  2828  03A7                     l1703:
  2829                           
  2830                           ;MPU.c: 45:     I2CMasterWrite(0x19);
  2831  03A7  3019               	movlw	25
  2832  03A8  120A  118A  27D8  120A  118A  	fcall	_I2CMasterWrite
  2833  03AD                     l1705:
  2834                           
  2835                           ;MPU.c: 46:     I2CMasterWrite(0b00000111);
  2836  03AD  3007               	movlw	7
  2837  03AE  120A  118A  27D8  120A  118A  	fcall	_I2CMasterWrite
  2838  03B3                     l1707:
  2839                           
  2840                           ;MPU.c: 48:     I2CMasterStop();
  2841  03B3  120A  118A  27E3  120A  118A  	fcall	_I2CMasterStop
  2842  03B8                     l289:
  2843  03B8  0008               	return
  2844  03B9                     __end_of_InitMPU6050:
  2845                           
  2846                           	psect	text9
  2847  0797                     __ptext9:	
  2848 ;; *************** function _I2C_Master_Start *****************
  2849 ;; Defined at:
  2850 ;;		line 96 in file "I2C.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;  Modo_Inicio     1    wreg     enum E1305
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  Modo_Inicio     1    2[COMMON] enum E1305
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  1    wreg      void 
  2857 ;; Registers used:
  2858 ;;		wreg, status,2, status,0, pclath, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2864 ;;      Params:         0       0       0       0       0
  2865 ;;      Locals:         1       0       0       0       0
  2866 ;;      Temps:          0       0       0       0       0
  2867 ;;      Totals:         1       0       0       0       0
  2868 ;;Total ram usage:        1 bytes
  2869 ;; Hardware stack levels used: 1
  2870 ;; Hardware stack levels required when called: 2
  2871 ;; This function calls:
  2872 ;;		_I2CMasterCheck
  2873 ;; This function is called by:
  2874 ;;		_main
  2875 ;;		_InitMPU6050
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           
  2880                           ;psect for function _I2C_Master_Start
  2881  0797                     _I2C_Master_Start:
  2882                           
  2883                           ;incstack = 0
  2884                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2885                           ;I2C_Master_Start@Modo_Inicio stored from wreg
  2886  0797  00F2               	movwf	I2C_Master_Start@Modo_Inicio
  2887  0798                     l1505:
  2888                           
  2889                           ;I2C.c: 97:     I2CMasterCheck();
  2890  0798  120A  118A  27BF  120A  118A  	fcall	_I2CMasterCheck
  2891  079D                     l1507:
  2892                           
  2893                           ;I2C.c: 98:     if (Modo_Inicio == 1) SSPCON2bits.SEN = 1;
  2894  079D  0372               	decf	I2C_Master_Start@Modo_Inicio,w
  2895  079E  1D03               	btfss	3,2
  2896  079F  2FA1               	goto	u721
  2897  07A0  2FA2               	goto	u720
  2898  07A1                     u721:
  2899  07A1  2FA5               	goto	l1511
  2900  07A2                     u720:
  2901  07A2                     l1509:
  2902  07A2  1683               	bsf	3,5	;RP0=1, select bank1
  2903  07A3  1303               	bcf	3,6	;RP1=0, select bank1
  2904  07A4  1411               	bsf	17,0	;volatile
  2905  07A5                     l1511:
  2906                           
  2907                           ;I2C.c: 99:     if (Modo_Inicio == 0) SSPCON2bits.RSEN = 1;
  2908  07A5  0872               	movf	I2C_Master_Start@Modo_Inicio,w
  2909  07A6  1D03               	btfss	3,2
  2910  07A7  2FA9               	goto	u731
  2911  07A8  2FAA               	goto	u730
  2912  07A9                     u731:
  2913  07A9  2FAD               	goto	l183
  2914  07AA                     u730:
  2915  07AA                     l1513:
  2916  07AA  1683               	bsf	3,5	;RP0=1, select bank1
  2917  07AB  1303               	bcf	3,6	;RP1=0, select bank1
  2918  07AC  1491               	bsf	17,1	;volatile
  2919  07AD                     l183:
  2920                           
  2921                           ;I2C.c: 100:     SSPIF = 0;
  2922  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  2923  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  2924  07AF  118C               	bcf	12,3	;volatile
  2925  07B0                     l184:
  2926  07B0  0008               	return
  2927  07B1                     __end_of_I2C_Master_Start:
  2928                           
  2929                           	psect	text10
  2930  07D8                     __ptext10:	
  2931 ;; *************** function _I2CMasterWrite *****************
  2932 ;; Defined at:
  2933 ;;		line 110 in file "I2C.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  Datos           1    wreg     unsigned char 
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;  Datos           1    2[COMMON] unsigned char 
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  1    wreg      void 
  2940 ;; Registers used:
  2941 ;;		wreg, status,2, status,0, pclath, cstack
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2947 ;;      Params:         0       0       0       0       0
  2948 ;;      Locals:         1       0       0       0       0
  2949 ;;      Temps:          0       0       0       0       0
  2950 ;;      Totals:         1       0       0       0       0
  2951 ;;Total ram usage:        1 bytes
  2952 ;; Hardware stack levels used: 1
  2953 ;; Hardware stack levels required when called: 2
  2954 ;; This function calls:
  2955 ;;		_I2CMasterCheck
  2956 ;; This function is called by:
  2957 ;;		_main
  2958 ;;		_InitMPU6050
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           
  2962                           
  2963                           ;psect for function _I2CMasterWrite
  2964  07D8                     _I2CMasterWrite:
  2965                           
  2966                           ;incstack = 0
  2967                           ; Regs used in _I2CMasterWrite: [wreg+status,2+status,0+pclath+cstack]
  2968                           ;I2CMasterWrite@Datos stored from wreg
  2969  07D8  00F2               	movwf	I2CMasterWrite@Datos
  2970  07D9                     l1515:
  2971                           
  2972                           ;I2C.c: 111:     I2CMasterCheck();
  2973  07D9  120A  118A  27BF  120A  118A  	fcall	_I2CMasterCheck
  2974  07DE                     l1517:
  2975                           
  2976                           ;I2C.c: 112:     SSPBUF = Datos;
  2977  07DE  0872               	movf	I2CMasterWrite@Datos,w
  2978  07DF  1283               	bcf	3,5	;RP0=0, select bank0
  2979  07E0  1303               	bcf	3,6	;RP1=0, select bank0
  2980  07E1  0093               	movwf	19	;volatile
  2981  07E2                     l190:
  2982  07E2  0008               	return
  2983  07E3                     __end_of_I2CMasterWrite:
  2984                           
  2985                           	psect	text11
  2986  07E3                     __ptext11:	
  2987 ;; *************** function _I2CMasterStop *****************
  2988 ;; Defined at:
  2989 ;;		line 104 in file "I2C.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;		None
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;		None
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      void 
  2996 ;; Registers used:
  2997 ;;		wreg, status,2, status,0, pclath, cstack
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3003 ;;      Params:         0       0       0       0       0
  3004 ;;      Locals:         0       0       0       0       0
  3005 ;;      Temps:          0       0       0       0       0
  3006 ;;      Totals:         0       0       0       0       0
  3007 ;;Total ram usage:        0 bytes
  3008 ;; Hardware stack levels used: 1
  3009 ;; Hardware stack levels required when called: 2
  3010 ;; This function calls:
  3011 ;;		_I2CMasterCheck
  3012 ;; This function is called by:
  3013 ;;		_main
  3014 ;;		_InitMPU6050
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           
  3019                           ;psect for function _I2CMasterStop
  3020  07E3                     _I2CMasterStop:
  3021  07E3                     l1519:	
  3022                           ;incstack = 0
  3023                           ; Regs used in _I2CMasterStop: [wreg+status,2+status,0+pclath+cstack]
  3024                           
  3025                           
  3026                           ;I2C.c: 105:     I2CMasterCheck();
  3027  07E3  120A  118A  27BF  120A  118A  	fcall	_I2CMasterCheck
  3028  07E8                     l1521:
  3029                           
  3030                           ;I2C.c: 106:     SSPCON2bits.PEN = 1;
  3031  07E8  1683               	bsf	3,5	;RP0=1, select bank1
  3032  07E9  1303               	bcf	3,6	;RP1=0, select bank1
  3033  07EA  1511               	bsf	17,2	;volatile
  3034  07EB                     l187:
  3035  07EB  0008               	return
  3036  07EC                     __end_of_I2CMasterStop:
  3037                           
  3038                           	psect	text12
  3039  04FD                     __ptext12:	
  3040 ;; *************** function _Iniciar_LCD *****************
  3041 ;; Defined at:
  3042 ;;		line 30 in file "LCD.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;		None
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;		None
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  1    wreg      void 
  3049 ;; Registers used:
  3050 ;;		wreg, status,2, status,0, pclath, cstack
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3056 ;;      Params:         0       0       0       0       0
  3057 ;;      Locals:         0       0       0       0       0
  3058 ;;      Temps:          2       0       0       0       0
  3059 ;;      Totals:         2       0       0       0       0
  3060 ;;Total ram usage:        2 bytes
  3061 ;; Hardware stack levels used: 1
  3062 ;; Hardware stack levels required when called: 3
  3063 ;; This function calls:
  3064 ;;		_Escribir_comandoLCD
  3065 ;; This function is called by:
  3066 ;;		_setup
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           
  3071                           ;psect for function _Iniciar_LCD
  3072  04FD                     _Iniciar_LCD:
  3073  04FD                     l1709:	
  3074                           ;incstack = 0
  3075                           ; Regs used in _Iniciar_LCD: [wreg+status,2+status,0+pclath+cstack]
  3076                           
  3077                           
  3078                           ;LCD.c: 31:     PORTDbits.RD3 = 0;
  3079  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  3080  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  3081  04FF  1188               	bcf	8,3	;volatile
  3082                           
  3083                           ;LCD.c: 32:     PORTDbits.RD4 = 0;
  3084  0500  1208               	bcf	8,4	;volatile
  3085  0501                     l1711:
  3086                           
  3087                           ;LCD.c: 34:     _delay((unsigned long)((14)*(8000000/4000.0)));
  3088  0501  3025               	movlw	37
  3089  0502  00F5               	movwf	??_Iniciar_LCD+1
  3090  0503  305B               	movlw	91
  3091  0504  00F4               	movwf	??_Iniciar_LCD
  3092  0505                     u1727:
  3093  0505  0BF4               	decfsz	??_Iniciar_LCD,f
  3094  0506  2D05               	goto	u1727
  3095  0507  0BF5               	decfsz	??_Iniciar_LCD+1,f
  3096  0508  2D05               	goto	u1727
  3097  0509  2D0A               	nop2
  3098  050A                     l1713:
  3099                           
  3100                           ;LCD.c: 35:     Escribir_comandoLCD(0b00110000);
  3101  050A  3030               	movlw	48
  3102  050B  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  3103  0510                     l1715:
  3104                           
  3105                           ;LCD.c: 36:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3106  0510  300B               	movlw	11
  3107  0511  00F5               	movwf	??_Iniciar_LCD+1
  3108  0512  3062               	movlw	98
  3109  0513  00F4               	movwf	??_Iniciar_LCD
  3110  0514                     u1737:
  3111  0514  0BF4               	decfsz	??_Iniciar_LCD,f
  3112  0515  2D14               	goto	u1737
  3113  0516  0BF5               	decfsz	??_Iniciar_LCD+1,f
  3114  0517  2D14               	goto	u1737
  3115  0518  0000               	nop
  3116                           
  3117                           ;LCD.c: 37:     Escribir_comandoLCD(0b00110000);
  3118  0519  3030               	movlw	48
  3119  051A  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  3120  051F                     l1717:
  3121                           
  3122                           ;LCD.c: 38:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3123  051F  3042               	movlw	66
  3124  0520  00F4               	movwf	??_Iniciar_LCD
  3125  0521                     u1747:
  3126  0521  0BF4               	decfsz	??_Iniciar_LCD,f
  3127  0522  2D21               	goto	u1747
  3128  0523  0000               	nop
  3129  0524                     l1719:
  3130                           
  3131                           ;LCD.c: 39:     Escribir_comandoLCD(0b00110000);
  3132  0524  3030               	movlw	48
  3133  0525  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  3134                           
  3135                           ;LCD.c: 42:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3136  052A  3042               	movlw	66
  3137  052B  00F4               	movwf	??_Iniciar_LCD
  3138  052C                     u1757:
  3139  052C  0BF4               	decfsz	??_Iniciar_LCD,f
  3140  052D  2D2C               	goto	u1757
  3141  052E  0000               	nop
  3142  052F                     l1721:
  3143                           
  3144                           ;LCD.c: 43:     Escribir_comandoLCD(0b00111000);
  3145  052F  3038               	movlw	56
  3146  0530  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  3147  0535                     l1723:
  3148                           
  3149                           ;LCD.c: 44:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3150  0535  3042               	movlw	66
  3151  0536  00F4               	movwf	??_Iniciar_LCD
  3152  0537                     u1767:
  3153  0537  0BF4               	decfsz	??_Iniciar_LCD,f
  3154  0538  2D37               	goto	u1767
  3155  0539  0000               	nop
  3156                           
  3157                           ;LCD.c: 45:     Escribir_comandoLCD(0b00001000);
  3158  053A  3008               	movlw	8
  3159  053B  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  3160  0540                     l1725:
  3161                           
  3162                           ;LCD.c: 46:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3163  0540  3042               	movlw	66
  3164  0541  00F4               	movwf	??_Iniciar_LCD
  3165  0542                     u1777:
  3166  0542  0BF4               	decfsz	??_Iniciar_LCD,f
  3167  0543  2D42               	goto	u1777
  3168  0544  0000               	nop
  3169  0545                     l1727:
  3170                           
  3171                           ;LCD.c: 47:     Escribir_comandoLCD(0b00000001);
  3172  0545  3001               	movlw	1
  3173  0546  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  3174                           
  3175                           ;LCD.c: 48:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3176  054B  3042               	movlw	66
  3177  054C  00F4               	movwf	??_Iniciar_LCD
  3178  054D                     u1787:
  3179  054D  0BF4               	decfsz	??_Iniciar_LCD,f
  3180  054E  2D4D               	goto	u1787
  3181  054F  0000               	nop
  3182  0550                     l1729:
  3183                           
  3184                           ;LCD.c: 49:     Escribir_comandoLCD(0b00000110);
  3185  0550  3006               	movlw	6
  3186  0551  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  3187  0556                     l1731:
  3188                           
  3189                           ;LCD.c: 50:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  3190  0556  3042               	movlw	66
  3191  0557  00F4               	movwf	??_Iniciar_LCD
  3192  0558                     u1797:
  3193  0558  0BF4               	decfsz	??_Iniciar_LCD,f
  3194  0559  2D58               	goto	u1797
  3195  055A  0000               	nop
  3196                           
  3197                           ;LCD.c: 51:     Escribir_comandoLCD(0b00001100);
  3198  055B  300C               	movlw	12
  3199  055C  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  3200  0561                     l226:
  3201  0561  0008               	return
  3202  0562                     __end_of_Iniciar_LCD:
  3203                           
  3204                           	psect	text13
  3205  0757                     __ptext13:	
  3206 ;; *************** function _Escribir_stringLCD *****************
  3207 ;; Defined at:
  3208 ;;		line 55 in file "LCD.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;  d               1    wreg     PTR const unsigned char 
  3211 ;;		 -> STR_3(13), STR_2(15), STR_1(16), 
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;  d               1    6[COMMON] PTR const unsigned char 
  3214 ;;		 -> STR_3(13), STR_2(15), STR_1(16), 
  3215 ;;  i               1    5[COMMON] unsigned char 
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      void 
  3218 ;; Registers used:
  3219 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3225 ;;      Params:         0       0       0       0       0
  3226 ;;      Locals:         2       0       0       0       0
  3227 ;;      Temps:          1       0       0       0       0
  3228 ;;      Totals:         3       0       0       0       0
  3229 ;;Total ram usage:        3 bytes
  3230 ;; Hardware stack levels used: 1
  3231 ;; Hardware stack levels required when called: 3
  3232 ;; This function calls:
  3233 ;;		_Escribir_comandoLCD
  3234 ;; This function is called by:
  3235 ;;		_main
  3236 ;;		_setup
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           
  3241                           ;psect for function _Escribir_stringLCD
  3242  0757                     _Escribir_stringLCD:
  3243                           
  3244                           ;incstack = 0
  3245                           ; Regs used in _Escribir_stringLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3246                           ;Escribir_stringLCD@d stored from wreg
  3247  0757  00F6               	movwf	Escribir_stringLCD@d
  3248  0758                     l1591:
  3249                           
  3250                           ;LCD.c: 56:     PORTDbits.RD3 = 1; PORTDbits.RD4 = 0;
  3251  0758  1283               	bcf	3,5	;RP0=0, select bank0
  3252  0759  1303               	bcf	3,6	;RP1=0, select bank0
  3253  075A  1588               	bsf	8,3	;volatile
  3254  075B  1208               	bcf	8,4	;volatile
  3255  075C                     l1593:
  3256                           
  3257                           ;LCD.c: 58:     for (char i=0; d[i]!='\0'; i++){
  3258  075C  01F5               	clrf	Escribir_stringLCD@i
  3259  075D  2F6F               	goto	l1599
  3260  075E                     l1595:
  3261                           
  3262                           ;LCD.c: 59:         Escribir_comandoLCD(d[i]);
  3263  075E  0875               	movf	Escribir_stringLCD@i,w
  3264  075F  0776               	addwf	Escribir_stringLCD@d,w
  3265  0760  0084               	movwf	4
  3266  0761  120A  118A  26CD  120A  118A  	fcall	stringdir
  3267  0766  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  3268  076B                     l1597:
  3269                           
  3270                           ;LCD.c: 60:     }
  3271  076B  3001               	movlw	1
  3272  076C  00F4               	movwf	??_Escribir_stringLCD
  3273  076D  0874               	movf	??_Escribir_stringLCD,w
  3274  076E  07F5               	addwf	Escribir_stringLCD@i,f
  3275  076F                     l1599:
  3276  076F  0875               	movf	Escribir_stringLCD@i,w
  3277  0770  0776               	addwf	Escribir_stringLCD@d,w
  3278  0771  0084               	movwf	4
  3279  0772  120A  118A  26CD  120A  118A  	fcall	stringdir
  3280  0777  3A00               	xorlw	0
  3281  0778  1D03               	skipz
  3282  0779  2F7B               	goto	u931
  3283  077A  2F7C               	goto	u930
  3284  077B                     u931:
  3285  077B  2F5E               	goto	l1595
  3286  077C                     u930:
  3287  077C                     l232:
  3288  077C  0008               	return
  3289  077D                     __end_of_Escribir_stringLCD:
  3290                           
  3291                           	psect	text14
  3292  027F                     __ptext14:	
  3293 ;; *************** function _Config_USART *****************
  3294 ;; Defined at:
  3295 ;;		line 13 in file "UART.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;  baud_rate       2    2[COMMON] int 
  3298 ;;  Freq            2    4[COMMON] int 
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;		None
  3301 ;; Return value:  Size  Location     Type
  3302 ;;                  1    wreg      void 
  3303 ;; Registers used:
  3304 ;;		wreg, status,2, status,0
  3305 ;; Tracked objects:
  3306 ;;		On entry : 0/0
  3307 ;;		On exit  : 0/0
  3308 ;;		Unchanged: 0/0
  3309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3310 ;;      Params:         4       0       0       0       0
  3311 ;;      Locals:         0       0       0       0       0
  3312 ;;      Temps:          0       0       0       0       0
  3313 ;;      Totals:         4       0       0       0       0
  3314 ;;Total ram usage:        4 bytes
  3315 ;; Hardware stack levels used: 1
  3316 ;; Hardware stack levels required when called: 1
  3317 ;; This function calls:
  3318 ;;		Nothing
  3319 ;; This function is called by:
  3320 ;;		_setup
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324                           
  3325                           ;psect for function _Config_USART
  3326  027F                     _Config_USART:
  3327  027F                     l1743:	
  3328                           ;incstack = 0
  3329                           ; Regs used in _Config_USART: [wreg+status,2+status,0]
  3330                           
  3331                           
  3332                           ;UART.c: 14:     if(baud_rate == 9600 && Freq == 4){
  3333  027F  3080               	movlw	128
  3334  0280  0672               	xorwf	Config_USART@baud_rate,w
  3335  0281  3025               	movlw	37
  3336  0282  1903               	skipnz
  3337  0283  0673               	xorwf	Config_USART@baud_rate+1,w
  3338  0284  1D03               	btfss	3,2
  3339  0285  2A87               	goto	u1061
  3340  0286  2A88               	goto	u1060
  3341  0287                     u1061:
  3342  0287  2A9B               	goto	l1753
  3343  0288                     u1060:
  3344  0288                     l1745:
  3345  0288  3004               	movlw	4
  3346  0289  0674               	xorwf	Config_USART@Freq,w
  3347  028A  0475               	iorwf	Config_USART@Freq+1,w
  3348  028B  1D03               	btfss	3,2
  3349  028C  2A8E               	goto	u1071
  3350  028D  2A8F               	goto	u1070
  3351  028E                     u1071:
  3352  028E  2A9B               	goto	l1753
  3353  028F                     u1070:
  3354  028F                     l1747:
  3355                           
  3356                           ;UART.c: 15:         TXSTAbits.SYNC = 0;
  3357  028F  1683               	bsf	3,5	;RP0=1, select bank1
  3358  0290  1303               	bcf	3,6	;RP1=0, select bank1
  3359  0291  1218               	bcf	24,4	;volatile
  3360                           
  3361                           ;UART.c: 16:         TXSTAbits.BRGH = 1;
  3362  0292  1518               	bsf	24,2	;volatile
  3363                           
  3364                           ;UART.c: 18:         BAUDCTLbits.BRG16 = 0;
  3365  0293  1683               	bsf	3,5	;RP0=1, select bank3
  3366  0294  1703               	bsf	3,6	;RP1=1, select bank3
  3367  0295  1187               	bcf	7,3	;volatile
  3368  0296                     l1749:
  3369                           
  3370                           ;UART.c: 20:         SPBRG = 25;
  3371  0296  3019               	movlw	25
  3372  0297  1683               	bsf	3,5	;RP0=1, select bank1
  3373  0298  1303               	bcf	3,6	;RP1=0, select bank1
  3374  0299  0099               	movwf	25	;volatile
  3375  029A                     l1751:
  3376                           
  3377                           ;UART.c: 21:         SPBRGH = 0;
  3378  029A  019A               	clrf	26	;volatile
  3379  029B                     l1753:
  3380                           
  3381                           ;UART.c: 24:     if(baud_rate == 9600 && Freq == 8){
  3382  029B  3080               	movlw	128
  3383  029C  0672               	xorwf	Config_USART@baud_rate,w
  3384  029D  3025               	movlw	37
  3385  029E  1903               	skipnz
  3386  029F  0673               	xorwf	Config_USART@baud_rate+1,w
  3387  02A0  1D03               	btfss	3,2
  3388  02A1  2AA3               	goto	u1081
  3389  02A2  2AA4               	goto	u1080
  3390  02A3                     u1081:
  3391  02A3  2AB7               	goto	l1763
  3392  02A4                     u1080:
  3393  02A4                     l1755:
  3394  02A4  3008               	movlw	8
  3395  02A5  0674               	xorwf	Config_USART@Freq,w
  3396  02A6  0475               	iorwf	Config_USART@Freq+1,w
  3397  02A7  1D03               	btfss	3,2
  3398  02A8  2AAA               	goto	u1091
  3399  02A9  2AAB               	goto	u1090
  3400  02AA                     u1091:
  3401  02AA  2AB7               	goto	l1763
  3402  02AB                     u1090:
  3403  02AB                     l1757:
  3404                           
  3405                           ;UART.c: 25:         TXSTAbits.SYNC = 0;
  3406  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  3407  02AC  1303               	bcf	3,6	;RP1=0, select bank1
  3408  02AD  1218               	bcf	24,4	;volatile
  3409                           
  3410                           ;UART.c: 26:         TXSTAbits.BRGH = 0;
  3411  02AE  1118               	bcf	24,2	;volatile
  3412                           
  3413                           ;UART.c: 28:         BAUDCTLbits.BRG16 = 1;
  3414  02AF  1683               	bsf	3,5	;RP0=1, select bank3
  3415  02B0  1703               	bsf	3,6	;RP1=1, select bank3
  3416  02B1  1587               	bsf	7,3	;volatile
  3417  02B2                     l1759:
  3418                           
  3419                           ;UART.c: 30:         SPBRG = 51;
  3420  02B2  3033               	movlw	51
  3421  02B3  1683               	bsf	3,5	;RP0=1, select bank1
  3422  02B4  1303               	bcf	3,6	;RP1=0, select bank1
  3423  02B5  0099               	movwf	25	;volatile
  3424  02B6                     l1761:
  3425                           
  3426                           ;UART.c: 31:         SPBRGH = 0;
  3427  02B6  019A               	clrf	26	;volatile
  3428  02B7                     l1763:
  3429                           
  3430                           ;UART.c: 34:     if(baud_rate == 9600 && Freq == 1){
  3431  02B7  3080               	movlw	128
  3432  02B8  0672               	xorwf	Config_USART@baud_rate,w
  3433  02B9  3025               	movlw	37
  3434  02BA  1903               	skipnz
  3435  02BB  0673               	xorwf	Config_USART@baud_rate+1,w
  3436  02BC  1D03               	btfss	3,2
  3437  02BD  2ABF               	goto	u1101
  3438  02BE  2AC0               	goto	u1100
  3439  02BF                     u1101:
  3440  02BF  2AD2               	goto	l1773
  3441  02C0                     u1100:
  3442  02C0                     l1765:
  3443  02C0  0374               	decf	Config_USART@Freq,w
  3444  02C1  0475               	iorwf	Config_USART@Freq+1,w
  3445  02C2  1D03               	btfss	3,2
  3446  02C3  2AC5               	goto	u1111
  3447  02C4  2AC6               	goto	u1110
  3448  02C5                     u1111:
  3449  02C5  2AD2               	goto	l1773
  3450  02C6                     u1110:
  3451  02C6                     l1767:
  3452                           
  3453                           ;UART.c: 35:         TXSTAbits.SYNC = 0;
  3454  02C6  1683               	bsf	3,5	;RP0=1, select bank1
  3455  02C7  1303               	bcf	3,6	;RP1=0, select bank1
  3456  02C8  1218               	bcf	24,4	;volatile
  3457                           
  3458                           ;UART.c: 36:         TXSTAbits.BRGH = 1;
  3459  02C9  1518               	bsf	24,2	;volatile
  3460                           
  3461                           ;UART.c: 38:         BAUDCTLbits.BRG16 = 1;
  3462  02CA  1683               	bsf	3,5	;RP0=1, select bank3
  3463  02CB  1703               	bsf	3,6	;RP1=1, select bank3
  3464  02CC  1587               	bsf	7,3	;volatile
  3465  02CD                     l1769:
  3466                           
  3467                           ;UART.c: 40:         SPBRG = 25;
  3468  02CD  3019               	movlw	25
  3469  02CE  1683               	bsf	3,5	;RP0=1, select bank1
  3470  02CF  1303               	bcf	3,6	;RP1=0, select bank1
  3471  02D0  0099               	movwf	25	;volatile
  3472  02D1                     l1771:
  3473                           
  3474                           ;UART.c: 41:         SPBRGH = 0;
  3475  02D1  019A               	clrf	26	;volatile
  3476  02D2                     l1773:
  3477                           
  3478                           ;UART.c: 44:     if(baud_rate == 10417 && Freq == 4){
  3479  02D2  30B1               	movlw	177
  3480  02D3  0672               	xorwf	Config_USART@baud_rate,w
  3481  02D4  3028               	movlw	40
  3482  02D5  1903               	skipnz
  3483  02D6  0673               	xorwf	Config_USART@baud_rate+1,w
  3484  02D7  1D03               	btfss	3,2
  3485  02D8  2ADA               	goto	u1121
  3486  02D9  2ADB               	goto	u1120
  3487  02DA                     u1121:
  3488  02DA  2AEE               	goto	l1783
  3489  02DB                     u1120:
  3490  02DB                     l1775:
  3491  02DB  3004               	movlw	4
  3492  02DC  0674               	xorwf	Config_USART@Freq,w
  3493  02DD  0475               	iorwf	Config_USART@Freq+1,w
  3494  02DE  1D03               	btfss	3,2
  3495  02DF  2AE1               	goto	u1131
  3496  02E0  2AE2               	goto	u1130
  3497  02E1                     u1131:
  3498  02E1  2AEE               	goto	l1783
  3499  02E2                     u1130:
  3500  02E2                     l1777:
  3501                           
  3502                           ;UART.c: 45:         TXSTAbits.SYNC = 0;
  3503  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  3504  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  3505  02E4  1218               	bcf	24,4	;volatile
  3506                           
  3507                           ;UART.c: 46:         TXSTAbits.BRGH = 1;
  3508  02E5  1518               	bsf	24,2	;volatile
  3509                           
  3510                           ;UART.c: 48:         BAUDCTLbits.BRG16 = 1;
  3511  02E6  1683               	bsf	3,5	;RP0=1, select bank3
  3512  02E7  1703               	bsf	3,6	;RP1=1, select bank3
  3513  02E8  1587               	bsf	7,3	;volatile
  3514  02E9                     l1779:
  3515                           
  3516                           ;UART.c: 50:         SPBRG = 23;
  3517  02E9  3017               	movlw	23
  3518  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  3519  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  3520  02EC  0099               	movwf	25	;volatile
  3521  02ED                     l1781:
  3522                           
  3523                           ;UART.c: 51:         SPBRGH = 0;
  3524  02ED  019A               	clrf	26	;volatile
  3525  02EE                     l1783:
  3526                           
  3527                           ;UART.c: 54:     if(baud_rate == 10417 && Freq == 8){
  3528  02EE  30B1               	movlw	177
  3529  02EF  0672               	xorwf	Config_USART@baud_rate,w
  3530  02F0  3028               	movlw	40
  3531  02F1  1903               	skipnz
  3532  02F2  0673               	xorwf	Config_USART@baud_rate+1,w
  3533  02F3  1D03               	btfss	3,2
  3534  02F4  2AF6               	goto	u1141
  3535  02F5  2AF7               	goto	u1140
  3536  02F6                     u1141:
  3537  02F6  2B0A               	goto	l1793
  3538  02F7                     u1140:
  3539  02F7                     l1785:
  3540  02F7  3008               	movlw	8
  3541  02F8  0674               	xorwf	Config_USART@Freq,w
  3542  02F9  0475               	iorwf	Config_USART@Freq+1,w
  3543  02FA  1D03               	btfss	3,2
  3544  02FB  2AFD               	goto	u1151
  3545  02FC  2AFE               	goto	u1150
  3546  02FD                     u1151:
  3547  02FD  2B0A               	goto	l1793
  3548  02FE                     u1150:
  3549  02FE                     l1787:
  3550                           
  3551                           ;UART.c: 55:         TXSTAbits.SYNC = 0;
  3552  02FE  1683               	bsf	3,5	;RP0=1, select bank1
  3553  02FF  1303               	bcf	3,6	;RP1=0, select bank1
  3554  0300  1218               	bcf	24,4	;volatile
  3555                           
  3556                           ;UART.c: 56:         TXSTAbits.BRGH = 0;
  3557  0301  1118               	bcf	24,2	;volatile
  3558                           
  3559                           ;UART.c: 58:         BAUDCTLbits.BRG16 = 1;
  3560  0302  1683               	bsf	3,5	;RP0=1, select bank3
  3561  0303  1703               	bsf	3,6	;RP1=1, select bank3
  3562  0304  1587               	bsf	7,3	;volatile
  3563  0305                     l1789:
  3564                           
  3565                           ;UART.c: 60:         SPBRG = 47;
  3566  0305  302F               	movlw	47
  3567  0306  1683               	bsf	3,5	;RP0=1, select bank1
  3568  0307  1303               	bcf	3,6	;RP1=0, select bank1
  3569  0308  0099               	movwf	25	;volatile
  3570  0309                     l1791:
  3571                           
  3572                           ;UART.c: 61:         SPBRGH = 0;
  3573  0309  019A               	clrf	26	;volatile
  3574  030A                     l1793:
  3575                           
  3576                           ;UART.c: 64:     if(baud_rate == 10417 && Freq == 1){
  3577  030A  30B1               	movlw	177
  3578  030B  0672               	xorwf	Config_USART@baud_rate,w
  3579  030C  3028               	movlw	40
  3580  030D  1903               	skipnz
  3581  030E  0673               	xorwf	Config_USART@baud_rate+1,w
  3582  030F  1D03               	btfss	3,2
  3583  0310  2B12               	goto	u1161
  3584  0311  2B13               	goto	u1160
  3585  0312                     u1161:
  3586  0312  2B25               	goto	l1803
  3587  0313                     u1160:
  3588  0313                     l1795:
  3589  0313  0374               	decf	Config_USART@Freq,w
  3590  0314  0475               	iorwf	Config_USART@Freq+1,w
  3591  0315  1D03               	btfss	3,2
  3592  0316  2B18               	goto	u1171
  3593  0317  2B19               	goto	u1170
  3594  0318                     u1171:
  3595  0318  2B25               	goto	l1803
  3596  0319                     u1170:
  3597  0319                     l1797:
  3598                           
  3599                           ;UART.c: 65:         TXSTAbits.SYNC = 0;
  3600  0319  1683               	bsf	3,5	;RP0=1, select bank1
  3601  031A  1303               	bcf	3,6	;RP1=0, select bank1
  3602  031B  1218               	bcf	24,4	;volatile
  3603                           
  3604                           ;UART.c: 66:         TXSTAbits.BRGH = 0;
  3605  031C  1118               	bcf	24,2	;volatile
  3606                           
  3607                           ;UART.c: 68:         BAUDCTLbits.BRG16 = 1;
  3608  031D  1683               	bsf	3,5	;RP0=1, select bank3
  3609  031E  1703               	bsf	3,6	;RP1=1, select bank3
  3610  031F  1587               	bsf	7,3	;volatile
  3611  0320                     l1799:
  3612                           
  3613                           ;UART.c: 70:         SPBRG = 5;
  3614  0320  3005               	movlw	5
  3615  0321  1683               	bsf	3,5	;RP0=1, select bank1
  3616  0322  1303               	bcf	3,6	;RP1=0, select bank1
  3617  0323  0099               	movwf	25	;volatile
  3618  0324                     l1801:
  3619                           
  3620                           ;UART.c: 71:         SPBRGH = 0;
  3621  0324  019A               	clrf	26	;volatile
  3622  0325                     l1803:
  3623                           
  3624                           ;UART.c: 74:     RCSTAbits.SPEN = 1;
  3625  0325  1283               	bcf	3,5	;RP0=0, select bank0
  3626  0326  1303               	bcf	3,6	;RP1=0, select bank0
  3627  0327  1798               	bsf	24,7	;volatile
  3628  0328                     l1805:
  3629                           
  3630                           ;UART.c: 75:     RCSTAbits.RX9 = 0;
  3631  0328  1318               	bcf	24,6	;volatile
  3632  0329                     l1807:
  3633                           
  3634                           ;UART.c: 76:     RCSTAbits.CREN = 1;
  3635  0329  1618               	bsf	24,4	;volatile
  3636  032A                     l1809:
  3637                           
  3638                           ;UART.c: 78:     TXSTAbits.TXEN = 1;
  3639  032A  1683               	bsf	3,5	;RP0=1, select bank1
  3640  032B  1303               	bcf	3,6	;RP1=0, select bank1
  3641  032C  1698               	bsf	24,5	;volatile
  3642  032D                     l1811:
  3643                           
  3644                           ;UART.c: 79:     PIE1bits.RCIE = 0;
  3645  032D  128C               	bcf	12,5	;volatile
  3646  032E                     l278:
  3647  032E  0008               	return
  3648  032F                     __end_of_Config_USART:
  3649                           
  3650                           	psect	text15
  3651  05BB                     __ptext15:	
  3652 ;; *************** function _divisor_dec *****************
  3653 ;; Defined at:
  3654 ;;		line 209 in file "Maestro I2C.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;  b               2    4[BANK0 ] int 
  3657 ;;  dig1            1    6[BANK0 ] PTR unsigned char 
  3658 ;;		 -> Giro_digy(1), Giro_digx(1), 
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;  n               2    9[BANK0 ] int 
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  1    wreg      void 
  3663 ;; Registers used:
  3664 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3670 ;;      Params:         0       3       0       0       0
  3671 ;;      Locals:         0       2       0       0       0
  3672 ;;      Temps:          0       2       0       0       0
  3673 ;;      Totals:         0       7       0       0       0
  3674 ;;Total ram usage:        7 bytes
  3675 ;; Hardware stack levels used: 1
  3676 ;; Hardware stack levels required when called: 2
  3677 ;; This function calls:
  3678 ;;		___awdiv
  3679 ;;		___awmod
  3680 ;; This function is called by:
  3681 ;;		_main
  3682 ;; This function uses a non-reentrant model
  3683 ;;
  3684                           
  3685                           
  3686                           ;psect for function _divisor_dec
  3687  05BB                     _divisor_dec:
  3688  05BB                     l2251:	
  3689                           ;incstack = 0
  3690                           ; Regs used in _divisor_dec: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3691                           
  3692                           
  3693                           ;Maestro I2C.c: 210:     for(int n = 0; n<3 ; n++){
  3694  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  3695  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  3696  05BD  01C2               	clrf	divisor_dec@n
  3697  05BE  01C3               	clrf	divisor_dec@n+1
  3698  05BF                     l2257:
  3699                           
  3700                           ;Maestro I2C.c: 211:         dig1[n] = b % 10;
  3701  05BF  300A               	movlw	10
  3702  05C0  00F2               	movwf	___awmod@divisor
  3703  05C1  3000               	movlw	0
  3704  05C2  00F3               	movwf	___awmod@divisor+1
  3705  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  3706  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  3707  05C5  083E               	movf	divisor_dec@b+1,w
  3708  05C6  00F5               	movwf	___awmod@dividend+1
  3709  05C7  083D               	movf	divisor_dec@b,w
  3710  05C8  00F4               	movwf	___awmod@dividend
  3711  05C9  120A  118A  2562  120A  118A  	fcall	___awmod
  3712  05CE  0872               	movf	?___awmod,w
  3713  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  3714  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  3715  05D1  00C0               	movwf	??_divisor_dec
  3716  05D2  0842               	movf	divisor_dec@n,w
  3717  05D3  073F               	addwf	divisor_dec@dig1,w
  3718  05D4  00C1               	movwf	??_divisor_dec+1
  3719  05D5  0841               	movf	??_divisor_dec+1,w
  3720  05D6  0084               	movwf	4
  3721  05D7  0840               	movf	??_divisor_dec,w
  3722  05D8  0080               	movwf	0
  3723                           
  3724                           ;Maestro I2C.c: 212:         b = (b - dig1[n])/10;
  3725  05D9  300A               	movlw	10
  3726  05DA  00F2               	movwf	___awdiv@divisor
  3727  05DB  3000               	movlw	0
  3728  05DC  00F3               	movwf	___awdiv@divisor+1
  3729  05DD  0842               	movf	divisor_dec@n,w
  3730  05DE  073F               	addwf	divisor_dec@dig1,w
  3731  05DF  00C0               	movwf	??_divisor_dec
  3732  05E0  0840               	movf	??_divisor_dec,w
  3733  05E1  0084               	movwf	4
  3734  05E2  0800               	movf	0,w
  3735  05E3  023D               	subwf	divisor_dec@b,w
  3736  05E4  00F4               	movwf	___awdiv@dividend
  3737  05E5  083E               	movf	divisor_dec@b+1,w
  3738  05E6  1C03               	skipc
  3739  05E7  033E               	decf	divisor_dec@b+1,w
  3740  05E8  00F5               	movwf	___awdiv@dividend+1
  3741  05E9  120A  118A  242C  120A  118A  	fcall	___awdiv
  3742  05EE  0873               	movf	?___awdiv+1,w
  3743  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  3744  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  3745  05F1  00BE               	movwf	divisor_dec@b+1
  3746  05F2  0872               	movf	?___awdiv,w
  3747  05F3  00BD               	movwf	divisor_dec@b
  3748  05F4                     l2259:
  3749                           
  3750                           ;Maestro I2C.c: 213:     }
  3751  05F4  3001               	movlw	1
  3752  05F5  07C2               	addwf	divisor_dec@n,f
  3753  05F6  1803               	skipnc
  3754  05F7  0AC3               	incf	divisor_dec@n+1,f
  3755  05F8  3000               	movlw	0
  3756  05F9  07C3               	addwf	divisor_dec@n+1,f
  3757  05FA                     l2261:
  3758  05FA  0843               	movf	divisor_dec@n+1,w
  3759  05FB  3A80               	xorlw	128
  3760  05FC  00FF               	movwf	btemp+1
  3761  05FD  3080               	movlw	128
  3762  05FE  027F               	subwf	btemp+1,w
  3763  05FF  1D03               	skipz
  3764  0600  2E03               	goto	u1645
  3765  0601  3003               	movlw	3
  3766  0602  0242               	subwf	divisor_dec@n,w
  3767  0603                     u1645:
  3768  0603  1C03               	skipc
  3769  0604  2E06               	goto	u1641
  3770  0605  2E07               	goto	u1640
  3771  0606                     u1641:
  3772  0606  2DBF               	goto	l2257
  3773  0607                     u1640:
  3774  0607                     l111:
  3775  0607  0008               	return
  3776  0608                     __end_of_divisor_dec:
  3777                           
  3778                           	psect	text16
  3779  0562                     __ptext16:	
  3780 ;; *************** function ___awmod *****************
  3781 ;; Defined at:
  3782 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;  divisor         2    2[COMMON] int 
  3785 ;;  dividend        2    4[COMMON] int 
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;  sign            1    8[COMMON] unsigned char 
  3788 ;;  counter         1    7[COMMON] unsigned char 
  3789 ;; Return value:  Size  Location     Type
  3790 ;;                  2    2[COMMON] int 
  3791 ;; Registers used:
  3792 ;;		wreg, status,2, status,0
  3793 ;; Tracked objects:
  3794 ;;		On entry : 0/0
  3795 ;;		On exit  : 0/0
  3796 ;;		Unchanged: 0/0
  3797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3798 ;;      Params:         4       0       0       0       0
  3799 ;;      Locals:         2       0       0       0       0
  3800 ;;      Temps:          1       0       0       0       0
  3801 ;;      Totals:         7       0       0       0       0
  3802 ;;Total ram usage:        7 bytes
  3803 ;; Hardware stack levels used: 1
  3804 ;; Hardware stack levels required when called: 1
  3805 ;; This function calls:
  3806 ;;		Nothing
  3807 ;; This function is called by:
  3808 ;;		_divisor_dec
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           
  3812                           
  3813                           ;psect for function ___awmod
  3814  0562                     ___awmod:
  3815  0562                     l1857:	
  3816                           ;incstack = 0
  3817                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3818                           
  3819  0562  01F8               	clrf	___awmod@sign
  3820  0563                     l1859:
  3821  0563  1FF5               	btfss	___awmod@dividend+1,7
  3822  0564  2D66               	goto	u1281
  3823  0565  2D67               	goto	u1280
  3824  0566                     u1281:
  3825  0566  2D6E               	goto	l1865
  3826  0567                     u1280:
  3827  0567                     l1861:
  3828  0567  09F4               	comf	___awmod@dividend,f
  3829  0568  09F5               	comf	___awmod@dividend+1,f
  3830  0569  0AF4               	incf	___awmod@dividend,f
  3831  056A  1903               	skipnz
  3832  056B  0AF5               	incf	___awmod@dividend+1,f
  3833  056C                     l1863:
  3834  056C  01F8               	clrf	___awmod@sign
  3835  056D  0AF8               	incf	___awmod@sign,f
  3836  056E                     l1865:
  3837  056E  1FF3               	btfss	___awmod@divisor+1,7
  3838  056F  2D71               	goto	u1291
  3839  0570  2D72               	goto	u1290
  3840  0571                     u1291:
  3841  0571  2D77               	goto	l1869
  3842  0572                     u1290:
  3843  0572                     l1867:
  3844  0572  09F2               	comf	___awmod@divisor,f
  3845  0573  09F3               	comf	___awmod@divisor+1,f
  3846  0574  0AF2               	incf	___awmod@divisor,f
  3847  0575  1903               	skipnz
  3848  0576  0AF3               	incf	___awmod@divisor+1,f
  3849  0577                     l1869:
  3850  0577  0872               	movf	___awmod@divisor,w
  3851  0578  0473               	iorwf	___awmod@divisor+1,w
  3852  0579  1903               	btfsc	3,2
  3853  057A  2D7C               	goto	u1301
  3854  057B  2D7D               	goto	u1300
  3855  057C                     u1301:
  3856  057C  2DAC               	goto	l1887
  3857  057D                     u1300:
  3858  057D                     l1871:
  3859  057D  01F7               	clrf	___awmod@counter
  3860  057E  0AF7               	incf	___awmod@counter,f
  3861  057F  2D8B               	goto	l1877
  3862  0580                     l1873:
  3863  0580  3001               	movlw	1
  3864  0581                     u1315:
  3865  0581  1003               	clrc
  3866  0582  0DF2               	rlf	___awmod@divisor,f
  3867  0583  0DF3               	rlf	___awmod@divisor+1,f
  3868  0584  3EFF               	addlw	-1
  3869  0585  1D03               	skipz
  3870  0586  2D81               	goto	u1315
  3871  0587                     l1875:
  3872  0587  3001               	movlw	1
  3873  0588  00F6               	movwf	??___awmod
  3874  0589  0876               	movf	??___awmod,w
  3875  058A  07F7               	addwf	___awmod@counter,f
  3876  058B                     l1877:
  3877  058B  1FF3               	btfss	___awmod@divisor+1,7
  3878  058C  2D8E               	goto	u1321
  3879  058D  2D8F               	goto	u1320
  3880  058E                     u1321:
  3881  058E  2D80               	goto	l1873
  3882  058F                     u1320:
  3883  058F                     l1879:
  3884  058F  0873               	movf	___awmod@divisor+1,w
  3885  0590  0275               	subwf	___awmod@dividend+1,w
  3886  0591  1D03               	skipz
  3887  0592  2D95               	goto	u1335
  3888  0593  0872               	movf	___awmod@divisor,w
  3889  0594  0274               	subwf	___awmod@dividend,w
  3890  0595                     u1335:
  3891  0595  1C03               	skipc
  3892  0596  2D98               	goto	u1331
  3893  0597  2D99               	goto	u1330
  3894  0598                     u1331:
  3895  0598  2D9F               	goto	l1883
  3896  0599                     u1330:
  3897  0599                     l1881:
  3898  0599  0872               	movf	___awmod@divisor,w
  3899  059A  02F4               	subwf	___awmod@dividend,f
  3900  059B  0873               	movf	___awmod@divisor+1,w
  3901  059C  1C03               	skipc
  3902  059D  03F5               	decf	___awmod@dividend+1,f
  3903  059E  02F5               	subwf	___awmod@dividend+1,f
  3904  059F                     l1883:
  3905  059F  3001               	movlw	1
  3906  05A0                     u1345:
  3907  05A0  1003               	clrc
  3908  05A1  0CF3               	rrf	___awmod@divisor+1,f
  3909  05A2  0CF2               	rrf	___awmod@divisor,f
  3910  05A3  3EFF               	addlw	-1
  3911  05A4  1D03               	skipz
  3912  05A5  2DA0               	goto	u1345
  3913  05A6                     l1885:
  3914  05A6  3001               	movlw	1
  3915  05A7  02F7               	subwf	___awmod@counter,f
  3916  05A8  1D03               	btfss	3,2
  3917  05A9  2DAB               	goto	u1351
  3918  05AA  2DAC               	goto	u1350
  3919  05AB                     u1351:
  3920  05AB  2D8F               	goto	l1879
  3921  05AC                     u1350:
  3922  05AC                     l1887:
  3923  05AC  0878               	movf	___awmod@sign,w
  3924  05AD  1903               	btfsc	3,2
  3925  05AE  2DB0               	goto	u1361
  3926  05AF  2DB1               	goto	u1360
  3927  05B0                     u1361:
  3928  05B0  2DB6               	goto	l1891
  3929  05B1                     u1360:
  3930  05B1                     l1889:
  3931  05B1  09F4               	comf	___awmod@dividend,f
  3932  05B2  09F5               	comf	___awmod@dividend+1,f
  3933  05B3  0AF4               	incf	___awmod@dividend,f
  3934  05B4  1903               	skipnz
  3935  05B5  0AF5               	incf	___awmod@dividend+1,f
  3936  05B6                     l1891:
  3937  05B6  0875               	movf	___awmod@dividend+1,w
  3938  05B7  00F3               	movwf	?___awmod+1
  3939  05B8  0874               	movf	___awmod@dividend,w
  3940  05B9  00F2               	movwf	?___awmod
  3941  05BA                     l541:
  3942  05BA  0008               	return
  3943  05BB                     __end_of___awmod:
  3944                           
  3945                           	psect	text17
  3946  042C                     __ptext17:	
  3947 ;; *************** function ___awdiv *****************
  3948 ;; Defined at:
  3949 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;  divisor         2    2[COMMON] int 
  3952 ;;  dividend        2    4[COMMON] int 
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;  quotient        2    2[BANK0 ] int 
  3955 ;;  sign            1    1[BANK0 ] unsigned char 
  3956 ;;  counter         1    0[BANK0 ] unsigned char 
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  2    2[COMMON] int 
  3959 ;; Registers used:
  3960 ;;		wreg, status,2, status,0
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3966 ;;      Params:         4       0       0       0       0
  3967 ;;      Locals:         0       4       0       0       0
  3968 ;;      Temps:          1       0       0       0       0
  3969 ;;      Totals:         5       4       0       0       0
  3970 ;;Total ram usage:        9 bytes
  3971 ;; Hardware stack levels used: 1
  3972 ;; Hardware stack levels required when called: 1
  3973 ;; This function calls:
  3974 ;;		Nothing
  3975 ;; This function is called by:
  3976 ;;		_divisor_dec
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           
  3981                           ;psect for function ___awdiv
  3982  042C                     ___awdiv:
  3983  042C                     l2181:	
  3984                           ;incstack = 0
  3985                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3986                           
  3987  042C  1283               	bcf	3,5	;RP0=0, select bank0
  3988  042D  1303               	bcf	3,6	;RP1=0, select bank0
  3989  042E  01BA               	clrf	___awdiv@sign
  3990  042F                     l2183:
  3991  042F  1FF3               	btfss	___awdiv@divisor+1,7
  3992  0430  2C32               	goto	u1541
  3993  0431  2C33               	goto	u1540
  3994  0432                     u1541:
  3995  0432  2C3A               	goto	l2189
  3996  0433                     u1540:
  3997  0433                     l2185:
  3998  0433  09F2               	comf	___awdiv@divisor,f
  3999  0434  09F3               	comf	___awdiv@divisor+1,f
  4000  0435  0AF2               	incf	___awdiv@divisor,f
  4001  0436  1903               	skipnz
  4002  0437  0AF3               	incf	___awdiv@divisor+1,f
  4003  0438                     l2187:
  4004  0438  01BA               	clrf	___awdiv@sign
  4005  0439  0ABA               	incf	___awdiv@sign,f
  4006  043A                     l2189:
  4007  043A  1FF5               	btfss	___awdiv@dividend+1,7
  4008  043B  2C3D               	goto	u1551
  4009  043C  2C3E               	goto	u1550
  4010  043D                     u1551:
  4011  043D  2C47               	goto	l2195
  4012  043E                     u1550:
  4013  043E                     l2191:
  4014  043E  09F4               	comf	___awdiv@dividend,f
  4015  043F  09F5               	comf	___awdiv@dividend+1,f
  4016  0440  0AF4               	incf	___awdiv@dividend,f
  4017  0441  1903               	skipnz
  4018  0442  0AF5               	incf	___awdiv@dividend+1,f
  4019  0443                     l2193:
  4020  0443  3001               	movlw	1
  4021  0444  00F6               	movwf	??___awdiv
  4022  0445  0876               	movf	??___awdiv,w
  4023  0446  06BA               	xorwf	___awdiv@sign,f
  4024  0447                     l2195:
  4025  0447  01BB               	clrf	___awdiv@quotient
  4026  0448  01BC               	clrf	___awdiv@quotient+1
  4027  0449                     l2197:
  4028  0449  0872               	movf	___awdiv@divisor,w
  4029  044A  0473               	iorwf	___awdiv@divisor+1,w
  4030  044B  1903               	btfsc	3,2
  4031  044C  2C4E               	goto	u1561
  4032  044D  2C4F               	goto	u1560
  4033  044E                     u1561:
  4034  044E  2C86               	goto	l2217
  4035  044F                     u1560:
  4036  044F                     l2199:
  4037  044F  01B9               	clrf	___awdiv@counter
  4038  0450  0AB9               	incf	___awdiv@counter,f
  4039  0451  2C5D               	goto	l2205
  4040  0452                     l2201:
  4041  0452  3001               	movlw	1
  4042  0453                     u1575:
  4043  0453  1003               	clrc
  4044  0454  0DF2               	rlf	___awdiv@divisor,f
  4045  0455  0DF3               	rlf	___awdiv@divisor+1,f
  4046  0456  3EFF               	addlw	-1
  4047  0457  1D03               	skipz
  4048  0458  2C53               	goto	u1575
  4049  0459                     l2203:
  4050  0459  3001               	movlw	1
  4051  045A  00F6               	movwf	??___awdiv
  4052  045B  0876               	movf	??___awdiv,w
  4053  045C  07B9               	addwf	___awdiv@counter,f
  4054  045D                     l2205:
  4055  045D  1FF3               	btfss	___awdiv@divisor+1,7
  4056  045E  2C60               	goto	u1581
  4057  045F  2C61               	goto	u1580
  4058  0460                     u1581:
  4059  0460  2C52               	goto	l2201
  4060  0461                     u1580:
  4061  0461                     l2207:
  4062  0461  3001               	movlw	1
  4063  0462                     u1595:
  4064  0462  1003               	clrc
  4065  0463  0DBB               	rlf	___awdiv@quotient,f
  4066  0464  0DBC               	rlf	___awdiv@quotient+1,f
  4067  0465  3EFF               	addlw	-1
  4068  0466  1D03               	skipz
  4069  0467  2C62               	goto	u1595
  4070  0468  0873               	movf	___awdiv@divisor+1,w
  4071  0469  0275               	subwf	___awdiv@dividend+1,w
  4072  046A  1D03               	skipz
  4073  046B  2C6E               	goto	u1605
  4074  046C  0872               	movf	___awdiv@divisor,w
  4075  046D  0274               	subwf	___awdiv@dividend,w
  4076  046E                     u1605:
  4077  046E  1C03               	skipc
  4078  046F  2C71               	goto	u1601
  4079  0470  2C72               	goto	u1600
  4080  0471                     u1601:
  4081  0471  2C79               	goto	l2213
  4082  0472                     u1600:
  4083  0472                     l2209:
  4084  0472  0872               	movf	___awdiv@divisor,w
  4085  0473  02F4               	subwf	___awdiv@dividend,f
  4086  0474  0873               	movf	___awdiv@divisor+1,w
  4087  0475  1C03               	skipc
  4088  0476  03F5               	decf	___awdiv@dividend+1,f
  4089  0477  02F5               	subwf	___awdiv@dividend+1,f
  4090  0478                     l2211:
  4091  0478  143B               	bsf	___awdiv@quotient,0
  4092  0479                     l2213:
  4093  0479  3001               	movlw	1
  4094  047A                     u1615:
  4095  047A  1003               	clrc
  4096  047B  0CF3               	rrf	___awdiv@divisor+1,f
  4097  047C  0CF2               	rrf	___awdiv@divisor,f
  4098  047D  3EFF               	addlw	-1
  4099  047E  1D03               	skipz
  4100  047F  2C7A               	goto	u1615
  4101  0480                     l2215:
  4102  0480  3001               	movlw	1
  4103  0481  02B9               	subwf	___awdiv@counter,f
  4104  0482  1D03               	btfss	3,2
  4105  0483  2C85               	goto	u1621
  4106  0484  2C86               	goto	u1620
  4107  0485                     u1621:
  4108  0485  2C61               	goto	l2207
  4109  0486                     u1620:
  4110  0486                     l2217:
  4111  0486  083A               	movf	___awdiv@sign,w
  4112  0487  1903               	btfsc	3,2
  4113  0488  2C8A               	goto	u1631
  4114  0489  2C8B               	goto	u1630
  4115  048A                     u1631:
  4116  048A  2C90               	goto	l2221
  4117  048B                     u1630:
  4118  048B                     l2219:
  4119  048B  09BB               	comf	___awdiv@quotient,f
  4120  048C  09BC               	comf	___awdiv@quotient+1,f
  4121  048D  0ABB               	incf	___awdiv@quotient,f
  4122  048E  1903               	skipnz
  4123  048F  0ABC               	incf	___awdiv@quotient+1,f
  4124  0490                     l2221:
  4125  0490  083C               	movf	___awdiv@quotient+1,w
  4126  0491  00F3               	movwf	?___awdiv+1
  4127  0492  083B               	movf	___awdiv@quotient,w
  4128  0493  00F2               	movwf	?___awdiv
  4129  0494                     l528:
  4130  0494  0008               	return
  4131  0495                     __end_of___awdiv:
  4132                           
  4133                           	psect	text18
  4134  072F                     __ptext18:	
  4135 ;; *************** function _I2CMasterRead *****************
  4136 ;; Defined at:
  4137 ;;		line 116 in file "I2C.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;  ACK             1    wreg     enum E1309
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;  ACK             1    3[COMMON] enum E1309
  4142 ;;  Datos           1    4[COMMON] unsigned char 
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  1    wreg      unsigned char 
  4145 ;; Registers used:
  4146 ;;		wreg, status,2, status,0, pclath, cstack
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4152 ;;      Params:         0       0       0       0       0
  4153 ;;      Locals:         2       0       0       0       0
  4154 ;;      Temps:          1       0       0       0       0
  4155 ;;      Totals:         3       0       0       0       0
  4156 ;;Total ram usage:        3 bytes
  4157 ;; Hardware stack levels used: 1
  4158 ;; Hardware stack levels required when called: 2
  4159 ;; This function calls:
  4160 ;;		_I2CMasterCheck
  4161 ;; This function is called by:
  4162 ;;		_main
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           
  4167                           ;psect for function _I2CMasterRead
  4168  072F                     _I2CMasterRead:
  4169                           
  4170                           ;incstack = 0
  4171                           ; Regs used in _I2CMasterRead: [wreg+status,2+status,0+pclath+cstack]
  4172                           ;I2CMasterRead@ACK stored from wreg
  4173  072F  00F3               	movwf	I2CMasterRead@ACK
  4174  0730                     l1921:
  4175                           
  4176                           ;I2C.c: 117:     char Datos;;I2C.c: 118:     I2CMasterCheck();
  4177  0730  120A  118A  27BF  120A  118A  	fcall	_I2CMasterCheck
  4178  0735                     l1923:
  4179                           
  4180                           ;I2C.c: 119:     SSPCON2bits.RCEN = 1;
  4181  0735  1683               	bsf	3,5	;RP0=1, select bank1
  4182  0736  1303               	bcf	3,6	;RP1=0, select bank1
  4183  0737  1591               	bsf	17,3	;volatile
  4184                           
  4185                           ;I2C.c: 120:     I2CMasterCheck();
  4186  0738  120A  118A  27BF  120A  118A  	fcall	_I2CMasterCheck
  4187  073D                     l1925:
  4188                           
  4189                           ;I2C.c: 121:     Datos = SSPBUF;
  4190  073D  1283               	bcf	3,5	;RP0=0, select bank0
  4191  073E  1303               	bcf	3,6	;RP1=0, select bank0
  4192  073F  0813               	movf	19,w	;volatile
  4193  0740  00F2               	movwf	??_I2CMasterRead
  4194  0741  0872               	movf	??_I2CMasterRead,w
  4195  0742  00F4               	movwf	I2CMasterRead@Datos
  4196  0743                     l1927:
  4197                           
  4198                           ;I2C.c: 122:     I2CMasterCheck();
  4199  0743  120A  118A  27BF  120A  118A  	fcall	_I2CMasterCheck
  4200  0748                     l1929:
  4201                           
  4202                           ;I2C.c: 123:     if (ACK == 0) SSPCON2bits.ACKDT = 0;
  4203  0748  0873               	movf	I2CMasterRead@ACK,w
  4204  0749  1D03               	btfss	3,2
  4205  074A  2F4C               	goto	u1371
  4206  074B  2F4D               	goto	u1370
  4207  074C                     u1371:
  4208  074C  2F51               	goto	l193
  4209  074D                     u1370:
  4210  074D                     l1931:
  4211  074D  1683               	bsf	3,5	;RP0=1, select bank1
  4212  074E  1303               	bcf	3,6	;RP1=0, select bank1
  4213  074F  1291               	bcf	17,5	;volatile
  4214  0750  2F54               	goto	l194
  4215  0751                     l193:	
  4216                           ;I2C.c: 124:     else SSPCON2bits.ACKDT = 1;
  4217                           
  4218  0751  1683               	bsf	3,5	;RP0=1, select bank1
  4219  0752  1303               	bcf	3,6	;RP1=0, select bank1
  4220  0753  1691               	bsf	17,5	;volatile
  4221  0754                     l194:
  4222                           
  4223                           ;I2C.c: 125:     SSPCON2bits.ACKEN = 1;
  4224  0754  1611               	bsf	17,4	;volatile
  4225  0755                     l1933:
  4226                           
  4227                           ;I2C.c: 126:     return Datos;
  4228  0755  0874               	movf	I2CMasterRead@Datos,w
  4229  0756                     l195:
  4230  0756  0008               	return
  4231  0757                     __end_of_I2CMasterRead:
  4232                           
  4233                           	psect	text19
  4234  07BF                     __ptext19:	
  4235 ;; *************** function _I2CMasterCheck *****************
  4236 ;; Defined at:
  4237 ;;		line 91 in file "I2C.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;		None
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;		None
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  1    wreg      void 
  4244 ;; Registers used:
  4245 ;;		wreg, status,2
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4251 ;;      Params:         0       0       0       0       0
  4252 ;;      Locals:         0       0       0       0       0
  4253 ;;      Temps:          0       0       0       0       0
  4254 ;;      Totals:         0       0       0       0       0
  4255 ;;Total ram usage:        0 bytes
  4256 ;; Hardware stack levels used: 1
  4257 ;; Hardware stack levels required when called: 1
  4258 ;; This function calls:
  4259 ;;		Nothing
  4260 ;; This function is called by:
  4261 ;;		_I2C_Master_Start
  4262 ;;		_I2CMasterStop
  4263 ;;		_I2CMasterWrite
  4264 ;;		_I2CMasterRead
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268                           
  4269                           ;psect for function _I2CMasterCheck
  4270  07BF                     _I2CMasterCheck:
  4271  07BF                     l1495:	
  4272                           ;incstack = 0
  4273                           ; Regs used in _I2CMasterCheck: [wreg+status,2]
  4274                           
  4275  07BF                     l176:	
  4276                           ;I2C.c: 92:     while((SSPSTAT & 0x04)|| (SSPCON2 & 0x1F));
  4277                           
  4278  07BF  1683               	bsf	3,5	;RP0=1, select bank1
  4279  07C0  1303               	bcf	3,6	;RP1=0, select bank1
  4280  07C1  1914               	btfsc	20,2	;volatile
  4281  07C2  2FC4               	goto	u701
  4282  07C3  2FC5               	goto	u700
  4283  07C4                     u701:
  4284  07C4  2FBF               	goto	l176
  4285  07C5                     u700:
  4286  07C5                     l1497:
  4287  07C5  0811               	movf	17,w	;volatile
  4288  07C6  391F               	andlw	31
  4289  07C7  1D03               	btfss	3,2
  4290  07C8  2FCA               	goto	u711
  4291  07C9  2FCB               	goto	u710
  4292  07CA                     u711:
  4293  07CA  2FBF               	goto	l176
  4294  07CB                     u710:
  4295  07CB                     l179:
  4296  07CB  0008               	return
  4297  07CC                     __end_of_I2CMasterCheck:
  4298                           
  4299                           	psect	text20
  4300  07CC                     __ptext20:	
  4301 ;; *************** function _Escribir_caracterLCD *****************
  4302 ;; Defined at:
  4303 ;;		line 63 in file "LCD.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  a               1    wreg     unsigned char 
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;  a               1    4[COMMON] unsigned char 
  4308 ;; Return value:  Size  Location     Type
  4309 ;;                  1    wreg      void 
  4310 ;; Registers used:
  4311 ;;		wreg, status,2, status,0, pclath, cstack
  4312 ;; Tracked objects:
  4313 ;;		On entry : 0/0
  4314 ;;		On exit  : 0/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4317 ;;      Params:         0       0       0       0       0
  4318 ;;      Locals:         1       0       0       0       0
  4319 ;;      Temps:          0       0       0       0       0
  4320 ;;      Totals:         1       0       0       0       0
  4321 ;;Total ram usage:        1 bytes
  4322 ;; Hardware stack levels used: 1
  4323 ;; Hardware stack levels required when called: 3
  4324 ;; This function calls:
  4325 ;;		_Escribir_comandoLCD
  4326 ;; This function is called by:
  4327 ;;		_main
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           
  4332                           ;psect for function _Escribir_caracterLCD
  4333  07CC                     _Escribir_caracterLCD:
  4334                           
  4335                           ;incstack = 0
  4336                           ; Regs used in _Escribir_caracterLCD: [wreg+status,2+status,0+pclath+cstack]
  4337                           ;Escribir_caracterLCD@a stored from wreg
  4338  07CC  00F4               	movwf	Escribir_caracterLCD@a
  4339  07CD                     l2019:
  4340                           
  4341                           ;LCD.c: 64:     PORTDbits.RD3 = 1; PORTDbits.RD4 = 0;
  4342  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  4343  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  4344  07CF  1588               	bsf	8,3	;volatile
  4345  07D0  1208               	bcf	8,4	;volatile
  4346  07D1                     l2021:
  4347                           
  4348                           ;LCD.c: 66:     Escribir_comandoLCD(a);
  4349  07D1  0874               	movf	Escribir_caracterLCD@a,w
  4350  07D2  120A  118A  264B  120A  118A  	fcall	_Escribir_comandoLCD
  4351  07D7                     l235:
  4352  07D7  0008               	return
  4353  07D8                     __end_of_Escribir_caracterLCD:
  4354                           
  4355                           	psect	text21
  4356  064B                     __ptext21:	
  4357 ;; *************** function _Escribir_comandoLCD *****************
  4358 ;; Defined at:
  4359 ;;		line 17 in file "LCD.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;  Comando         1    wreg     unsigned char 
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;  Comando         1    3[COMMON] unsigned char 
  4364 ;; Return value:  Size  Location     Type
  4365 ;;                  1    wreg      void 
  4366 ;; Registers used:
  4367 ;;		wreg, status,2, status,0, pclath, cstack
  4368 ;; Tracked objects:
  4369 ;;		On entry : 0/0
  4370 ;;		On exit  : 0/0
  4371 ;;		Unchanged: 0/0
  4372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4373 ;;      Params:         0       0       0       0       0
  4374 ;;      Locals:         1       0       0       0       0
  4375 ;;      Temps:          0       0       0       0       0
  4376 ;;      Totals:         1       0       0       0       0
  4377 ;;Total ram usage:        1 bytes
  4378 ;; Hardware stack levels used: 1
  4379 ;; Hardware stack levels required when called: 2
  4380 ;; This function calls:
  4381 ;;		_prender_ELCD
  4382 ;; This function is called by:
  4383 ;;		_Iniciar_LCD
  4384 ;;		_Escribir_stringLCD
  4385 ;;		_Escribir_caracterLCD
  4386 ;;		_Limpiar_pantallaLCD
  4387 ;;		_set_cursor
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390                           
  4391                           
  4392                           ;psect for function _Escribir_comandoLCD
  4393  064B                     _Escribir_comandoLCD:
  4394                           
  4395                           ;incstack = 0
  4396                           ; Regs used in _Escribir_comandoLCD: [wreg+status,2+status,0+pclath+cstack]
  4397                           ;Escribir_comandoLCD@Comando stored from wreg
  4398  064B  00F3               	movwf	Escribir_comandoLCD@Comando
  4399  064C                     l1523:
  4400                           
  4401                           ;LCD.c: 18:     if((Comando & 0b00000001) == 0b00000001){PORTDbits.RD6 = 1;} else {PORTD
      +                          bits.RD6 = 0;}
  4402  064C  1C73               	btfss	Escribir_comandoLCD@Comando,0
  4403  064D  2E4F               	goto	u741
  4404  064E  2E50               	goto	u740
  4405  064F                     u741:
  4406  064F  2E54               	goto	l207
  4407  0650                     u740:
  4408  0650                     l1525:
  4409  0650  1283               	bcf	3,5	;RP0=0, select bank0
  4410  0651  1303               	bcf	3,6	;RP1=0, select bank0
  4411  0652  1708               	bsf	8,6	;volatile
  4412  0653  2E57               	goto	l208
  4413  0654                     l207:
  4414  0654  1283               	bcf	3,5	;RP0=0, select bank0
  4415  0655  1303               	bcf	3,6	;RP1=0, select bank0
  4416  0656  1308               	bcf	8,6	;volatile
  4417  0657                     l208:
  4418                           
  4419                           ;LCD.c: 19:     if((Comando & 0b00000010) == 0b00000010){PORTDbits.RD7 = 1;} else {PORTD
      +                          bits.RD7 = 0;}
  4420  0657  1CF3               	btfss	Escribir_comandoLCD@Comando,1
  4421  0658  2E5A               	goto	u751
  4422  0659  2E5B               	goto	u750
  4423  065A                     u751:
  4424  065A  2E5D               	goto	l209
  4425  065B                     u750:
  4426  065B                     l1527:
  4427  065B  1788               	bsf	8,7	;volatile
  4428  065C  2E5E               	goto	l210
  4429  065D                     l209:
  4430  065D  1388               	bcf	8,7	;volatile
  4431  065E                     l210:
  4432                           
  4433                           ;LCD.c: 20:     if((Comando & 0b00000100) == 0b00000100){PORTBbits.RB0 = 1;} else {PORTB
      +                          bits.RB0 = 0;}
  4434  065E  1D73               	btfss	Escribir_comandoLCD@Comando,2
  4435  065F  2E61               	goto	u761
  4436  0660  2E62               	goto	u760
  4437  0661                     u761:
  4438  0661  2E64               	goto	l211
  4439  0662                     u760:
  4440  0662                     l1529:
  4441  0662  1406               	bsf	6,0	;volatile
  4442  0663  2E65               	goto	l212
  4443  0664                     l211:
  4444  0664  1006               	bcf	6,0	;volatile
  4445  0665                     l212:
  4446                           
  4447                           ;LCD.c: 21:     if((Comando & 0b00001000) == 0b00001000){PORTBbits.RB1 = 1;} else {PORTB
      +                          bits.RB1 = 0;}
  4448  0665  1DF3               	btfss	Escribir_comandoLCD@Comando,3
  4449  0666  2E68               	goto	u771
  4450  0667  2E69               	goto	u770
  4451  0668                     u771:
  4452  0668  2E6B               	goto	l213
  4453  0669                     u770:
  4454  0669                     l1531:
  4455  0669  1486               	bsf	6,1	;volatile
  4456  066A  2E6C               	goto	l214
  4457  066B                     l213:
  4458  066B  1086               	bcf	6,1	;volatile
  4459  066C                     l214:
  4460                           
  4461                           ;LCD.c: 22:     if((Comando & 0b00010000) == 0b00010000){PORTBbits.RB2 = 1;} else {PORTB
      +                          bits.RB2 = 0;}
  4462  066C  1E73               	btfss	Escribir_comandoLCD@Comando,4
  4463  066D  2E6F               	goto	u781
  4464  066E  2E70               	goto	u780
  4465  066F                     u781:
  4466  066F  2E72               	goto	l215
  4467  0670                     u780:
  4468  0670                     l1533:
  4469  0670  1506               	bsf	6,2	;volatile
  4470  0671  2E73               	goto	l216
  4471  0672                     l215:
  4472  0672  1106               	bcf	6,2	;volatile
  4473  0673                     l216:
  4474                           
  4475                           ;LCD.c: 23:     if((Comando & 0b00100000) == 0b00100000){PORTBbits.RB3 = 1;} else {PORTB
      +                          bits.RB3 = 0;}
  4476  0673  1EF3               	btfss	Escribir_comandoLCD@Comando,5
  4477  0674  2E76               	goto	u791
  4478  0675  2E77               	goto	u790
  4479  0676                     u791:
  4480  0676  2E79               	goto	l217
  4481  0677                     u790:
  4482  0677                     l1535:
  4483  0677  1586               	bsf	6,3	;volatile
  4484  0678  2E7A               	goto	l218
  4485  0679                     l217:
  4486  0679  1186               	bcf	6,3	;volatile
  4487  067A                     l218:
  4488                           
  4489                           ;LCD.c: 24:     if((Comando & 0b01000000) == 0b01000000){PORTBbits.RB4 = 1;} else {PORTB
      +                          bits.RB4 = 0;}
  4490  067A  1F73               	btfss	Escribir_comandoLCD@Comando,6
  4491  067B  2E7D               	goto	u801
  4492  067C  2E7E               	goto	u800
  4493  067D                     u801:
  4494  067D  2E80               	goto	l219
  4495  067E                     u800:
  4496  067E                     l1537:
  4497  067E  1606               	bsf	6,4	;volatile
  4498  067F  2E81               	goto	l220
  4499  0680                     l219:
  4500  0680  1206               	bcf	6,4	;volatile
  4501  0681                     l220:
  4502                           
  4503                           ;LCD.c: 25:     if((Comando & 0b10000000) == 0b10000000){PORTBbits.RB5 = 1;} else {PORTB
      +                          bits.RB5 = 0;}
  4504  0681  1FF3               	btfss	Escribir_comandoLCD@Comando,7
  4505  0682  2E84               	goto	u811
  4506  0683  2E85               	goto	u810
  4507  0684                     u811:
  4508  0684  2E87               	goto	l221
  4509  0685                     u810:
  4510  0685                     l1539:
  4511  0685  1686               	bsf	6,5	;volatile
  4512  0686  2E88               	goto	l1541
  4513  0687                     l221:
  4514  0687  1286               	bcf	6,5	;volatile
  4515  0688                     l1541:
  4516                           
  4517                           ;LCD.c: 27:     prender_ELCD();
  4518  0688  120A  118A  27B1  120A  118A  	fcall	_prender_ELCD
  4519  068D                     l223:
  4520  068D  0008               	return
  4521  068E                     __end_of_Escribir_comandoLCD:
  4522                           
  4523                           	psect	text22
  4524  07B1                     __ptext22:	
  4525 ;; *************** function _prender_ELCD *****************
  4526 ;; Defined at:
  4527 ;;		line 11 in file "LCD.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;		None
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;		None
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  1    wreg      void 
  4534 ;; Registers used:
  4535 ;;		wreg
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4541 ;;      Params:         0       0       0       0       0
  4542 ;;      Locals:         0       0       0       0       0
  4543 ;;      Temps:          1       0       0       0       0
  4544 ;;      Totals:         1       0       0       0       0
  4545 ;;Total ram usage:        1 bytes
  4546 ;; Hardware stack levels used: 1
  4547 ;; Hardware stack levels required when called: 1
  4548 ;; This function calls:
  4549 ;;		Nothing
  4550 ;; This function is called by:
  4551 ;;		_Escribir_comandoLCD
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           
  4556                           ;psect for function _prender_ELCD
  4557  07B1                     _prender_ELCD:
  4558  07B1                     l1499:	
  4559                           ;incstack = 0
  4560                           ; Regs used in _prender_ELCD: [wreg]
  4561                           
  4562                           
  4563                           ;LCD.c: 12:     PORTDbits.RD5 = 1;
  4564  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  4565  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  4566  07B3  1688               	bsf	8,5	;volatile
  4567  07B4                     l1501:
  4568                           
  4569                           ;LCD.c: 13:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  4570  07B4  30C7               	movlw	199
  4571  07B5  00F2               	movwf	??_prender_ELCD
  4572  07B6                     u1807:
  4573  07B6  2FB7               	nop2
  4574  07B7  0BF2               	decfsz	??_prender_ELCD,f
  4575  07B8  2FB6               	goto	u1807
  4576  07B9  2FBA               	nop2
  4577  07BA  2FBB               	nop2
  4578  07BB                     l1503:
  4579                           
  4580                           ;LCD.c: 14:     PORTDbits.RD5 = 0;
  4581  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  4582  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  4583  07BD  1288               	bcf	8,5	;volatile
  4584  07BE                     l204:
  4585  07BE  0008               	return
  4586  07BF                     __end_of_prender_ELCD:
  4587                           
  4588                           	psect	text23
  4589  07F4                     __ptext23:	
  4590 ;; *************** function _isr *****************
  4591 ;; Defined at:
  4592 ;;		line 87 in file "Maestro I2C.c"
  4593 ;; Parameters:    Size  Location     Type
  4594 ;;		None
  4595 ;; Auto vars:     Size  Location     Type
  4596 ;;		None
  4597 ;; Return value:  Size  Location     Type
  4598 ;;                  1    wreg      void 
  4599 ;; Registers used:
  4600 ;;		None
  4601 ;; Tracked objects:
  4602 ;;		On entry : 0/0
  4603 ;;		On exit  : 0/0
  4604 ;;		Unchanged: 0/0
  4605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4606 ;;      Params:         0       0       0       0       0
  4607 ;;      Locals:         0       0       0       0       0
  4608 ;;      Temps:          2       0       0       0       0
  4609 ;;      Totals:         2       0       0       0       0
  4610 ;;Total ram usage:        2 bytes
  4611 ;; Hardware stack levels used: 1
  4612 ;; This function calls:
  4613 ;;		Nothing
  4614 ;; This function is called by:
  4615 ;;		Interrupt level 1
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           
  4620                           ;psect for function _isr
  4621  07F4                     _isr:
  4622  07F4                     i1l95:
  4623  07F4  0871               	movf	??_isr+1,w
  4624  07F5  008A               	movwf	10
  4625  07F6  0E70               	swapf	??_isr,w
  4626  07F7  0083               	movwf	3
  4627  07F8  0EFE               	swapf	btemp,f
  4628  07F9  0E7E               	swapf	btemp,w
  4629  07FA  0009               	retfie
  4630  07FB                     __end_of_isr:
  4631  007E                     btemp	set	126	;btemp
  4632  007E                     wtemp0	set	126
  4633                           
  4634                           	psect	intentry
  4635  0004                     __pintentry:	
  4636                           ;incstack = 0
  4637                           ; Regs used in _isr: []
  4638                           
  4639  0004                     interrupt_function:
  4640  007E                     saved_w	set	btemp
  4641  0004  00FE               	movwf	btemp
  4642  0005  0E03               	swapf	3,w
  4643  0006  00F0               	movwf	??_isr
  4644  0007  080A               	movf	10,w
  4645  0008  00F1               	movwf	??_isr+1
  4646  0009  120A  118A  2FF4   	ljmp	_isr
  4647                           
  4648                           	psect	config
  4649                           
  4650                           ;Config register CONFIG1 @ 0x2007
  4651                           ;	Oscillator Selection bits
  4652                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4653                           ;	Watchdog Timer Enable bit
  4654                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4655                           ;	Power-up Timer Enable bit
  4656                           ;	PWRTE = OFF, PWRT disabled
  4657                           ;	RE3/MCLR pin function select bit
  4658                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4659                           ;	Code Protection bit
  4660                           ;	CP = OFF, Program memory code protection is disabled
  4661                           ;	Data Code Protection bit
  4662                           ;	CPD = OFF, Data memory code protection is disabled
  4663                           ;	Brown Out Reset Selection bits
  4664                           ;	BOREN = OFF, BOR disabled
  4665                           ;	Internal External Switchover bit
  4666                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4667                           ;	Fail-Safe Clock Monitor Enabled bit
  4668                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4669                           ;	Low Voltage Programming Enable bit
  4670                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4671                           ;	In-Circuit Debugger Mode bit
  4672                           ;	DEBUG = 0x1, unprogrammed default
  4673  2007                     	org	8199
  4674  2007  20D4               	dw	8404
  4675                           
  4676                           ;Config register CONFIG2 @ 0x2008
  4677                           ;	Brown-out Reset Selection bit
  4678                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4679                           ;	Flash Program Memory Self Write Enable bits
  4680                           ;	WRT = OFF, Write protection off
  4681  2008                     	org	8200
  4682  2008  3FFF               	dw	16383

Data Sizes:
    Strings     44
    Constant    0
    Data        0
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     22      47
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Escribir_stringLCD@d	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_3(CODE[13]), STR_2(CODE[15]), STR_1(CODE[16]), 

    divisor_dec@dig1	PTR unsigned char  size(1) Largest target is 1
		 -> Giro_digy(COMMON[1]), Giro_digx(COMMON[1]), 


Critical Paths under _main in COMMON

    _set_cursor->_Escribir_comandoLCD
    _Limpiar_pantallaLCD->_Escribir_comandoLCD
    _InitMSSP->___lldiv
    _InitMPU6050->_I2CMasterWrite
    _InitMPU6050->_I2C_Master_Start
    _Iniciar_LCD->_Escribir_comandoLCD
    _Escribir_stringLCD->_Escribir_comandoLCD
    _divisor_dec->___awmod
    _Escribir_caracterLCD->_Escribir_comandoLCD
    _Escribir_comandoLCD->_prender_ELCD

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_setup
    _setup->_InitMSSP
    _InitMSSP->___lldiv
    _divisor_dec->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    5784
                                             18 BANK0      4     4      0
               _Escribir_caracterLCD
                 _Escribir_stringLCD
                      _I2CMasterRead
                      _I2CMasterStop
                     _I2CMasterWrite
                   _I2C_Master_Start
                        _divisor_dec
                         _set_cursor
                              _setup
                     _tabla_numASCII
 ---------------------------------------------------------------------------------
 (1) _tabla_numASCII                                       3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                3     3      0    2753
                                             15 BANK0      3     3      0
                       _Config_USART
                 _Escribir_stringLCD
                        _Iniciar_LCD
                        _InitMPU6050
                           _InitMSSP
                _Limpiar_pantallaLCD
                            _initOsc
                         _set_cursor
 ---------------------------------------------------------------------------------
 (2) _set_cursor                                           4     3      1     645
                                              4 COMMON     4     3      1
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Limpiar_pantallaLCD                                  2     2      0     176
                                              4 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _InitMSSP                                             9     5      4     821
                                              6 BANK0      9     5      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _InitMPU6050                                          3     3      0      66
                                              3 COMMON     3     3      0
                      _I2CMasterStop
                     _I2CMasterWrite
                   _I2C_Master_Start
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     1     1      0      44
                                              2 COMMON     1     1      0
                     _I2CMasterCheck
 ---------------------------------------------------------------------------------
 (3) _I2CMasterWrite                                       1     1      0      22
                                              2 COMMON     1     1      0
                     _I2CMasterCheck
 ---------------------------------------------------------------------------------
 (3) _I2CMasterStop                                        0     0      0       0
                     _I2CMasterCheck
 ---------------------------------------------------------------------------------
 (2) _Iniciar_LCD                                          2     2      0     176
                                              4 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Escribir_stringLCD                                   3     3      0     365
                                              4 COMMON     3     3      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Config_USART                                         4     0      4     416
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _divisor_dec                                          7     4      3    1690
                                              4 BANK0      7     4      3
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     625
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _I2CMasterRead                                        3     3      0      45
                                              2 COMMON     3     3      0
                     _I2CMasterCheck
 ---------------------------------------------------------------------------------
 (4) _I2CMasterCheck                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Escribir_caracterLCD                                 1     1      0     198
                                              4 COMMON     1     1      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (3) _Escribir_comandoLCD                                  1     1      0     176
                                              3 COMMON     1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (4) _prender_ELCD                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_caracterLCD
     _Escribir_comandoLCD
       _prender_ELCD
   _Escribir_stringLCD
     _Escribir_comandoLCD
   _I2CMasterRead
     _I2CMasterCheck
   _I2CMasterStop
     _I2CMasterCheck
   _I2CMasterWrite
     _I2CMasterCheck
   _I2C_Master_Start
     _I2CMasterCheck
   _divisor_dec
     ___awdiv
     ___awmod
   _set_cursor
     _Escribir_comandoLCD
   _setup
     _Config_USART
     _Escribir_stringLCD
     _Iniciar_LCD
       _Escribir_comandoLCD
     _InitMPU6050
       _I2CMasterStop
       _I2CMasterWrite
       _I2C_Master_Start
     _InitMSSP
       ___lldiv
     _Limpiar_pantallaLCD
       _Escribir_comandoLCD
     _initOsc
     _set_cursor
   _tabla_numASCII

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      2F       5       58.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3B      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Mar 06 21:16:54 2022

                            pc 0002                    _SSPSTATbits 0094                             _UA 04A1  
                           _Ax 002C                             _Ay 002A                             _Az 0028  
                           _Gx 0024                             _Gy 0022                             _Gz 0020  
                 ___awdiv@sign 003A                             fsr 0004                set_cursor@linea 0077  
                 ?_divisor_dec 003D                            l111 0607                            l210 065E  
                          l106 042B                            l211 0664                            l204 07BE  
                          l220 0681                            l212 0665                            l116 06CC  
                          l221 0687                            l213 066B                            l214 066C  
                          l223 068D                            l215 0672                            l207 0654  
                          l216 0673                            l208 0657                            l232 077C  
                          l217 0679                            l209 065D                            l218 067A  
                          l226 0561                            l170 0228                            l219 0680  
                          l235 07D7                            l411 04FC                            l171 0266  
                          l163 01F6                            l173 027E                            l165 0204  
                          l190 07E2                            l238 0796                            l183 07AD  
                          l176 07BF                            l184 07B0                            l256 072B  
                          l248 064A                            l193 0751                            l257 072E  
                          l194 0754                            l179 07CB                            l195 0756  
                          l187 07EB                            l541 05BA                            l278 032E  
                          l528 0494                            l289 03B8                            _CKP 00A4  
                          u700 07C5                            u701 07C4                            u710 07CB  
                          u711 07CA                            u800 067E                            u720 07A2  
                          u801 067D                            u721 07A1                            u810 0685  
                          u730 07AA                            u811 0684                            u731 07A9  
                          u740 0650                            u900 061F                            u741 064F  
                          u901 061E                            u750 065B                            u910 0633  
                          u751 065A                            u911 0632                            u760 0662  
                          u920 0641                            u761 0661                            u921 0640  
                          u770 0669                            u930 077C                            u771 0668  
                          u931 077B                            u780 0670                            u940 0706  
                          u781 066F                            u941 0705                            u790 0677  
                          u950 0711                            u791 0676                            u951 0710  
                          u960 071C                            u961 071B                            u970 0726  
                          u890 0612                            u971 0725                            u891 0611  
                          _isr 07F4                            fsr0 0004                            indf 0000  
                 ___awmod@sign 0078                  ??_InitMPU6050 0073                           l2021 07D1  
                         l2005 06A2                           l2013 06A4                           l2111 04A7  
                         l2201 0452                           l2121 04D6                           l2113 04AA  
                         l2019 07CD                           l2211 0478                           l2203 0459  
                         l2123 04E4                           l2115 04B7                           l1501 07B4  
                         l2221 0490                           l2213 0479                           l2205 045D  
                         l2125 04E5                           l2117 04BB                           l2109 0495  
                         l2141 01EA                           l2133 01D1                           l2301 014C  
                         l1503 07BB                           l2215 0480                           l2207 0461  
                         l1511 07A5                           l2127 04EE                           l2119 04C4  
                         l2151 0210                           l2143 01F2                           l2135 01D2  
                         l2231 03DD                           l2311 0170                           l2303 0153  
                         l2209 0472                           l2217 0486                           l1521 07E8  
                         l1513 07AA                           l1505 0798                           l2129 04F4  
                         l2161 0233                           l2153 021A                           l2145 01F9  
                         l2137 01DD                           l1601 0700                           l2241 03F9  
                         l2233 03E2                           l2225 03B9                           l2321 01A8  
                         l2313 0178                           l2305 0159                           l1531 0669  
                         l1523 064C                           l2219 048B                           l2251 05BB  
                         l1515 07D9                           l1507 079D                           l2171 0272  
                         l2163 0237                           l2155 0222                           l2147 0201  
                         l2139 01E6                           l1611 071C                           l1603 0706  
                         l2243 0405                           l2235 03E7                           l2227 03C7  
                         l2323 01B2                           l2315 0187                           l2307 0160  
                         l1541 0688                           l1533 0670                           l1525 0650  
                         l2181 042C                           l2261 05FA                           l1517 07DE  
                         l1509 07A2                           l1701 03A1                           l2173 0273  
                         l2165 0264                           l2157 022B                           l2149 020A  
                         l1613 0721                           l1605 070B                           l2245 040B  
                         l2237 03EC                           l2229 03CD                           l2325 01BA  
                         l2317 0192                           l2309 0168                           l1535 0677  
                         l1527 065B                           l2191 043E                           l2183 042F  
                         l1711 0501                           l1519 07E3                           l1703 03A7  
                         l2175 0274                           l2167 026B                           l2159 0232  
                         l1615 0726                           l1607 0711                           l2247 0419  
                         l2239 03F3                           l2327 01C2                           l2319 019D  
                         l2271 0035                           l2263 001E                           l1537 067E  
                         l1529 0662                           l2193 0443                           l2185 0433  
                         l2257 05BF                           l1801 0324                           l1721 052F  
                         l1713 050A                           l1705 03AD                           l2169 0271  
                         l2177 0277                           l1609 0716                           l2249 041E  
                         l2281 0098                           l2273 003B                           l2265 0023  
                         l1539 0685                           l2195 0447                           l2187 0438  
                         l2259 05F4                           l1811 032D                           l1803 0325  
                         l1731 0556                           l1723 0535                           l1715 0510  
                         l1707 03B3                           l2179 027B                           l1571 0612  
                         l2291 0111                           l2283 00B5                           l2275 0041  
                         l2267 0029                           l2197 0449                           l2189 043A  
                         l1805 0328                           l1725 0540                           l1717 051F  
                         l1709 04FD                           l1741 0790                           l1573 0619  
                         l2349 06AC                           l2293 011C                           l2285 00D2  
                         l2277 005E                           l2269 002F                           l1495 07BF  
                         l2199 044F                           l1807 0329                           l1751 029A  
                         l1743 027F                           l1591 0758                           l1727 0545  
                         l1719 0524                           l1671 0347                           l1735 077D  
                         l1583 0634                           l1575 061F                           l1567 0609  
                         l2295 012B                           l2287 00EF                           l2279 007B  
                         l1497 07C5                           l1921 0730                           l1809 032A  
                         l1761 02B6                           l1745 0288                           l1753 029B  
                         l1593 075C                           l1729 0550                           l1681 0365  
                         l1673 034D                           l1665 032F                           l1737 0781  
                         l1585 063A                           l1577 0625                           l1569 060D  
                         l2297 0136                           l2289 010C                           l1499 07B1  
                         l1931 074D                           l1923 0735                           l1771 02D1  
                         l1755 02A4                           l1763 02B7                           l1747 028F  
                         l1595 075E                           l1691 0383                           l1683 036B  
                         l1675 0353                           l1667 033B                           l1739 0787  
                         l1587 063C                           l1579 062E                           l2299 0141  
                         l1933 0755                           l1925 073D                           l1861 0567  
                         l1781 02ED                           l1765 02C0                           l1773 02D2  
                         l1757 02AB                           l1749 0296                           l1597 076B  
                         l1693 0389                           l1685 0371                           l1677 0359  
                         l1669 0341                           l1589 0641                           l1927 0743  
                         l1871 057D                           l1863 056C                           l1791 0309  
                         l1775 02DB                           l1783 02EE                           l1767 02C6  
                         l1759 02B2                           l1599 076F                           l1695 038F  
                         l1687 0377                           l1679 035F                           l1951 0690  
                         l1929 0748                           l1881 0599                           l1873 0580  
                         l1865 056E                           l1857 0562                           l1785 02F7  
                         l1793 030A                           l1777 02E2                           l1769 02CD  
                         l1697 0395                           l1689 037D                           l1891 05B6  
                         l1883 059F                           l1875 0587                           l1867 0572  
                         l1859 0563                           l1795 0313                           l1787 02FE  
                         l1779 02E9                           l1699 039B                           l1963 0694  
                         l1885 05A6                           l1877 058B                           l1869 0577  
                         l1797 0319                           l1789 0305                           l1981 069A  
                         l1957 0692                           l1949 068F                           l1879 058F  
                         l1887 05AC                           l1799 0320                           l1975 0698  
                         l1889 05B1                           l1993 069E                           l1969 0696  
                         l1987 069C                           l1999 06A0                           ?_isr 0070  
                         STR_1 06D3                           STR_2 06E3                           STR_3 06F2  
                         u1100 02C0                           u1101 02BF                           u1110 02C6  
                         u1111 02C5                           u1120 02DB                           u1121 02DA  
                         u1130 02E2                           u1131 02E1                           u1300 057D  
                         u1140 02F7                           u1060 0288                           u1301 057C  
                         u1141 02F6                           u1061 0287                           u1150 02FE  
                         u1070 028F                           u1151 02FD                           u1071 028E  
                         u1320 058F                           u1160 0313                           u1080 02A4  
                         u1321 058E                           u1161 0312                           u1081 02A3  
                         u1330 0599                           u1170 0319                           u1090 02AB  
                         u1410 04BB                           u1331 0598                           u1315 0581  
                         u1171 0318                           u1091 02AA                           u1411 04BA  
                         u1500 0222                           u1405 04AC                           u1501 0221  
                         u1350 05AC                           u1430 04D6                           u1510 0228  
                         u1351 05AB                           u1335 0595                           u1431 04D5  
                         u1511 0227                           u1600 0472                           u1360 05B1  
                         u1280 0567                           u1520 0232                           u1601 0471  
                         u1361 05B0                           u1345 05A0                           u1281 0566  
                         u1425 04BD                           u1521 0231                           u1370 074D  
                         u1290 0572                           u1450 04F4                           u1530 0247  
                         u1371 074C                           u1291 0571                           u1451 04F3  
                         u1435 04D2                           u1620 0486                           u1540 0433  
                         u1460 01E6                           u1621 0485                           u1605 046E  
                         u1541 0432                           u1445 04E6                           u1461 01E5  
                         u1630 048B                           u1550 043E                           u1390 04A7  
                         u1470 01F2                           u1631 048A                           u1615 047A  
                         u1551 043D                           u1391 04A6                           u1535 0242  
                         u1471 01F1                           u1560 044F                           u1640 0607  
                         u1480 0201                           u1561 044E                           u1641 0606  
                         u1481 0200                           u1490 0210                           u1491 020F  
                         u1707 01D8                           u1580 0461                           u1581 0460  
                         u1645 0603                           u1717 0335                           u1807 07B6  
                         u1575 0453                           u1727 0505                           u1737 0514  
                         u1657 0117                           u1595 0462                           u1747 0521  
                         u1667 0413                           u1757 052C                           u1677 0629  
                         u1767 0537                           u1687 0645                           u1777 0542  
                         u1697 078B                           u1787 054D                           u1797 0558  
                         i1l95 07F4                  ??_Iniciar_LCD 0074                           _Temp 0026  
                         _main 001E                           btemp 007E                           start 000C  
         _Escribir_caracterLCD 07CC         __size_of_I2CMasterRead 0028         __size_of_I2CMasterStop 0009  
                        ??_isr 0070     __end_of_Escribir_stringLCD 077D                          ?_main 0070  
              __end_of___awdiv 0495                __end_of___awmod 05BB                          _ANSEL 0188  
              __end_of___lldiv 04FD                ___awdiv@divisor 0072                ___awdiv@counter 0039  
                        _SPBRG 0099                          _PORTA 0005                          _PORTB 0006  
                        _PORTD 0008                          _TRISA 0085                          _TRISB 0086  
                        _TRISD 0088                          _SSPIF 0063                   InitMSSP@Dato 003F  
                 InitMSSP@Modo 0047                          _dec_x 0037                          _dec_y 0034  
                        _dec_z 0030                          _cen_x 0036                          _cen_y 0033  
                        _cen_z 002F                __end_of_initOsc 072F                          _setup 03B9  
                        _uni_x 0038                          _uni_y 0035                          _uni_z 0031  
          _Limpiar_pantallaLCD 077D                          pclath 000A            __end_of_InitMPU6050 03B9  
                        status 0003                          wtemp0 007E          ?_Escribir_caracterLCD 0070  
         __end_of_Config_USART 032F                __initialization 000F            __end_of_Iniciar_LCD 0562  
                 __end_of_main 01CE        __size_of_I2CMasterCheck 000D               __end_of_InitMSSP 027F  
         ?_Limpiar_pantallaLCD 0070        __size_of_I2CMasterWrite 000B                         ??_main 004B  
                 divisor_dec@b 003D                   divisor_dec@n 0042              ?_I2C_Master_Start 0070  
                _I2CMasterRead 072F             ??_I2C_Master_Start 0072                  _I2CMasterStop 07E3  
           set_cursor@posicion 0074               ___awdiv@dividend 0074                         ?_setup 0070  
                       _ANSELH 0189                         _SPBRGH 009A                         _SSPADD 0093  
                       _SSPCON 0014                         _SSPBUF 0013               ??_tabla_numASCII 0072  
        ??_Limpiar_pantallaLCD 0074                      ??___awdiv 0076                      ??___awmod 0076  
                    ??___lldiv 0039               ___awdiv@quotient 003B                ___awmod@divisor 0072  
              ___awmod@counter 0077                         _output 002E                      ??_initOsc 0072  
         __size_of_divisor_dec 004D                         saved_w 007E                    _InitMPU6050 032F  
               ?_I2CMasterRead 0070                 ?_I2CMasterStop 0070                divisor_dec@dig1 003F  
      __end_of__initialization 001A                    _Iniciar_LCD 04FD         ??_Escribir_caracterLCD 0074  
               __pcstackCOMMON 0070                  __end_of_setup 042C                        ??_setup 0048  
                   __pbssBANK0 0020                      ?_InitMSSP 003F          __size_of_Config_USART 00B0  
                   __pmaintext 001E                 _I2CMasterCheck 07BF                     __pintentry 0004  
               _I2CMasterWrite 07D8   __size_of_Escribir_comandoLCD 0043            I2CMasterWrite@Datos 0072  
                 initOsc@Valor 0072                ??_I2CMasterRead 0072                ??_I2CMasterStop 0072  
                 _Config_USART 027F                        _SSPCON2 0091                        _SSPSTAT 0094  
           _Escribir_stringLCD 0757                     __stringtab 06CD                     ??_InitMSSP 0043  
              tabla_numASCII@a 0074            ?_Escribir_stringLCD 0070         __end_of_I2CMasterCheck 07CC  
        Escribir_caracterLCD@a 0074         __end_of_I2CMasterWrite 07E3                        ___awdiv 042C  
                      ___awmod 0562                        ___lldiv 0495                        __ptext1 068E  
                      __ptext2 03B9                        __ptext3 0608                        __ptext4 06FF  
                      __ptext5 077D                        __ptext6 01CE                        __ptext7 0495  
                      __ptext8 032F                        __ptext9 0797           ??_Escribir_stringLCD 0074  
                      _initOsc 06FF                   __size_of_isr 0007               ___awmod@dividend 0074  
                ?_prender_ELCD 0070                        clrloop0 07ED           end_of_initialization 001A  
    __size_of_I2C_Master_Start 001A                ___lldiv@divisor 0072                ___lldiv@counter 003E  
              ?_I2CMasterCheck 0070                     _set_cursor 0608                      _RCSTAbits 0018  
              ?_I2CMasterWrite 0070                      _PORTBbits 0006                      _PORTDbits 0008  
               ??_prender_ELCD 0072                      _TRISAbits 0085                      _TRISCbits 0087  
                 ?_InitMPU6050 0070                   ?_Iniciar_LCD 0070                      _TXSTAbits 0098  
  __end_of_Limpiar_pantallaLCD 0797             I2CMasterRead@Datos 0074                    _BAUDCTLbits 0187  
                ??_divisor_dec 0040                      _Giro_digx 007B                      _Giro_digy 007A  
                    _Giro_digz 0032            start_initialization 000F                    __end_of_isr 07FB  
          _Escribir_comandoLCD 064B     Escribir_comandoLCD@Comando 0073              __size_of_InitMSSP 00B1  
__size_of_Escribir_caracterLCD 000C                    ?_set_cursor 0074           ?_Escribir_comandoLCD 0070  
                  __pbssCOMMON 007A        __size_of_tabla_numASCII 003F                      ___latbits 0002  
                __pcstackBANK0 0039            __end_of_divisor_dec 0608               _I2C_Master_Start 0797  
         __end_of_prender_ELCD 07BF                       ?___awdiv 0072                       ?___awmod 0072  
                     ?___lldiv 0072          ??_Escribir_comandoLCD 0073                      __pstrings 06CD  
                     ?_initOsc 0070          __end_of_I2CMasterRead 0757          __end_of_I2CMasterStop 07EC  
          __size_of_set_cursor 0043           __size_of_InitMPU6050 008A                 __size_of_setup 0073  
             ??_I2CMasterCheck 0072              interrupt_function 0004    I2C_Master_Start@Modo_Inicio 0072  
             ??_I2CMasterWrite 0072                      clear_ram0 07EC                       _PIE1bits 008C  
         __size_of_Iniciar_LCD 0065                    __stringbase 06D2                    _divisor_dec 05BB  
  __size_of_Escribir_stringLCD 0026                       _InitMSSP 01CE            Escribir_stringLCD@d 0076  
          Escribir_stringLCD@i 0075               __size_of___awdiv 0069               __size_of___awmod 0059  
             __size_of___lldiv 0068             __end_of__stringtab 06D3                 _tabla_numASCII 068E  
             __size_of_initOsc 0030                       __ptext10 07D8                       __ptext11 07E3  
                     __ptext20 07CC                       __ptext12 04FD                       __ptext21 064B  
                     __ptext13 0757                       __ptext22 07B1                       __ptext14 027F  
                     __ptext23 07F4                       __ptext15 05BB                       __ptext16 0562  
                     __ptext17 042C                       __ptext18 072F                       __ptext19 07BF  
        __size_of_prender_ELCD 000E                  __size_of_main 01B0                   ??_set_cursor 0075  
 __size_of_Limpiar_pantallaLCD 001A               I2CMasterRead@ACK 0073         __end_of_tabla_numASCII 06CD  
     __end_of_I2C_Master_Start 07B1                     _INTCONbits 000B   __end_of_Escribir_caracterLCD 07D8  
                 _prender_ELCD 07B1                  ?_Config_USART 0072               Config_USART@Freq 0074  
           __end_of_set_cursor 064B                       intlevel1 0000               ___lldiv@dividend 0076  
                    stringcode 06CD                     _OSCCONbits 008F                ?_tabla_numASCII 0070  
             ___lldiv@quotient 003A                 ??_Config_USART 0076                       stringdir 06CD  
                     stringtab 06CD                    _SSPCON2bits 0091          Config_USART@baud_rate 0072  
                   _SSPCONbits 0014    __end_of_Escribir_comandoLCD 068E  
